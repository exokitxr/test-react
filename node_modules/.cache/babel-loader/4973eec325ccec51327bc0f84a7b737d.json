{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/Github/test-react/src/App.js\";\nimport React, { useEffect } from 'react'; // import './App.css';\n\nimport Navbar from './Navbar';\nimport WebXRApp from './WebXRApp';\nimport AvatarsApp from './WebXRApps/avatars-master/index.html'; // import BrowserApp from './WebXRApps/exokit-browser-master/index.html';\n\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport { parse } from 'node-html-parser';\n\nconst App = props => {\n  useEffect(() => {\n    const parsedHTML = parse(AvatarsApp);\n    const scripts = parsedHTML.childNodes[0].querySelectorAll('script');\n    console.log(\"WebXRApp: \", scripts);\n    scripts.forEach(s => {\n      console.log(\"loading:\", s.rawAttrs);\n      const script = document.createElement(\"script\");\n\n      if (s.attributes && s.attributes.src) {\n        script.src = \"/WebXRApps/avatars-master/\".concat(s.attributes && s.attributes.src ? s.attributes.src : \"\");\n        script.type = \"module\";\n        script.async = false;\n        document.body.appendChild(script);\n      }\n    });\n  });\n  return React.createElement(Router, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    className: \"App\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/avatars\",\n    component: props => React.createElement(WebXRApp, Object.assign({\n      html: {\n        __html: AvatarsApp\n      }\n    }, props, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40\n      },\n      __self: this\n    })),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  })));\n};\n\nexport default App;","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/App.js"],"names":["React","useEffect","Navbar","WebXRApp","AvatarsApp","BrowserRouter","Router","Switch","Route","Link","parse","App","props","parsedHTML","scripts","childNodes","querySelectorAll","console","log","forEach","s","rawAttrs","script","document","createElement","attributes","src","type","async","body","appendChild","__html"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,UAAP,MAAuB,uCAAvB,C,CACA;;AAEA,SACEC,aAAa,IAAIC,MADnB,EAEEC,MAFF,EAGEC,KAHF,EAIEC,IAJF,QAKO,kBALP;AAOA,SAASC,KAAT,QAAsB,kBAAtB;;AAGA,MAAMC,GAAG,GAAGC,KAAK,IAAI;AAEnBX,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,UAAU,GAAGH,KAAK,CAACN,UAAD,CAAxB;AACA,UAAMU,OAAO,GAAGD,UAAU,CAACE,UAAX,CAAsB,CAAtB,EAAyBC,gBAAzB,CAA0C,QAA1C,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,OAA1B;AAEAA,IAAAA,OAAO,CAACK,OAAR,CAAgBC,CAAC,IAAI;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,CAAC,CAACC,QAA1B;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AACA,UAAGJ,CAAC,CAACK,UAAF,IAAgBL,CAAC,CAACK,UAAF,CAAaC,GAAhC,EAAoC;AAClCJ,QAAAA,MAAM,CAACI,GAAP,uCAA0CN,CAAC,CAACK,UAAF,IAAgBL,CAAC,CAACK,UAAF,CAAaC,GAA7B,GAAmCN,CAAC,CAACK,UAAF,CAAaC,GAAhD,GAAsD,EAAhG;AACAJ,QAAAA,MAAM,CAACK,IAAP,GAAc,QAAd;AACAL,QAAAA,MAAM,CAACM,KAAP,GAAe,KAAf;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACD;AACJ,KATC;AAUH,GAfU,CAAT;AAiBA,SACE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,UAAZ;AAAuB,IAAA,SAAS,EAAEV,KAAK,IAAI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAE;AAACmB,QAAAA,MAAM,EAAE3B;AAAT;AAAhB,OAA0CQ,KAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AASD,CA5BD;;AA8BA,eAAeD,GAAf","sourcesContent":["import React, { useEffect } from 'react';\n// import './App.css';\nimport Navbar from './Navbar';\nimport WebXRApp from './WebXRApp';\nimport AvatarsApp from './WebXRApps/avatars-master/index.html';\n// import BrowserApp from './WebXRApps/exokit-browser-master/index.html';\n\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\n\nimport { parse } from 'node-html-parser';\n\n\nconst App = props => {\n\n  useEffect(() => {\n    const parsedHTML = parse(AvatarsApp);\n    const scripts = parsedHTML.childNodes[0].querySelectorAll('script');\n    console.log(\"WebXRApp: \", scripts)\n\n    scripts.forEach(s => {\n      console.log(\"loading:\", s.rawAttrs)\n      const script = document.createElement(\"script\");\n      if(s.attributes && s.attributes.src){\n        script.src = `/WebXRApps/avatars-master/${s.attributes && s.attributes.src ? s.attributes.src : \"\"}`;\n        script.type = \"module\"\n        script.async = false;\n        document.body.appendChild(script);\n      }\n  })\n})\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/avatars\" component={props => <WebXRApp html={{__html: AvatarsApp}} {...props} />} />\n        {/* <Route path=\"/browser\" component={<WebXRApp html={{__html: BrowserApp}} />} /> */}\n\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}