{"ast":null,"code":"import ArmTransforms from './ArmTransforms.js';\nimport ShoulderPoser from './ShoulderPoser.js';\nimport VRArmIK from './VRArmIK.js';\n\nclass ShoulderTransforms {\n  constructor(rig) {\n    this.transform = new THREE.Object3D();\n    this.hips = new THREE.Object3D();\n    this.spine = new THREE.Object3D();\n    this.neck = new THREE.Object3D();\n    this.head = new THREE.Object3D();\n    this.eyes = new THREE.Object3D();\n    this.hips.add(this.spine);\n    this.spine.add(this.transform);\n    this.transform.add(this.neck);\n    this.neck.add(this.head);\n    this.head.add(this.eyes); // this.leftShoulder = new THREE.Object3D();\n    // this.transform.add(this.leftShoulder);\n    // this.rightShoulder = new THREE.Object3D();\n    // this.transform.add(this.rightShoulder);\n\n    this.leftShoulderAnchor = new THREE.Object3D();\n    this.transform.add(this.leftShoulderAnchor);\n    this.rightShoulderAnchor = new THREE.Object3D();\n    this.transform.add(this.rightShoulderAnchor);\n    this.leftArm = new ArmTransforms();\n    this.rightArm = new ArmTransforms();\n    this.leftShoulderAnchor.add(this.leftArm.transform);\n    this.rightShoulderAnchor.add(this.rightArm.transform);\n    this.prone = false;\n    this.proneFactor = 0;\n    const now = Date.now();\n    this.lastStandTimestamp = now;\n    this.lastProneTimestamp = now;\n    this.shoulderPoser = new ShoulderPoser(rig, this);\n    this.leftArmIk = new VRArmIK(this.leftArm, this, this.shoulderPoser, this.shoulderPoser.vrTransforms.leftHand, true);\n    this.rightArmIk = new VRArmIK(this.rightArm, this, this.shoulderPoser, this.shoulderPoser.vrTransforms.rightHand, false);\n  }\n\n  Start() {\n    this.leftArmIk.Start();\n    this.rightArmIk.Start();\n  }\n\n  Update() {\n    this.shoulderPoser.Update();\n    this.leftArmIk.Update();\n    this.rightArmIk.Update();\n  }\n\n}\n\nexport default ShoulderTransforms;","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApps/vrarmik/ShoulderTransforms.js"],"names":["ArmTransforms","ShoulderPoser","VRArmIK","ShoulderTransforms","constructor","rig","transform","THREE","Object3D","hips","spine","neck","head","eyes","add","leftShoulderAnchor","rightShoulderAnchor","leftArm","rightArm","prone","proneFactor","now","Date","lastStandTimestamp","lastProneTimestamp","shoulderPoser","leftArmIk","vrTransforms","leftHand","rightArmIk","rightHand","Start","Update"],"mappings":"AAAA,OAAOA,aAAP,MAA0B,oBAA1B;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,OAAOC,OAAP,MAAoB,cAApB;;AAGA,MAAMC,kBAAN,CACC;AACCC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKC,SAAL,GAAiB,IAAIC,KAAK,CAACC,QAAV,EAAjB;AACA,SAAKC,IAAL,GAAY,IAAIF,KAAK,CAACC,QAAV,EAAZ;AACA,SAAKE,KAAL,GAAa,IAAIH,KAAK,CAACC,QAAV,EAAb;AACA,SAAKG,IAAL,GAAY,IAAIJ,KAAK,CAACC,QAAV,EAAZ;AACA,SAAKI,IAAL,GAAY,IAAIL,KAAK,CAACC,QAAV,EAAZ;AACA,SAAKK,IAAL,GAAY,IAAIN,KAAK,CAACC,QAAV,EAAZ;AAEA,SAAKC,IAAL,CAAUK,GAAV,CAAc,KAAKJ,KAAnB;AACA,SAAKA,KAAL,CAAWI,GAAX,CAAe,KAAKR,SAApB;AACA,SAAKA,SAAL,CAAeQ,GAAf,CAAmB,KAAKH,IAAxB;AACA,SAAKA,IAAL,CAAUG,GAAV,CAAc,KAAKF,IAAnB;AACA,SAAKA,IAAL,CAAUE,GAAV,CAAc,KAAKD,IAAnB,EAZa,CAchB;AACA;AACA;AACA;;AAEA,SAAKE,kBAAL,GAA0B,IAAIR,KAAK,CAACC,QAAV,EAA1B;AACA,SAAKF,SAAL,CAAeQ,GAAf,CAAmB,KAAKC,kBAAxB;AACA,SAAKC,mBAAL,GAA2B,IAAIT,KAAK,CAACC,QAAV,EAA3B;AACA,SAAKF,SAAL,CAAeQ,GAAf,CAAmB,KAAKE,mBAAxB;AAEA,SAAKC,OAAL,GAAe,IAAIjB,aAAJ,EAAf;AACA,SAAKkB,QAAL,GAAgB,IAAIlB,aAAJ,EAAhB;AAEA,SAAKe,kBAAL,CAAwBD,GAAxB,CAA4B,KAAKG,OAAL,CAAaX,SAAzC;AACA,SAAKU,mBAAL,CAAyBF,GAAzB,CAA6B,KAAKI,QAAL,CAAcZ,SAA3C;AAEG,SAAKa,KAAL,GAAa,KAAb;AACA,SAAKC,WAAL,GAAmB,CAAnB;AACA,UAAMC,GAAG,GAAGC,IAAI,CAACD,GAAL,EAAZ;AACA,SAAKE,kBAAL,GAA0BF,GAA1B;AACA,SAAKG,kBAAL,GAA0BH,GAA1B;AAEH,SAAKI,aAAL,GAAqB,IAAIxB,aAAJ,CAAkBI,GAAlB,EAAuB,IAAvB,CAArB;AAEA,SAAKqB,SAAL,GAAiB,IAAIxB,OAAJ,CAAY,KAAKe,OAAjB,EAA0B,IAA1B,EAAgC,KAAKQ,aAArC,EAAoD,KAAKA,aAAL,CAAmBE,YAAnB,CAAgCC,QAApF,EAA8F,IAA9F,CAAjB;AACA,SAAKC,UAAL,GAAkB,IAAI3B,OAAJ,CAAY,KAAKgB,QAAjB,EAA2B,IAA3B,EAAiC,KAAKO,aAAtC,EAAqD,KAAKA,aAAL,CAAmBE,YAAnB,CAAgCG,SAArF,EAAgG,KAAhG,CAAlB;AACA;;AAEDC,EAAAA,KAAK,GACL;AACC,SAAKL,SAAL,CAAeK,KAAf;AACA,SAAKF,UAAL,CAAgBE,KAAhB;AACA;;AAEDC,EAAAA,MAAM,GAAG;AACR,SAAKP,aAAL,CAAmBO,MAAnB;AACA,SAAKN,SAAL,CAAeM,MAAf;AACA,SAAKH,UAAL,CAAgBG,MAAhB;AACA;;AArDF;;AAwDD,eAAe7B,kBAAf","sourcesContent":["import ArmTransforms from './ArmTransforms.js';\nimport ShoulderPoser from './ShoulderPoser.js';\nimport VRArmIK from './VRArmIK.js';\n\n\nclass ShoulderTransforms\n\t{\n\t\tconstructor(rig) {\n      this.transform = new THREE.Object3D();\n      this.hips = new THREE.Object3D();\n      this.spine = new THREE.Object3D();\n      this.neck = new THREE.Object3D();\n      this.head = new THREE.Object3D();\n      this.eyes = new THREE.Object3D();\n\n      this.hips.add(this.spine);\n      this.spine.add(this.transform);\n      this.transform.add(this.neck);\n      this.neck.add(this.head);\n      this.head.add(this.eyes);\n\n\t\t\t// this.leftShoulder = new THREE.Object3D();\n\t\t\t// this.transform.add(this.leftShoulder);\n\t\t\t// this.rightShoulder = new THREE.Object3D();\n\t\t\t// this.transform.add(this.rightShoulder);\n\n\t\t\tthis.leftShoulderAnchor = new THREE.Object3D();\n\t\t\tthis.transform.add(this.leftShoulderAnchor);\n\t\t\tthis.rightShoulderAnchor = new THREE.Object3D();\n\t\t\tthis.transform.add(this.rightShoulderAnchor);\n\n\t\t\tthis.leftArm = new ArmTransforms();\n\t\t\tthis.rightArm = new ArmTransforms();\n\n\t\t\tthis.leftShoulderAnchor.add(this.leftArm.transform);\n\t\t\tthis.rightShoulderAnchor.add(this.rightArm.transform);\n\n      this.prone = false;\n      this.proneFactor = 0;\n      const now = Date.now();\n      this.lastStandTimestamp = now;\n      this.lastProneTimestamp = now;\n\n\t\t\tthis.shoulderPoser = new ShoulderPoser(rig, this);\n\n\t\t\tthis.leftArmIk = new VRArmIK(this.leftArm, this, this.shoulderPoser, this.shoulderPoser.vrTransforms.leftHand, true);\n\t\t\tthis.rightArmIk = new VRArmIK(this.rightArm, this, this.shoulderPoser, this.shoulderPoser.vrTransforms.rightHand, false);\n\t\t}\n\n\t\tStart()\n\t\t{\n\t\t\tthis.leftArmIk.Start();\n\t\t\tthis.rightArmIk.Start();\n\t\t}\n\n\t\tUpdate() {\n\t\t\tthis.shoulderPoser.Update();\n\t\t\tthis.leftArmIk.Update();\n\t\t\tthis.rightArmIk.Update();\n\t\t}\n\t}\n\nexport default ShoulderTransforms;\n"]},"metadata":{},"sourceType":"module"}