{"ast":null,"code":"var _jsxFileName = \"/Users/chris/Documents/Github/test-react/src/WebXRApp.js\";\nimport React, { useEffect } from 'react';\nimport { parse } from 'node-html-parser';\n\nconst WebXRApp = props => {\n  let html = '';\n  useEffect(() => {\n    const parsedHTML = parse(props.app);\n    const scripts = parsedHTML.childNodes[0].querySelectorAll('script');\n    console.log(\"WebXRApp: \", scripts);\n    scripts.forEach(s => {\n      console.log(\"loading:\", s.rawAttrs);\n      const script = document.createElement(\"script\");\n\n      if (s.attributes && s.attributes.src) {\n        script.src = \"/WebXRApps/avatars-master/\".concat(s.attributes && s.attributes.src ? s.attributes.src : \"\");\n        script.type = \"module\";\n        script.async = false;\n        document.body.appendChild(script);\n      }\n    });\n  });\n  return React.createElement(\"div\", {\n    dangerouslySetInnerHTML: html,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  });\n};\n\nexport default WebXRApp;","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApp.js"],"names":["React","useEffect","parse","WebXRApp","props","html","parsedHTML","app","scripts","childNodes","querySelectorAll","console","log","forEach","s","rawAttrs","script","document","createElement","attributes","src","type","async","body","appendChild"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEA,MAAMC,QAAQ,GAAGC,KAAK,IAAI;AAEvB,MAAIC,IAAI,GAAE,EAAV;AAEAJ,EAAAA,SAAS,CAAC,MAAM;AACb,UAAMK,UAAU,GAAGJ,KAAK,CAACE,KAAK,CAACG,GAAP,CAAxB;AACA,UAAMC,OAAO,GAAGF,UAAU,CAACG,UAAX,CAAsB,CAAtB,EAAyBC,gBAAzB,CAA0C,QAA1C,CAAhB;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BJ,OAA1B;AAEAA,IAAAA,OAAO,CAACK,OAAR,CAAgBC,CAAC,IAAI;AACnBH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ,EAAwBE,CAAC,CAACC,QAA1B;AACA,YAAMC,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAf;;AACA,UAAGJ,CAAC,CAACK,UAAF,IAAgBL,CAAC,CAACK,UAAF,CAAaC,GAAhC,EAAoC;AAClCJ,QAAAA,MAAM,CAACI,GAAP,uCAA0CN,CAAC,CAACK,UAAF,IAAgBL,CAAC,CAACK,UAAF,CAAaC,GAA7B,GAAmCN,CAAC,CAACK,UAAF,CAAaC,GAAhD,GAAsD,EAAhG;AACAJ,QAAAA,MAAM,CAACK,IAAP,GAAc,QAAd;AACAL,QAAAA,MAAM,CAACM,KAAP,GAAe,KAAf;AACAL,QAAAA,QAAQ,CAACM,IAAT,CAAcC,WAAd,CAA0BR,MAA1B;AACD;AACJ,KATC;AAYH,GAjBS,CAAT;AAmBA,SAAO;AAAK,IAAA,uBAAuB,EAAEX,IAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AACF,CAxBD;;AAyBA,eAAeF,QAAf","sourcesContent":["import React, { useEffect } from 'react';\nimport { parse } from 'node-html-parser';\n\nconst WebXRApp = props => {\n   \n   let html =''\n\n   useEffect(() => {\n      const parsedHTML = parse(props.app);\n      const scripts = parsedHTML.childNodes[0].querySelectorAll('script');\n      console.log(\"WebXRApp: \", scripts)\n  \n      scripts.forEach(s => {\n        console.log(\"loading:\", s.rawAttrs)\n        const script = document.createElement(\"script\");\n        if(s.attributes && s.attributes.src){\n          script.src = `/WebXRApps/avatars-master/${s.attributes && s.attributes.src ? s.attributes.src : \"\"}`;\n          script.type = \"module\"\n          script.async = false;\n          document.body.appendChild(script);\n        }\n    })\n\n\n  })\n\n   return <div dangerouslySetInnerHTML={html} />\n}\nexport default WebXRApp;"]},"metadata":{},"sourceType":"module"}