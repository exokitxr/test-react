{"ast":null,"code":"const localVector = new THREE.Vector3();\nconst localVector2 = new THREE.Vector3();\nconst Helpers = {\n  getWorldPosition(o, v) {\n    return v.setFromMatrixPosition(o.matrixWorld);\n  },\n\n  getWorldQuaternion(o, q) {\n    o.matrixWorld.decompose(localVector, q, localVector2);\n    return q;\n  },\n\n  getWorldScale(o, v) {\n    return v.setFromMatrixScale(o.matrixWorld);\n  },\n\n  updateMatrix(o) {\n    o.matrix.compose(o.position, o.quaternion, o.scale);\n  },\n\n  updateMatrixWorld(o) {\n    o.matrixWorld.multiplyMatrices(o.parent.matrixWorld, o.matrix);\n  },\n\n  updateMatrixMatrixWorld(o) {\n    o.matrix.compose(o.position, o.quaternion, o.scale);\n    o.matrixWorld.multiplyMatrices(o.parent.matrixWorld, o.matrix);\n  }\n\n};\nexport { Helpers };","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApps/vrarmik/Unity.js"],"names":["localVector","THREE","Vector3","localVector2","Helpers","getWorldPosition","o","v","setFromMatrixPosition","matrixWorld","getWorldQuaternion","q","decompose","getWorldScale","setFromMatrixScale","updateMatrix","matrix","compose","position","quaternion","scale","updateMatrixWorld","multiplyMatrices","parent","updateMatrixMatrixWorld"],"mappings":"AAAA,MAAMA,WAAW,GAAG,IAAIC,KAAK,CAACC,OAAV,EAApB;AACA,MAAMC,YAAY,GAAG,IAAIF,KAAK,CAACC,OAAV,EAArB;AACA,MAAME,OAAO,GAAG;AACdC,EAAAA,gBAAgB,CAACC,CAAD,EAAIC,CAAJ,EAAO;AACrB,WAAOA,CAAC,CAACC,qBAAF,CAAwBF,CAAC,CAACG,WAA1B,CAAP;AACD,GAHa;;AAIdC,EAAAA,kBAAkB,CAACJ,CAAD,EAAIK,CAAJ,EAAO;AACvBL,IAAAA,CAAC,CAACG,WAAF,CAAcG,SAAd,CAAwBZ,WAAxB,EAAqCW,CAArC,EAAwCR,YAAxC;AACA,WAAOQ,CAAP;AACD,GAPa;;AAQdE,EAAAA,aAAa,CAACP,CAAD,EAAIC,CAAJ,EAAO;AAClB,WAAOA,CAAC,CAACO,kBAAF,CAAqBR,CAAC,CAACG,WAAvB,CAAP;AACD,GAVa;;AAWdM,EAAAA,YAAY,CAACT,CAAD,EAAI;AACdA,IAAAA,CAAC,CAACU,MAAF,CAASC,OAAT,CAAiBX,CAAC,CAACY,QAAnB,EAA6BZ,CAAC,CAACa,UAA/B,EAA2Cb,CAAC,CAACc,KAA7C;AACD,GAba;;AAcdC,EAAAA,iBAAiB,CAACf,CAAD,EAAI;AACnBA,IAAAA,CAAC,CAACG,WAAF,CAAca,gBAAd,CAA+BhB,CAAC,CAACiB,MAAF,CAASd,WAAxC,EAAqDH,CAAC,CAACU,MAAvD;AACD,GAhBa;;AAiBdQ,EAAAA,uBAAuB,CAAClB,CAAD,EAAI;AACzBA,IAAAA,CAAC,CAACU,MAAF,CAASC,OAAT,CAAiBX,CAAC,CAACY,QAAnB,EAA6BZ,CAAC,CAACa,UAA/B,EAA2Cb,CAAC,CAACc,KAA7C;AACAd,IAAAA,CAAC,CAACG,WAAF,CAAca,gBAAd,CAA+BhB,CAAC,CAACiB,MAAF,CAASd,WAAxC,EAAqDH,CAAC,CAACU,MAAvD;AACD;;AApBa,CAAhB;AAuBA,SACEZ,OADF","sourcesContent":["const localVector = new THREE.Vector3();\nconst localVector2 = new THREE.Vector3();\nconst Helpers = {\n  getWorldPosition(o, v) {\n    return v.setFromMatrixPosition(o.matrixWorld);\n  },\n  getWorldQuaternion(o, q) {\n    o.matrixWorld.decompose(localVector, q, localVector2);\n    return q;\n  },\n  getWorldScale(o, v) {\n    return v.setFromMatrixScale(o.matrixWorld);\n  },\n  updateMatrix(o) {\n    o.matrix.compose(o.position, o.quaternion, o.scale);\n  },\n  updateMatrixWorld(o) {\n    o.matrixWorld.multiplyMatrices(o.parent.matrixWorld, o.matrix);\n  },\n  updateMatrixMatrixWorld(o) {\n    o.matrix.compose(o.position, o.quaternion, o.scale);\n    o.matrixWorld.multiplyMatrices(o.parent.matrixWorld, o.matrix);\n  },\n};\n\nexport {\n  Helpers,\n};\n"]},"metadata":{},"sourceType":"module"}