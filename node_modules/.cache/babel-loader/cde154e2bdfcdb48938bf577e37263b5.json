{"ast":null,"code":"import VRTrackingReferences from './VRTrackingReferences.js';\n\nclass PoseManager {\n  constructor(rig) {\n    this.vrTransforms = new VRTrackingReferences(); // this.OnCalibrateListener = null;\n    // Oculus uses a different reference position -> 0 is the reference head position if the user is standing in the middle of the room. \n    // In OpenVR, the 0 position is the ground position and the user is then at (0, playerHeightHmd, 0) if he is in the middle of the room, so I need to correct this for shoulder calculation \n    // this.vrSystemOffsetHeight = 0.0;\n\n    this.referencePlayerHeightHmd = 1.7;\n    this.referencePlayerWidthWrist = 1.39;\n    this.playerHeightHmd = 1.70;\n    this.playerWidthWrist = 1.39; // this.playerWidthShoulders = 0.31;\n    // this.loadPlayerSizeOnAwake = false;\n    // PoseManager.Instance = this;\n  }\n  /* OnEnable()\n  {\n  \tif (PoseManager.Instance === null)\n  \t{\n  \t\tPoseManager.Instance = this;\n  \t}\n  \telse if (PoseManager.Instance !== null)\n  \t{\n  \t\tDebug.LogError(\"Multiple Instances of PoseManager in Scene\");\n  \t}\n  } */\n\n  /* Start()\n  {\n      if (this.loadPlayerSizeOnAwake)\n      {\n          this.loadPlayerSize();\n      }\n      // this.vrSystemOffsetHeight = 0;\n  \t\tonCalibrate += OnCalibrate;\n  }\n  \tOnCalibrate()\n  {\n  \tthis.playerHeightHmd = Camera.main.transform.position.y;\n  }\n  \tloadPlayerWidthShoulders()\n  {\n  \tthis.playerWidthShoulders = PlayerPrefs.GetFloat(\"VRArmIK_PlayerWidthShoulders\", 0.31);\n  }\n  \tsavePlayerWidthShoulders(width)\n  {\n  \tPlayerPrefs.SetFloat(\"VRArmIK_PlayerWidthShoulders\", width);\n  }\n  \tcalibrateIK()\n  {\n  \tthis.playerWidthWrist = this.vrTransforms.leftHand.position.clone().sub(this.vrTransforms.rightHand.position).magnitude;\n  \tthis.playerHeightHmd = this.vrTransforms.hmd.position.y;\n  \tthis.savePlayerSize(this.playerHeightHmd, this.playerWidthWrist);\n  }\n  \tsavePlayerSize(heightHmd, widthWrist)\n  {\n  \tPlayerPrefs.SetFloat(\"VRArmIK_PlayerHeightHmd\", this.heightHmd);\n  \tPlayerPrefs.SetFloat(\"VRArmIK_PlayerWidthWrist\", this.widthWrist);\n  \tthis.loadPlayerSize();\n  \tthis.onCalibrate && this.onCalibrate.Invoke();\n  }\n  \tloadPlayerSize()\n  {\n  \tthis.playerHeightHmd = PlayerPrefs.GetFloat(\"VRArmIK_PlayerHeightHmd\", this.referencePlayerHeightHmd);\n  \tthis.playerWidthWrist = PlayerPrefs.GetFloat(\"VRArmIK_PlayerWidthWrist\", this.referencePlayerWidthWrist);\n  } */\n\n\n} // PoseManager.Instance = null;\n\n\nexport default PoseManager;","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApps/Avatars/vrarmik/PoseManager.js"],"names":["VRTrackingReferences","PoseManager","constructor","rig","vrTransforms","referencePlayerHeightHmd","referencePlayerWidthWrist","playerHeightHmd","playerWidthWrist"],"mappings":"AAAA,OAAOA,oBAAP,MAAiC,2BAAjC;;AAEA,MAAMC,WAAN,CACC;AACCC,EAAAA,WAAW,CAACC,GAAD,EAAM;AAChB,SAAKC,YAAL,GAAoB,IAAIJ,oBAAJ,EAApB,CADgB,CAEf;AAEE;AACA;AACA;;AAEH,SAAKK,wBAAL,GAAgC,GAAhC;AACA,SAAKC,yBAAL,GAAiC,IAAjC;AACA,SAAKC,eAAL,GAAuB,IAAvB;AACA,SAAKC,gBAAL,GAAwB,IAAxB,CAXgB,CAYhB;AACG;AAEA;AACD;AAEH;;;;;;;;;;;;AAYA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA/BD,C,CA8EA;;;AAED,eAAeP,WAAf","sourcesContent":["import VRTrackingReferences from './VRTrackingReferences.js';\n\nclass PoseManager\n\t{\n\t\tconstructor(rig) {\n\t\t\tthis.vrTransforms = new VRTrackingReferences();\n\t\t  // this.OnCalibrateListener = null;\n\n      // Oculus uses a different reference position -> 0 is the reference head position if the user is standing in the middle of the room. \n      // In OpenVR, the 0 position is the ground position and the user is then at (0, playerHeightHmd, 0) if he is in the middle of the room, so I need to correct this for shoulder calculation \n      // this.vrSystemOffsetHeight = 0.0;\n\n\t\t\tthis.referencePlayerHeightHmd = 1.7;\n\t\t\tthis.referencePlayerWidthWrist = 1.39;\n\t\t\tthis.playerHeightHmd = 1.70;\n\t\t\tthis.playerWidthWrist = 1.39;\n\t\t\t// this.playerWidthShoulders = 0.31;\n      // this.loadPlayerSizeOnAwake = false;\n\n      // PoseManager.Instance = this;\n    }\n\n\t\t/* OnEnable()\n\t\t{\n\t\t\tif (PoseManager.Instance === null)\n\t\t\t{\n\t\t\t\tPoseManager.Instance = this;\n\t\t\t}\n\t\t\telse if (PoseManager.Instance !== null)\n\t\t\t{\n\t\t\t\tDebug.LogError(\"Multiple Instances of PoseManager in Scene\");\n\t\t\t}\n\t\t} */\n\n\t\t/* Start()\n\t\t{\n      if (this.loadPlayerSizeOnAwake)\n      {\n          this.loadPlayerSize();\n      }\n      // this.vrSystemOffsetHeight = 0;\n\n\t\t\tonCalibrate += OnCalibrate;\n\t\t}\n\n\t\tOnCalibrate()\n\t\t{\n\t\t\tthis.playerHeightHmd = Camera.main.transform.position.y;\n\t\t}\n\n\t\tloadPlayerWidthShoulders()\n\t\t{\n\t\t\tthis.playerWidthShoulders = PlayerPrefs.GetFloat(\"VRArmIK_PlayerWidthShoulders\", 0.31);\n\t\t}\n\n\t\tsavePlayerWidthShoulders(width)\n\t\t{\n\t\t\tPlayerPrefs.SetFloat(\"VRArmIK_PlayerWidthShoulders\", width);\n\t\t}\n\n\t\tcalibrateIK()\n\t\t{\n\t\t\tthis.playerWidthWrist = this.vrTransforms.leftHand.position.clone().sub(this.vrTransforms.rightHand.position).magnitude;\n\t\t\tthis.playerHeightHmd = this.vrTransforms.hmd.position.y;\n\t\t\tthis.savePlayerSize(this.playerHeightHmd, this.playerWidthWrist);\n\t\t}\n\n\t\tsavePlayerSize(heightHmd, widthWrist)\n\t\t{\n\t\t\tPlayerPrefs.SetFloat(\"VRArmIK_PlayerHeightHmd\", this.heightHmd);\n\t\t\tPlayerPrefs.SetFloat(\"VRArmIK_PlayerWidthWrist\", this.widthWrist);\n\t\t\tthis.loadPlayerSize();\n\t\t\tthis.onCalibrate && this.onCalibrate.Invoke();\n\t\t}\n\n\t\tloadPlayerSize()\n\t\t{\n\t\t\tthis.playerHeightHmd = PlayerPrefs.GetFloat(\"VRArmIK_PlayerHeightHmd\", this.referencePlayerHeightHmd);\n\t\t\tthis.playerWidthWrist = PlayerPrefs.GetFloat(\"VRArmIK_PlayerWidthWrist\", this.referencePlayerWidthWrist);\n\t\t} */\n\t}\n\t// PoseManager.Instance = null;\n\nexport default PoseManager;\n"]},"metadata":{},"sourceType":"module"}