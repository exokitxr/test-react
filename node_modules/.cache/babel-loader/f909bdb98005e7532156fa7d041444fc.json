{"ast":null,"code":"(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) : typeof define === 'function' && define.amd ? define(['exports'], factory) : (global = global || self, factory(global.THREE = {}));\n})(this, function (exports) {\n  'use strict'; // Polyfills\n\n  if (Number.EPSILON === undefined) {\n    Number.EPSILON = Math.pow(2, -52);\n  }\n\n  if (Number.isInteger === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n    Number.isInteger = function (value) {\n      return typeof value === 'number' && isFinite(value) && Math.floor(value) === value;\n    };\n  } //\n\n\n  if (Math.sign === undefined) {\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n    Math.sign = function (x) {\n      return x < 0 ? -1 : x > 0 ? 1 : +x;\n    };\n  }\n\n  if ('name' in Function.prototype === false) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n    Object.defineProperty(Function.prototype, 'name', {\n      get: function () {\n        return this.toString().match(/^\\s*function\\s*([^\\(\\s]*)/)[1];\n      }\n    });\n  }\n\n  if (Object.assign === undefined) {\n    // Missing in IE\n    // https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n    Object.assign = function (target) {\n      if (target === undefined || target === null) {\n        throw new TypeError('Cannot convert undefined or null to object');\n      }\n\n      var output = Object(target);\n\n      for (var index = 1; index < arguments.length; index++) {\n        var source = arguments[index];\n\n        if (source !== undefined && source !== null) {\n          for (var nextKey in source) {\n            if (Object.prototype.hasOwnProperty.call(source, nextKey)) {\n              output[nextKey] = source[nextKey];\n            }\n          }\n        }\n      }\n\n      return output;\n    };\n  }\n\n  var REVISION = '111dev';\n  var MOUSE = {\n    LEFT: 0,\n    MIDDLE: 1,\n    RIGHT: 2,\n    ROTATE: 0,\n    DOLLY: 1,\n    PAN: 2\n  };\n  var TOUCH = {\n    ROTATE: 0,\n    PAN: 1,\n    DOLLY_PAN: 2,\n    DOLLY_ROTATE: 3\n  };\n  var CullFaceNone = 0;\n  var CullFaceBack = 1;\n  var CullFaceFront = 2;\n  var CullFaceFrontBack = 3;\n  var FrontFaceDirectionCW = 0;\n  var FrontFaceDirectionCCW = 1;\n  var BasicShadowMap = 0;\n  var PCFShadowMap = 1;\n  var PCFSoftShadowMap = 2;\n  var VSMShadowMap = 3;\n  var FrontSide = 0;\n  var BackSide = 1;\n  var DoubleSide = 2;\n  var FlatShading = 1;\n  var SmoothShading = 2;\n  var NoColors = 0;\n  var FaceColors = 1;\n  var VertexColors = 2;\n  var NoBlending = 0;\n  var NormalBlending = 1;\n  var AdditiveBlending = 2;\n  var SubtractiveBlending = 3;\n  var MultiplyBlending = 4;\n  var CustomBlending = 5;\n  var AddEquation = 100;\n  var SubtractEquation = 101;\n  var ReverseSubtractEquation = 102;\n  var MinEquation = 103;\n  var MaxEquation = 104;\n  var ZeroFactor = 200;\n  var OneFactor = 201;\n  var SrcColorFactor = 202;\n  var OneMinusSrcColorFactor = 203;\n  var SrcAlphaFactor = 204;\n  var OneMinusSrcAlphaFactor = 205;\n  var DstAlphaFactor = 206;\n  var OneMinusDstAlphaFactor = 207;\n  var DstColorFactor = 208;\n  var OneMinusDstColorFactor = 209;\n  var SrcAlphaSaturateFactor = 210;\n  var NeverDepth = 0;\n  var AlwaysDepth = 1;\n  var LessDepth = 2;\n  var LessEqualDepth = 3;\n  var EqualDepth = 4;\n  var GreaterEqualDepth = 5;\n  var GreaterDepth = 6;\n  var NotEqualDepth = 7;\n  var MultiplyOperation = 0;\n  var MixOperation = 1;\n  var AddOperation = 2;\n  var NoToneMapping = 0;\n  var LinearToneMapping = 1;\n  var ReinhardToneMapping = 2;\n  var Uncharted2ToneMapping = 3;\n  var CineonToneMapping = 4;\n  var ACESFilmicToneMapping = 5;\n  var UVMapping = 300;\n  var CubeReflectionMapping = 301;\n  var CubeRefractionMapping = 302;\n  var EquirectangularReflectionMapping = 303;\n  var EquirectangularRefractionMapping = 304;\n  var SphericalReflectionMapping = 305;\n  var CubeUVReflectionMapping = 306;\n  var CubeUVRefractionMapping = 307;\n  var RepeatWrapping = 1000;\n  var ClampToEdgeWrapping = 1001;\n  var MirroredRepeatWrapping = 1002;\n  var NearestFilter = 1003;\n  var NearestMipmapNearestFilter = 1004;\n  var NearestMipMapNearestFilter = 1004;\n  var NearestMipmapLinearFilter = 1005;\n  var NearestMipMapLinearFilter = 1005;\n  var LinearFilter = 1006;\n  var LinearMipmapNearestFilter = 1007;\n  var LinearMipMapNearestFilter = 1007;\n  var LinearMipmapLinearFilter = 1008;\n  var LinearMipMapLinearFilter = 1008;\n  var UnsignedByteType = 1009;\n  var ByteType = 1010;\n  var ShortType = 1011;\n  var UnsignedShortType = 1012;\n  var IntType = 1013;\n  var UnsignedIntType = 1014;\n  var FloatType = 1015;\n  var HalfFloatType = 1016;\n  var UnsignedShort4444Type = 1017;\n  var UnsignedShort5551Type = 1018;\n  var UnsignedShort565Type = 1019;\n  var UnsignedInt248Type = 1020;\n  var AlphaFormat = 1021;\n  var RGBFormat = 1022;\n  var RGBAFormat = 1023;\n  var LuminanceFormat = 1024;\n  var LuminanceAlphaFormat = 1025;\n  var RGBEFormat = RGBAFormat;\n  var DepthFormat = 1026;\n  var DepthStencilFormat = 1027;\n  var RedFormat = 1028;\n  var RGB_S3TC_DXT1_Format = 33776;\n  var RGBA_S3TC_DXT1_Format = 33777;\n  var RGBA_S3TC_DXT3_Format = 33778;\n  var RGBA_S3TC_DXT5_Format = 33779;\n  var RGB_PVRTC_4BPPV1_Format = 35840;\n  var RGB_PVRTC_2BPPV1_Format = 35841;\n  var RGBA_PVRTC_4BPPV1_Format = 35842;\n  var RGBA_PVRTC_2BPPV1_Format = 35843;\n  var RGB_ETC1_Format = 36196;\n  var RGBA_ASTC_4x4_Format = 37808;\n  var RGBA_ASTC_5x4_Format = 37809;\n  var RGBA_ASTC_5x5_Format = 37810;\n  var RGBA_ASTC_6x5_Format = 37811;\n  var RGBA_ASTC_6x6_Format = 37812;\n  var RGBA_ASTC_8x5_Format = 37813;\n  var RGBA_ASTC_8x6_Format = 37814;\n  var RGBA_ASTC_8x8_Format = 37815;\n  var RGBA_ASTC_10x5_Format = 37816;\n  var RGBA_ASTC_10x6_Format = 37817;\n  var RGBA_ASTC_10x8_Format = 37818;\n  var RGBA_ASTC_10x10_Format = 37819;\n  var RGBA_ASTC_12x10_Format = 37820;\n  var RGBA_ASTC_12x12_Format = 37821;\n  var LoopOnce = 2200;\n  var LoopRepeat = 2201;\n  var LoopPingPong = 2202;\n  var InterpolateDiscrete = 2300;\n  var InterpolateLinear = 2301;\n  var InterpolateSmooth = 2302;\n  var ZeroCurvatureEnding = 2400;\n  var ZeroSlopeEnding = 2401;\n  var WrapAroundEnding = 2402;\n  var TrianglesDrawMode = 0;\n  var TriangleStripDrawMode = 1;\n  var TriangleFanDrawMode = 2;\n  var LinearEncoding = 3000;\n  var sRGBEncoding = 3001;\n  var GammaEncoding = 3007;\n  var RGBEEncoding = 3002;\n  var LogLuvEncoding = 3003;\n  var RGBM7Encoding = 3004;\n  var RGBM16Encoding = 3005;\n  var RGBDEncoding = 3006;\n  var BasicDepthPacking = 3200;\n  var RGBADepthPacking = 3201;\n  var TangentSpaceNormalMap = 0;\n  var ObjectSpaceNormalMap = 1;\n  var ZeroStencilOp = 0;\n  var KeepStencilOp = 7680;\n  var ReplaceStencilOp = 7681;\n  var IncrementStencilOp = 7682;\n  var DecrementStencilOp = 7683;\n  var IncrementWrapStencilOp = 34055;\n  var DecrementWrapStencilOp = 34056;\n  var InvertStencilOp = 5386;\n  var NeverStencilFunc = 512;\n  var LessStencilFunc = 513;\n  var EqualStencilFunc = 514;\n  var LessEqualStencilFunc = 515;\n  var GreaterStencilFunc = 516;\n  var NotEqualStencilFunc = 517;\n  var GreaterEqualStencilFunc = 518;\n  var AlwaysStencilFunc = 519;\n  var StaticDrawUsage = 35044;\n  var DynamicDrawUsage = 35048;\n  var StreamDrawUsage = 35040;\n  var StaticReadUsage = 35045;\n  var DynamicReadUsage = 35049;\n  var StreamReadUsage = 35041;\n  var StaticCopyUsage = 35046;\n  var DynamicCopyUsage = 35050;\n  var StreamCopyUsage = 35042;\n  /**\n   * https://github.com/mrdoob/eventdispatcher.js/\n   */\n\n  function EventDispatcher() {}\n\n  Object.assign(EventDispatcher.prototype, {\n    addEventListener: function (type, listener) {\n      if (this._listeners === undefined) {\n        this._listeners = {};\n      }\n\n      var listeners = this._listeners;\n\n      if (listeners[type] === undefined) {\n        listeners[type] = [];\n      }\n\n      if (listeners[type].indexOf(listener) === -1) {\n        listeners[type].push(listener);\n      }\n    },\n    hasEventListener: function (type, listener) {\n      if (this._listeners === undefined) {\n        return false;\n      }\n\n      var listeners = this._listeners;\n      return listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n    },\n    removeEventListener: function (type, listener) {\n      if (this._listeners === undefined) {\n        return;\n      }\n\n      var listeners = this._listeners;\n      var listenerArray = listeners[type];\n\n      if (listenerArray !== undefined) {\n        var index = listenerArray.indexOf(listener);\n\n        if (index !== -1) {\n          listenerArray.splice(index, 1);\n        }\n      }\n    },\n    dispatchEvent: function (event) {\n      if (this._listeners === undefined) {\n        return;\n      }\n\n      var listeners = this._listeners;\n      var listenerArray = listeners[event.type];\n\n      if (listenerArray !== undefined) {\n        event.target = this;\n        var array = listenerArray.slice(0);\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          array[i].call(this, event);\n        }\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _lut = [];\n\n  for (var i = 0; i < 256; i++) {\n    _lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n  }\n\n  var _Math = {\n    DEG2RAD: Math.PI / 180,\n    RAD2DEG: 180 / Math.PI,\n    generateUUID: function () {\n      // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n      var d0 = Math.random() * 0xffffffff | 0;\n      var d1 = Math.random() * 0xffffffff | 0;\n      var d2 = Math.random() * 0xffffffff | 0;\n      var d3 = Math.random() * 0xffffffff | 0;\n      var uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n      return uuid.toUpperCase();\n    },\n    clamp: function (value, min, max) {\n      return Math.max(min, Math.min(max, value));\n    },\n    // compute euclidian modulo of m % n\n    // https://en.wikipedia.org/wiki/Modulo_operation\n    euclideanModulo: function (n, m) {\n      return (n % m + m) % m;\n    },\n    // Linear mapping from range <a1, a2> to range <b1, b2>\n    mapLinear: function (x, a1, a2, b1, b2) {\n      return b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n    },\n    // https://en.wikipedia.org/wiki/Linear_interpolation\n    lerp: function (x, y, t) {\n      return (1 - t) * x + t * y;\n    },\n    // http://en.wikipedia.org/wiki/Smoothstep\n    smoothstep: function (x, min, max) {\n      if (x <= min) {\n        return 0;\n      }\n\n      if (x >= max) {\n        return 1;\n      }\n\n      x = (x - min) / (max - min);\n      return x * x * (3 - 2 * x);\n    },\n    smootherstep: function (x, min, max) {\n      if (x <= min) {\n        return 0;\n      }\n\n      if (x >= max) {\n        return 1;\n      }\n\n      x = (x - min) / (max - min);\n      return x * x * x * (x * (x * 6 - 15) + 10);\n    },\n    // Random integer from <low, high> interval\n    randInt: function (low, high) {\n      return low + Math.floor(Math.random() * (high - low + 1));\n    },\n    // Random float from <low, high> interval\n    randFloat: function (low, high) {\n      return low + Math.random() * (high - low);\n    },\n    // Random float from <-range/2, range/2> interval\n    randFloatSpread: function (range) {\n      return range * (0.5 - Math.random());\n    },\n    degToRad: function (degrees) {\n      return degrees * _Math.DEG2RAD;\n    },\n    radToDeg: function (radians) {\n      return radians * _Math.RAD2DEG;\n    },\n    isPowerOfTwo: function (value) {\n      return (value & value - 1) === 0 && value !== 0;\n    },\n    ceilPowerOfTwo: function (value) {\n      return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n    },\n    floorPowerOfTwo: function (value) {\n      return Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author philogb / http://blog.thejit.org/\n   * @author egraether / http://egraether.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n  function Vector2(x, y) {\n    this.x = x || 0;\n    this.y = y || 0;\n  }\n\n  Object.defineProperties(Vector2.prototype, {\n    \"width\": {\n      get: function () {\n        return this.x;\n      },\n      set: function (value) {\n        this.x = value;\n      }\n    },\n    \"height\": {\n      get: function () {\n        return this.y;\n      },\n      set: function (value) {\n        this.y = value;\n      }\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    isVector2: true,\n    set: function (x, y) {\n      this.x = x;\n      this.y = y;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      return this;\n    },\n    multiply: function (v) {\n      this.x *= v.x;\n      this.y *= v.y;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      return this;\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6];\n      this.y = e[1] * x + e[4] * y + e[7];\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      return this;\n    },\n    clampScalar: function (minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      return this;\n    },\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y;\n    },\n    cross: function (v) {\n      return this.x * v.y - this.y * v.x;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    angle: function () {\n      // computes the angle in radians with respect to the positive x-axis\n      var angle = Math.atan2(this.y, this.x);\n\n      if (angle < 0) {\n        angle += 2 * Math.PI;\n      }\n\n      return angle;\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y;\n      return dx * dx + dy * dy;\n    },\n    manhattanDistanceTo: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      return this;\n    },\n    rotateAround: function (center, angle) {\n      var c = Math.cos(angle),\n          s = Math.sin(angle);\n      var x = this.x - center.x;\n      var y = this.y - center.y;\n      this.x = x * c - y * s + center.x;\n      this.y = x * s + y * c + center.y;\n      return this;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  function Quaternion(x, y, z, w) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._w = w !== undefined ? w : 1;\n  }\n\n  Object.assign(Quaternion, {\n    slerp: function (qa, qb, qm, t) {\n      return qm.copy(qa).slerp(qb, t);\n    },\n    slerpFlat: function (dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n      // fuzz-free, array-based Quaternion SLERP operation\n      var x0 = src0[srcOffset0 + 0],\n          y0 = src0[srcOffset0 + 1],\n          z0 = src0[srcOffset0 + 2],\n          w0 = src0[srcOffset0 + 3],\n          x1 = src1[srcOffset1 + 0],\n          y1 = src1[srcOffset1 + 1],\n          z1 = src1[srcOffset1 + 2],\n          w1 = src1[srcOffset1 + 3];\n\n      if (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n        var s = 1 - t,\n            cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n            dir = cos >= 0 ? 1 : -1,\n            sqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n        if (sqrSin > Number.EPSILON) {\n          var sin = Math.sqrt(sqrSin),\n              len = Math.atan2(sin, cos * dir);\n          s = Math.sin(s * len) / sin;\n          t = Math.sin(t * len) / sin;\n        }\n\n        var tDir = t * dir;\n        x0 = x0 * s + x1 * tDir;\n        y0 = y0 * s + y1 * tDir;\n        z0 = z0 * s + z1 * tDir;\n        w0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n        if (s === 1 - t) {\n          var f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n          x0 *= f;\n          y0 *= f;\n          z0 *= f;\n          w0 *= f;\n        }\n      }\n\n      dst[dstOffset] = x0;\n      dst[dstOffset + 1] = y0;\n      dst[dstOffset + 2] = z0;\n      dst[dstOffset + 3] = w0;\n    }\n  });\n  Object.defineProperties(Quaternion.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    },\n    w: {\n      get: function () {\n        return this._w;\n      },\n      set: function (value) {\n        this._w = value;\n\n        this._onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Quaternion.prototype, {\n    isQuaternion: true,\n    set: function (x, y, z, w) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._w = w;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._w);\n    },\n    copy: function (quaternion) {\n      this._x = quaternion.x;\n      this._y = quaternion.y;\n      this._z = quaternion.z;\n      this._w = quaternion.w;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    setFromEuler: function (euler, update) {\n      if (!(euler && euler.isEuler)) {\n        throw new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      var x = euler._x,\n          y = euler._y,\n          z = euler._z,\n          order = euler.order; // http://www.mathworks.com/matlabcentral/fileexchange/\n      // \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n      //\tcontent/SpinCalc.m\n\n      var cos = Math.cos;\n      var sin = Math.sin;\n      var c1 = cos(x / 2);\n      var c2 = cos(y / 2);\n      var c3 = cos(z / 2);\n      var s1 = sin(x / 2);\n      var s2 = sin(y / 2);\n      var s3 = sin(z / 2);\n\n      if (order === 'XYZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'YXZ') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'ZXY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'ZYX') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      } else if (order === 'YZX') {\n        this._x = s1 * c2 * c3 + c1 * s2 * s3;\n        this._y = c1 * s2 * c3 + s1 * c2 * s3;\n        this._z = c1 * c2 * s3 - s1 * s2 * c3;\n        this._w = c1 * c2 * c3 - s1 * s2 * s3;\n      } else if (order === 'XZY') {\n        this._x = s1 * c2 * c3 - c1 * s2 * s3;\n        this._y = c1 * s2 * c3 - s1 * c2 * s3;\n        this._z = c1 * c2 * s3 + s1 * s2 * c3;\n        this._w = c1 * c2 * c3 + s1 * s2 * s3;\n      }\n\n      if (update !== false) {\n        this._onChangeCallback();\n      }\n\n      return this;\n    },\n    setFromAxisAngle: function (axis, angle) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n      // assumes axis is normalized\n      var halfAngle = angle / 2,\n          s = Math.sin(halfAngle);\n      this._x = axis.x * s;\n      this._y = axis.y * s;\n      this._z = axis.z * s;\n      this._w = Math.cos(halfAngle);\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    setFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10],\n          trace = m11 + m22 + m33,\n          s;\n\n      if (trace > 0) {\n        s = 0.5 / Math.sqrt(trace + 1.0);\n        this._w = 0.25 / s;\n        this._x = (m32 - m23) * s;\n        this._y = (m13 - m31) * s;\n        this._z = (m21 - m12) * s;\n      } else if (m11 > m22 && m11 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n        this._w = (m32 - m23) / s;\n        this._x = 0.25 * s;\n        this._y = (m12 + m21) / s;\n        this._z = (m13 + m31) / s;\n      } else if (m22 > m33) {\n        s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n        this._w = (m13 - m31) / s;\n        this._x = (m12 + m21) / s;\n        this._y = 0.25 * s;\n        this._z = (m23 + m32) / s;\n      } else {\n        s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n        this._w = (m21 - m12) / s;\n        this._x = (m13 + m31) / s;\n        this._y = (m23 + m32) / s;\n        this._z = 0.25 * s;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    setFromUnitVectors: function (vFrom, vTo) {\n      // assumes direction vectors vFrom and vTo are normalized\n      var EPS = 0.000001;\n      var r = vFrom.dot(vTo) + 1;\n\n      if (r < EPS) {\n        r = 0;\n\n        if (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n          this._x = -vFrom.y;\n          this._y = vFrom.x;\n          this._z = 0;\n          this._w = r;\n        } else {\n          this._x = 0;\n          this._y = -vFrom.z;\n          this._z = vFrom.y;\n          this._w = r;\n        }\n      } else {\n        // crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n        this._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n        this._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n        this._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n        this._w = r;\n      }\n\n      return this.normalize();\n    },\n    angleTo: function (q) {\n      return 2 * Math.acos(Math.abs(_Math.clamp(this.dot(q), -1, 1)));\n    },\n    rotateTowards: function (q, step) {\n      var angle = this.angleTo(q);\n\n      if (angle === 0) {\n        return this;\n      }\n\n      var t = Math.min(1, step / angle);\n      this.slerp(q, t);\n      return this;\n    },\n    inverse: function () {\n      // quaternion is assumed to have unit length\n      return this.conjugate();\n    },\n    conjugate: function () {\n      this._x *= -1;\n      this._y *= -1;\n      this._z *= -1;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    dot: function (v) {\n      return this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n    },\n    lengthSq: function () {\n      return this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n    },\n    length: function () {\n      return Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n    },\n    normalize: function () {\n      var l = this.length();\n\n      if (l === 0) {\n        this._x = 0;\n        this._y = 0;\n        this._z = 0;\n        this._w = 1;\n      } else {\n        l = 1 / l;\n        this._x = this._x * l;\n        this._y = this._y * l;\n        this._z = this._z * l;\n        this._w = this._w * l;\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    multiply: function (q, p) {\n      if (p !== undefined) {\n        console.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n        return this.multiplyQuaternions(q, p);\n      }\n\n      return this.multiplyQuaternions(this, q);\n    },\n    premultiply: function (q) {\n      return this.multiplyQuaternions(q, this);\n    },\n    multiplyQuaternions: function (a, b) {\n      // from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n      var qax = a._x,\n          qay = a._y,\n          qaz = a._z,\n          qaw = a._w;\n      var qbx = b._x,\n          qby = b._y,\n          qbz = b._z,\n          qbw = b._w;\n      this._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n      this._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n      this._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n      this._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    slerp: function (qb, t) {\n      if (t === 0) {\n        return this;\n      }\n\n      if (t === 1) {\n        return this.copy(qb);\n      }\n\n      var x = this._x,\n          y = this._y,\n          z = this._z,\n          w = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n      var cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n      if (cosHalfTheta < 0) {\n        this._w = -qb._w;\n        this._x = -qb._x;\n        this._y = -qb._y;\n        this._z = -qb._z;\n        cosHalfTheta = -cosHalfTheta;\n      } else {\n        this.copy(qb);\n      }\n\n      if (cosHalfTheta >= 1.0) {\n        this._w = w;\n        this._x = x;\n        this._y = y;\n        this._z = z;\n        return this;\n      }\n\n      var sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n      if (sqrSinHalfTheta <= Number.EPSILON) {\n        var s = 1 - t;\n        this._w = s * w + t * this._w;\n        this._x = s * x + t * this._x;\n        this._y = s * y + t * this._y;\n        this._z = s * z + t * this._z;\n        this.normalize();\n\n        this._onChangeCallback();\n\n        return this;\n      }\n\n      var sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n      var halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n      var ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n          ratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n      this._w = w * ratioA + this._w * ratioB;\n      this._x = x * ratioA + this._x * ratioB;\n      this._y = y * ratioA + this._y * ratioB;\n      this._z = z * ratioA + this._z * ratioB;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    equals: function (quaternion) {\n      return quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this._x = array[offset];\n      this._y = array[offset + 1];\n      this._z = array[offset + 2];\n      this._w = array[offset + 3];\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._w;\n      return array;\n    },\n    _onChange: function (callback) {\n      this._onChangeCallback = callback;\n      return this;\n    },\n    _onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  var _vector = new Vector3();\n\n  var _quaternion = new Quaternion();\n\n  function Vector3(x, y, z) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n  }\n\n  Object.assign(Vector3.prototype, {\n    isVector3: true,\n    set: function (x, y, z) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      return this;\n    },\n    multiply: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n        return this.multiplyVectors(v, w);\n      }\n\n      this.x *= v.x;\n      this.y *= v.y;\n      this.z *= v.z;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      return this;\n    },\n    multiplyVectors: function (a, b) {\n      this.x = a.x * b.x;\n      this.y = a.y * b.y;\n      this.z = a.z * b.z;\n      return this;\n    },\n    applyEuler: function (euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n      }\n\n      return this.applyQuaternion(_quaternion.setFromEuler(euler));\n    },\n    applyAxisAngle: function (axis, angle) {\n      return this.applyQuaternion(_quaternion.setFromAxisAngle(axis, angle));\n    },\n    applyMatrix3: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[3] * y + e[6] * z;\n      this.y = e[1] * x + e[4] * y + e[7] * z;\n      this.z = e[2] * x + e[5] * y + e[8] * z;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      var w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n      this.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n      this.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n      this.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n      return this;\n    },\n    applyQuaternion: function (q) {\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var qx = q.x,\n          qy = q.y,\n          qz = q.z,\n          qw = q.w; // calculate quat * vector\n\n      var ix = qw * x + qy * z - qz * y;\n      var iy = qw * y + qz * x - qx * z;\n      var iz = qw * z + qx * y - qy * x;\n      var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n      this.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n      this.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n      this.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n      return this;\n    },\n    project: function (camera) {\n      return this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n    },\n    unproject: function (camera) {\n      return this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n    },\n    transformDirection: function (m) {\n      // input: THREE.Matrix4 affine matrix\n      // vector interpreted as a direction\n      var x = this.x,\n          y = this.y,\n          z = this.z;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z;\n      this.y = e[1] * x + e[5] * y + e[9] * z;\n      this.z = e[2] * x + e[6] * y + e[10] * z;\n      return this.normalize();\n    },\n    divide: function (v) {\n      this.x /= v.x;\n      this.y /= v.y;\n      this.z /= v.z;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      return this;\n    },\n    clampScalar: function (minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      return this;\n    },\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z;\n    },\n    // TODO lengthSquared?\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    cross: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n        return this.crossVectors(v, w);\n      }\n\n      return this.crossVectors(this, v);\n    },\n    crossVectors: function (a, b) {\n      var ax = a.x,\n          ay = a.y,\n          az = a.z;\n      var bx = b.x,\n          by = b.y,\n          bz = b.z;\n      this.x = ay * bz - az * by;\n      this.y = az * bx - ax * bz;\n      this.z = ax * by - ay * bx;\n      return this;\n    },\n    projectOnVector: function (v) {\n      // v cannot be the zero v\n      var scalar = v.dot(this) / v.lengthSq();\n      return this.copy(v).multiplyScalar(scalar);\n    },\n    projectOnPlane: function (planeNormal) {\n      _vector.copy(this).projectOnVector(planeNormal);\n\n      return this.sub(_vector);\n    },\n    reflect: function (normal) {\n      // reflect incident vector off plane orthogonal to normal\n      // normal is assumed to have unit length\n      return this.sub(_vector.copy(normal).multiplyScalar(2 * this.dot(normal)));\n    },\n    angleTo: function (v) {\n      var denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\n      if (denominator === 0) {\n        console.error('THREE.Vector3: angleTo() can\\'t handle zero length vectors.');\n      }\n\n      var theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n      return Math.acos(_Math.clamp(theta, -1, 1));\n    },\n    distanceTo: function (v) {\n      return Math.sqrt(this.distanceToSquared(v));\n    },\n    distanceToSquared: function (v) {\n      var dx = this.x - v.x,\n          dy = this.y - v.y,\n          dz = this.z - v.z;\n      return dx * dx + dy * dy + dz * dz;\n    },\n    manhattanDistanceTo: function (v) {\n      return Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n    },\n    setFromSpherical: function (s) {\n      return this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n    },\n    setFromSphericalCoords: function (radius, phi, theta) {\n      var sinPhiRadius = Math.sin(phi) * radius;\n      this.x = sinPhiRadius * Math.sin(theta);\n      this.y = Math.cos(phi) * radius;\n      this.z = sinPhiRadius * Math.cos(theta);\n      return this;\n    },\n    setFromCylindrical: function (c) {\n      return this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n    },\n    setFromCylindricalCoords: function (radius, theta, y) {\n      this.x = radius * Math.sin(theta);\n      this.y = y;\n      this.z = radius * Math.cos(theta);\n      return this;\n    },\n    setFromMatrixPosition: function (m) {\n      var e = m.elements;\n      this.x = e[12];\n      this.y = e[13];\n      this.z = e[14];\n      return this;\n    },\n    setFromMatrixScale: function (m) {\n      var sx = this.setFromMatrixColumn(m, 0).length();\n      var sy = this.setFromMatrixColumn(m, 1).length();\n      var sz = this.setFromMatrixColumn(m, 2).length();\n      this.x = sx;\n      this.y = sy;\n      this.z = sz;\n      return this;\n    },\n    setFromMatrixColumn: function (m, index) {\n      return this.fromArray(m.elements, index * 4);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   * @author tschw\n   */\n\n  var _vector$1 = new Vector3();\n\n  function Matrix3() {\n    this.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix3.prototype, {\n    isMatrix3: true,\n    set: function (n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n      var te = this.elements;\n      te[0] = n11;\n      te[1] = n21;\n      te[2] = n31;\n      te[3] = n12;\n      te[4] = n22;\n      te[5] = n32;\n      te[6] = n13;\n      te[7] = n23;\n      te[8] = n33;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      return this;\n    },\n    setFromMatrix4: function (m) {\n      var me = m.elements;\n      this.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n      return this;\n    },\n    applyToBufferAttribute: function (attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        _vector$1.x = attribute.getX(i);\n        _vector$1.y = attribute.getY(i);\n        _vector$1.z = attribute.getZ(i);\n\n        _vector$1.applyMatrix3(this);\n\n        attribute.setXYZ(i, _vector$1.x, _vector$1.y, _vector$1.z);\n      }\n\n      return attribute;\n    },\n    multiply: function (m) {\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[3],\n          a13 = ae[6];\n      var a21 = ae[1],\n          a22 = ae[4],\n          a23 = ae[7];\n      var a31 = ae[2],\n          a32 = ae[5],\n          a33 = ae[8];\n      var b11 = be[0],\n          b12 = be[3],\n          b13 = be[6];\n      var b21 = be[1],\n          b22 = be[4],\n          b23 = be[7];\n      var b31 = be[2],\n          b32 = be[5],\n          b33 = be[8];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31;\n      te[3] = a11 * b12 + a12 * b22 + a13 * b32;\n      te[6] = a11 * b13 + a12 * b23 + a13 * b33;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31;\n      te[4] = a21 * b12 + a22 * b22 + a23 * b32;\n      te[7] = a21 * b13 + a22 * b23 + a23 * b33;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31;\n      te[5] = a31 * b12 + a32 * b22 + a33 * b32;\n      te[8] = a31 * b13 + a32 * b23 + a33 * b33;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[3] *= s;\n      te[6] *= s;\n      te[1] *= s;\n      te[4] *= s;\n      te[7] *= s;\n      te[2] *= s;\n      te[5] *= s;\n      te[8] *= s;\n      return this;\n    },\n    determinant: function () {\n      var te = this.elements;\n      var a = te[0],\n          b = te[1],\n          c = te[2],\n          d = te[3],\n          e = te[4],\n          f = te[5],\n          g = te[6],\n          h = te[7],\n          i = te[8];\n      return a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n    },\n    getInverse: function (matrix, throwOnDegenerate) {\n      if (matrix && matrix.isMatrix4) {\n        console.error(\"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\");\n      }\n\n      var me = matrix.elements,\n          te = this.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n12 = me[3],\n          n22 = me[4],\n          n32 = me[5],\n          n13 = me[6],\n          n23 = me[7],\n          n33 = me[8],\n          t11 = n33 * n22 - n32 * n23,\n          t12 = n32 * n13 - n33 * n12,\n          t13 = n23 * n12 - n22 * n13,\n          det = n11 * t11 + n21 * t12 + n31 * t13;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n31 * n23 - n33 * n21) * detInv;\n      te[2] = (n32 * n21 - n31 * n22) * detInv;\n      te[3] = t12 * detInv;\n      te[4] = (n33 * n11 - n31 * n13) * detInv;\n      te[5] = (n31 * n12 - n32 * n11) * detInv;\n      te[6] = t13 * detInv;\n      te[7] = (n21 * n13 - n23 * n11) * detInv;\n      te[8] = (n22 * n11 - n21 * n12) * detInv;\n      return this;\n    },\n    transpose: function () {\n      var tmp,\n          m = this.elements;\n      tmp = m[1];\n      m[1] = m[3];\n      m[3] = tmp;\n      tmp = m[2];\n      m[2] = m[6];\n      m[6] = tmp;\n      tmp = m[5];\n      m[5] = m[7];\n      m[7] = tmp;\n      return this;\n    },\n    getNormalMatrix: function (matrix4) {\n      return this.setFromMatrix4(matrix4).getInverse(this).transpose();\n    },\n    transposeIntoArray: function (r) {\n      var m = this.elements;\n      r[0] = m[0];\n      r[1] = m[3];\n      r[2] = m[6];\n      r[3] = m[1];\n      r[4] = m[4];\n      r[5] = m[7];\n      r[6] = m[2];\n      r[7] = m[5];\n      r[8] = m[8];\n      return this;\n    },\n    setUvTransform: function (tx, ty, sx, sy, rotation, cx, cy) {\n      var c = Math.cos(rotation);\n      var s = Math.sin(rotation);\n      this.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n    },\n    scale: function (sx, sy) {\n      var te = this.elements;\n      te[0] *= sx;\n      te[3] *= sx;\n      te[6] *= sx;\n      te[1] *= sy;\n      te[4] *= sy;\n      te[7] *= sy;\n      return this;\n    },\n    rotate: function (theta) {\n      var c = Math.cos(theta);\n      var s = Math.sin(theta);\n      var te = this.elements;\n      var a11 = te[0],\n          a12 = te[3],\n          a13 = te[6];\n      var a21 = te[1],\n          a22 = te[4],\n          a23 = te[7];\n      te[0] = c * a11 + s * a21;\n      te[3] = c * a12 + s * a22;\n      te[6] = c * a13 + s * a23;\n      te[1] = -s * a11 + c * a21;\n      te[4] = -s * a12 + c * a22;\n      te[7] = -s * a13 + c * a23;\n      return this;\n    },\n    translate: function (tx, ty) {\n      var te = this.elements;\n      te[0] += tx * te[2];\n      te[3] += tx * te[5];\n      te[6] += tx * te[8];\n      te[1] += ty * te[2];\n      te[4] += ty * te[5];\n      te[7] += ty * te[8];\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 9; i++) {\n        if (te[i] !== me[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      for (var i = 0; i < 9; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      return array;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var _canvas;\n\n  var ImageUtils = {\n    getDataURL: function (image) {\n      var canvas;\n\n      if (typeof HTMLCanvasElement == 'undefined') {\n        return image.src;\n      } else if (image instanceof HTMLCanvasElement) {\n        canvas = image;\n      } else {\n        if (_canvas === undefined) {\n          _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n        }\n\n        _canvas.width = image.width;\n        _canvas.height = image.height;\n\n        var context = _canvas.getContext('2d');\n\n        if (image instanceof ImageData) {\n          context.putImageData(image, 0, 0);\n        } else {\n          context.drawImage(image, 0, 0, image.width, image.height);\n        }\n\n        canvas = _canvas;\n      }\n\n      if (canvas.width > 2048 || canvas.height > 2048) {\n        return canvas.toDataURL('image/jpeg', 0.6);\n      } else {\n        return canvas.toDataURL('image/png');\n      }\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   */\n\n  var textureId = 0;\n\n  function Texture(image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    Object.defineProperty(this, 'id', {\n      value: textureId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n    this.mipmaps = [];\n    this.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n    this.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n    this.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n    this.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n    this.format = format !== undefined ? format : RGBAFormat;\n    this.type = type !== undefined ? type : UnsignedByteType;\n    this.offset = new Vector2(0, 0);\n    this.repeat = new Vector2(1, 1);\n    this.center = new Vector2(0, 0);\n    this.rotation = 0;\n    this.matrixAutoUpdate = true;\n    this.matrix = new Matrix3();\n    this.generateMipmaps = true;\n    this.premultiplyAlpha = false;\n    this.flipY = true;\n    this.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n    // Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n    //\n    // Also changing the encoding after already used by a Material will not automatically make the Material\n    // update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n    this.encoding = encoding !== undefined ? encoding : LinearEncoding;\n    this.version = 0;\n    this.onUpdate = null;\n  }\n\n  Texture.DEFAULT_IMAGE = undefined;\n  Texture.DEFAULT_MAPPING = UVMapping;\n  Texture.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Texture,\n    isTexture: true,\n    updateMatrix: function () {\n      this.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.image = source.image;\n      this.mipmaps = source.mipmaps.slice(0);\n      this.mapping = source.mapping;\n      this.wrapS = source.wrapS;\n      this.wrapT = source.wrapT;\n      this.magFilter = source.magFilter;\n      this.minFilter = source.minFilter;\n      this.anisotropy = source.anisotropy;\n      this.format = source.format;\n      this.type = source.type;\n      this.offset.copy(source.offset);\n      this.repeat.copy(source.repeat);\n      this.center.copy(source.center);\n      this.rotation = source.rotation;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrix.copy(source.matrix);\n      this.generateMipmaps = source.generateMipmaps;\n      this.premultiplyAlpha = source.premultiplyAlpha;\n      this.flipY = source.flipY;\n      this.unpackAlignment = source.unpackAlignment;\n      this.encoding = source.encoding;\n      return this;\n    },\n    toJSON: function (meta) {\n      var isRootObject = meta === undefined || typeof meta === 'string';\n\n      if (!isRootObject && meta.textures[this.uuid] !== undefined) {\n        return meta.textures[this.uuid];\n      }\n\n      var output = {\n        metadata: {\n          version: 4.5,\n          type: 'Texture',\n          generator: 'Texture.toJSON'\n        },\n        uuid: this.uuid,\n        name: this.name,\n        mapping: this.mapping,\n        repeat: [this.repeat.x, this.repeat.y],\n        offset: [this.offset.x, this.offset.y],\n        center: [this.center.x, this.center.y],\n        rotation: this.rotation,\n        wrap: [this.wrapS, this.wrapT],\n        format: this.format,\n        type: this.type,\n        encoding: this.encoding,\n        minFilter: this.minFilter,\n        magFilter: this.magFilter,\n        anisotropy: this.anisotropy,\n        flipY: this.flipY,\n        premultiplyAlpha: this.premultiplyAlpha,\n        unpackAlignment: this.unpackAlignment\n      };\n\n      if (this.image !== undefined) {\n        // TODO: Move to THREE.Image\n        var image = this.image;\n\n        if (image.uuid === undefined) {\n          image.uuid = _Math.generateUUID(); // UGH\n        }\n\n        if (!isRootObject && meta.images[image.uuid] === undefined) {\n          var url;\n\n          if (Array.isArray(image)) {\n            // process array of images e.g. CubeTexture\n            url = [];\n\n            for (var i = 0, l = image.length; i < l; i++) {\n              url.push(ImageUtils.getDataURL(image[i]));\n            }\n          } else {\n            // process single image\n            url = ImageUtils.getDataURL(image);\n          }\n\n          meta.images[image.uuid] = {\n            uuid: image.uuid,\n            url: url\n          };\n        }\n\n        output.image = image.uuid;\n      }\n\n      if (!isRootObject) {\n        meta.textures[this.uuid] = output;\n      }\n\n      return output;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    },\n    transformUv: function (uv) {\n      if (this.mapping !== UVMapping) {\n        return uv;\n      }\n\n      uv.applyMatrix3(this.matrix);\n\n      if (uv.x < 0 || uv.x > 1) {\n        switch (this.wrapS) {\n          case RepeatWrapping:\n            uv.x = uv.x - Math.floor(uv.x);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.x = uv.x < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.x) % 2) === 1) {\n              uv.x = Math.ceil(uv.x) - uv.x;\n            } else {\n              uv.x = uv.x - Math.floor(uv.x);\n            }\n\n            break;\n        }\n      }\n\n      if (uv.y < 0 || uv.y > 1) {\n        switch (this.wrapT) {\n          case RepeatWrapping:\n            uv.y = uv.y - Math.floor(uv.y);\n            break;\n\n          case ClampToEdgeWrapping:\n            uv.y = uv.y < 0 ? 0 : 1;\n            break;\n\n          case MirroredRepeatWrapping:\n            if (Math.abs(Math.floor(uv.y) % 2) === 1) {\n              uv.y = Math.ceil(uv.y) - uv.y;\n            } else {\n              uv.y = uv.y - Math.floor(uv.y);\n            }\n\n            break;\n        }\n      }\n\n      if (this.flipY) {\n        uv.y = 1 - uv.y;\n      }\n\n      return uv;\n    }\n  });\n  Object.defineProperty(Texture.prototype, \"needsUpdate\", {\n    set: function (value) {\n      if (value === true) {\n        this.version++;\n      }\n    }\n  });\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author mikael emtinger / http://gomo.se/\n   * @author egraether / http://egraether.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function Vector4(x, y, z, w) {\n    this.x = x || 0;\n    this.y = y || 0;\n    this.z = z || 0;\n    this.w = w !== undefined ? w : 1;\n  }\n\n  Object.defineProperties(Vector4.prototype, {\n    \"width\": {\n      get: function () {\n        return this.z;\n      },\n      set: function (value) {\n        this.z = value;\n      }\n    },\n    \"height\": {\n      get: function () {\n        return this.w;\n      },\n      set: function (value) {\n        this.w = value;\n      }\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    isVector4: true,\n    set: function (x, y, z, w) {\n      this.x = x;\n      this.y = y;\n      this.z = z;\n      this.w = w;\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.x = scalar;\n      this.y = scalar;\n      this.z = scalar;\n      this.w = scalar;\n      return this;\n    },\n    setX: function (x) {\n      this.x = x;\n      return this;\n    },\n    setY: function (y) {\n      this.y = y;\n      return this;\n    },\n    setZ: function (z) {\n      this.z = z;\n      return this;\n    },\n    setW: function (w) {\n      this.w = w;\n      return this;\n    },\n    setComponent: function (index, value) {\n      switch (index) {\n        case 0:\n          this.x = value;\n          break;\n\n        case 1:\n          this.y = value;\n          break;\n\n        case 2:\n          this.z = value;\n          break;\n\n        case 3:\n          this.w = value;\n          break;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n\n      return this;\n    },\n    getComponent: function (index) {\n      switch (index) {\n        case 0:\n          return this.x;\n\n        case 1:\n          return this.y;\n\n        case 2:\n          return this.z;\n\n        case 3:\n          return this.w;\n\n        default:\n          throw new Error('index is out of range: ' + index);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.x, this.y, this.z, this.w);\n    },\n    copy: function (v) {\n      this.x = v.x;\n      this.y = v.y;\n      this.z = v.z;\n      this.w = v.w !== undefined ? v.w : 1;\n      return this;\n    },\n    add: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n        return this.addVectors(v, w);\n      }\n\n      this.x += v.x;\n      this.y += v.y;\n      this.z += v.z;\n      this.w += v.w;\n      return this;\n    },\n    addScalar: function (s) {\n      this.x += s;\n      this.y += s;\n      this.z += s;\n      this.w += s;\n      return this;\n    },\n    addVectors: function (a, b) {\n      this.x = a.x + b.x;\n      this.y = a.y + b.y;\n      this.z = a.z + b.z;\n      this.w = a.w + b.w;\n      return this;\n    },\n    addScaledVector: function (v, s) {\n      this.x += v.x * s;\n      this.y += v.y * s;\n      this.z += v.z * s;\n      this.w += v.w * s;\n      return this;\n    },\n    sub: function (v, w) {\n      if (w !== undefined) {\n        console.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n        return this.subVectors(v, w);\n      }\n\n      this.x -= v.x;\n      this.y -= v.y;\n      this.z -= v.z;\n      this.w -= v.w;\n      return this;\n    },\n    subScalar: function (s) {\n      this.x -= s;\n      this.y -= s;\n      this.z -= s;\n      this.w -= s;\n      return this;\n    },\n    subVectors: function (a, b) {\n      this.x = a.x - b.x;\n      this.y = a.y - b.y;\n      this.z = a.z - b.z;\n      this.w = a.w - b.w;\n      return this;\n    },\n    multiplyScalar: function (scalar) {\n      this.x *= scalar;\n      this.y *= scalar;\n      this.z *= scalar;\n      this.w *= scalar;\n      return this;\n    },\n    applyMatrix4: function (m) {\n      var x = this.x,\n          y = this.y,\n          z = this.z,\n          w = this.w;\n      var e = m.elements;\n      this.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n      this.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n      this.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n      this.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n      return this;\n    },\n    divideScalar: function (scalar) {\n      return this.multiplyScalar(1 / scalar);\n    },\n    setAxisAngleFromQuaternion: function (q) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n      // q is assumed to be normalized\n      this.w = 2 * Math.acos(q.w);\n      var s = Math.sqrt(1 - q.w * q.w);\n\n      if (s < 0.0001) {\n        this.x = 1;\n        this.y = 0;\n        this.z = 0;\n      } else {\n        this.x = q.x / s;\n        this.y = q.y / s;\n        this.z = q.z / s;\n      }\n\n      return this;\n    },\n    setAxisAngleFromRotationMatrix: function (m) {\n      // http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      var angle,\n          x,\n          y,\n          z,\n          // variables for result\n      epsilon = 0.01,\n          // margin to allow for rounding errors\n      epsilon2 = 0.1,\n          // margin to distinguish between 0 and 180 degrees\n      te = m.elements,\n          m11 = te[0],\n          m12 = te[4],\n          m13 = te[8],\n          m21 = te[1],\n          m22 = te[5],\n          m23 = te[9],\n          m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n\n      if (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n        // singularity found\n        // first check for identity matrix which must have +1 for all terms\n        // in leading diagonal and zero in other terms\n        if (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n          // this singularity is identity matrix so angle = 0\n          this.set(1, 0, 0, 0);\n          return this; // zero angle, arbitrary axis\n        } // otherwise this singularity is angle = 180\n\n\n        angle = Math.PI;\n        var xx = (m11 + 1) / 2;\n        var yy = (m22 + 1) / 2;\n        var zz = (m33 + 1) / 2;\n        var xy = (m12 + m21) / 4;\n        var xz = (m13 + m31) / 4;\n        var yz = (m23 + m32) / 4;\n\n        if (xx > yy && xx > zz) {\n          // m11 is the largest diagonal term\n          if (xx < epsilon) {\n            x = 0;\n            y = 0.707106781;\n            z = 0.707106781;\n          } else {\n            x = Math.sqrt(xx);\n            y = xy / x;\n            z = xz / x;\n          }\n        } else if (yy > zz) {\n          // m22 is the largest diagonal term\n          if (yy < epsilon) {\n            x = 0.707106781;\n            y = 0;\n            z = 0.707106781;\n          } else {\n            y = Math.sqrt(yy);\n            x = xy / y;\n            z = yz / y;\n          }\n        } else {\n          // m33 is the largest diagonal term so base result on this\n          if (zz < epsilon) {\n            x = 0.707106781;\n            y = 0.707106781;\n            z = 0;\n          } else {\n            z = Math.sqrt(zz);\n            x = xz / z;\n            y = yz / z;\n          }\n        }\n\n        this.set(x, y, z, angle);\n        return this; // return 180 deg rotation\n      } // as we have reached here there are no singularities so we can handle normally\n\n\n      var s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n      if (Math.abs(s) < 0.001) {\n        s = 1;\n      } // prevent divide by zero, should not happen if matrix is orthogonal and should be\n      // caught by singularity test above, but I've left it in just in case\n\n\n      this.x = (m32 - m23) / s;\n      this.y = (m13 - m31) / s;\n      this.z = (m21 - m12) / s;\n      this.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n      return this;\n    },\n    min: function (v) {\n      this.x = Math.min(this.x, v.x);\n      this.y = Math.min(this.y, v.y);\n      this.z = Math.min(this.z, v.z);\n      this.w = Math.min(this.w, v.w);\n      return this;\n    },\n    max: function (v) {\n      this.x = Math.max(this.x, v.x);\n      this.y = Math.max(this.y, v.y);\n      this.z = Math.max(this.z, v.z);\n      this.w = Math.max(this.w, v.w);\n      return this;\n    },\n    clamp: function (min, max) {\n      // assumes min < max, componentwise\n      this.x = Math.max(min.x, Math.min(max.x, this.x));\n      this.y = Math.max(min.y, Math.min(max.y, this.y));\n      this.z = Math.max(min.z, Math.min(max.z, this.z));\n      this.w = Math.max(min.w, Math.min(max.w, this.w));\n      return this;\n    },\n    clampScalar: function (minVal, maxVal) {\n      this.x = Math.max(minVal, Math.min(maxVal, this.x));\n      this.y = Math.max(minVal, Math.min(maxVal, this.y));\n      this.z = Math.max(minVal, Math.min(maxVal, this.z));\n      this.w = Math.max(minVal, Math.min(maxVal, this.w));\n      return this;\n    },\n    clampLength: function (min, max) {\n      var length = this.length();\n      return this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n    },\n    floor: function () {\n      this.x = Math.floor(this.x);\n      this.y = Math.floor(this.y);\n      this.z = Math.floor(this.z);\n      this.w = Math.floor(this.w);\n      return this;\n    },\n    ceil: function () {\n      this.x = Math.ceil(this.x);\n      this.y = Math.ceil(this.y);\n      this.z = Math.ceil(this.z);\n      this.w = Math.ceil(this.w);\n      return this;\n    },\n    round: function () {\n      this.x = Math.round(this.x);\n      this.y = Math.round(this.y);\n      this.z = Math.round(this.z);\n      this.w = Math.round(this.w);\n      return this;\n    },\n    roundToZero: function () {\n      this.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n      this.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n      this.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n      this.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n      return this;\n    },\n    negate: function () {\n      this.x = -this.x;\n      this.y = -this.y;\n      this.z = -this.z;\n      this.w = -this.w;\n      return this;\n    },\n    dot: function (v) {\n      return this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n    },\n    lengthSq: function () {\n      return this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n    },\n    length: function () {\n      return Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n    },\n    manhattanLength: function () {\n      return Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n    },\n    normalize: function () {\n      return this.divideScalar(this.length() || 1);\n    },\n    setLength: function (length) {\n      return this.normalize().multiplyScalar(length);\n    },\n    lerp: function (v, alpha) {\n      this.x += (v.x - this.x) * alpha;\n      this.y += (v.y - this.y) * alpha;\n      this.z += (v.z - this.z) * alpha;\n      this.w += (v.w - this.w) * alpha;\n      return this;\n    },\n    lerpVectors: function (v1, v2, alpha) {\n      return this.subVectors(v2, v1).multiplyScalar(alpha).add(v1);\n    },\n    equals: function (v) {\n      return v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.x = array[offset];\n      this.y = array[offset + 1];\n      this.z = array[offset + 2];\n      this.w = array[offset + 3];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this.x;\n      array[offset + 1] = this.y;\n      array[offset + 2] = this.z;\n      array[offset + 3] = this.w;\n      return array;\n    },\n    fromBufferAttribute: function (attribute, index, offset) {\n      if (offset !== undefined) {\n        console.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n      }\n\n      this.x = attribute.getX(index);\n      this.y = attribute.getY(index);\n      this.z = attribute.getZ(index);\n      this.w = attribute.getW(index);\n      return this;\n    }\n  });\n  /**\n   * @author szimek / https://github.com/szimek/\n   * @author alteredq / http://alteredqualia.com/\n   * @author Marius Kintel / https://github.com/kintel\n   */\n\n  /*\n   In options, we can specify:\n   * Texture parameters for an auto-generated target texture\n   * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n  */\n\n  function WebGLRenderTarget(width, height, options) {\n    this.width = width;\n    this.height = height;\n    this.scissor = new Vector4(0, 0, width, height);\n    this.scissorTest = false;\n    this.viewport = new Vector4(0, 0, width, height);\n    options = options || {};\n    this.texture = new Texture(undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n    this.texture.image = {};\n    this.texture.image.width = width;\n    this.texture.image.height = height;\n    this.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n    this.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n    this.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n    this.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n    this.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n  }\n\n  WebGLRenderTarget.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: WebGLRenderTarget,\n    isWebGLRenderTarget: true,\n    setSize: function (width, height) {\n      if (this.width !== width || this.height !== height) {\n        this.width = width;\n        this.height = height;\n        this.texture.image.width = width;\n        this.texture.image.height = height;\n        this.dispose();\n      }\n\n      this.viewport.set(0, 0, width, height);\n      this.scissor.set(0, 0, width, height);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.width = source.width;\n      this.height = source.height;\n      this.viewport.copy(source.viewport);\n      this.texture = source.texture.clone();\n      this.depthBuffer = source.depthBuffer;\n      this.stencilBuffer = source.stencilBuffer;\n      this.depthTexture = source.depthTexture;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author Matt DesLauriers / @mattdesl\n   */\n\n  function WebGLMultisampleRenderTarget(width, height, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n    this.samples = 4;\n  }\n\n  WebGLMultisampleRenderTarget.prototype = Object.assign(Object.create(WebGLRenderTarget.prototype), {\n    constructor: WebGLMultisampleRenderTarget,\n    isWebGLMultisampleRenderTarget: true,\n    copy: function (source) {\n      WebGLRenderTarget.prototype.copy.call(this, source);\n      this.samples = source.samples;\n      return this;\n    }\n  });\n\n  var _v1 = new Vector3();\n\n  var _m1 = new Matrix4();\n\n  var _zero = new Vector3(0, 0, 0);\n\n  var _one = new Vector3(1, 1, 1);\n\n  var _x = new Vector3();\n\n  var _y = new Vector3();\n\n  var _z = new Vector3();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author philogb / http://blog.thejit.org/\n   * @author jordi_ros / http://plattsoft.com\n   * @author D1plo1d / http://github.com/D1plo1d\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author timknip / http://www.floorplanner.com/\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Matrix4() {\n    this.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n    if (arguments.length > 0) {\n      console.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n    }\n  }\n\n  Object.assign(Matrix4.prototype, {\n    isMatrix4: true,\n    set: function (n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n      var te = this.elements;\n      te[0] = n11;\n      te[4] = n12;\n      te[8] = n13;\n      te[12] = n14;\n      te[1] = n21;\n      te[5] = n22;\n      te[9] = n23;\n      te[13] = n24;\n      te[2] = n31;\n      te[6] = n32;\n      te[10] = n33;\n      te[14] = n34;\n      te[3] = n41;\n      te[7] = n42;\n      te[11] = n43;\n      te[15] = n44;\n      return this;\n    },\n    identity: function () {\n      this.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    clone: function () {\n      return new Matrix4().fromArray(this.elements);\n    },\n    copy: function (m) {\n      var te = this.elements;\n      var me = m.elements;\n      te[0] = me[0];\n      te[1] = me[1];\n      te[2] = me[2];\n      te[3] = me[3];\n      te[4] = me[4];\n      te[5] = me[5];\n      te[6] = me[6];\n      te[7] = me[7];\n      te[8] = me[8];\n      te[9] = me[9];\n      te[10] = me[10];\n      te[11] = me[11];\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      te[15] = me[15];\n      return this;\n    },\n    copyPosition: function (m) {\n      var te = this.elements,\n          me = m.elements;\n      te[12] = me[12];\n      te[13] = me[13];\n      te[14] = me[14];\n      return this;\n    },\n    extractBasis: function (xAxis, yAxis, zAxis) {\n      xAxis.setFromMatrixColumn(this, 0);\n      yAxis.setFromMatrixColumn(this, 1);\n      zAxis.setFromMatrixColumn(this, 2);\n      return this;\n    },\n    makeBasis: function (xAxis, yAxis, zAxis) {\n      this.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    extractRotation: function (m) {\n      // this method does not support reflection matrices\n      var te = this.elements;\n      var me = m.elements;\n\n      var scaleX = 1 / _v1.setFromMatrixColumn(m, 0).length();\n\n      var scaleY = 1 / _v1.setFromMatrixColumn(m, 1).length();\n\n      var scaleZ = 1 / _v1.setFromMatrixColumn(m, 2).length();\n\n      te[0] = me[0] * scaleX;\n      te[1] = me[1] * scaleX;\n      te[2] = me[2] * scaleX;\n      te[3] = 0;\n      te[4] = me[4] * scaleY;\n      te[5] = me[5] * scaleY;\n      te[6] = me[6] * scaleY;\n      te[7] = 0;\n      te[8] = me[8] * scaleZ;\n      te[9] = me[9] * scaleZ;\n      te[10] = me[10] * scaleZ;\n      te[11] = 0;\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromEuler: function (euler) {\n      if (!(euler && euler.isEuler)) {\n        console.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n      }\n\n      var te = this.elements;\n      var x = euler.x,\n          y = euler.y,\n          z = euler.z;\n      var a = Math.cos(x),\n          b = Math.sin(x);\n      var c = Math.cos(y),\n          d = Math.sin(y);\n      var e = Math.cos(z),\n          f = Math.sin(z);\n\n      if (euler.order === 'XYZ') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = -c * f;\n        te[8] = d;\n        te[1] = af + be * d;\n        te[5] = ae - bf * d;\n        te[9] = -b * c;\n        te[2] = bf - ae * d;\n        te[6] = be + af * d;\n        te[10] = a * c;\n      } else if (euler.order === 'YXZ') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce + df * b;\n        te[4] = de * b - cf;\n        te[8] = a * d;\n        te[1] = a * f;\n        te[5] = a * e;\n        te[9] = -b;\n        te[2] = cf * b - de;\n        te[6] = df + ce * b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZXY') {\n        var ce = c * e,\n            cf = c * f,\n            de = d * e,\n            df = d * f;\n        te[0] = ce - df * b;\n        te[4] = -a * f;\n        te[8] = de + cf * b;\n        te[1] = cf + de * b;\n        te[5] = a * e;\n        te[9] = df - ce * b;\n        te[2] = -a * d;\n        te[6] = b;\n        te[10] = a * c;\n      } else if (euler.order === 'ZYX') {\n        var ae = a * e,\n            af = a * f,\n            be = b * e,\n            bf = b * f;\n        te[0] = c * e;\n        te[4] = be * d - af;\n        te[8] = ae * d + bf;\n        te[1] = c * f;\n        te[5] = bf * d + ae;\n        te[9] = af * d - be;\n        te[2] = -d;\n        te[6] = b * c;\n        te[10] = a * c;\n      } else if (euler.order === 'YZX') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = bd - ac * f;\n        te[8] = bc * f + ad;\n        te[1] = f;\n        te[5] = a * e;\n        te[9] = -b * e;\n        te[2] = -d * e;\n        te[6] = ad * f + bc;\n        te[10] = ac - bd * f;\n      } else if (euler.order === 'XZY') {\n        var ac = a * c,\n            ad = a * d,\n            bc = b * c,\n            bd = b * d;\n        te[0] = c * e;\n        te[4] = -f;\n        te[8] = d * e;\n        te[1] = ac * f + bd;\n        te[5] = a * e;\n        te[9] = ad * f - bc;\n        te[2] = bc * f - ad;\n        te[6] = b * e;\n        te[10] = bd * f + ac;\n      } // bottom row\n\n\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0; // last column\n\n      te[12] = 0;\n      te[13] = 0;\n      te[14] = 0;\n      te[15] = 1;\n      return this;\n    },\n    makeRotationFromQuaternion: function (q) {\n      return this.compose(_zero, q, _one);\n    },\n    lookAt: function (eye, target, up) {\n      var te = this.elements;\n\n      _z.subVectors(eye, target);\n\n      if (_z.lengthSq() === 0) {\n        // eye and target are in the same position\n        _z.z = 1;\n      }\n\n      _z.normalize();\n\n      _x.crossVectors(up, _z);\n\n      if (_x.lengthSq() === 0) {\n        // up and z are parallel\n        if (Math.abs(up.z) === 1) {\n          _z.x += 0.0001;\n        } else {\n          _z.z += 0.0001;\n        }\n\n        _z.normalize();\n\n        _x.crossVectors(up, _z);\n      }\n\n      _x.normalize();\n\n      _y.crossVectors(_z, _x);\n\n      te[0] = _x.x;\n      te[4] = _y.x;\n      te[8] = _z.x;\n      te[1] = _x.y;\n      te[5] = _y.y;\n      te[9] = _z.y;\n      te[2] = _x.z;\n      te[6] = _y.z;\n      te[10] = _z.z;\n      return this;\n    },\n    multiply: function (m, n) {\n      if (n !== undefined) {\n        console.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n        return this.multiplyMatrices(m, n);\n      }\n\n      return this.multiplyMatrices(this, m);\n    },\n    premultiply: function (m) {\n      return this.multiplyMatrices(m, this);\n    },\n    multiplyMatrices: function (a, b) {\n      var ae = a.elements;\n      var be = b.elements;\n      var te = this.elements;\n      var a11 = ae[0],\n          a12 = ae[4],\n          a13 = ae[8],\n          a14 = ae[12];\n      var a21 = ae[1],\n          a22 = ae[5],\n          a23 = ae[9],\n          a24 = ae[13];\n      var a31 = ae[2],\n          a32 = ae[6],\n          a33 = ae[10],\n          a34 = ae[14];\n      var a41 = ae[3],\n          a42 = ae[7],\n          a43 = ae[11],\n          a44 = ae[15];\n      var b11 = be[0],\n          b12 = be[4],\n          b13 = be[8],\n          b14 = be[12];\n      var b21 = be[1],\n          b22 = be[5],\n          b23 = be[9],\n          b24 = be[13];\n      var b31 = be[2],\n          b32 = be[6],\n          b33 = be[10],\n          b34 = be[14];\n      var b41 = be[3],\n          b42 = be[7],\n          b43 = be[11],\n          b44 = be[15];\n      te[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n      te[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n      te[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n      te[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n      te[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n      te[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n      te[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n      te[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n      te[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n      te[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n      te[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n      te[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n      te[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n      te[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n      te[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n      te[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      var te = this.elements;\n      te[0] *= s;\n      te[4] *= s;\n      te[8] *= s;\n      te[12] *= s;\n      te[1] *= s;\n      te[5] *= s;\n      te[9] *= s;\n      te[13] *= s;\n      te[2] *= s;\n      te[6] *= s;\n      te[10] *= s;\n      te[14] *= s;\n      te[3] *= s;\n      te[7] *= s;\n      te[11] *= s;\n      te[15] *= s;\n      return this;\n    },\n    applyToBufferAttribute: function (attribute) {\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        _v1.x = attribute.getX(i);\n        _v1.y = attribute.getY(i);\n        _v1.z = attribute.getZ(i);\n\n        _v1.applyMatrix4(this);\n\n        attribute.setXYZ(i, _v1.x, _v1.y, _v1.z);\n      }\n\n      return attribute;\n    },\n    determinant: function () {\n      var te = this.elements;\n      var n11 = te[0],\n          n12 = te[4],\n          n13 = te[8],\n          n14 = te[12];\n      var n21 = te[1],\n          n22 = te[5],\n          n23 = te[9],\n          n24 = te[13];\n      var n31 = te[2],\n          n32 = te[6],\n          n33 = te[10],\n          n34 = te[14];\n      var n41 = te[3],\n          n42 = te[7],\n          n43 = te[11],\n          n44 = te[15]; //TODO: make this more efficient\n      //( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n      return n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n    },\n    transpose: function () {\n      var te = this.elements;\n      var tmp;\n      tmp = te[1];\n      te[1] = te[4];\n      te[4] = tmp;\n      tmp = te[2];\n      te[2] = te[8];\n      te[8] = tmp;\n      tmp = te[6];\n      te[6] = te[9];\n      te[9] = tmp;\n      tmp = te[3];\n      te[3] = te[12];\n      te[12] = tmp;\n      tmp = te[7];\n      te[7] = te[13];\n      te[13] = tmp;\n      tmp = te[11];\n      te[11] = te[14];\n      te[14] = tmp;\n      return this;\n    },\n    setPosition: function (x, y, z) {\n      var te = this.elements;\n\n      if (x.isVector3) {\n        te[12] = x.x;\n        te[13] = x.y;\n        te[14] = x.z;\n      } else {\n        te[12] = x;\n        te[13] = y;\n        te[14] = z;\n      }\n\n      return this;\n    },\n    getInverse: function (m, throwOnDegenerate) {\n      // based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n      var te = this.elements,\n          me = m.elements,\n          n11 = me[0],\n          n21 = me[1],\n          n31 = me[2],\n          n41 = me[3],\n          n12 = me[4],\n          n22 = me[5],\n          n32 = me[6],\n          n42 = me[7],\n          n13 = me[8],\n          n23 = me[9],\n          n33 = me[10],\n          n43 = me[11],\n          n14 = me[12],\n          n24 = me[13],\n          n34 = me[14],\n          n44 = me[15],\n          t11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n          t12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n          t13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n          t14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n      var det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n      if (det === 0) {\n        var msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n        if (throwOnDegenerate === true) {\n          throw new Error(msg);\n        } else {\n          console.warn(msg);\n        }\n\n        return this.identity();\n      }\n\n      var detInv = 1 / det;\n      te[0] = t11 * detInv;\n      te[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n      te[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n      te[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n      te[4] = t12 * detInv;\n      te[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n      te[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n      te[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n      te[8] = t13 * detInv;\n      te[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n      te[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n      te[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n      te[12] = t14 * detInv;\n      te[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n      te[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n      te[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n      return this;\n    },\n    scale: function (v) {\n      var te = this.elements;\n      var x = v.x,\n          y = v.y,\n          z = v.z;\n      te[0] *= x;\n      te[4] *= y;\n      te[8] *= z;\n      te[1] *= x;\n      te[5] *= y;\n      te[9] *= z;\n      te[2] *= x;\n      te[6] *= y;\n      te[10] *= z;\n      te[3] *= x;\n      te[7] *= y;\n      te[11] *= z;\n      return this;\n    },\n    getMaxScaleOnAxis: function () {\n      var te = this.elements;\n      var scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n      var scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n      var scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n      return Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n    },\n    makeTranslation: function (x, y, z) {\n      this.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationX: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationY: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationZ: function (theta) {\n      var c = Math.cos(theta),\n          s = Math.sin(theta);\n      this.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeRotationAxis: function (axis, angle) {\n      // Based on http://www.gamedev.net/reference/articles/article1199.asp\n      var c = Math.cos(angle);\n      var s = Math.sin(angle);\n      var t = 1 - c;\n      var x = axis.x,\n          y = axis.y,\n          z = axis.z;\n      var tx = t * x,\n          ty = t * y;\n      this.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeScale: function (x, y, z) {\n      this.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n      return this;\n    },\n    makeShear: function (x, y, z) {\n      this.set(1, y, z, 0, x, 1, z, 0, x, y, 1, 0, 0, 0, 0, 1);\n      return this;\n    },\n    compose: function (position, quaternion, scale) {\n      var te = this.elements;\n      var x = quaternion._x,\n          y = quaternion._y,\n          z = quaternion._z,\n          w = quaternion._w;\n      var x2 = x + x,\n          y2 = y + y,\n          z2 = z + z;\n      var xx = x * x2,\n          xy = x * y2,\n          xz = x * z2;\n      var yy = y * y2,\n          yz = y * z2,\n          zz = z * z2;\n      var wx = w * x2,\n          wy = w * y2,\n          wz = w * z2;\n      var sx = scale.x,\n          sy = scale.y,\n          sz = scale.z;\n      te[0] = (1 - (yy + zz)) * sx;\n      te[1] = (xy + wz) * sx;\n      te[2] = (xz - wy) * sx;\n      te[3] = 0;\n      te[4] = (xy - wz) * sy;\n      te[5] = (1 - (xx + zz)) * sy;\n      te[6] = (yz + wx) * sy;\n      te[7] = 0;\n      te[8] = (xz + wy) * sz;\n      te[9] = (yz - wx) * sz;\n      te[10] = (1 - (xx + yy)) * sz;\n      te[11] = 0;\n      te[12] = position.x;\n      te[13] = position.y;\n      te[14] = position.z;\n      te[15] = 1;\n      return this;\n    },\n    decompose: function (position, quaternion, scale) {\n      var te = this.elements;\n\n      var sx = _v1.set(te[0], te[1], te[2]).length();\n\n      var sy = _v1.set(te[4], te[5], te[6]).length();\n\n      var sz = _v1.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n      var det = this.determinant();\n\n      if (det < 0) {\n        sx = -sx;\n      }\n\n      position.x = te[12];\n      position.y = te[13];\n      position.z = te[14]; // scale the rotation part\n\n      _m1.copy(this);\n\n      var invSX = 1 / sx;\n      var invSY = 1 / sy;\n      var invSZ = 1 / sz;\n      _m1.elements[0] *= invSX;\n      _m1.elements[1] *= invSX;\n      _m1.elements[2] *= invSX;\n      _m1.elements[4] *= invSY;\n      _m1.elements[5] *= invSY;\n      _m1.elements[6] *= invSY;\n      _m1.elements[8] *= invSZ;\n      _m1.elements[9] *= invSZ;\n      _m1.elements[10] *= invSZ;\n      quaternion.setFromRotationMatrix(_m1);\n      scale.x = sx;\n      scale.y = sy;\n      scale.z = sz;\n      return this;\n    },\n    makePerspective: function (left, right, top, bottom, near, far) {\n      if (far === undefined) {\n        console.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n      }\n\n      var te = this.elements;\n      var x = 2 * near / (right - left);\n      var y = 2 * near / (top - bottom);\n      var a = (right + left) / (right - left);\n      var b = (top + bottom) / (top - bottom);\n      var c = -(far + near) / (far - near);\n      var d = -2 * far * near / (far - near);\n      te[0] = x;\n      te[4] = 0;\n      te[8] = a;\n      te[12] = 0;\n      te[1] = 0;\n      te[5] = y;\n      te[9] = b;\n      te[13] = 0;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = c;\n      te[14] = d;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = -1;\n      te[15] = 0;\n      return this;\n    },\n    makeOrthographic: function (left, right, top, bottom, near, far) {\n      var te = this.elements;\n      var w = 1.0 / (right - left);\n      var h = 1.0 / (top - bottom);\n      var p = 1.0 / (far - near);\n      var x = (right + left) * w;\n      var y = (top + bottom) * h;\n      var z = (far + near) * p;\n      te[0] = 2 * w;\n      te[4] = 0;\n      te[8] = 0;\n      te[12] = -x;\n      te[1] = 0;\n      te[5] = 2 * h;\n      te[9] = 0;\n      te[13] = -y;\n      te[2] = 0;\n      te[6] = 0;\n      te[10] = -2 * p;\n      te[14] = -z;\n      te[3] = 0;\n      te[7] = 0;\n      te[11] = 0;\n      te[15] = 1;\n      return this;\n    },\n    equals: function (matrix) {\n      var te = this.elements;\n      var me = matrix.elements;\n\n      for (var i = 0; i < 16; i++) {\n        if (te[i] !== me[i]) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      for (var i = 0; i < 16; i++) {\n        this.elements[i] = array[i + offset];\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      var te = this.elements;\n      array[offset] = te[0];\n      array[offset + 1] = te[1];\n      array[offset + 2] = te[2];\n      array[offset + 3] = te[3];\n      array[offset + 4] = te[4];\n      array[offset + 5] = te[5];\n      array[offset + 6] = te[6];\n      array[offset + 7] = te[7];\n      array[offset + 8] = te[8];\n      array[offset + 9] = te[9];\n      array[offset + 10] = te[10];\n      array[offset + 11] = te[11];\n      array[offset + 12] = te[12];\n      array[offset + 13] = te[13];\n      array[offset + 14] = te[14];\n      array[offset + 15] = te[15];\n      return array;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author bhouston / http://clara.io\n   */\n\n  var _matrix = new Matrix4();\n\n  var _quaternion$1 = new Quaternion();\n\n  function Euler(x, y, z, order) {\n    this._x = x || 0;\n    this._y = y || 0;\n    this._z = z || 0;\n    this._order = order || Euler.DefaultOrder;\n  }\n\n  Euler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n  Euler.DefaultOrder = 'XYZ';\n  Object.defineProperties(Euler.prototype, {\n    x: {\n      get: function () {\n        return this._x;\n      },\n      set: function (value) {\n        this._x = value;\n\n        this._onChangeCallback();\n      }\n    },\n    y: {\n      get: function () {\n        return this._y;\n      },\n      set: function (value) {\n        this._y = value;\n\n        this._onChangeCallback();\n      }\n    },\n    z: {\n      get: function () {\n        return this._z;\n      },\n      set: function (value) {\n        this._z = value;\n\n        this._onChangeCallback();\n      }\n    },\n    order: {\n      get: function () {\n        return this._order;\n      },\n      set: function (value) {\n        this._order = value;\n\n        this._onChangeCallback();\n      }\n    }\n  });\n  Object.assign(Euler.prototype, {\n    isEuler: true,\n    set: function (x, y, z, order) {\n      this._x = x;\n      this._y = y;\n      this._z = z;\n      this._order = order || this._order;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this._x, this._y, this._z, this._order);\n    },\n    copy: function (euler) {\n      this._x = euler._x;\n      this._y = euler._y;\n      this._z = euler._z;\n      this._order = euler._order;\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    setFromRotationMatrix: function (m, order, update) {\n      var clamp = _Math.clamp; // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n      var te = m.elements;\n      var m11 = te[0],\n          m12 = te[4],\n          m13 = te[8];\n      var m21 = te[1],\n          m22 = te[5],\n          m23 = te[9];\n      var m31 = te[2],\n          m32 = te[6],\n          m33 = te[10];\n      order = order || this._order;\n\n      if (order === 'XYZ') {\n        this._y = Math.asin(clamp(m13, -1, 1));\n\n        if (Math.abs(m13) < 0.9999999) {\n          this._x = Math.atan2(-m23, m33);\n          this._z = Math.atan2(-m12, m11);\n        } else {\n          this._x = Math.atan2(m32, m22);\n          this._z = 0;\n        }\n      } else if (order === 'YXZ') {\n        this._x = Math.asin(-clamp(m23, -1, 1));\n\n        if (Math.abs(m23) < 0.9999999) {\n          this._y = Math.atan2(m13, m33);\n          this._z = Math.atan2(m21, m22);\n        } else {\n          this._y = Math.atan2(-m31, m11);\n          this._z = 0;\n        }\n      } else if (order === 'ZXY') {\n        this._x = Math.asin(clamp(m32, -1, 1));\n\n        if (Math.abs(m32) < 0.9999999) {\n          this._y = Math.atan2(-m31, m33);\n          this._z = Math.atan2(-m12, m22);\n        } else {\n          this._y = 0;\n          this._z = Math.atan2(m21, m11);\n        }\n      } else if (order === 'ZYX') {\n        this._y = Math.asin(-clamp(m31, -1, 1));\n\n        if (Math.abs(m31) < 0.9999999) {\n          this._x = Math.atan2(m32, m33);\n          this._z = Math.atan2(m21, m11);\n        } else {\n          this._x = 0;\n          this._z = Math.atan2(-m12, m22);\n        }\n      } else if (order === 'YZX') {\n        this._z = Math.asin(clamp(m21, -1, 1));\n\n        if (Math.abs(m21) < 0.9999999) {\n          this._x = Math.atan2(-m23, m22);\n          this._y = Math.atan2(-m31, m11);\n        } else {\n          this._x = 0;\n          this._y = Math.atan2(m13, m33);\n        }\n      } else if (order === 'XZY') {\n        this._z = Math.asin(-clamp(m12, -1, 1));\n\n        if (Math.abs(m12) < 0.9999999) {\n          this._x = Math.atan2(m32, m22);\n          this._y = Math.atan2(m13, m11);\n        } else {\n          this._x = Math.atan2(-m23, m33);\n          this._y = 0;\n        }\n      } else {\n        console.warn('THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order);\n      }\n\n      this._order = order;\n\n      if (update !== false) {\n        this._onChangeCallback();\n      }\n\n      return this;\n    },\n    setFromQuaternion: function (q, order, update) {\n      _matrix.makeRotationFromQuaternion(q);\n\n      return this.setFromRotationMatrix(_matrix, order, update);\n    },\n    setFromVector3: function (v, order) {\n      return this.set(v.x, v.y, v.z, order || this._order);\n    },\n    reorder: function (newOrder) {\n      // WARNING: this discards revolution information -bhouston\n      _quaternion$1.setFromEuler(this);\n\n      return this.setFromQuaternion(_quaternion$1, newOrder);\n    },\n    equals: function (euler) {\n      return euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n    },\n    fromArray: function (array) {\n      this._x = array[0];\n      this._y = array[1];\n      this._z = array[2];\n\n      if (array[3] !== undefined) {\n        this._order = array[3];\n      }\n\n      this._onChangeCallback();\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this._x;\n      array[offset + 1] = this._y;\n      array[offset + 2] = this._z;\n      array[offset + 3] = this._order;\n      return array;\n    },\n    toVector3: function (optionalResult) {\n      if (optionalResult) {\n        return optionalResult.set(this._x, this._y, this._z);\n      } else {\n        return new Vector3(this._x, this._y, this._z);\n      }\n    },\n    _onChange: function (callback) {\n      this._onChangeCallback = callback;\n      return this;\n    },\n    _onChangeCallback: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Layers() {\n    this.mask = 1 | 0;\n  }\n\n  Object.assign(Layers.prototype, {\n    set: function (channel) {\n      this.mask = 1 << channel | 0;\n    },\n    enable: function (channel) {\n      this.mask |= 1 << channel | 0;\n    },\n    enableAll: function () {\n      this.mask = 0xffffffff | 0;\n    },\n    toggle: function (channel) {\n      this.mask ^= 1 << channel | 0;\n    },\n    disable: function (channel) {\n      this.mask &= ~(1 << channel | 0);\n    },\n    disableAll: function () {\n      this.mask = 0;\n    },\n    test: function (layers) {\n      return (this.mask & layers.mask) !== 0;\n    }\n  });\n  var _object3DId = 0;\n\n  var _v1$1 = new Vector3();\n\n  var _q1 = new Quaternion();\n\n  var _m1$1 = new Matrix4();\n\n  var _target = new Vector3();\n\n  var _position = new Vector3();\n\n  var _scale = new Vector3();\n\n  var _quaternion$2 = new Quaternion();\n\n  var _xAxis = new Vector3(1, 0, 0);\n\n  var _yAxis = new Vector3(0, 1, 0);\n\n  var _zAxis = new Vector3(0, 0, 1);\n\n  var _addedEvent = {\n    type: 'added'\n  };\n  var _removedEvent = {\n    type: 'removed'\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author WestLangley / http://github.com/WestLangley\n   * @author elephantatwork / www.elephantatwork.ch\n   */\n\n  function Object3D() {\n    Object.defineProperty(this, 'id', {\n      value: _object3DId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Object3D';\n    this.parent = null;\n    this.children = [];\n    this.up = Object3D.DefaultUp.clone();\n    var position = new Vector3();\n    var rotation = new Euler();\n    var quaternion = new Quaternion();\n    var scale = new Vector3(1, 1, 1);\n\n    function onRotationChange() {\n      quaternion.setFromEuler(rotation, false);\n    }\n\n    function onQuaternionChange() {\n      rotation.setFromQuaternion(quaternion, undefined, false);\n    }\n\n    rotation._onChange(onRotationChange);\n\n    quaternion._onChange(onQuaternionChange);\n\n    Object.defineProperties(this, {\n      position: {\n        configurable: true,\n        enumerable: true,\n        value: position\n      },\n      rotation: {\n        configurable: true,\n        enumerable: true,\n        value: rotation\n      },\n      quaternion: {\n        configurable: true,\n        enumerable: true,\n        value: quaternion\n      },\n      scale: {\n        configurable: true,\n        enumerable: true,\n        value: scale\n      },\n      modelViewMatrix: {\n        value: new Matrix4()\n      },\n      normalMatrix: {\n        value: new Matrix3()\n      }\n    });\n    this.matrix = new Matrix4();\n    this.matrixWorld = new Matrix4();\n    this.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n    this.matrixWorldNeedsUpdate = false;\n    this.layers = new Layers();\n    this.visible = true;\n    this.castShadow = false;\n    this.receiveShadow = false;\n    this.frustumCulled = true;\n    this.renderOrder = 0;\n    this.userData = {};\n  }\n\n  Object3D.DefaultUp = new Vector3(0, 1, 0);\n  Object3D.DefaultMatrixAutoUpdate = true;\n  Object3D.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Object3D,\n    isObject3D: true,\n    onBeforeRender: function () {},\n    onAfterRender: function () {},\n    applyMatrix: function (matrix) {\n      if (this.matrixAutoUpdate) {\n        this.updateMatrix();\n      }\n\n      this.matrix.premultiply(matrix);\n      this.matrix.decompose(this.position, this.quaternion, this.scale);\n    },\n    applyQuaternion: function (q) {\n      this.quaternion.premultiply(q);\n      return this;\n    },\n    setRotationFromAxisAngle: function (axis, angle) {\n      // assumes axis is normalized\n      this.quaternion.setFromAxisAngle(axis, angle);\n    },\n    setRotationFromEuler: function (euler) {\n      this.quaternion.setFromEuler(euler, true);\n    },\n    setRotationFromMatrix: function (m) {\n      // assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n      this.quaternion.setFromRotationMatrix(m);\n    },\n    setRotationFromQuaternion: function (q) {\n      // assumes q is normalized\n      this.quaternion.copy(q);\n    },\n    rotateOnAxis: function (axis, angle) {\n      // rotate object on axis in object space\n      // axis is assumed to be normalized\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.multiply(_q1);\n      return this;\n    },\n    rotateOnWorldAxis: function (axis, angle) {\n      // rotate object on axis in world space\n      // axis is assumed to be normalized\n      // method assumes no rotated parent\n      _q1.setFromAxisAngle(axis, angle);\n\n      this.quaternion.premultiply(_q1);\n      return this;\n    },\n    rotateX: function (angle) {\n      return this.rotateOnAxis(_xAxis, angle);\n    },\n    rotateY: function (angle) {\n      return this.rotateOnAxis(_yAxis, angle);\n    },\n    rotateZ: function (angle) {\n      return this.rotateOnAxis(_zAxis, angle);\n    },\n    translateOnAxis: function (axis, distance) {\n      // translate object by distance along axis in object space\n      // axis is assumed to be normalized\n      _v1$1.copy(axis).applyQuaternion(this.quaternion);\n\n      this.position.add(_v1$1.multiplyScalar(distance));\n      return this;\n    },\n    translateX: function (distance) {\n      return this.translateOnAxis(_xAxis, distance);\n    },\n    translateY: function (distance) {\n      return this.translateOnAxis(_yAxis, distance);\n    },\n    translateZ: function (distance) {\n      return this.translateOnAxis(_zAxis, distance);\n    },\n    localToWorld: function (vector) {\n      return vector.applyMatrix4(this.matrixWorld);\n    },\n    worldToLocal: function (vector) {\n      return vector.applyMatrix4(_m1$1.getInverse(this.matrixWorld));\n    },\n    lookAt: function (x, y, z) {\n      // This method does not support objects having non-uniformly-scaled parent(s)\n      if (x.isVector3) {\n        _target.copy(x);\n      } else {\n        _target.set(x, y, z);\n      }\n\n      var parent = this.parent;\n      this.updateWorldMatrix(true, false);\n\n      _position.setFromMatrixPosition(this.matrixWorld);\n\n      if (this.isCamera || this.isLight) {\n        _m1$1.lookAt(_position, _target, this.up);\n      } else {\n        _m1$1.lookAt(_target, _position, this.up);\n      }\n\n      this.quaternion.setFromRotationMatrix(_m1$1);\n\n      if (parent) {\n        _m1$1.extractRotation(parent.matrixWorld);\n\n        _q1.setFromRotationMatrix(_m1$1);\n\n        this.quaternion.premultiply(_q1.inverse());\n      }\n    },\n    add: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.add(arguments[i]);\n        }\n\n        return this;\n      }\n\n      if (object === this) {\n        console.error(\"THREE.Object3D.add: object can't be added as a child of itself.\", object);\n        return this;\n      }\n\n      if (object && object.isObject3D) {\n        if (object.parent !== null) {\n          object.parent.remove(object);\n        }\n\n        object.parent = this;\n        this.children.push(object);\n        object.dispatchEvent(_addedEvent);\n      } else {\n        console.error(\"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object);\n      }\n\n      return this;\n    },\n    remove: function (object) {\n      if (arguments.length > 1) {\n        for (var i = 0; i < arguments.length; i++) {\n          this.remove(arguments[i]);\n        }\n\n        return this;\n      }\n\n      var index = this.children.indexOf(object);\n\n      if (index !== -1) {\n        object.parent = null;\n        this.children.splice(index, 1);\n        object.dispatchEvent(_removedEvent);\n      }\n\n      return this;\n    },\n    attach: function (object) {\n      // adds object as a child of this, while maintaining the object's world transform\n      this.updateWorldMatrix(true, false);\n\n      _m1$1.getInverse(this.matrixWorld);\n\n      if (object.parent !== null) {\n        object.parent.updateWorldMatrix(true, false);\n\n        _m1$1.multiply(object.parent.matrixWorld);\n      }\n\n      object.applyMatrix(_m1$1);\n      object.updateWorldMatrix(false, false);\n      this.add(object);\n      return this;\n    },\n    getObjectById: function (id) {\n      return this.getObjectByProperty('id', id);\n    },\n    getObjectByName: function (name) {\n      return this.getObjectByProperty('name', name);\n    },\n    getObjectByProperty: function (name, value) {\n      if (this[name] === value) {\n        return this;\n      }\n\n      for (var i = 0, l = this.children.length; i < l; i++) {\n        var child = this.children[i];\n        var object = child.getObjectByProperty(name, value);\n\n        if (object !== undefined) {\n          return object;\n        }\n      }\n\n      return undefined;\n    },\n    getWorldPosition: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldPosition() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      return target.setFromMatrixPosition(this.matrixWorld);\n    },\n    getWorldQuaternion: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n        target = new Quaternion();\n      }\n\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(_position, target, _scale);\n      return target;\n    },\n    getWorldScale: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldScale() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      this.matrixWorld.decompose(_position, _quaternion$2, target);\n      return target;\n    },\n    getWorldDirection: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Object3D: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(e[8], e[9], e[10]).normalize();\n    },\n    raycast: function () {},\n    traverse: function (callback) {\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverse(callback);\n      }\n    },\n    traverseVisible: function (callback) {\n      if (this.visible === false) {\n        return;\n      }\n\n      callback(this);\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].traverseVisible(callback);\n      }\n    },\n    traverseAncestors: function (callback) {\n      var parent = this.parent;\n\n      if (parent !== null) {\n        callback(parent);\n        parent.traverseAncestors(callback);\n      }\n    },\n    updateMatrix: function () {\n      this.matrix.compose(this.position, this.quaternion, this.scale);\n      this.matrixWorldNeedsUpdate = true;\n    },\n    updateMatrixWorld: function (force) {\n      if (this.matrixAutoUpdate) {\n        this.updateMatrix();\n      }\n\n      if (this.matrixWorldNeedsUpdate || force) {\n        if (this.parent === null) {\n          this.matrixWorld.copy(this.matrix);\n        } else {\n          this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n        }\n\n        this.matrixWorldNeedsUpdate = false;\n        force = true;\n      } // update children\n\n\n      var children = this.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        children[i].updateMatrixWorld(force);\n      }\n    },\n    updateWorldMatrix: function (updateParents, updateChildren) {\n      var parent = this.parent;\n\n      if (updateParents === true && parent !== null) {\n        parent.updateWorldMatrix(true, false);\n      }\n\n      if (this.matrixAutoUpdate) {\n        this.updateMatrix();\n      }\n\n      if (this.parent === null) {\n        this.matrixWorld.copy(this.matrix);\n      } else {\n        this.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n      } // update children\n\n\n      if (updateChildren === true) {\n        var children = this.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateWorldMatrix(false, true);\n        }\n      }\n    },\n    toJSON: function (meta) {\n      // meta is a string when called from JSON.stringify\n      var isRootObject = meta === undefined || typeof meta === 'string';\n      var output = {}; // meta is a hash used to collect geometries, materials.\n      // not providing it implies that this is the root object\n      // being serialized.\n\n      if (isRootObject) {\n        // initialize meta obj\n        meta = {\n          geometries: {},\n          materials: {},\n          textures: {},\n          images: {},\n          shapes: {}\n        };\n        output.metadata = {\n          version: 4.5,\n          type: 'Object',\n          generator: 'Object3D.toJSON'\n        };\n      } // standard Object3D serialization\n\n\n      var object = {};\n      object.uuid = this.uuid;\n      object.type = this.type;\n\n      if (this.name !== '') {\n        object.name = this.name;\n      }\n\n      if (this.castShadow === true) {\n        object.castShadow = true;\n      }\n\n      if (this.receiveShadow === true) {\n        object.receiveShadow = true;\n      }\n\n      if (this.visible === false) {\n        object.visible = false;\n      }\n\n      if (this.frustumCulled === false) {\n        object.frustumCulled = false;\n      }\n\n      if (this.renderOrder !== 0) {\n        object.renderOrder = this.renderOrder;\n      }\n\n      if (JSON.stringify(this.userData) !== '{}') {\n        object.userData = this.userData;\n      }\n\n      object.layers = this.layers.mask;\n      object.matrix = this.matrix.toArray();\n\n      if (this.matrixAutoUpdate === false) {\n        object.matrixAutoUpdate = false;\n      } // object specific properties\n\n\n      if (this.isMesh && this.drawMode !== TrianglesDrawMode) {\n        object.drawMode = this.drawMode;\n      }\n\n      if (this.isInstancedMesh) {\n        object.type = 'InstancedMesh';\n        object.count = this.count;\n        object.instanceMatrix = this.instanceMatrix.toJSON();\n      } //\n\n\n      function serialize(library, element) {\n        if (library[element.uuid] === undefined) {\n          library[element.uuid] = element.toJSON(meta);\n        }\n\n        return element.uuid;\n      }\n\n      if (this.isMesh || this.isLine || this.isPoints) {\n        object.geometry = serialize(meta.geometries, this.geometry);\n        var parameters = this.geometry.parameters;\n\n        if (parameters !== undefined && parameters.shapes !== undefined) {\n          var shapes = parameters.shapes;\n\n          if (Array.isArray(shapes)) {\n            for (var i = 0, l = shapes.length; i < l; i++) {\n              var shape = shapes[i];\n              serialize(meta.shapes, shape);\n            }\n          } else {\n            serialize(meta.shapes, shapes);\n          }\n        }\n      }\n\n      if (this.material !== undefined) {\n        if (Array.isArray(this.material)) {\n          var uuids = [];\n\n          for (var i = 0, l = this.material.length; i < l; i++) {\n            uuids.push(serialize(meta.materials, this.material[i]));\n          }\n\n          object.material = uuids;\n        } else {\n          object.material = serialize(meta.materials, this.material);\n        }\n      } //\n\n\n      if (this.children.length > 0) {\n        object.children = [];\n\n        for (var i = 0; i < this.children.length; i++) {\n          object.children.push(this.children[i].toJSON(meta).object);\n        }\n      }\n\n      if (isRootObject) {\n        var geometries = extractFromCache(meta.geometries);\n        var materials = extractFromCache(meta.materials);\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n        var shapes = extractFromCache(meta.shapes);\n\n        if (geometries.length > 0) {\n          output.geometries = geometries;\n        }\n\n        if (materials.length > 0) {\n          output.materials = materials;\n        }\n\n        if (textures.length > 0) {\n          output.textures = textures;\n        }\n\n        if (images.length > 0) {\n          output.images = images;\n        }\n\n        if (shapes.length > 0) {\n          output.shapes = shapes;\n        }\n      }\n\n      output.object = object;\n      return output; // extract data from the cache hash\n      // remove metadata on each item\n      // and return as array\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n    },\n    clone: function (recursive) {\n      return new this.constructor().copy(this, recursive);\n    },\n    copy: function (source, recursive) {\n      if (recursive === undefined) {\n        recursive = true;\n      }\n\n      this.name = source.name;\n      this.up.copy(source.up);\n      this.position.copy(source.position);\n      this.quaternion.copy(source.quaternion);\n      this.scale.copy(source.scale);\n      this.matrix.copy(source.matrix);\n      this.matrixWorld.copy(source.matrixWorld);\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      this.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n      this.layers.mask = source.layers.mask;\n      this.visible = source.visible;\n      this.castShadow = source.castShadow;\n      this.receiveShadow = source.receiveShadow;\n      this.frustumCulled = source.frustumCulled;\n      this.renderOrder = source.renderOrder;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n\n      if (recursive === true) {\n        for (var i = 0; i < source.children.length; i++) {\n          var child = source.children[i];\n          this.add(child.clone());\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Scene() {\n    Object3D.call(this);\n    this.type = 'Scene';\n    this.background = null;\n    this.fog = null;\n    this.overrideMaterial = null;\n    this.autoUpdate = true; // checked by the renderer\n\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: this\n      })); // eslint-disable-line no-undef\n\n    }\n  }\n\n  Scene.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Scene,\n    isScene: true,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n\n      if (source.background !== null) {\n        this.background = source.background.clone();\n      }\n\n      if (source.fog !== null) {\n        this.fog = source.fog.clone();\n      }\n\n      if (source.overrideMaterial !== null) {\n        this.overrideMaterial = source.overrideMaterial.clone();\n      }\n\n      this.autoUpdate = source.autoUpdate;\n      this.matrixAutoUpdate = source.matrixAutoUpdate;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n\n      if (this.background !== null) {\n        data.object.background = this.background.toJSON(meta);\n      }\n\n      if (this.fog !== null) {\n        data.object.fog = this.fog.toJSON();\n      }\n\n      return data;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  var _points = [new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3(), new Vector3()];\n\n  var _vector$2 = new Vector3();\n\n  var _box = new Box3(); // triangle centered vertices\n\n\n  var _v0 = new Vector3();\n\n  var _v1$2 = new Vector3();\n\n  var _v2 = new Vector3(); // triangle edge vectors\n\n\n  var _f0 = new Vector3();\n\n  var _f1 = new Vector3();\n\n  var _f2 = new Vector3();\n\n  var _center = new Vector3();\n\n  var _extents = new Vector3();\n\n  var _triangleNormal = new Vector3();\n\n  var _testAxis = new Vector3();\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Box3(min, max) {\n    this.min = min !== undefined ? min : new Vector3(+Infinity, +Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector3(-Infinity, -Infinity, -Infinity);\n  }\n\n  Object.assign(Box3.prototype, {\n    isBox3: true,\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromArray: function (array) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = array.length; i < l; i += 3) {\n        var x = array[i];\n        var y = array[i + 1];\n        var z = array[i + 2];\n\n        if (x < minX) {\n          minX = x;\n        }\n\n        if (y < minY) {\n          minY = y;\n        }\n\n        if (z < minZ) {\n          minZ = z;\n        }\n\n        if (x > maxX) {\n          maxX = x;\n        }\n\n        if (y > maxY) {\n          maxY = y;\n        }\n\n        if (z > maxZ) {\n          maxZ = z;\n        }\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromBufferAttribute: function (attribute) {\n      var minX = +Infinity;\n      var minY = +Infinity;\n      var minZ = +Infinity;\n      var maxX = -Infinity;\n      var maxY = -Infinity;\n      var maxZ = -Infinity;\n\n      for (var i = 0, l = attribute.count; i < l; i++) {\n        var x = attribute.getX(i);\n        var y = attribute.getY(i);\n        var z = attribute.getZ(i);\n\n        if (x < minX) {\n          minX = x;\n        }\n\n        if (y < minY) {\n          minY = y;\n        }\n\n        if (z < minZ) {\n          minZ = z;\n        }\n\n        if (x > maxX) {\n          maxX = x;\n        }\n\n        if (y > maxY) {\n          maxY = y;\n        }\n\n        if (z > maxZ) {\n          maxZ = z;\n        }\n      }\n\n      this.min.set(minX, minY, minZ);\n      this.max.set(maxX, maxY, maxZ);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function (center, size) {\n      var halfSize = _vector$2.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    },\n    setFromObject: function (object) {\n      this.makeEmpty();\n      return this.expandByObject(object);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = this.min.z = +Infinity;\n      this.max.x = this.max.y = this.max.z = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getSize() target is now required');\n        target = new Vector3();\n      }\n\n      return this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    expandByObject: function (object) {\n      // Computes the world-axis-aligned bounding box of an object (including its children),\n      // accounting for both the object's, and children's, world transforms\n      object.updateWorldMatrix(false, false);\n      var geometry = object.geometry;\n\n      if (geometry !== undefined) {\n        if (geometry.boundingBox === null) {\n          geometry.computeBoundingBox();\n        }\n\n        _box.copy(geometry.boundingBox);\n\n        _box.applyMatrix4(object.matrixWorld);\n\n        this.expandByPoint(_box.min);\n        this.expandByPoint(_box.max);\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        this.expandByObject(children[i]);\n      }\n\n      return this;\n    },\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n    },\n    getParameter: function (point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box3: .getParameter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n    },\n    intersectsBox: function (box) {\n      // using 6 splitting planes to rule out intersections.\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n    },\n    intersectsSphere: function (sphere) {\n      // Find the point on the AABB closest to the sphere center.\n      this.clampPoint(sphere.center, _vector$2); // If that point is inside the sphere, the AABB and sphere intersect.\n\n      return _vector$2.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n    },\n    intersectsPlane: function (plane) {\n      // We compute the minimum and maximum dot product values. If those values\n      // are on the same side (back or front) of the plane, then there is no intersection.\n      var min, max;\n\n      if (plane.normal.x > 0) {\n        min = plane.normal.x * this.min.x;\n        max = plane.normal.x * this.max.x;\n      } else {\n        min = plane.normal.x * this.max.x;\n        max = plane.normal.x * this.min.x;\n      }\n\n      if (plane.normal.y > 0) {\n        min += plane.normal.y * this.min.y;\n        max += plane.normal.y * this.max.y;\n      } else {\n        min += plane.normal.y * this.max.y;\n        max += plane.normal.y * this.min.y;\n      }\n\n      if (plane.normal.z > 0) {\n        min += plane.normal.z * this.min.z;\n        max += plane.normal.z * this.max.z;\n      } else {\n        min += plane.normal.z * this.max.z;\n        max += plane.normal.z * this.min.z;\n      }\n\n      return min <= -plane.constant && max >= -plane.constant;\n    },\n    intersectsTriangle: function (triangle) {\n      if (this.isEmpty()) {\n        return false;\n      } // compute box center and extents\n\n\n      this.getCenter(_center);\n\n      _extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n      _v0.subVectors(triangle.a, _center);\n\n      _v1$2.subVectors(triangle.b, _center);\n\n      _v2.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n      _f0.subVectors(_v1$2, _v0);\n\n      _f1.subVectors(_v2, _v1$2);\n\n      _f2.subVectors(_v0, _v2); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n      // make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n      // axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n      var axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n      if (!satForAxes(axes, _v0, _v1$2, _v2, _extents)) {\n        return false;\n      } // test 3 face normals from the aabb\n\n\n      axes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n      if (!satForAxes(axes, _v0, _v1$2, _v2, _extents)) {\n        return false;\n      } // finally testing the face normal of the triangle\n      // use already existing triangle edge vectors here\n\n\n      _triangleNormal.crossVectors(_f0, _f1);\n\n      axes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n      return satForAxes(axes, _v0, _v1$2, _v2, _extents);\n    },\n    clampPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box3: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function (point) {\n      var clampedPoint = _vector$2.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    },\n    getBoundingSphere: function (target) {\n      if (target === undefined) {\n        console.error('THREE.Box3: .getBoundingSphere() target is now required'); //target = new Sphere(); // removed to avoid cyclic dependency\n      }\n\n      this.getCenter(target.center);\n      target.radius = this.getSize(_vector$2).length() * 0.5;\n      return target;\n    },\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n      if (this.isEmpty()) {\n        this.makeEmpty();\n      }\n\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    applyMatrix4: function (matrix) {\n      // transform of empty box is an empty box.\n      if (this.isEmpty()) {\n        return this;\n      } // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\n      _points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n      _points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n      _points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n      _points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n      _points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n      _points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n      _points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n      _points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n      this.setFromPoints(_points);\n      return this;\n    },\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n\n  function satForAxes(axes, v0, v1, v2, extents) {\n    var i, j;\n\n    for (i = 0, j = axes.length - 3; i <= j; i += 3) {\n      _testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n      var r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n      var p0 = v0.dot(_testAxis);\n      var p1 = v1.dot(_testAxis);\n      var p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n      if (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n        // points of the projected triangle are outside the projected half-length of the aabb\n        // the axis is seperating and we can exit\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  var _box$1 = new Box3();\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Sphere(center, radius) {\n    this.center = center !== undefined ? center : new Vector3();\n    this.radius = radius !== undefined ? radius : 0;\n  }\n\n  Object.assign(Sphere.prototype, {\n    set: function (center, radius) {\n      this.center.copy(center);\n      this.radius = radius;\n      return this;\n    },\n    setFromPoints: function (points, optionalCenter) {\n      var center = this.center;\n\n      if (optionalCenter !== undefined) {\n        center.copy(optionalCenter);\n      } else {\n        _box$1.setFromPoints(points).getCenter(center);\n      }\n\n      var maxRadiusSq = 0;\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n      }\n\n      this.radius = Math.sqrt(maxRadiusSq);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (sphere) {\n      this.center.copy(sphere.center);\n      this.radius = sphere.radius;\n      return this;\n    },\n    empty: function () {\n      return this.radius <= 0;\n    },\n    containsPoint: function (point) {\n      return point.distanceToSquared(this.center) <= this.radius * this.radius;\n    },\n    distanceToPoint: function (point) {\n      return point.distanceTo(this.center) - this.radius;\n    },\n    intersectsSphere: function (sphere) {\n      var radiusSum = this.radius + sphere.radius;\n      return sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsSphere(this);\n    },\n    intersectsPlane: function (plane) {\n      return Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n    },\n    clampPoint: function (point, target) {\n      var deltaLengthSq = this.center.distanceToSquared(point);\n\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .clampPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.copy(point);\n\n      if (deltaLengthSq > this.radius * this.radius) {\n        target.sub(this.center).normalize();\n        target.multiplyScalar(this.radius).add(this.center);\n      }\n\n      return target;\n    },\n    getBoundingBox: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Sphere: .getBoundingBox() target is now required');\n        target = new Box3();\n      }\n\n      target.set(this.center, this.center);\n      target.expandByScalar(this.radius);\n      return target;\n    },\n    applyMatrix4: function (matrix) {\n      this.center.applyMatrix4(matrix);\n      this.radius = this.radius * matrix.getMaxScaleOnAxis();\n      return this;\n    },\n    translate: function (offset) {\n      this.center.add(offset);\n      return this;\n    },\n    equals: function (sphere) {\n      return sphere.center.equals(this.center) && sphere.radius === this.radius;\n    }\n  });\n\n  var _vector$3 = new Vector3();\n\n  var _segCenter = new Vector3();\n\n  var _segDir = new Vector3();\n\n  var _diff = new Vector3();\n\n  var _edge1 = new Vector3();\n\n  var _edge2 = new Vector3();\n\n  var _normal = new Vector3();\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n\n  function Ray(origin, direction) {\n    this.origin = origin !== undefined ? origin : new Vector3();\n    this.direction = direction !== undefined ? direction : new Vector3();\n  }\n\n  Object.assign(Ray.prototype, {\n    set: function (origin, direction) {\n      this.origin.copy(origin);\n      this.direction.copy(direction);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (ray) {\n      this.origin.copy(ray.origin);\n      this.direction.copy(ray.direction);\n      return this;\n    },\n    at: function (t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.direction).multiplyScalar(t).add(this.origin);\n    },\n    lookAt: function (v) {\n      this.direction.copy(v).sub(this.origin).normalize();\n      return this;\n    },\n    recast: function (t) {\n      this.origin.copy(this.at(t, _vector$3));\n      return this;\n    },\n    closestPointToPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Ray: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(point, this.origin);\n      var directionDistance = target.dot(this.direction);\n\n      if (directionDistance < 0) {\n        return target.copy(this.origin);\n      }\n\n      return target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n    },\n    distanceToPoint: function (point) {\n      return Math.sqrt(this.distanceSqToPoint(point));\n    },\n    distanceSqToPoint: function (point) {\n      var directionDistance = _vector$3.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n      if (directionDistance < 0) {\n        return this.origin.distanceToSquared(point);\n      }\n\n      _vector$3.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n      return _vector$3.distanceToSquared(point);\n    },\n    distanceSqToSegment: function (v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n      // It returns the min distance between the ray and the segment\n      // defined by v0 and v1\n      // It can also set two optional targets :\n      // - The closest point on the ray\n      // - The closest point on the segment\n      _segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n      _segDir.copy(v1).sub(v0).normalize();\n\n      _diff.copy(this.origin).sub(_segCenter);\n\n      var segExtent = v0.distanceTo(v1) * 0.5;\n      var a01 = -this.direction.dot(_segDir);\n\n      var b0 = _diff.dot(this.direction);\n\n      var b1 = -_diff.dot(_segDir);\n\n      var c = _diff.lengthSq();\n\n      var det = Math.abs(1 - a01 * a01);\n      var s0, s1, sqrDist, extDet;\n\n      if (det > 0) {\n        // The ray and segment are not parallel.\n        s0 = a01 * b1 - b0;\n        s1 = a01 * b0 - b1;\n        extDet = segExtent * det;\n\n        if (s0 >= 0) {\n          if (s1 >= -extDet) {\n            if (s1 <= extDet) {\n              // region 0\n              // Minimum at interior points of ray and segment.\n              var invDet = 1 / det;\n              s0 *= invDet;\n              s1 *= invDet;\n              sqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n            } else {\n              // region 1\n              s1 = segExtent;\n              s0 = Math.max(0, -(a01 * s1 + b0));\n              sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n            }\n          } else {\n            // region 5\n            s1 = -segExtent;\n            s0 = Math.max(0, -(a01 * s1 + b0));\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        } else {\n          if (s1 <= -extDet) {\n            // region 4\n            s0 = Math.max(0, -(-a01 * segExtent + b0));\n            s1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          } else if (s1 <= extDet) {\n            // region 3\n            s0 = 0;\n            s1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = s1 * (s1 + 2 * b1) + c;\n          } else {\n            // region 2\n            s0 = Math.max(0, -(a01 * segExtent + b0));\n            s1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n            sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n          }\n        }\n      } else {\n        // Ray and segment are parallel.\n        s1 = a01 > 0 ? -segExtent : segExtent;\n        s0 = Math.max(0, -(a01 * s1 + b0));\n        sqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n      }\n\n      if (optionalPointOnRay) {\n        optionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n      }\n\n      if (optionalPointOnSegment) {\n        optionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n      }\n\n      return sqrDist;\n    },\n    intersectSphere: function (sphere, target) {\n      _vector$3.subVectors(sphere.center, this.origin);\n\n      var tca = _vector$3.dot(this.direction);\n\n      var d2 = _vector$3.dot(_vector$3) - tca * tca;\n      var radius2 = sphere.radius * sphere.radius;\n\n      if (d2 > radius2) {\n        return null;\n      }\n\n      var thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n      var t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n      var t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n      if (t0 < 0 && t1 < 0) {\n        return null;\n      } // test to see if t0 is behind the ray:\n      // if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n      // in order to always return an intersect point that is in front of the ray.\n\n\n      if (t0 < 0) {\n        return this.at(t1, target);\n      } // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\n      return this.at(t0, target);\n    },\n    intersectsSphere: function (sphere) {\n      return this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n    },\n    distanceToPlane: function (plane) {\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (plane.distanceToPoint(this.origin) === 0) {\n          return 0;\n        } // Null is preferable to undefined since undefined means.... it is undefined\n\n\n        return null;\n      }\n\n      var t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n      return t >= 0 ? t : null;\n    },\n    intersectPlane: function (plane, target) {\n      var t = this.distanceToPlane(plane);\n\n      if (t === null) {\n        return null;\n      }\n\n      return this.at(t, target);\n    },\n    intersectsPlane: function (plane) {\n      // check if the ray lies on the plane first\n      var distToPoint = plane.distanceToPoint(this.origin);\n\n      if (distToPoint === 0) {\n        return true;\n      }\n\n      var denominator = plane.normal.dot(this.direction);\n\n      if (denominator * distToPoint < 0) {\n        return true;\n      } // ray origin is behind the plane (and is pointing behind it)\n\n\n      return false;\n    },\n    intersectBox: function (box, target) {\n      var tmin, tmax, tymin, tymax, tzmin, tzmax;\n      var invdirx = 1 / this.direction.x,\n          invdiry = 1 / this.direction.y,\n          invdirz = 1 / this.direction.z;\n      var origin = this.origin;\n\n      if (invdirx >= 0) {\n        tmin = (box.min.x - origin.x) * invdirx;\n        tmax = (box.max.x - origin.x) * invdirx;\n      } else {\n        tmin = (box.max.x - origin.x) * invdirx;\n        tmax = (box.min.x - origin.x) * invdirx;\n      }\n\n      if (invdiry >= 0) {\n        tymin = (box.min.y - origin.y) * invdiry;\n        tymax = (box.max.y - origin.y) * invdiry;\n      } else {\n        tymin = (box.max.y - origin.y) * invdiry;\n        tymax = (box.min.y - origin.y) * invdiry;\n      }\n\n      if (tmin > tymax || tymin > tmax) {\n        return null;\n      } // These lines also handle the case where tmin or tmax is NaN\n      // (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\n      if (tymin > tmin || tmin !== tmin) {\n        tmin = tymin;\n      }\n\n      if (tymax < tmax || tmax !== tmax) {\n        tmax = tymax;\n      }\n\n      if (invdirz >= 0) {\n        tzmin = (box.min.z - origin.z) * invdirz;\n        tzmax = (box.max.z - origin.z) * invdirz;\n      } else {\n        tzmin = (box.max.z - origin.z) * invdirz;\n        tzmax = (box.min.z - origin.z) * invdirz;\n      }\n\n      if (tmin > tzmax || tzmin > tmax) {\n        return null;\n      }\n\n      if (tzmin > tmin || tmin !== tmin) {\n        tmin = tzmin;\n      }\n\n      if (tzmax < tmax || tmax !== tmax) {\n        tmax = tzmax;\n      } //return point closest to the ray (positive side)\n\n\n      if (tmax < 0) {\n        return null;\n      }\n\n      return this.at(tmin >= 0 ? tmin : tmax, target);\n    },\n    intersectsBox: function (box) {\n      return this.intersectBox(box, _vector$3) !== null;\n    },\n    intersectTriangle: function (a, b, c, backfaceCulling, target) {\n      // Compute the offset origin, edges, and normal.\n      // from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n      _edge1.subVectors(b, a);\n\n      _edge2.subVectors(c, a);\n\n      _normal.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n      // E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n      //   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n      //   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n      //   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n      var DdN = this.direction.dot(_normal);\n      var sign;\n\n      if (DdN > 0) {\n        if (backfaceCulling) {\n          return null;\n        }\n\n        sign = 1;\n      } else if (DdN < 0) {\n        sign = -1;\n        DdN = -DdN;\n      } else {\n        return null;\n      }\n\n      _diff.subVectors(this.origin, a);\n\n      var DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n      if (DdQxE2 < 0) {\n        return null;\n      }\n\n      var DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n      if (DdE1xQ < 0) {\n        return null;\n      } // b1+b2 > 1, no intersection\n\n\n      if (DdQxE2 + DdE1xQ > DdN) {\n        return null;\n      } // Line intersects triangle, check if ray does.\n\n\n      var QdN = -sign * _diff.dot(_normal); // t < 0, no intersection\n\n\n      if (QdN < 0) {\n        return null;\n      } // Ray intersects triangle.\n\n\n      return this.at(QdN / DdN, target);\n    },\n    applyMatrix4: function (matrix4) {\n      this.origin.applyMatrix4(matrix4);\n      this.direction.transformDirection(matrix4);\n      return this;\n    },\n    equals: function (ray) {\n      return ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  var _vector1 = new Vector3();\n\n  var _vector2 = new Vector3();\n\n  var _normalMatrix = new Matrix3();\n\n  function Plane(normal, constant) {\n    // normal is assumed to be normalized\n    this.normal = normal !== undefined ? normal : new Vector3(1, 0, 0);\n    this.constant = constant !== undefined ? constant : 0;\n  }\n\n  Object.assign(Plane.prototype, {\n    isPlane: true,\n    set: function (normal, constant) {\n      this.normal.copy(normal);\n      this.constant = constant;\n      return this;\n    },\n    setComponents: function (x, y, z, w) {\n      this.normal.set(x, y, z);\n      this.constant = w;\n      return this;\n    },\n    setFromNormalAndCoplanarPoint: function (normal, point) {\n      this.normal.copy(normal);\n      this.constant = -point.dot(this.normal);\n      return this;\n    },\n    setFromCoplanarPoints: function (a, b, c) {\n      var normal = _vector1.subVectors(c, b).cross(_vector2.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n      this.setFromNormalAndCoplanarPoint(normal, a);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (plane) {\n      this.normal.copy(plane.normal);\n      this.constant = plane.constant;\n      return this;\n    },\n    normalize: function () {\n      // Note: will lead to a divide by zero if the plane is invalid.\n      var inverseNormalLength = 1.0 / this.normal.length();\n      this.normal.multiplyScalar(inverseNormalLength);\n      this.constant *= inverseNormalLength;\n      return this;\n    },\n    negate: function () {\n      this.constant *= -1;\n      this.normal.negate();\n      return this;\n    },\n    distanceToPoint: function (point) {\n      return this.normal.dot(point) + this.constant;\n    },\n    distanceToSphere: function (sphere) {\n      return this.distanceToPoint(sphere.center) - sphere.radius;\n    },\n    projectPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .projectPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n    },\n    intersectLine: function (line, target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .intersectLine() target is now required');\n        target = new Vector3();\n      }\n\n      var direction = line.delta(_vector1);\n      var denominator = this.normal.dot(direction);\n\n      if (denominator === 0) {\n        // line is coplanar, return origin\n        if (this.distanceToPoint(line.start) === 0) {\n          return target.copy(line.start);\n        } // Unsure if this is the correct method to handle this case.\n\n\n        return undefined;\n      }\n\n      var t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n      if (t < 0 || t > 1) {\n        return undefined;\n      }\n\n      return target.copy(direction).multiplyScalar(t).add(line.start);\n    },\n    intersectsLine: function (line) {\n      // Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n      var startSign = this.distanceToPoint(line.start);\n      var endSign = this.distanceToPoint(line.end);\n      return startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n    },\n    intersectsBox: function (box) {\n      return box.intersectsPlane(this);\n    },\n    intersectsSphere: function (sphere) {\n      return sphere.intersectsPlane(this);\n    },\n    coplanarPoint: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Plane: .coplanarPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.copy(this.normal).multiplyScalar(-this.constant);\n    },\n    applyMatrix4: function (matrix, optionalNormalMatrix) {\n      var normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n      var referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n      var normal = this.normal.applyMatrix3(normalMatrix).normalize();\n      this.constant = -referencePoint.dot(normal);\n      return this;\n    },\n    translate: function (offset) {\n      this.constant -= offset.dot(this.normal);\n      return this;\n    },\n    equals: function (plane) {\n      return plane.normal.equals(this.normal) && plane.constant === this.constant;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _v0$1 = new Vector3();\n\n  var _v1$3 = new Vector3();\n\n  var _v2$1 = new Vector3();\n\n  var _v3 = new Vector3();\n\n  var _vab = new Vector3();\n\n  var _vac = new Vector3();\n\n  var _vbc = new Vector3();\n\n  var _vap = new Vector3();\n\n  var _vbp = new Vector3();\n\n  var _vcp = new Vector3();\n\n  function Triangle(a, b, c) {\n    this.a = a !== undefined ? a : new Vector3();\n    this.b = b !== undefined ? b : new Vector3();\n    this.c = c !== undefined ? c : new Vector3();\n  }\n\n  Object.assign(Triangle, {\n    getNormal: function (a, b, c, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getNormal() target is now required');\n        target = new Vector3();\n      }\n\n      target.subVectors(c, b);\n\n      _v0$1.subVectors(a, b);\n\n      target.cross(_v0$1);\n      var targetLengthSq = target.lengthSq();\n\n      if (targetLengthSq > 0) {\n        return target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n      }\n\n      return target.set(0, 0, 0);\n    },\n    // static/instance method to calculate barycentric coordinates\n    // based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n    getBarycoord: function (point, a, b, c, target) {\n      _v0$1.subVectors(c, a);\n\n      _v1$3.subVectors(b, a);\n\n      _v2$1.subVectors(point, a);\n\n      var dot00 = _v0$1.dot(_v0$1);\n\n      var dot01 = _v0$1.dot(_v1$3);\n\n      var dot02 = _v0$1.dot(_v2$1);\n\n      var dot11 = _v1$3.dot(_v1$3);\n\n      var dot12 = _v1$3.dot(_v2$1);\n\n      var denom = dot00 * dot11 - dot01 * dot01;\n\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getBarycoord() target is now required');\n        target = new Vector3();\n      } // collinear or singular triangle\n\n\n      if (denom === 0) {\n        // arbitrary location outside of triangle?\n        // not sure if this is the best idea, maybe should be returning undefined\n        return target.set(-2, -1, -1);\n      }\n\n      var invDenom = 1 / denom;\n      var u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n      var v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n      return target.set(1 - u - v, v, u);\n    },\n    containsPoint: function (point, a, b, c) {\n      Triangle.getBarycoord(point, a, b, c, _v3);\n      return _v3.x >= 0 && _v3.y >= 0 && _v3.x + _v3.y <= 1;\n    },\n    getUV: function (point, p1, p2, p3, uv1, uv2, uv3, target) {\n      this.getBarycoord(point, p1, p2, p3, _v3);\n      target.set(0, 0);\n      target.addScaledVector(uv1, _v3.x);\n      target.addScaledVector(uv2, _v3.y);\n      target.addScaledVector(uv3, _v3.z);\n      return target;\n    },\n    isFrontFacing: function (a, b, c, direction) {\n      _v0$1.subVectors(c, b);\n\n      _v1$3.subVectors(a, b); // strictly front facing\n\n\n      return _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n    }\n  });\n  Object.assign(Triangle.prototype, {\n    set: function (a, b, c) {\n      this.a.copy(a);\n      this.b.copy(b);\n      this.c.copy(c);\n      return this;\n    },\n    setFromPointsAndIndices: function (points, i0, i1, i2) {\n      this.a.copy(points[i0]);\n      this.b.copy(points[i1]);\n      this.c.copy(points[i2]);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (triangle) {\n      this.a.copy(triangle.a);\n      this.b.copy(triangle.b);\n      this.c.copy(triangle.c);\n      return this;\n    },\n    getArea: function () {\n      _v0$1.subVectors(this.c, this.b);\n\n      _v1$3.subVectors(this.a, this.b);\n\n      return _v0$1.cross(_v1$3).length() * 0.5;\n    },\n    getMidpoint: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getMidpoint() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n    },\n    getNormal: function (target) {\n      return Triangle.getNormal(this.a, this.b, this.c, target);\n    },\n    getPlane: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .getPlane() target is now required');\n        target = new Plane();\n      }\n\n      return target.setFromCoplanarPoints(this.a, this.b, this.c);\n    },\n    getBarycoord: function (point, target) {\n      return Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n    },\n    getUV: function (point, uv1, uv2, uv3, target) {\n      return Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n    },\n    containsPoint: function (point) {\n      return Triangle.containsPoint(point, this.a, this.b, this.c);\n    },\n    isFrontFacing: function (direction) {\n      return Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n    },\n    intersectsBox: function (box) {\n      return box.intersectsTriangle(this);\n    },\n    closestPointToPoint: function (p, target) {\n      if (target === undefined) {\n        console.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      var a = this.a,\n          b = this.b,\n          c = this.c;\n      var v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n      // published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n      // under the accompanying license; see chapter 5.1.5 for detailed explanation.\n      // basically, we're distinguishing which of the voronoi regions of the triangle\n      // the point lies in with the minimum amount of redundant computation.\n\n      _vab.subVectors(b, a);\n\n      _vac.subVectors(c, a);\n\n      _vap.subVectors(p, a);\n\n      var d1 = _vab.dot(_vap);\n\n      var d2 = _vac.dot(_vap);\n\n      if (d1 <= 0 && d2 <= 0) {\n        // vertex region of A; barycentric coords (1, 0, 0)\n        return target.copy(a);\n      }\n\n      _vbp.subVectors(p, b);\n\n      var d3 = _vab.dot(_vbp);\n\n      var d4 = _vac.dot(_vbp);\n\n      if (d3 >= 0 && d4 <= d3) {\n        // vertex region of B; barycentric coords (0, 1, 0)\n        return target.copy(b);\n      }\n\n      var vc = d1 * d4 - d3 * d2;\n\n      if (vc <= 0 && d1 >= 0 && d3 <= 0) {\n        v = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n        return target.copy(a).addScaledVector(_vab, v);\n      }\n\n      _vcp.subVectors(p, c);\n\n      var d5 = _vab.dot(_vcp);\n\n      var d6 = _vac.dot(_vcp);\n\n      if (d6 >= 0 && d5 <= d6) {\n        // vertex region of C; barycentric coords (0, 0, 1)\n        return target.copy(c);\n      }\n\n      var vb = d5 * d2 - d1 * d6;\n\n      if (vb <= 0 && d2 >= 0 && d6 <= 0) {\n        w = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n        return target.copy(a).addScaledVector(_vac, w);\n      }\n\n      var va = d3 * d6 - d5 * d4;\n\n      if (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n        _vbc.subVectors(c, b);\n\n        w = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n        return target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n      } // face region\n\n\n      var denom = 1 / (va + vb + vc); // u = va * denom\n\n      v = vb * denom;\n      w = vc * denom;\n      return target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n    },\n    equals: function (triangle) {\n      return triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _colorKeywords = {\n    'aliceblue': 0xF0F8FF,\n    'antiquewhite': 0xFAEBD7,\n    'aqua': 0x00FFFF,\n    'aquamarine': 0x7FFFD4,\n    'azure': 0xF0FFFF,\n    'beige': 0xF5F5DC,\n    'bisque': 0xFFE4C4,\n    'black': 0x000000,\n    'blanchedalmond': 0xFFEBCD,\n    'blue': 0x0000FF,\n    'blueviolet': 0x8A2BE2,\n    'brown': 0xA52A2A,\n    'burlywood': 0xDEB887,\n    'cadetblue': 0x5F9EA0,\n    'chartreuse': 0x7FFF00,\n    'chocolate': 0xD2691E,\n    'coral': 0xFF7F50,\n    'cornflowerblue': 0x6495ED,\n    'cornsilk': 0xFFF8DC,\n    'crimson': 0xDC143C,\n    'cyan': 0x00FFFF,\n    'darkblue': 0x00008B,\n    'darkcyan': 0x008B8B,\n    'darkgoldenrod': 0xB8860B,\n    'darkgray': 0xA9A9A9,\n    'darkgreen': 0x006400,\n    'darkgrey': 0xA9A9A9,\n    'darkkhaki': 0xBDB76B,\n    'darkmagenta': 0x8B008B,\n    'darkolivegreen': 0x556B2F,\n    'darkorange': 0xFF8C00,\n    'darkorchid': 0x9932CC,\n    'darkred': 0x8B0000,\n    'darksalmon': 0xE9967A,\n    'darkseagreen': 0x8FBC8F,\n    'darkslateblue': 0x483D8B,\n    'darkslategray': 0x2F4F4F,\n    'darkslategrey': 0x2F4F4F,\n    'darkturquoise': 0x00CED1,\n    'darkviolet': 0x9400D3,\n    'deeppink': 0xFF1493,\n    'deepskyblue': 0x00BFFF,\n    'dimgray': 0x696969,\n    'dimgrey': 0x696969,\n    'dodgerblue': 0x1E90FF,\n    'firebrick': 0xB22222,\n    'floralwhite': 0xFFFAF0,\n    'forestgreen': 0x228B22,\n    'fuchsia': 0xFF00FF,\n    'gainsboro': 0xDCDCDC,\n    'ghostwhite': 0xF8F8FF,\n    'gold': 0xFFD700,\n    'goldenrod': 0xDAA520,\n    'gray': 0x808080,\n    'green': 0x008000,\n    'greenyellow': 0xADFF2F,\n    'grey': 0x808080,\n    'honeydew': 0xF0FFF0,\n    'hotpink': 0xFF69B4,\n    'indianred': 0xCD5C5C,\n    'indigo': 0x4B0082,\n    'ivory': 0xFFFFF0,\n    'khaki': 0xF0E68C,\n    'lavender': 0xE6E6FA,\n    'lavenderblush': 0xFFF0F5,\n    'lawngreen': 0x7CFC00,\n    'lemonchiffon': 0xFFFACD,\n    'lightblue': 0xADD8E6,\n    'lightcoral': 0xF08080,\n    'lightcyan': 0xE0FFFF,\n    'lightgoldenrodyellow': 0xFAFAD2,\n    'lightgray': 0xD3D3D3,\n    'lightgreen': 0x90EE90,\n    'lightgrey': 0xD3D3D3,\n    'lightpink': 0xFFB6C1,\n    'lightsalmon': 0xFFA07A,\n    'lightseagreen': 0x20B2AA,\n    'lightskyblue': 0x87CEFA,\n    'lightslategray': 0x778899,\n    'lightslategrey': 0x778899,\n    'lightsteelblue': 0xB0C4DE,\n    'lightyellow': 0xFFFFE0,\n    'lime': 0x00FF00,\n    'limegreen': 0x32CD32,\n    'linen': 0xFAF0E6,\n    'magenta': 0xFF00FF,\n    'maroon': 0x800000,\n    'mediumaquamarine': 0x66CDAA,\n    'mediumblue': 0x0000CD,\n    'mediumorchid': 0xBA55D3,\n    'mediumpurple': 0x9370DB,\n    'mediumseagreen': 0x3CB371,\n    'mediumslateblue': 0x7B68EE,\n    'mediumspringgreen': 0x00FA9A,\n    'mediumturquoise': 0x48D1CC,\n    'mediumvioletred': 0xC71585,\n    'midnightblue': 0x191970,\n    'mintcream': 0xF5FFFA,\n    'mistyrose': 0xFFE4E1,\n    'moccasin': 0xFFE4B5,\n    'navajowhite': 0xFFDEAD,\n    'navy': 0x000080,\n    'oldlace': 0xFDF5E6,\n    'olive': 0x808000,\n    'olivedrab': 0x6B8E23,\n    'orange': 0xFFA500,\n    'orangered': 0xFF4500,\n    'orchid': 0xDA70D6,\n    'palegoldenrod': 0xEEE8AA,\n    'palegreen': 0x98FB98,\n    'paleturquoise': 0xAFEEEE,\n    'palevioletred': 0xDB7093,\n    'papayawhip': 0xFFEFD5,\n    'peachpuff': 0xFFDAB9,\n    'peru': 0xCD853F,\n    'pink': 0xFFC0CB,\n    'plum': 0xDDA0DD,\n    'powderblue': 0xB0E0E6,\n    'purple': 0x800080,\n    'rebeccapurple': 0x663399,\n    'red': 0xFF0000,\n    'rosybrown': 0xBC8F8F,\n    'royalblue': 0x4169E1,\n    'saddlebrown': 0x8B4513,\n    'salmon': 0xFA8072,\n    'sandybrown': 0xF4A460,\n    'seagreen': 0x2E8B57,\n    'seashell': 0xFFF5EE,\n    'sienna': 0xA0522D,\n    'silver': 0xC0C0C0,\n    'skyblue': 0x87CEEB,\n    'slateblue': 0x6A5ACD,\n    'slategray': 0x708090,\n    'slategrey': 0x708090,\n    'snow': 0xFFFAFA,\n    'springgreen': 0x00FF7F,\n    'steelblue': 0x4682B4,\n    'tan': 0xD2B48C,\n    'teal': 0x008080,\n    'thistle': 0xD8BFD8,\n    'tomato': 0xFF6347,\n    'turquoise': 0x40E0D0,\n    'violet': 0xEE82EE,\n    'wheat': 0xF5DEB3,\n    'white': 0xFFFFFF,\n    'whitesmoke': 0xF5F5F5,\n    'yellow': 0xFFFF00,\n    'yellowgreen': 0x9ACD32\n  };\n  var _hslA = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n  var _hslB = {\n    h: 0,\n    s: 0,\n    l: 0\n  };\n\n  function Color(r, g, b) {\n    if (g === undefined && b === undefined) {\n      // r is THREE.Color, hex or string\n      return this.set(r);\n    }\n\n    return this.setRGB(r, g, b);\n  }\n\n  function hue2rgb(p, q, t) {\n    if (t < 0) {\n      t += 1;\n    }\n\n    if (t > 1) {\n      t -= 1;\n    }\n\n    if (t < 1 / 6) {\n      return p + (q - p) * 6 * t;\n    }\n\n    if (t < 1 / 2) {\n      return q;\n    }\n\n    if (t < 2 / 3) {\n      return p + (q - p) * 6 * (2 / 3 - t);\n    }\n\n    return p;\n  }\n\n  function SRGBToLinear(c) {\n    return c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n  }\n\n  function LinearToSRGB(c) {\n    return c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n  }\n\n  Object.assign(Color.prototype, {\n    isColor: true,\n    r: 1,\n    g: 1,\n    b: 1,\n    set: function (value) {\n      if (value && value.isColor) {\n        this.copy(value);\n      } else if (typeof value === 'number') {\n        this.setHex(value);\n      } else if (typeof value === 'string') {\n        this.setStyle(value);\n      }\n\n      return this;\n    },\n    setScalar: function (scalar) {\n      this.r = scalar;\n      this.g = scalar;\n      this.b = scalar;\n      return this;\n    },\n    setHex: function (hex) {\n      hex = Math.floor(hex);\n      this.r = (hex >> 16 & 255) / 255;\n      this.g = (hex >> 8 & 255) / 255;\n      this.b = (hex & 255) / 255;\n      return this;\n    },\n    setRGB: function (r, g, b) {\n      this.r = r;\n      this.g = g;\n      this.b = b;\n      return this;\n    },\n    setHSL: function (h, s, l) {\n      // h,s,l ranges are in 0.0 - 1.0\n      h = _Math.euclideanModulo(h, 1);\n      s = _Math.clamp(s, 0, 1);\n      l = _Math.clamp(l, 0, 1);\n\n      if (s === 0) {\n        this.r = this.g = this.b = l;\n      } else {\n        var p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n        var q = 2 * l - p;\n        this.r = hue2rgb(q, p, h + 1 / 3);\n        this.g = hue2rgb(q, p, h);\n        this.b = hue2rgb(q, p, h - 1 / 3);\n      }\n\n      return this;\n    },\n    setStyle: function (style) {\n      function handleAlpha(string) {\n        if (string === undefined) {\n          return;\n        }\n\n        if (parseFloat(string) < 1) {\n          console.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n        }\n      }\n\n      var m;\n\n      if (m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec(style)) {\n        // rgb / hsl\n        var color;\n        var name = m[1];\n        var components = m[2];\n\n        switch (name) {\n          case 'rgb':\n          case 'rgba':\n            if (color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(255,0,0) rgba(255,0,0,0.5)\n              this.r = Math.min(255, parseInt(color[1], 10)) / 255;\n              this.g = Math.min(255, parseInt(color[2], 10)) / 255;\n              this.b = Math.min(255, parseInt(color[3], 10)) / 255;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            if (color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n              this.r = Math.min(100, parseInt(color[1], 10)) / 100;\n              this.g = Math.min(100, parseInt(color[2], 10)) / 100;\n              this.b = Math.min(100, parseInt(color[3], 10)) / 100;\n              handleAlpha(color[5]);\n              return this;\n            }\n\n            break;\n\n          case 'hsl':\n          case 'hsla':\n            if (color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec(components)) {\n              // hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n              var h = parseFloat(color[1]) / 360;\n              var s = parseInt(color[2], 10) / 100;\n              var l = parseInt(color[3], 10) / 100;\n              handleAlpha(color[5]);\n              return this.setHSL(h, s, l);\n            }\n\n            break;\n        }\n      } else if (m = /^\\#([A-Fa-f0-9]+)$/.exec(style)) {\n        // hex color\n        var hex = m[1];\n        var size = hex.length;\n\n        if (size === 3) {\n          // #ff0\n          this.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n          this.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n          this.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n          return this;\n        } else if (size === 6) {\n          // #ff0000\n          this.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n          this.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n          this.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n          return this;\n        }\n      }\n\n      if (style && style.length > 0) {\n        return this.setColorName(style);\n      }\n\n      return this;\n    },\n    setColorName: function (style) {\n      // color keywords\n      var hex = _colorKeywords[style];\n\n      if (hex !== undefined) {\n        // red\n        this.setHex(hex);\n      } else {\n        // unknown color\n        console.warn('THREE.Color: Unknown color ' + style);\n      }\n\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.r, this.g, this.b);\n    },\n    copy: function (color) {\n      this.r = color.r;\n      this.g = color.g;\n      this.b = color.b;\n      return this;\n    },\n    copyGammaToLinear: function (color, gammaFactor) {\n      if (gammaFactor === undefined) {\n        gammaFactor = 2.0;\n      }\n\n      this.r = Math.pow(color.r, gammaFactor);\n      this.g = Math.pow(color.g, gammaFactor);\n      this.b = Math.pow(color.b, gammaFactor);\n      return this;\n    },\n    copyLinearToGamma: function (color, gammaFactor) {\n      if (gammaFactor === undefined) {\n        gammaFactor = 2.0;\n      }\n\n      var safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n      this.r = Math.pow(color.r, safeInverse);\n      this.g = Math.pow(color.g, safeInverse);\n      this.b = Math.pow(color.b, safeInverse);\n      return this;\n    },\n    convertGammaToLinear: function (gammaFactor) {\n      this.copyGammaToLinear(this, gammaFactor);\n      return this;\n    },\n    convertLinearToGamma: function (gammaFactor) {\n      this.copyLinearToGamma(this, gammaFactor);\n      return this;\n    },\n    copySRGBToLinear: function (color) {\n      this.r = SRGBToLinear(color.r);\n      this.g = SRGBToLinear(color.g);\n      this.b = SRGBToLinear(color.b);\n      return this;\n    },\n    copyLinearToSRGB: function (color) {\n      this.r = LinearToSRGB(color.r);\n      this.g = LinearToSRGB(color.g);\n      this.b = LinearToSRGB(color.b);\n      return this;\n    },\n    convertSRGBToLinear: function () {\n      this.copySRGBToLinear(this);\n      return this;\n    },\n    convertLinearToSRGB: function () {\n      this.copyLinearToSRGB(this);\n      return this;\n    },\n    getHex: function () {\n      return this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n    },\n    getHexString: function () {\n      return ('000000' + this.getHex().toString(16)).slice(-6);\n    },\n    getHSL: function (target) {\n      // h,s,l ranges are in 0.0 - 1.0\n      if (target === undefined) {\n        console.warn('THREE.Color: .getHSL() target is now required');\n        target = {\n          h: 0,\n          s: 0,\n          l: 0\n        };\n      }\n\n      var r = this.r,\n          g = this.g,\n          b = this.b;\n      var max = Math.max(r, g, b);\n      var min = Math.min(r, g, b);\n      var hue, saturation;\n      var lightness = (min + max) / 2.0;\n\n      if (min === max) {\n        hue = 0;\n        saturation = 0;\n      } else {\n        var delta = max - min;\n        saturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n        switch (max) {\n          case r:\n            hue = (g - b) / delta + (g < b ? 6 : 0);\n            break;\n\n          case g:\n            hue = (b - r) / delta + 2;\n            break;\n\n          case b:\n            hue = (r - g) / delta + 4;\n            break;\n        }\n\n        hue /= 6;\n      }\n\n      target.h = hue;\n      target.s = saturation;\n      target.l = lightness;\n      return target;\n    },\n    getStyle: function () {\n      return 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n    },\n    offsetHSL: function (h, s, l) {\n      this.getHSL(_hslA);\n      _hslA.h += h;\n      _hslA.s += s;\n      _hslA.l += l;\n      this.setHSL(_hslA.h, _hslA.s, _hslA.l);\n      return this;\n    },\n    add: function (color) {\n      this.r += color.r;\n      this.g += color.g;\n      this.b += color.b;\n      return this;\n    },\n    addColors: function (color1, color2) {\n      this.r = color1.r + color2.r;\n      this.g = color1.g + color2.g;\n      this.b = color1.b + color2.b;\n      return this;\n    },\n    addScalar: function (s) {\n      this.r += s;\n      this.g += s;\n      this.b += s;\n      return this;\n    },\n    sub: function (color) {\n      this.r = Math.max(0, this.r - color.r);\n      this.g = Math.max(0, this.g - color.g);\n      this.b = Math.max(0, this.b - color.b);\n      return this;\n    },\n    multiply: function (color) {\n      this.r *= color.r;\n      this.g *= color.g;\n      this.b *= color.b;\n      return this;\n    },\n    multiplyScalar: function (s) {\n      this.r *= s;\n      this.g *= s;\n      this.b *= s;\n      return this;\n    },\n    lerp: function (color, alpha) {\n      this.r += (color.r - this.r) * alpha;\n      this.g += (color.g - this.g) * alpha;\n      this.b += (color.b - this.b) * alpha;\n      return this;\n    },\n    lerpHSL: function (color, alpha) {\n      this.getHSL(_hslA);\n      color.getHSL(_hslB);\n\n      var h = _Math.lerp(_hslA.h, _hslB.h, alpha);\n\n      var s = _Math.lerp(_hslA.s, _hslB.s, alpha);\n\n      var l = _Math.lerp(_hslA.l, _hslB.l, alpha);\n\n      this.setHSL(h, s, l);\n      return this;\n    },\n    equals: function (c) {\n      return c.r === this.r && c.g === this.g && c.b === this.b;\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.r = array[offset];\n      this.g = array[offset + 1];\n      this.b = array[offset + 2];\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      array[offset] = this.r;\n      array[offset + 1] = this.g;\n      array[offset + 2] = this.b;\n      return array;\n    },\n    toJSON: function () {\n      return this.getHex();\n    }\n  });\n  Color.NAMES = _colorKeywords;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Face3(a, b, c, normal, color, materialIndex) {\n    this.a = a;\n    this.b = b;\n    this.c = c;\n    this.normal = normal && normal.isVector3 ? normal : new Vector3();\n    this.vertexNormals = Array.isArray(normal) ? normal : [];\n    this.color = color && color.isColor ? color : new Color();\n    this.vertexColors = Array.isArray(color) ? color : [];\n    this.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n  }\n\n  Object.assign(Face3.prototype, {\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.a = source.a;\n      this.b = source.b;\n      this.c = source.c;\n      this.normal.copy(source.normal);\n      this.color.copy(source.color);\n      this.materialIndex = source.materialIndex;\n\n      for (var i = 0, il = source.vertexNormals.length; i < il; i++) {\n        this.vertexNormals[i] = source.vertexNormals[i].clone();\n      }\n\n      for (var i = 0, il = source.vertexColors.length; i < il; i++) {\n        this.vertexColors[i] = source.vertexColors[i].clone();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  var materialId = 0;\n\n  function Material() {\n    Object.defineProperty(this, 'id', {\n      value: materialId++\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Material';\n    this.fog = true;\n    this.blending = NormalBlending;\n    this.side = FrontSide;\n    this.flatShading = false;\n    this.vertexTangents = false;\n    this.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n    this.opacity = 1;\n    this.transparent = false;\n    this.blendSrc = SrcAlphaFactor;\n    this.blendDst = OneMinusSrcAlphaFactor;\n    this.blendEquation = AddEquation;\n    this.blendSrcAlpha = null;\n    this.blendDstAlpha = null;\n    this.blendEquationAlpha = null;\n    this.depthFunc = LessEqualDepth;\n    this.depthTest = true;\n    this.depthWrite = true;\n    this.stencilWriteMask = 0xff;\n    this.stencilFunc = AlwaysStencilFunc;\n    this.stencilRef = 0;\n    this.stencilFuncMask = 0xff;\n    this.stencilFail = KeepStencilOp;\n    this.stencilZFail = KeepStencilOp;\n    this.stencilZPass = KeepStencilOp;\n    this.stencilWrite = false;\n    this.clippingPlanes = null;\n    this.clipIntersection = false;\n    this.clipShadows = false;\n    this.shadowSide = null;\n    this.colorWrite = true;\n    this.precision = null; // override the renderer's default precision for this material\n\n    this.polygonOffset = false;\n    this.polygonOffsetFactor = 0;\n    this.polygonOffsetUnits = 0;\n    this.dithering = false;\n    this.alphaTest = 0;\n    this.premultipliedAlpha = false;\n    this.visible = true;\n    this.toneMapped = true;\n    this.userData = {};\n    this.needsUpdate = true;\n  }\n\n  Material.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Material,\n    isMaterial: true,\n    onBeforeCompile: function () {},\n    setValues: function (values) {\n      if (values === undefined) {\n        return;\n      }\n\n      for (var key in values) {\n        var newValue = values[key];\n\n        if (newValue === undefined) {\n          console.warn(\"THREE.Material: '\" + key + \"' parameter is undefined.\");\n          continue;\n        } // for backward compatability if shading is set in the constructor\n\n\n        if (key === 'shading') {\n          console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n          this.flatShading = newValue === FlatShading ? true : false;\n          continue;\n        }\n\n        var currentValue = this[key];\n\n        if (currentValue === undefined) {\n          console.warn(\"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\");\n          continue;\n        }\n\n        if (currentValue && currentValue.isColor) {\n          currentValue.set(newValue);\n        } else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n          currentValue.copy(newValue);\n        } else {\n          this[key] = newValue;\n        }\n      }\n    },\n    toJSON: function (meta) {\n      var isRoot = meta === undefined || typeof meta === 'string';\n\n      if (isRoot) {\n        meta = {\n          textures: {},\n          images: {}\n        };\n      }\n\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Material',\n          generator: 'Material.toJSON'\n        }\n      }; // standard Material serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n\n      if (this.name !== '') {\n        data.name = this.name;\n      }\n\n      if (this.color && this.color.isColor) {\n        data.color = this.color.getHex();\n      }\n\n      if (this.roughness !== undefined) {\n        data.roughness = this.roughness;\n      }\n\n      if (this.metalness !== undefined) {\n        data.metalness = this.metalness;\n      }\n\n      if (this.sheen && this.sheen.isColor) {\n        data.sheen = this.sheen.getHex();\n      }\n\n      if (this.emissive && this.emissive.isColor) {\n        data.emissive = this.emissive.getHex();\n      }\n\n      if (this.emissiveIntensity && this.emissiveIntensity !== 1) {\n        data.emissiveIntensity = this.emissiveIntensity;\n      }\n\n      if (this.specular && this.specular.isColor) {\n        data.specular = this.specular.getHex();\n      }\n\n      if (this.shininess !== undefined) {\n        data.shininess = this.shininess;\n      }\n\n      if (this.clearcoat !== undefined) {\n        data.clearcoat = this.clearcoat;\n      }\n\n      if (this.clearcoatRoughness !== undefined) {\n        data.clearcoatRoughness = this.clearcoatRoughness;\n      }\n\n      if (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n        data.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n        data.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n      }\n\n      if (this.map && this.map.isTexture) {\n        data.map = this.map.toJSON(meta).uuid;\n      }\n\n      if (this.matcap && this.matcap.isTexture) {\n        data.matcap = this.matcap.toJSON(meta).uuid;\n      }\n\n      if (this.alphaMap && this.alphaMap.isTexture) {\n        data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n      }\n\n      if (this.lightMap && this.lightMap.isTexture) {\n        data.lightMap = this.lightMap.toJSON(meta).uuid;\n      }\n\n      if (this.aoMap && this.aoMap.isTexture) {\n        data.aoMap = this.aoMap.toJSON(meta).uuid;\n        data.aoMapIntensity = this.aoMapIntensity;\n      }\n\n      if (this.bumpMap && this.bumpMap.isTexture) {\n        data.bumpMap = this.bumpMap.toJSON(meta).uuid;\n        data.bumpScale = this.bumpScale;\n      }\n\n      if (this.normalMap && this.normalMap.isTexture) {\n        data.normalMap = this.normalMap.toJSON(meta).uuid;\n        data.normalMapType = this.normalMapType;\n        data.normalScale = this.normalScale.toArray();\n      }\n\n      if (this.displacementMap && this.displacementMap.isTexture) {\n        data.displacementMap = this.displacementMap.toJSON(meta).uuid;\n        data.displacementScale = this.displacementScale;\n        data.displacementBias = this.displacementBias;\n      }\n\n      if (this.roughnessMap && this.roughnessMap.isTexture) {\n        data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n      }\n\n      if (this.metalnessMap && this.metalnessMap.isTexture) {\n        data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n      }\n\n      if (this.emissiveMap && this.emissiveMap.isTexture) {\n        data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n      }\n\n      if (this.specularMap && this.specularMap.isTexture) {\n        data.specularMap = this.specularMap.toJSON(meta).uuid;\n      }\n\n      if (this.envMap && this.envMap.isTexture) {\n        data.envMap = this.envMap.toJSON(meta).uuid;\n        data.reflectivity = this.reflectivity; // Scale behind envMap\n\n        data.refractionRatio = this.refractionRatio;\n\n        if (this.combine !== undefined) {\n          data.combine = this.combine;\n        }\n\n        if (this.envMapIntensity !== undefined) {\n          data.envMapIntensity = this.envMapIntensity;\n        }\n      }\n\n      if (this.gradientMap && this.gradientMap.isTexture) {\n        data.gradientMap = this.gradientMap.toJSON(meta).uuid;\n      }\n\n      if (this.size !== undefined) {\n        data.size = this.size;\n      }\n\n      if (this.sizeAttenuation !== undefined) {\n        data.sizeAttenuation = this.sizeAttenuation;\n      }\n\n      if (this.blending !== NormalBlending) {\n        data.blending = this.blending;\n      }\n\n      if (this.flatShading === true) {\n        data.flatShading = this.flatShading;\n      }\n\n      if (this.side !== FrontSide) {\n        data.side = this.side;\n      }\n\n      if (this.vertexColors !== NoColors) {\n        data.vertexColors = this.vertexColors;\n      }\n\n      if (this.opacity < 1) {\n        data.opacity = this.opacity;\n      }\n\n      if (this.transparent === true) {\n        data.transparent = this.transparent;\n      }\n\n      data.depthFunc = this.depthFunc;\n      data.depthTest = this.depthTest;\n      data.depthWrite = this.depthWrite;\n      data.stencilWrite = this.stencilWrite;\n      data.stencilWriteMask = this.stencilWriteMask;\n      data.stencilFunc = this.stencilFunc;\n      data.stencilRef = this.stencilRef;\n      data.stencilFuncMask = this.stencilFuncMask;\n      data.stencilFail = this.stencilFail;\n      data.stencilZFail = this.stencilZFail;\n      data.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n      if (this.rotation && this.rotation !== 0) {\n        data.rotation = this.rotation;\n      }\n\n      if (this.polygonOffset === true) {\n        data.polygonOffset = true;\n      }\n\n      if (this.polygonOffsetFactor !== 0) {\n        data.polygonOffsetFactor = this.polygonOffsetFactor;\n      }\n\n      if (this.polygonOffsetUnits !== 0) {\n        data.polygonOffsetUnits = this.polygonOffsetUnits;\n      }\n\n      if (this.linewidth && this.linewidth !== 1) {\n        data.linewidth = this.linewidth;\n      }\n\n      if (this.dashSize !== undefined) {\n        data.dashSize = this.dashSize;\n      }\n\n      if (this.gapSize !== undefined) {\n        data.gapSize = this.gapSize;\n      }\n\n      if (this.scale !== undefined) {\n        data.scale = this.scale;\n      }\n\n      if (this.dithering === true) {\n        data.dithering = true;\n      }\n\n      if (this.alphaTest > 0) {\n        data.alphaTest = this.alphaTest;\n      }\n\n      if (this.premultipliedAlpha === true) {\n        data.premultipliedAlpha = this.premultipliedAlpha;\n      }\n\n      if (this.wireframe === true) {\n        data.wireframe = this.wireframe;\n      }\n\n      if (this.wireframeLinewidth > 1) {\n        data.wireframeLinewidth = this.wireframeLinewidth;\n      }\n\n      if (this.wireframeLinecap !== 'round') {\n        data.wireframeLinecap = this.wireframeLinecap;\n      }\n\n      if (this.wireframeLinejoin !== 'round') {\n        data.wireframeLinejoin = this.wireframeLinejoin;\n      }\n\n      if (this.morphTargets === true) {\n        data.morphTargets = true;\n      }\n\n      if (this.morphNormals === true) {\n        data.morphNormals = true;\n      }\n\n      if (this.skinning === true) {\n        data.skinning = true;\n      }\n\n      if (this.visible === false) {\n        data.visible = false;\n      }\n\n      if (this.toneMapped === false) {\n        data.toneMapped = false;\n      }\n\n      if (JSON.stringify(this.userData) !== '{}') {\n        data.userData = this.userData;\n      } // TODO: Copied from Object3D.toJSON\n\n\n      function extractFromCache(cache) {\n        var values = [];\n\n        for (var key in cache) {\n          var data = cache[key];\n          delete data.metadata;\n          values.push(data);\n        }\n\n        return values;\n      }\n\n      if (isRoot) {\n        var textures = extractFromCache(meta.textures);\n        var images = extractFromCache(meta.images);\n\n        if (textures.length > 0) {\n          data.textures = textures;\n        }\n\n        if (images.length > 0) {\n          data.images = images;\n        }\n      }\n\n      return data;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.fog = source.fog;\n      this.blending = source.blending;\n      this.side = source.side;\n      this.flatShading = source.flatShading;\n      this.vertexTangents = source.vertexTangents;\n      this.vertexColors = source.vertexColors;\n      this.opacity = source.opacity;\n      this.transparent = source.transparent;\n      this.blendSrc = source.blendSrc;\n      this.blendDst = source.blendDst;\n      this.blendEquation = source.blendEquation;\n      this.blendSrcAlpha = source.blendSrcAlpha;\n      this.blendDstAlpha = source.blendDstAlpha;\n      this.blendEquationAlpha = source.blendEquationAlpha;\n      this.depthFunc = source.depthFunc;\n      this.depthTest = source.depthTest;\n      this.depthWrite = source.depthWrite;\n      this.stencilWriteMask = source.stencilWriteMask;\n      this.stencilFunc = source.stencilFunc;\n      this.stencilRef = source.stencilRef;\n      this.stencilFuncMask = source.stencilFuncMask;\n      this.stencilFail = source.stencilFail;\n      this.stencilZFail = source.stencilZFail;\n      this.stencilZPass = source.stencilZPass;\n      this.stencilWrite = source.stencilWrite;\n      var srcPlanes = source.clippingPlanes,\n          dstPlanes = null;\n\n      if (srcPlanes !== null) {\n        var n = srcPlanes.length;\n        dstPlanes = new Array(n);\n\n        for (var i = 0; i !== n; ++i) {\n          dstPlanes[i] = srcPlanes[i].clone();\n        }\n      }\n\n      this.clippingPlanes = dstPlanes;\n      this.clipIntersection = source.clipIntersection;\n      this.clipShadows = source.clipShadows;\n      this.shadowSide = source.shadowSide;\n      this.colorWrite = source.colorWrite;\n      this.precision = source.precision;\n      this.polygonOffset = source.polygonOffset;\n      this.polygonOffsetFactor = source.polygonOffsetFactor;\n      this.polygonOffsetUnits = source.polygonOffsetUnits;\n      this.dithering = source.dithering;\n      this.alphaTest = source.alphaTest;\n      this.premultipliedAlpha = source.premultipliedAlpha;\n      this.visible = source.visible;\n      this.toneMapped = source.toneMapped;\n      this.userData = JSON.parse(JSON.stringify(source.userData));\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  depthTest: <bool>,\n   *  depthWrite: <bool>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function MeshBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshBasicMaterial';\n    this.color = new Color(0xffffff); // emissive\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  MeshBasicMaterial.prototype = Object.create(Material.prototype);\n  MeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n  MeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n  MeshBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function BufferAttribute(array, itemSize, normalized) {\n    if (Array.isArray(array)) {\n      throw new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n    }\n\n    this.name = '';\n    this.array = array;\n    this.itemSize = itemSize;\n    this.count = array !== undefined ? array.length / itemSize : 0;\n    this.normalized = normalized === true;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(BufferAttribute.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) {\n        this.version++;\n      }\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    isBufferAttribute: true,\n    onUploadCallback: function () {},\n    setUsage: function (value) {\n      this.usage = value;\n      return this;\n    },\n    copy: function (source) {\n      this.name = source.name;\n      this.array = new source.array.constructor(source.array);\n      this.itemSize = source.itemSize;\n      this.count = source.count;\n      this.normalized = source.normalized;\n      this.usage = source.usage;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.itemSize;\n      index2 *= attribute.itemSize;\n\n      for (var i = 0, l = this.itemSize; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    copyArray: function (array) {\n      this.array.set(array);\n      return this;\n    },\n    copyColorsArray: function (colors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = colors.length; i < l; i++) {\n        var color = colors[i];\n\n        if (color === undefined) {\n          console.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n          color = new Color();\n        }\n\n        array[offset++] = color.r;\n        array[offset++] = color.g;\n        array[offset++] = color.b;\n      }\n\n      return this;\n    },\n    copyVector2sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n          vector = new Vector2();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n      }\n\n      return this;\n    },\n    copyVector3sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n          vector = new Vector3();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n      }\n\n      return this;\n    },\n    copyVector4sArray: function (vectors) {\n      var array = this.array,\n          offset = 0;\n\n      for (var i = 0, l = vectors.length; i < l; i++) {\n        var vector = vectors[i];\n\n        if (vector === undefined) {\n          console.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n          vector = new Vector4();\n        }\n\n        array[offset++] = vector.x;\n        array[offset++] = vector.y;\n        array[offset++] = vector.z;\n        array[offset++] = vector.w;\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.array.set(value, offset);\n      return this;\n    },\n    getX: function (index) {\n      return this.array[index * this.itemSize];\n    },\n    setX: function (index, x) {\n      this.array[index * this.itemSize] = x;\n      return this;\n    },\n    getY: function (index) {\n      return this.array[index * this.itemSize + 1];\n    },\n    setY: function (index, y) {\n      this.array[index * this.itemSize + 1] = y;\n      return this;\n    },\n    getZ: function (index) {\n      return this.array[index * this.itemSize + 2];\n    },\n    setZ: function (index, z) {\n      this.array[index * this.itemSize + 2] = z;\n      return this;\n    },\n    getW: function (index) {\n      return this.array[index * this.itemSize + 3];\n    },\n    setW: function (index, w) {\n      this.array[index * this.itemSize + 3] = w;\n      return this;\n    },\n    setXY: function (index, x, y) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index *= this.itemSize;\n      this.array[index + 0] = x;\n      this.array[index + 1] = y;\n      this.array[index + 2] = z;\n      this.array[index + 3] = w;\n      return this;\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor(this.array, this.itemSize).copy(this);\n    },\n    toJSON: function () {\n      return {\n        itemSize: this.itemSize,\n        type: this.array.constructor.name,\n        array: Array.prototype.slice.call(this.array),\n        normalized: this.normalized\n      };\n    }\n  }); //\n\n  function Int8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int8Array(array), itemSize, normalized);\n  }\n\n  Int8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n  function Uint8BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8Array(array), itemSize, normalized);\n  }\n\n  Uint8BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n  function Uint8ClampedBufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint8ClampedArray(array), itemSize, normalized);\n  }\n\n  Uint8ClampedBufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n  function Int16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int16Array(array), itemSize, normalized);\n  }\n\n  Int16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n  function Uint16BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint16Array(array), itemSize, normalized);\n  }\n\n  Uint16BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n  function Int32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Int32Array(array), itemSize, normalized);\n  }\n\n  Int32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Int32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n  function Uint32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Uint32Array(array), itemSize, normalized);\n  }\n\n  Uint32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Uint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n  function Float32BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float32Array(array), itemSize, normalized);\n  }\n\n  Float32BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n  function Float64BufferAttribute(array, itemSize, normalized) {\n    BufferAttribute.call(this, new Float64Array(array), itemSize, normalized);\n  }\n\n  Float64BufferAttribute.prototype = Object.create(BufferAttribute.prototype);\n  Float64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectGeometry() {\n    this.vertices = [];\n    this.normals = [];\n    this.colors = [];\n    this.uvs = [];\n    this.uvs2 = [];\n    this.groups = [];\n    this.morphTargets = {};\n    this.skinWeights = [];\n    this.skinIndices = []; // this.lineDistances = [];\n\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.verticesNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Object.assign(DirectGeometry.prototype, {\n    computeGroups: function (geometry) {\n      var group;\n      var groups = [];\n      var materialIndex = undefined;\n      var faces = geometry.faces;\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i]; // materials\n\n        if (face.materialIndex !== materialIndex) {\n          materialIndex = face.materialIndex;\n\n          if (group !== undefined) {\n            group.count = i * 3 - group.start;\n            groups.push(group);\n          }\n\n          group = {\n            start: i * 3,\n            materialIndex: materialIndex\n          };\n        }\n      }\n\n      if (group !== undefined) {\n        group.count = i * 3 - group.start;\n        groups.push(group);\n      }\n\n      this.groups = groups;\n    },\n    fromGeometry: function (geometry) {\n      var faces = geometry.faces;\n      var vertices = geometry.vertices;\n      var faceVertexUvs = geometry.faceVertexUvs;\n      var hasFaceVertexUv = faceVertexUvs[0] && faceVertexUvs[0].length > 0;\n      var hasFaceVertexUv2 = faceVertexUvs[1] && faceVertexUvs[1].length > 0; // morphs\n\n      var morphTargets = geometry.morphTargets;\n      var morphTargetsLength = morphTargets.length;\n      var morphTargetsPosition;\n\n      if (morphTargetsLength > 0) {\n        morphTargetsPosition = [];\n\n        for (var i = 0; i < morphTargetsLength; i++) {\n          morphTargetsPosition[i] = {\n            name: morphTargets[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.position = morphTargetsPosition;\n      }\n\n      var morphNormals = geometry.morphNormals;\n      var morphNormalsLength = morphNormals.length;\n      var morphTargetsNormal;\n\n      if (morphNormalsLength > 0) {\n        morphTargetsNormal = [];\n\n        for (var i = 0; i < morphNormalsLength; i++) {\n          morphTargetsNormal[i] = {\n            name: morphNormals[i].name,\n            data: []\n          };\n        }\n\n        this.morphTargets.normal = morphTargetsNormal;\n      } // skins\n\n\n      var skinIndices = geometry.skinIndices;\n      var skinWeights = geometry.skinWeights;\n      var hasSkinIndices = skinIndices.length === vertices.length;\n      var hasSkinWeights = skinWeights.length === vertices.length; //\n\n      if (vertices.length > 0 && faces.length === 0) {\n        console.error('THREE.DirectGeometry: Faceless geometries are not supported.');\n      }\n\n      for (var i = 0; i < faces.length; i++) {\n        var face = faces[i];\n        this.vertices.push(vertices[face.a], vertices[face.b], vertices[face.c]);\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          this.normals.push(vertexNormals[0], vertexNormals[1], vertexNormals[2]);\n        } else {\n          var normal = face.normal;\n          this.normals.push(normal, normal, normal);\n        }\n\n        var vertexColors = face.vertexColors;\n\n        if (vertexColors.length === 3) {\n          this.colors.push(vertexColors[0], vertexColors[1], vertexColors[2]);\n        } else {\n          var color = face.color;\n          this.colors.push(color, color, color);\n        }\n\n        if (hasFaceVertexUv === true) {\n          var vertexUvs = faceVertexUvs[0][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i);\n            this.uvs.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        }\n\n        if (hasFaceVertexUv2 === true) {\n          var vertexUvs = faceVertexUvs[1][i];\n\n          if (vertexUvs !== undefined) {\n            this.uvs2.push(vertexUvs[0], vertexUvs[1], vertexUvs[2]);\n          } else {\n            console.warn('THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i);\n            this.uvs2.push(new Vector2(), new Vector2(), new Vector2());\n          }\n        } // morphs\n\n\n        for (var j = 0; j < morphTargetsLength; j++) {\n          var morphTarget = morphTargets[j].vertices;\n          morphTargetsPosition[j].data.push(morphTarget[face.a], morphTarget[face.b], morphTarget[face.c]);\n        }\n\n        for (var j = 0; j < morphNormalsLength; j++) {\n          var morphNormal = morphNormals[j].vertexNormals[i];\n          morphTargetsNormal[j].data.push(morphNormal.a, morphNormal.b, morphNormal.c);\n        } // skins\n\n\n        if (hasSkinIndices) {\n          this.skinIndices.push(skinIndices[face.a], skinIndices[face.b], skinIndices[face.c]);\n        }\n\n        if (hasSkinWeights) {\n          this.skinWeights.push(skinWeights[face.a], skinWeights[face.b], skinWeights[face.c]);\n        }\n      }\n\n      this.computeGroups(geometry);\n      this.verticesNeedUpdate = geometry.verticesNeedUpdate;\n      this.normalsNeedUpdate = geometry.normalsNeedUpdate;\n      this.colorsNeedUpdate = geometry.colorsNeedUpdate;\n      this.uvsNeedUpdate = geometry.uvsNeedUpdate;\n      this.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function arrayMax(array) {\n    if (array.length === 0) {\n      return -Infinity;\n    }\n\n    var max = array[0];\n\n    for (var i = 1, l = array.length; i < l; ++i) {\n      if (array[i] > max) {\n        max = array[i];\n      }\n    }\n\n    return max;\n  }\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n  var _m1$2 = new Matrix4();\n\n  var _obj = new Object3D();\n\n  var _offset = new Vector3();\n\n  var _box$2 = new Box3();\n\n  var _boxMorphTargets = new Box3();\n\n  var _vector$4 = new Vector3();\n\n  function BufferGeometry() {\n    Object.defineProperty(this, 'id', {\n      value: _bufferGeometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'BufferGeometry';\n    this.index = null;\n    this.attributes = {};\n    this.morphAttributes = {};\n    this.morphTargetsRelative = false;\n    this.groups = [];\n    this.boundingBox = null;\n    this.boundingSphere = null;\n    this.drawRange = {\n      start: 0,\n      count: Infinity\n    };\n    this.userData = {};\n  }\n\n  BufferGeometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: BufferGeometry,\n    isBufferGeometry: true,\n    getIndex: function () {\n      return this.index;\n    },\n    setIndex: function (index) {\n      if (Array.isArray(index)) {\n        this.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n      } else {\n        this.index = index;\n      }\n    },\n    getAttribute: function (name) {\n      return this.attributes[name];\n    },\n    setAttribute: function (name, attribute) {\n      this.attributes[name] = attribute;\n      return this;\n    },\n    deleteAttribute: function (name) {\n      delete this.attributes[name];\n      return this;\n    },\n    addGroup: function (start, count, materialIndex) {\n      this.groups.push({\n        start: start,\n        count: count,\n        materialIndex: materialIndex !== undefined ? materialIndex : 0\n      });\n    },\n    clearGroups: function () {\n      this.groups = [];\n    },\n    setDrawRange: function (start, count) {\n      this.drawRange.start = start;\n      this.drawRange.count = count;\n    },\n    applyMatrix: function (matrix) {\n      var position = this.attributes.position;\n\n      if (position !== undefined) {\n        matrix.applyToBufferAttribute(position);\n        position.needsUpdate = true;\n      }\n\n      var normal = this.attributes.normal;\n\n      if (normal !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n        normalMatrix.applyToBufferAttribute(normal);\n        normal.needsUpdate = true;\n      }\n\n      var tangent = this.attributes.tangent;\n\n      if (tangent !== undefined) {\n        var normalMatrix = new Matrix3().getNormalMatrix(matrix); // Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\n        normalMatrix.applyToBufferAttribute(tangent);\n        tangent.needsUpdate = true;\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      return this;\n    },\n    rotateX: function (angle) {\n      // rotate geometry around world x-axis\n      _m1$2.makeRotationX(angle);\n\n      this.applyMatrix(_m1$2);\n      return this;\n    },\n    rotateY: function (angle) {\n      // rotate geometry around world y-axis\n      _m1$2.makeRotationY(angle);\n\n      this.applyMatrix(_m1$2);\n      return this;\n    },\n    rotateZ: function (angle) {\n      // rotate geometry around world z-axis\n      _m1$2.makeRotationZ(angle);\n\n      this.applyMatrix(_m1$2);\n      return this;\n    },\n    translate: function (x, y, z) {\n      // translate geometry\n      _m1$2.makeTranslation(x, y, z);\n\n      this.applyMatrix(_m1$2);\n      return this;\n    },\n    scale: function (x, y, z) {\n      // scale geometry\n      _m1$2.makeScale(x, y, z);\n\n      this.applyMatrix(_m1$2);\n      return this;\n    },\n    lookAt: function (vector) {\n      _obj.lookAt(vector);\n\n      _obj.updateMatrix();\n\n      this.applyMatrix(_obj.matrix);\n      return this;\n    },\n    center: function () {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(_offset).negate();\n      this.translate(_offset.x, _offset.y, _offset.z);\n      return this;\n    },\n    setFromObject: function (object) {\n      // console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n      var geometry = object.geometry;\n\n      if (object.isPoints || object.isLine) {\n        var positions = new Float32BufferAttribute(geometry.vertices.length * 3, 3);\n        var colors = new Float32BufferAttribute(geometry.colors.length * 3, 3);\n        this.setAttribute('position', positions.copyVector3sArray(geometry.vertices));\n        this.setAttribute('color', colors.copyColorsArray(geometry.colors));\n\n        if (geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length) {\n          var lineDistances = new Float32BufferAttribute(geometry.lineDistances.length, 1);\n          this.setAttribute('lineDistance', lineDistances.copyArray(geometry.lineDistances));\n        }\n\n        if (geometry.boundingSphere !== null) {\n          this.boundingSphere = geometry.boundingSphere.clone();\n        }\n\n        if (geometry.boundingBox !== null) {\n          this.boundingBox = geometry.boundingBox.clone();\n        }\n      } else if (object.isMesh) {\n        if (geometry && geometry.isGeometry) {\n          this.fromGeometry(geometry);\n        }\n      }\n\n      return this;\n    },\n    setFromPoints: function (points) {\n      var position = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        position.push(point.x, point.y, point.z || 0);\n      }\n\n      this.setAttribute('position', new Float32BufferAttribute(position, 3));\n      return this;\n    },\n    updateFromObject: function (object) {\n      var geometry = object.geometry;\n\n      if (object.isMesh) {\n        var direct = geometry.__directGeometry;\n\n        if (geometry.elementsNeedUpdate === true) {\n          direct = undefined;\n          geometry.elementsNeedUpdate = false;\n        }\n\n        if (direct === undefined) {\n          return this.fromGeometry(geometry);\n        }\n\n        direct.verticesNeedUpdate = geometry.verticesNeedUpdate;\n        direct.normalsNeedUpdate = geometry.normalsNeedUpdate;\n        direct.colorsNeedUpdate = geometry.colorsNeedUpdate;\n        direct.uvsNeedUpdate = geometry.uvsNeedUpdate;\n        direct.groupsNeedUpdate = geometry.groupsNeedUpdate;\n        geometry.verticesNeedUpdate = false;\n        geometry.normalsNeedUpdate = false;\n        geometry.colorsNeedUpdate = false;\n        geometry.uvsNeedUpdate = false;\n        geometry.groupsNeedUpdate = false;\n        geometry = direct;\n      }\n\n      var attribute;\n\n      if (geometry.verticesNeedUpdate === true) {\n        attribute = this.attributes.position;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.vertices);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.verticesNeedUpdate = false;\n      }\n\n      if (geometry.normalsNeedUpdate === true) {\n        attribute = this.attributes.normal;\n\n        if (attribute !== undefined) {\n          attribute.copyVector3sArray(geometry.normals);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.normalsNeedUpdate = false;\n      }\n\n      if (geometry.colorsNeedUpdate === true) {\n        attribute = this.attributes.color;\n\n        if (attribute !== undefined) {\n          attribute.copyColorsArray(geometry.colors);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.colorsNeedUpdate = false;\n      }\n\n      if (geometry.uvsNeedUpdate) {\n        attribute = this.attributes.uv;\n\n        if (attribute !== undefined) {\n          attribute.copyVector2sArray(geometry.uvs);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.uvsNeedUpdate = false;\n      }\n\n      if (geometry.lineDistancesNeedUpdate) {\n        attribute = this.attributes.lineDistance;\n\n        if (attribute !== undefined) {\n          attribute.copyArray(geometry.lineDistances);\n          attribute.needsUpdate = true;\n        }\n\n        geometry.lineDistancesNeedUpdate = false;\n      }\n\n      if (geometry.groupsNeedUpdate) {\n        geometry.computeGroups(object.geometry);\n        this.groups = geometry.groups;\n        geometry.groupsNeedUpdate = false;\n      }\n\n      return this;\n    },\n    fromGeometry: function (geometry) {\n      geometry.__directGeometry = new DirectGeometry().fromGeometry(geometry);\n      return this.fromDirectGeometry(geometry.__directGeometry);\n    },\n    fromDirectGeometry: function (geometry) {\n      var positions = new Float32Array(geometry.vertices.length * 3);\n      this.setAttribute('position', new BufferAttribute(positions, 3).copyVector3sArray(geometry.vertices));\n\n      if (geometry.normals.length > 0) {\n        var normals = new Float32Array(geometry.normals.length * 3);\n        this.setAttribute('normal', new BufferAttribute(normals, 3).copyVector3sArray(geometry.normals));\n      }\n\n      if (geometry.colors.length > 0) {\n        var colors = new Float32Array(geometry.colors.length * 3);\n        this.setAttribute('color', new BufferAttribute(colors, 3).copyColorsArray(geometry.colors));\n      }\n\n      if (geometry.uvs.length > 0) {\n        var uvs = new Float32Array(geometry.uvs.length * 2);\n        this.setAttribute('uv', new BufferAttribute(uvs, 2).copyVector2sArray(geometry.uvs));\n      }\n\n      if (geometry.uvs2.length > 0) {\n        var uvs2 = new Float32Array(geometry.uvs2.length * 2);\n        this.setAttribute('uv2', new BufferAttribute(uvs2, 2).copyVector2sArray(geometry.uvs2));\n      } // groups\n\n\n      this.groups = geometry.groups; // morphs\n\n      for (var name in geometry.morphTargets) {\n        var array = [];\n        var morphTargets = geometry.morphTargets[name];\n\n        for (var i = 0, l = morphTargets.length; i < l; i++) {\n          var morphTarget = morphTargets[i];\n          var attribute = new Float32BufferAttribute(morphTarget.data.length * 3, 3);\n          attribute.name = morphTarget.name;\n          array.push(attribute.copyVector3sArray(morphTarget.data));\n        }\n\n        this.morphAttributes[name] = array;\n      } // skinning\n\n\n      if (geometry.skinIndices.length > 0) {\n        var skinIndices = new Float32BufferAttribute(geometry.skinIndices.length * 4, 4);\n        this.setAttribute('skinIndex', skinIndices.copyVector4sArray(geometry.skinIndices));\n      }\n\n      if (geometry.skinWeights.length > 0) {\n        var skinWeights = new Float32BufferAttribute(geometry.skinWeights.length * 4, 4);\n        this.setAttribute('skinWeight', skinWeights.copyVector4sArray(geometry.skinWeights));\n      } //\n\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      return this;\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position !== undefined) {\n        this.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _box$2.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$4.addVectors(this.boundingBox.min, _box$2.min);\n\n              this.boundingBox.expandByPoint(_vector$4);\n\n              _vector$4.addVectors(this.boundingBox.max, _box$2.max);\n\n              this.boundingBox.expandByPoint(_vector$4);\n            } else {\n              this.boundingBox.expandByPoint(_box$2.min);\n              this.boundingBox.expandByPoint(_box$2.max);\n            }\n          }\n        }\n      } else {\n        this.boundingBox.makeEmpty();\n      }\n\n      if (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n        console.error('THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n      }\n    },\n    computeBoundingSphere: function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      var position = this.attributes.position;\n      var morphAttributesPosition = this.morphAttributes.position;\n\n      if (position) {\n        // first, find the center of the bounding sphere\n        var center = this.boundingSphere.center;\n\n        _box$2.setFromBufferAttribute(position); // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n\n            _boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n            if (this.morphTargetsRelative) {\n              _vector$4.addVectors(_box$2.min, _boxMorphTargets.min);\n\n              _box$2.expandByPoint(_vector$4);\n\n              _vector$4.addVectors(_box$2.max, _boxMorphTargets.max);\n\n              _box$2.expandByPoint(_vector$4);\n            } else {\n              _box$2.expandByPoint(_boxMorphTargets.min);\n\n              _box$2.expandByPoint(_boxMorphTargets.max);\n            }\n          }\n        }\n\n        _box$2.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n        // boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n        var maxRadiusSq = 0;\n\n        for (var i = 0, il = position.count; i < il; i++) {\n          _vector$4.fromBufferAttribute(position, i);\n\n          maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n        } // process morph attributes if present\n\n\n        if (morphAttributesPosition) {\n          for (var i = 0, il = morphAttributesPosition.length; i < il; i++) {\n            var morphAttribute = morphAttributesPosition[i];\n            var morphTargetsRelative = this.morphTargetsRelative;\n\n            for (var j = 0, jl = morphAttribute.count; j < jl; j++) {\n              _vector$4.fromBufferAttribute(morphAttribute, j);\n\n              if (morphTargetsRelative) {\n                _offset.fromBufferAttribute(position, j);\n\n                _vector$4.add(_offset);\n              }\n\n              maxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$4));\n            }\n          }\n        }\n\n        this.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n        if (isNaN(this.boundingSphere.radius)) {\n          console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n        }\n      }\n    },\n    computeFaceNormals: function () {// backwards compatibility\n    },\n    computeVertexNormals: function () {\n      var index = this.index;\n      var attributes = this.attributes;\n\n      if (attributes.position) {\n        var positions = attributes.position.array;\n\n        if (attributes.normal === undefined) {\n          this.setAttribute('normal', new BufferAttribute(new Float32Array(positions.length), 3));\n        } else {\n          // reset existing normals to zero\n          var array = attributes.normal.array;\n\n          for (var i = 0, il = array.length; i < il; i++) {\n            array[i] = 0;\n          }\n        }\n\n        var normals = attributes.normal.array;\n        var vA, vB, vC;\n        var pA = new Vector3(),\n            pB = new Vector3(),\n            pC = new Vector3();\n        var cb = new Vector3(),\n            ab = new Vector3(); // indexed elements\n\n        if (index) {\n          var indices = index.array;\n\n          for (var i = 0, il = index.count; i < il; i += 3) {\n            vA = indices[i + 0] * 3;\n            vB = indices[i + 1] * 3;\n            vC = indices[i + 2] * 3;\n            pA.fromArray(positions, vA);\n            pB.fromArray(positions, vB);\n            pC.fromArray(positions, vC);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[vA] += cb.x;\n            normals[vA + 1] += cb.y;\n            normals[vA + 2] += cb.z;\n            normals[vB] += cb.x;\n            normals[vB + 1] += cb.y;\n            normals[vB + 2] += cb.z;\n            normals[vC] += cb.x;\n            normals[vC + 1] += cb.y;\n            normals[vC + 2] += cb.z;\n          }\n        } else {\n          // non-indexed elements (unconnected triangle soup)\n          for (var i = 0, il = positions.length; i < il; i += 9) {\n            pA.fromArray(positions, i);\n            pB.fromArray(positions, i + 3);\n            pC.fromArray(positions, i + 6);\n            cb.subVectors(pC, pB);\n            ab.subVectors(pA, pB);\n            cb.cross(ab);\n            normals[i] = cb.x;\n            normals[i + 1] = cb.y;\n            normals[i + 2] = cb.z;\n            normals[i + 3] = cb.x;\n            normals[i + 4] = cb.y;\n            normals[i + 5] = cb.z;\n            normals[i + 6] = cb.x;\n            normals[i + 7] = cb.y;\n            normals[i + 8] = cb.z;\n          }\n        }\n\n        this.normalizeNormals();\n        attributes.normal.needsUpdate = true;\n      }\n    },\n    merge: function (geometry, offset) {\n      if (!(geometry && geometry.isBufferGeometry)) {\n        console.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n        return;\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n        console.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        if (geometry.attributes[key] === undefined) {\n          continue;\n        }\n\n        var attribute1 = attributes[key];\n        var attributeArray1 = attribute1.array;\n        var attribute2 = geometry.attributes[key];\n        var attributeArray2 = attribute2.array;\n        var attributeOffset = attribute2.itemSize * offset;\n        var length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n        for (var i = 0, j = attributeOffset; i < length; i++, j++) {\n          attributeArray1[j] = attributeArray2[i];\n        }\n      }\n\n      return this;\n    },\n    normalizeNormals: function () {\n      var normals = this.attributes.normal;\n\n      for (var i = 0, il = normals.count; i < il; i++) {\n        _vector$4.x = normals.getX(i);\n        _vector$4.y = normals.getY(i);\n        _vector$4.z = normals.getZ(i);\n\n        _vector$4.normalize();\n\n        normals.setXYZ(i, _vector$4.x, _vector$4.y, _vector$4.z);\n      }\n    },\n    toNonIndexed: function () {\n      function convertBufferAttribute(attribute, indices) {\n        var array = attribute.array;\n        var itemSize = attribute.itemSize;\n        var array2 = new array.constructor(indices.length * itemSize);\n        var index = 0,\n            index2 = 0;\n\n        for (var i = 0, l = indices.length; i < l; i++) {\n          index = indices[i] * itemSize;\n\n          for (var j = 0; j < itemSize; j++) {\n            array2[index2++] = array[index++];\n          }\n        }\n\n        return new BufferAttribute(array2, itemSize);\n      } //\n\n\n      if (this.index === null) {\n        console.warn('THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.');\n        return this;\n      }\n\n      var geometry2 = new BufferGeometry();\n      var indices = this.index.array;\n      var attributes = this.attributes; // attributes\n\n      for (var name in attributes) {\n        var attribute = attributes[name];\n        var newAttribute = convertBufferAttribute(attribute, indices);\n        geometry2.setAttribute(name, newAttribute);\n      } // morph attributes\n\n\n      var morphAttributes = this.morphAttributes;\n\n      for (name in morphAttributes) {\n        var morphArray = [];\n        var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (var i = 0, il = morphAttribute.length; i < il; i++) {\n          var attribute = morphAttribute[i];\n          var newAttribute = convertBufferAttribute(attribute, indices);\n          morphArray.push(newAttribute);\n        }\n\n        geometry2.morphAttributes[name] = morphArray;\n      }\n\n      geometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n      var groups = this.groups;\n\n      for (var i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        geometry2.addGroup(group.start, group.count, group.materialIndex);\n      }\n\n      return geometry2;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'BufferGeometry',\n          generator: 'BufferGeometry.toJSON'\n        }\n      }; // standard BufferGeometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n\n      if (this.name !== '') {\n        data.name = this.name;\n      }\n\n      if (Object.keys(this.userData).length > 0) {\n        data.userData = this.userData;\n      }\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) {\n            data[key] = parameters[key];\n          }\n        }\n\n        return data;\n      }\n\n      data.data = {\n        attributes: {}\n      };\n      var index = this.index;\n\n      if (index !== null) {\n        data.data.index = {\n          type: index.array.constructor.name,\n          array: Array.prototype.slice.call(index.array)\n        };\n      }\n\n      var attributes = this.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var attributeData = attribute.toJSON();\n\n        if (attribute.name !== '') {\n          attributeData.name = attribute.name;\n        }\n\n        data.data.attributes[key] = attributeData;\n      }\n\n      var morphAttributes = {};\n      var hasMorphAttributes = false;\n\n      for (var key in this.morphAttributes) {\n        var attributeArray = this.morphAttributes[key];\n        var array = [];\n\n        for (var i = 0, il = attributeArray.length; i < il; i++) {\n          var attribute = attributeArray[i];\n          var attributeData = attribute.toJSON();\n\n          if (attribute.name !== '') {\n            attributeData.name = attribute.name;\n          }\n\n          array.push(attributeData);\n        }\n\n        if (array.length > 0) {\n          morphAttributes[key] = array;\n          hasMorphAttributes = true;\n        }\n      }\n\n      if (hasMorphAttributes) {\n        data.data.morphAttributes = morphAttributes;\n        data.data.morphTargetsRelative = this.morphTargetsRelative;\n      }\n\n      var groups = this.groups;\n\n      if (groups.length > 0) {\n        data.data.groups = JSON.parse(JSON.stringify(groups));\n      }\n\n      var boundingSphere = this.boundingSphere;\n\n      if (boundingSphere !== null) {\n        data.data.boundingSphere = {\n          center: boundingSphere.center.toArray(),\n          radius: boundingSphere.radius\n        };\n      }\n\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new BufferGeometry().copy(this);\n    },\n    copy: function (source) {\n      var name, i, l; // reset\n\n      this.index = null;\n      this.attributes = {};\n      this.morphAttributes = {};\n      this.groups = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // index\n\n      var index = source.index;\n\n      if (index !== null) {\n        this.setIndex(index.clone());\n      } // attributes\n\n\n      var attributes = source.attributes;\n\n      for (name in attributes) {\n        var attribute = attributes[name];\n        this.setAttribute(name, attribute.clone());\n      } // morph attributes\n\n\n      var morphAttributes = source.morphAttributes;\n\n      for (name in morphAttributes) {\n        var array = [];\n        var morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n        for (i = 0, l = morphAttribute.length; i < l; i++) {\n          array.push(morphAttribute[i].clone());\n        }\n\n        this.morphAttributes[name] = array;\n      }\n\n      this.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n      var groups = source.groups;\n\n      for (i = 0, l = groups.length; i < l; i++) {\n        var group = groups[i];\n        this.addGroup(group.start, group.count, group.materialIndex);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // draw range\n\n\n      this.drawRange.start = source.drawRange.start;\n      this.drawRange.count = source.drawRange.count; // user data\n\n      this.userData = source.userData;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author jonobr1 / http://jonobr1.com/\n   */\n\n  var _inverseMatrix = new Matrix4();\n\n  var _ray = new Ray();\n\n  var _sphere = new Sphere();\n\n  var _vA = new Vector3();\n\n  var _vB = new Vector3();\n\n  var _vC = new Vector3();\n\n  var _tempA = new Vector3();\n\n  var _tempB = new Vector3();\n\n  var _tempC = new Vector3();\n\n  var _morphA = new Vector3();\n\n  var _morphB = new Vector3();\n\n  var _morphC = new Vector3();\n\n  var _uvA = new Vector2();\n\n  var _uvB = new Vector2();\n\n  var _uvC = new Vector2();\n\n  var _intersectionPoint = new Vector3();\n\n  var _intersectionPointWorld = new Vector3();\n\n  function Mesh(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Mesh';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new MeshBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.drawMode = TrianglesDrawMode;\n    this.updateMorphTargets();\n  }\n\n  Mesh.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Mesh,\n    isMesh: true,\n    setDrawMode: function (value) {\n      this.drawMode = value;\n    },\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.drawMode = source.drawMode;\n\n      if (source.morphTargetInfluences !== undefined) {\n        this.morphTargetInfluences = source.morphTargetInfluences.slice();\n      }\n\n      if (source.morphTargetDictionary !== undefined) {\n        this.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n      }\n\n      return this;\n    },\n    updateMorphTargets: function () {\n      var geometry = this.geometry;\n      var m, ml, name;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n              name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    },\n    raycast: function (raycaster, intersects) {\n      var geometry = this.geometry;\n      var material = this.material;\n      var matrixWorld = this.matrixWorld;\n\n      if (material === undefined) {\n        return;\n      } // Checking boundingSphere distance to ray\n\n\n      if (geometry.boundingSphere === null) {\n        geometry.computeBoundingSphere();\n      }\n\n      _sphere.copy(geometry.boundingSphere);\n\n      _sphere.applyMatrix4(matrixWorld);\n\n      if (raycaster.ray.intersectsSphere(_sphere) === false) {\n        return;\n      } //\n\n\n      _inverseMatrix.getInverse(matrixWorld);\n\n      _ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix); // Check boundingBox before continuing\n\n\n      if (geometry.boundingBox !== null) {\n        if (_ray.intersectsBox(geometry.boundingBox) === false) {\n          return;\n        }\n      } // check unsupported draw modes\n\n\n      if (this.drawMode !== TrianglesDrawMode) {\n        console.warn('THREE.Mesh: TriangleStripDrawMode and TriangleFanDrawMode are not supported by .raycast().');\n        return;\n      }\n\n      var intersection;\n\n      if (geometry.isBufferGeometry) {\n        var a, b, c;\n        var index = geometry.index;\n        var position = geometry.attributes.position;\n        var morphPosition = geometry.morphAttributes.position;\n        var morphTargetsRelative = geometry.morphTargetsRelative;\n        var uv = geometry.attributes.uv;\n        var uv2 = geometry.attributes.uv2;\n        var groups = geometry.groups;\n        var drawRange = geometry.drawRange;\n        var i, j, il, jl;\n        var group, groupMaterial;\n        var start, end;\n\n        if (index !== null) {\n          // indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (i = 0, il = groups.length; i < il; i++) {\n              group = groups[i];\n              groupMaterial = material[group.materialIndex];\n              start = Math.max(group.start, drawRange.start);\n              end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n              for (j = start, jl = end; j < jl; j += 3) {\n                a = index.getX(j);\n                b = index.getX(j + 1);\n                c = index.getX(j + 2);\n                intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n                  intersection.face.materialIndex = group.materialIndex;\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            start = Math.max(0, drawRange.start);\n            end = Math.min(index.count, drawRange.start + drawRange.count);\n\n            for (i = start, il = end; i < il; i += 3) {\n              a = index.getX(i);\n              b = index.getX(i + 1);\n              c = index.getX(i + 2);\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        } else if (position !== undefined) {\n          // non-indexed buffer geometry\n          if (Array.isArray(material)) {\n            for (i = 0, il = groups.length; i < il; i++) {\n              group = groups[i];\n              groupMaterial = material[group.materialIndex];\n              start = Math.max(group.start, drawRange.start);\n              end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n              for (j = start, jl = end; j < jl; j += 3) {\n                a = j;\n                b = j + 1;\n                c = j + 2;\n                intersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n                if (intersection) {\n                  intersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n                  intersection.face.materialIndex = group.materialIndex;\n                  intersects.push(intersection);\n                }\n              }\n            }\n          } else {\n            start = Math.max(0, drawRange.start);\n            end = Math.min(position.count, drawRange.start + drawRange.count);\n\n            for (i = start, il = end; i < il; i += 3) {\n              a = i;\n              b = i + 1;\n              c = i + 2;\n              intersection = checkBufferGeometryIntersection(this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n              if (intersection) {\n                intersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n                intersects.push(intersection);\n              }\n            }\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var fvA, fvB, fvC;\n        var isMultiMaterial = Array.isArray(material);\n        var vertices = geometry.vertices;\n        var faces = geometry.faces;\n        var uvs;\n        var faceVertexUvs = geometry.faceVertexUvs[0];\n\n        if (faceVertexUvs.length > 0) {\n          uvs = faceVertexUvs;\n        }\n\n        for (var f = 0, fl = faces.length; f < fl; f++) {\n          var face = faces[f];\n          var faceMaterial = isMultiMaterial ? material[face.materialIndex] : material;\n\n          if (faceMaterial === undefined) {\n            continue;\n          }\n\n          fvA = vertices[face.a];\n          fvB = vertices[face.b];\n          fvC = vertices[face.c];\n          intersection = checkIntersection(this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint);\n\n          if (intersection) {\n            if (uvs && uvs[f]) {\n              var uvs_f = uvs[f];\n\n              _uvA.copy(uvs_f[0]);\n\n              _uvB.copy(uvs_f[1]);\n\n              _uvC.copy(uvs_f[2]);\n\n              intersection.uv = Triangle.getUV(_intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2());\n            }\n\n            intersection.face = face;\n            intersection.faceIndex = f;\n            intersects.push(intersection);\n          }\n        }\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n\n  function checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n    var intersect;\n\n    if (material.side === BackSide) {\n      intersect = ray.intersectTriangle(pC, pB, pA, true, point);\n    } else {\n      intersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n    }\n\n    if (intersect === null) {\n      return null;\n    }\n\n    _intersectionPointWorld.copy(point);\n\n    _intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n    var distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\n    if (distance < raycaster.near || distance > raycaster.far) {\n      return null;\n    }\n\n    return {\n      distance: distance,\n      point: _intersectionPointWorld.clone(),\n      object: object\n    };\n  }\n\n  function checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n    _vA.fromBufferAttribute(position, a);\n\n    _vB.fromBufferAttribute(position, b);\n\n    _vC.fromBufferAttribute(position, c);\n\n    var morphInfluences = object.morphTargetInfluences;\n\n    if (material.morphTargets && morphPosition && morphInfluences) {\n      _morphA.set(0, 0, 0);\n\n      _morphB.set(0, 0, 0);\n\n      _morphC.set(0, 0, 0);\n\n      for (var i = 0, il = morphPosition.length; i < il; i++) {\n        var influence = morphInfluences[i];\n        var morphAttribute = morphPosition[i];\n\n        if (influence === 0) {\n          continue;\n        }\n\n        _tempA.fromBufferAttribute(morphAttribute, a);\n\n        _tempB.fromBufferAttribute(morphAttribute, b);\n\n        _tempC.fromBufferAttribute(morphAttribute, c);\n\n        if (morphTargetsRelative) {\n          _morphA.addScaledVector(_tempA, influence);\n\n          _morphB.addScaledVector(_tempB, influence);\n\n          _morphC.addScaledVector(_tempC, influence);\n        } else {\n          _morphA.addScaledVector(_tempA.sub(_vA), influence);\n\n          _morphB.addScaledVector(_tempB.sub(_vB), influence);\n\n          _morphC.addScaledVector(_tempC.sub(_vC), influence);\n        }\n      }\n\n      _vA.add(_morphA);\n\n      _vB.add(_morphB);\n\n      _vC.add(_morphC);\n    }\n\n    var intersection = checkIntersection(object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint);\n\n    if (intersection) {\n      if (uv) {\n        _uvA.fromBufferAttribute(uv, a);\n\n        _uvB.fromBufferAttribute(uv, b);\n\n        _uvC.fromBufferAttribute(uv, c);\n\n        intersection.uv = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n      }\n\n      if (uv2) {\n        _uvA.fromBufferAttribute(uv2, a);\n\n        _uvB.fromBufferAttribute(uv2, b);\n\n        _uvC.fromBufferAttribute(uv2, c);\n\n        intersection.uv2 = Triangle.getUV(_intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2());\n      }\n\n      var face = new Face3(a, b, c);\n      Triangle.getNormal(_vA, _vB, _vC, face.normal);\n      intersection.face = face;\n    }\n\n    return intersection;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author kile / http://kile.stravaganza.org/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author bhouston / http://clara.io\n   */\n\n\n  var _geometryId = 0; // Geometry uses even numbers as Id\n\n  var _m1$3 = new Matrix4();\n\n  var _obj$1 = new Object3D();\n\n  var _offset$1 = new Vector3();\n\n  function Geometry() {\n    Object.defineProperty(this, 'id', {\n      value: _geometryId += 2\n    });\n    this.uuid = _Math.generateUUID();\n    this.name = '';\n    this.type = 'Geometry';\n    this.vertices = [];\n    this.colors = [];\n    this.faces = [];\n    this.faceVertexUvs = [[]];\n    this.morphTargets = [];\n    this.morphNormals = [];\n    this.skinWeights = [];\n    this.skinIndices = [];\n    this.lineDistances = [];\n    this.boundingBox = null;\n    this.boundingSphere = null; // update flags\n\n    this.elementsNeedUpdate = false;\n    this.verticesNeedUpdate = false;\n    this.uvsNeedUpdate = false;\n    this.normalsNeedUpdate = false;\n    this.colorsNeedUpdate = false;\n    this.lineDistancesNeedUpdate = false;\n    this.groupsNeedUpdate = false;\n  }\n\n  Geometry.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: Geometry,\n    isGeometry: true,\n    applyMatrix: function (matrix) {\n      var normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\n      for (var i = 0, il = this.vertices.length; i < il; i++) {\n        var vertex = this.vertices[i];\n        vertex.applyMatrix4(matrix);\n      }\n\n      for (var i = 0, il = this.faces.length; i < il; i++) {\n        var face = this.faces[i];\n        face.normal.applyMatrix3(normalMatrix).normalize();\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          face.vertexNormals[j].applyMatrix3(normalMatrix).normalize();\n        }\n      }\n\n      if (this.boundingBox !== null) {\n        this.computeBoundingBox();\n      }\n\n      if (this.boundingSphere !== null) {\n        this.computeBoundingSphere();\n      }\n\n      this.verticesNeedUpdate = true;\n      this.normalsNeedUpdate = true;\n      return this;\n    },\n    rotateX: function (angle) {\n      // rotate geometry around world x-axis\n      _m1$3.makeRotationX(angle);\n\n      this.applyMatrix(_m1$3);\n      return this;\n    },\n    rotateY: function (angle) {\n      // rotate geometry around world y-axis\n      _m1$3.makeRotationY(angle);\n\n      this.applyMatrix(_m1$3);\n      return this;\n    },\n    rotateZ: function (angle) {\n      // rotate geometry around world z-axis\n      _m1$3.makeRotationZ(angle);\n\n      this.applyMatrix(_m1$3);\n      return this;\n    },\n    translate: function (x, y, z) {\n      // translate geometry\n      _m1$3.makeTranslation(x, y, z);\n\n      this.applyMatrix(_m1$3);\n      return this;\n    },\n    scale: function (x, y, z) {\n      // scale geometry\n      _m1$3.makeScale(x, y, z);\n\n      this.applyMatrix(_m1$3);\n      return this;\n    },\n    lookAt: function (vector) {\n      _obj$1.lookAt(vector);\n\n      _obj$1.updateMatrix();\n\n      this.applyMatrix(_obj$1.matrix);\n      return this;\n    },\n    fromBufferGeometry: function (geometry) {\n      var scope = this;\n      var indices = geometry.index !== null ? geometry.index.array : undefined;\n      var attributes = geometry.attributes;\n\n      if (attributes.position === undefined) {\n        console.error('THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.');\n        return this;\n      }\n\n      var positions = attributes.position.array;\n      var normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n      var colors = attributes.color !== undefined ? attributes.color.array : undefined;\n      var uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n      var uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n      if (uvs2 !== undefined) {\n        this.faceVertexUvs[1] = [];\n      }\n\n      for (var i = 0; i < positions.length; i += 3) {\n        scope.vertices.push(new Vector3().fromArray(positions, i));\n\n        if (colors !== undefined) {\n          scope.colors.push(new Color().fromArray(colors, i));\n        }\n      }\n\n      function addFace(a, b, c, materialIndex) {\n        var vertexColors = colors === undefined ? [] : [scope.colors[a].clone(), scope.colors[b].clone(), scope.colors[c].clone()];\n        var vertexNormals = normals === undefined ? [] : [new Vector3().fromArray(normals, a * 3), new Vector3().fromArray(normals, b * 3), new Vector3().fromArray(normals, c * 3)];\n        var face = new Face3(a, b, c, vertexNormals, vertexColors, materialIndex);\n        scope.faces.push(face);\n\n        if (uvs !== undefined) {\n          scope.faceVertexUvs[0].push([new Vector2().fromArray(uvs, a * 2), new Vector2().fromArray(uvs, b * 2), new Vector2().fromArray(uvs, c * 2)]);\n        }\n\n        if (uvs2 !== undefined) {\n          scope.faceVertexUvs[1].push([new Vector2().fromArray(uvs2, a * 2), new Vector2().fromArray(uvs2, b * 2), new Vector2().fromArray(uvs2, c * 2)]);\n        }\n      }\n\n      var groups = geometry.groups;\n\n      if (groups.length > 0) {\n        for (var i = 0; i < groups.length; i++) {\n          var group = groups[i];\n          var start = group.start;\n          var count = group.count;\n\n          for (var j = start, jl = start + count; j < jl; j += 3) {\n            if (indices !== undefined) {\n              addFace(indices[j], indices[j + 1], indices[j + 2], group.materialIndex);\n            } else {\n              addFace(j, j + 1, j + 2, group.materialIndex);\n            }\n          }\n        }\n      } else {\n        if (indices !== undefined) {\n          for (var i = 0; i < indices.length; i += 3) {\n            addFace(indices[i], indices[i + 1], indices[i + 2]);\n          }\n        } else {\n          for (var i = 0; i < positions.length / 3; i += 3) {\n            addFace(i, i + 1, i + 2);\n          }\n        }\n      }\n\n      this.computeFaceNormals();\n\n      if (geometry.boundingBox !== null) {\n        this.boundingBox = geometry.boundingBox.clone();\n      }\n\n      if (geometry.boundingSphere !== null) {\n        this.boundingSphere = geometry.boundingSphere.clone();\n      }\n\n      return this;\n    },\n    center: function () {\n      this.computeBoundingBox();\n      this.boundingBox.getCenter(_offset$1).negate();\n      this.translate(_offset$1.x, _offset$1.y, _offset$1.z);\n      return this;\n    },\n    normalize: function () {\n      this.computeBoundingSphere();\n      var center = this.boundingSphere.center;\n      var radius = this.boundingSphere.radius;\n      var s = radius === 0 ? 1 : 1.0 / radius;\n      var matrix = new Matrix4();\n      matrix.set(s, 0, 0, -s * center.x, 0, s, 0, -s * center.y, 0, 0, s, -s * center.z, 0, 0, 0, 1);\n      this.applyMatrix(matrix);\n      return this;\n    },\n    computeFaceNormals: function () {\n      var cb = new Vector3(),\n          ab = new Vector3();\n\n      for (var f = 0, fl = this.faces.length; f < fl; f++) {\n        var face = this.faces[f];\n        var vA = this.vertices[face.a];\n        var vB = this.vertices[face.b];\n        var vC = this.vertices[face.c];\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        face.normal.copy(cb);\n      }\n    },\n    computeVertexNormals: function (areaWeighted) {\n      if (areaWeighted === undefined) {\n        areaWeighted = true;\n      }\n\n      var v, vl, f, fl, face, vertices;\n      vertices = new Array(this.vertices.length);\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v] = new Vector3();\n      }\n\n      if (areaWeighted) {\n        // vertex normals weighted by triangle areas\n        // http://www.iquilezles.org/www/articles/normals/normals.htm\n        var vA, vB, vC;\n        var cb = new Vector3(),\n            ab = new Vector3();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vA = this.vertices[face.a];\n          vB = this.vertices[face.b];\n          vC = this.vertices[face.c];\n          cb.subVectors(vC, vB);\n          ab.subVectors(vA, vB);\n          cb.cross(ab);\n          vertices[face.a].add(cb);\n          vertices[face.b].add(cb);\n          vertices[face.c].add(cb);\n        }\n      } else {\n        this.computeFaceNormals();\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          vertices[face.a].add(face.normal);\n          vertices[face.b].add(face.normal);\n          vertices[face.c].add(face.normal);\n        }\n      }\n\n      for (v = 0, vl = this.vertices.length; v < vl; v++) {\n        vertices[v].normalize();\n      }\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(vertices[face.a]);\n          vertexNormals[1].copy(vertices[face.b]);\n          vertexNormals[2].copy(vertices[face.c]);\n        } else {\n          vertexNormals[0] = vertices[face.a].clone();\n          vertexNormals[1] = vertices[face.b].clone();\n          vertexNormals[2] = vertices[face.c].clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeFlatVertexNormals: function () {\n      var f, fl, face;\n      this.computeFaceNormals();\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        var vertexNormals = face.vertexNormals;\n\n        if (vertexNormals.length === 3) {\n          vertexNormals[0].copy(face.normal);\n          vertexNormals[1].copy(face.normal);\n          vertexNormals[2].copy(face.normal);\n        } else {\n          vertexNormals[0] = face.normal.clone();\n          vertexNormals[1] = face.normal.clone();\n          vertexNormals[2] = face.normal.clone();\n        }\n      }\n\n      if (this.faces.length > 0) {\n        this.normalsNeedUpdate = true;\n      }\n    },\n    computeMorphNormals: function () {\n      var i, il, f, fl, face; // save original normals\n      // - create temp variables on first access\n      //   otherwise just copy (for faster repeated calls)\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n\n        if (!face.__originalFaceNormal) {\n          face.__originalFaceNormal = face.normal.clone();\n        } else {\n          face.__originalFaceNormal.copy(face.normal);\n        }\n\n        if (!face.__originalVertexNormals) {\n          face.__originalVertexNormals = [];\n        }\n\n        for (i = 0, il = face.vertexNormals.length; i < il; i++) {\n          if (!face.__originalVertexNormals[i]) {\n            face.__originalVertexNormals[i] = face.vertexNormals[i].clone();\n          } else {\n            face.__originalVertexNormals[i].copy(face.vertexNormals[i]);\n          }\n        }\n      } // use temp geometry to compute face and vertex normals for each morph\n\n\n      var tmpGeo = new Geometry();\n      tmpGeo.faces = this.faces;\n\n      for (i = 0, il = this.morphTargets.length; i < il; i++) {\n        // create on first access\n        if (!this.morphNormals[i]) {\n          this.morphNormals[i] = {};\n          this.morphNormals[i].faceNormals = [];\n          this.morphNormals[i].vertexNormals = [];\n          var dstNormalsFace = this.morphNormals[i].faceNormals;\n          var dstNormalsVertex = this.morphNormals[i].vertexNormals;\n          var faceNormal, vertexNormals;\n\n          for (f = 0, fl = this.faces.length; f < fl; f++) {\n            faceNormal = new Vector3();\n            vertexNormals = {\n              a: new Vector3(),\n              b: new Vector3(),\n              c: new Vector3()\n            };\n            dstNormalsFace.push(faceNormal);\n            dstNormalsVertex.push(vertexNormals);\n          }\n        }\n\n        var morphNormals = this.morphNormals[i]; // set vertices to morph target\n\n        tmpGeo.vertices = this.morphTargets[i].vertices; // compute morph normals\n\n        tmpGeo.computeFaceNormals();\n        tmpGeo.computeVertexNormals(); // store morph normals\n\n        var faceNormal, vertexNormals;\n\n        for (f = 0, fl = this.faces.length; f < fl; f++) {\n          face = this.faces[f];\n          faceNormal = morphNormals.faceNormals[f];\n          vertexNormals = morphNormals.vertexNormals[f];\n          faceNormal.copy(face.normal);\n          vertexNormals.a.copy(face.vertexNormals[0]);\n          vertexNormals.b.copy(face.vertexNormals[1]);\n          vertexNormals.c.copy(face.vertexNormals[2]);\n        }\n      } // restore original normals\n\n\n      for (f = 0, fl = this.faces.length; f < fl; f++) {\n        face = this.faces[f];\n        face.normal = face.__originalFaceNormal;\n        face.vertexNormals = face.__originalVertexNormals;\n      }\n    },\n    computeBoundingBox: function () {\n      if (this.boundingBox === null) {\n        this.boundingBox = new Box3();\n      }\n\n      this.boundingBox.setFromPoints(this.vertices);\n    },\n    computeBoundingSphere: function () {\n      if (this.boundingSphere === null) {\n        this.boundingSphere = new Sphere();\n      }\n\n      this.boundingSphere.setFromPoints(this.vertices);\n    },\n    merge: function (geometry, matrix, materialIndexOffset) {\n      if (!(geometry && geometry.isGeometry)) {\n        console.error('THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry);\n        return;\n      }\n\n      var normalMatrix,\n          vertexOffset = this.vertices.length,\n          vertices1 = this.vertices,\n          vertices2 = geometry.vertices,\n          faces1 = this.faces,\n          faces2 = geometry.faces,\n          colors1 = this.colors,\n          colors2 = geometry.colors;\n\n      if (materialIndexOffset === undefined) {\n        materialIndexOffset = 0;\n      }\n\n      if (matrix !== undefined) {\n        normalMatrix = new Matrix3().getNormalMatrix(matrix);\n      } // vertices\n\n\n      for (var i = 0, il = vertices2.length; i < il; i++) {\n        var vertex = vertices2[i];\n        var vertexCopy = vertex.clone();\n\n        if (matrix !== undefined) {\n          vertexCopy.applyMatrix4(matrix);\n        }\n\n        vertices1.push(vertexCopy);\n      } // colors\n\n\n      for (var i = 0, il = colors2.length; i < il; i++) {\n        colors1.push(colors2[i].clone());\n      } // faces\n\n\n      for (i = 0, il = faces2.length; i < il; i++) {\n        var face = faces2[i],\n            faceCopy,\n            normal,\n            color,\n            faceVertexNormals = face.vertexNormals,\n            faceVertexColors = face.vertexColors;\n        faceCopy = new Face3(face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset);\n        faceCopy.normal.copy(face.normal);\n\n        if (normalMatrix !== undefined) {\n          faceCopy.normal.applyMatrix3(normalMatrix).normalize();\n        }\n\n        for (var j = 0, jl = faceVertexNormals.length; j < jl; j++) {\n          normal = faceVertexNormals[j].clone();\n\n          if (normalMatrix !== undefined) {\n            normal.applyMatrix3(normalMatrix).normalize();\n          }\n\n          faceCopy.vertexNormals.push(normal);\n        }\n\n        faceCopy.color.copy(face.color);\n\n        for (var j = 0, jl = faceVertexColors.length; j < jl; j++) {\n          color = faceVertexColors[j];\n          faceCopy.vertexColors.push(color.clone());\n        }\n\n        faceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n        faces1.push(faceCopy);\n      } // uvs\n\n\n      for (var i = 0, il = geometry.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs2 = geometry.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (var j = 0, jl = faceVertexUvs2.length; j < jl; j++) {\n          var uvs2 = faceVertexUvs2[j],\n              uvsCopy = [];\n\n          for (var k = 0, kl = uvs2.length; k < kl; k++) {\n            uvsCopy.push(uvs2[k].clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      }\n    },\n    mergeMesh: function (mesh) {\n      if (!(mesh && mesh.isMesh)) {\n        console.error('THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh);\n        return;\n      }\n\n      if (mesh.matrixAutoUpdate) {\n        mesh.updateMatrix();\n      }\n\n      this.merge(mesh.geometry, mesh.matrix);\n    },\n\n    /*\n     * Checks for duplicate vertices with hashmap.\n     * Duplicated vertices are removed\n     * and faces' vertices are updated.\n     */\n    mergeVertices: function () {\n      var verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\n      var unique = [],\n          changes = [];\n      var v, key;\n      var precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\n      var precision = Math.pow(10, precisionPoints);\n      var i, il, face;\n      var indices, j, jl;\n\n      for (i = 0, il = this.vertices.length; i < il; i++) {\n        v = this.vertices[i];\n        key = Math.round(v.x * precision) + '_' + Math.round(v.y * precision) + '_' + Math.round(v.z * precision);\n\n        if (verticesMap[key] === undefined) {\n          verticesMap[key] = i;\n          unique.push(this.vertices[i]);\n          changes[i] = unique.length - 1;\n        } else {\n          //console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n          changes[i] = changes[verticesMap[key]];\n        }\n      } // if faces are completely degenerate after merging vertices, we\n      // have to remove them from the geometry.\n\n\n      var faceIndicesToRemove = [];\n\n      for (i = 0, il = this.faces.length; i < il; i++) {\n        face = this.faces[i];\n        face.a = changes[face.a];\n        face.b = changes[face.b];\n        face.c = changes[face.c];\n        indices = [face.a, face.b, face.c]; // if any duplicate vertices are found in a Face3\n        // we have to remove the face as nothing can be saved\n\n        for (var n = 0; n < 3; n++) {\n          if (indices[n] === indices[(n + 1) % 3]) {\n            faceIndicesToRemove.push(i);\n            break;\n          }\n        }\n      }\n\n      for (i = faceIndicesToRemove.length - 1; i >= 0; i--) {\n        var idx = faceIndicesToRemove[i];\n        this.faces.splice(idx, 1);\n\n        for (j = 0, jl = this.faceVertexUvs.length; j < jl; j++) {\n          this.faceVertexUvs[j].splice(idx, 1);\n        }\n      } // Use unique set of vertices\n\n\n      var diff = this.vertices.length - unique.length;\n      this.vertices = unique;\n      return diff;\n    },\n    setFromPoints: function (points) {\n      this.vertices = [];\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        this.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return this;\n    },\n    sortFacesByMaterialIndex: function () {\n      var faces = this.faces;\n      var length = faces.length; // tag faces\n\n      for (var i = 0; i < length; i++) {\n        faces[i]._id = i;\n      } // sort faces\n\n\n      function materialIndexSort(a, b) {\n        return a.materialIndex - b.materialIndex;\n      }\n\n      faces.sort(materialIndexSort); // sort uvs\n\n      var uvs1 = this.faceVertexUvs[0];\n      var uvs2 = this.faceVertexUvs[1];\n      var newUvs1, newUvs2;\n\n      if (uvs1 && uvs1.length === length) {\n        newUvs1 = [];\n      }\n\n      if (uvs2 && uvs2.length === length) {\n        newUvs2 = [];\n      }\n\n      for (var i = 0; i < length; i++) {\n        var id = faces[i]._id;\n\n        if (newUvs1) {\n          newUvs1.push(uvs1[id]);\n        }\n\n        if (newUvs2) {\n          newUvs2.push(uvs2[id]);\n        }\n      }\n\n      if (newUvs1) {\n        this.faceVertexUvs[0] = newUvs1;\n      }\n\n      if (newUvs2) {\n        this.faceVertexUvs[1] = newUvs2;\n      }\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Geometry',\n          generator: 'Geometry.toJSON'\n        }\n      }; // standard Geometry serialization\n\n      data.uuid = this.uuid;\n      data.type = this.type;\n\n      if (this.name !== '') {\n        data.name = this.name;\n      }\n\n      if (this.parameters !== undefined) {\n        var parameters = this.parameters;\n\n        for (var key in parameters) {\n          if (parameters[key] !== undefined) {\n            data[key] = parameters[key];\n          }\n        }\n\n        return data;\n      }\n\n      var vertices = [];\n\n      for (var i = 0; i < this.vertices.length; i++) {\n        var vertex = this.vertices[i];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n\n      var faces = [];\n      var normals = [];\n      var normalsHash = {};\n      var colors = [];\n      var colorsHash = {};\n      var uvs = [];\n      var uvsHash = {};\n\n      for (var i = 0; i < this.faces.length; i++) {\n        var face = this.faces[i];\n        var hasMaterial = true;\n        var hasFaceUv = false; // deprecated\n\n        var hasFaceVertexUv = this.faceVertexUvs[0][i] !== undefined;\n        var hasFaceNormal = face.normal.length() > 0;\n        var hasFaceVertexNormal = face.vertexNormals.length > 0;\n        var hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n        var hasFaceVertexColor = face.vertexColors.length > 0;\n        var faceType = 0;\n        faceType = setBit(faceType, 0, 0); // isQuad\n\n        faceType = setBit(faceType, 1, hasMaterial);\n        faceType = setBit(faceType, 2, hasFaceUv);\n        faceType = setBit(faceType, 3, hasFaceVertexUv);\n        faceType = setBit(faceType, 4, hasFaceNormal);\n        faceType = setBit(faceType, 5, hasFaceVertexNormal);\n        faceType = setBit(faceType, 6, hasFaceColor);\n        faceType = setBit(faceType, 7, hasFaceVertexColor);\n        faces.push(faceType);\n        faces.push(face.a, face.b, face.c);\n        faces.push(face.materialIndex);\n\n        if (hasFaceVertexUv) {\n          var faceVertexUvs = this.faceVertexUvs[0][i];\n          faces.push(getUvIndex(faceVertexUvs[0]), getUvIndex(faceVertexUvs[1]), getUvIndex(faceVertexUvs[2]));\n        }\n\n        if (hasFaceNormal) {\n          faces.push(getNormalIndex(face.normal));\n        }\n\n        if (hasFaceVertexNormal) {\n          var vertexNormals = face.vertexNormals;\n          faces.push(getNormalIndex(vertexNormals[0]), getNormalIndex(vertexNormals[1]), getNormalIndex(vertexNormals[2]));\n        }\n\n        if (hasFaceColor) {\n          faces.push(getColorIndex(face.color));\n        }\n\n        if (hasFaceVertexColor) {\n          var vertexColors = face.vertexColors;\n          faces.push(getColorIndex(vertexColors[0]), getColorIndex(vertexColors[1]), getColorIndex(vertexColors[2]));\n        }\n      }\n\n      function setBit(value, position, enabled) {\n        return enabled ? value | 1 << position : value & ~(1 << position);\n      }\n\n      function getNormalIndex(normal) {\n        var hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n        if (normalsHash[hash] !== undefined) {\n          return normalsHash[hash];\n        }\n\n        normalsHash[hash] = normals.length / 3;\n        normals.push(normal.x, normal.y, normal.z);\n        return normalsHash[hash];\n      }\n\n      function getColorIndex(color) {\n        var hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n        if (colorsHash[hash] !== undefined) {\n          return colorsHash[hash];\n        }\n\n        colorsHash[hash] = colors.length;\n        colors.push(color.getHex());\n        return colorsHash[hash];\n      }\n\n      function getUvIndex(uv) {\n        var hash = uv.x.toString() + uv.y.toString();\n\n        if (uvsHash[hash] !== undefined) {\n          return uvsHash[hash];\n        }\n\n        uvsHash[hash] = uvs.length / 2;\n        uvs.push(uv.x, uv.y);\n        return uvsHash[hash];\n      }\n\n      data.data = {};\n      data.data.vertices = vertices;\n      data.data.normals = normals;\n\n      if (colors.length > 0) {\n        data.data.colors = colors;\n      }\n\n      if (uvs.length > 0) {\n        data.data.uvs = [uvs];\n      } // temporal backward compatibility\n\n\n      data.data.faces = faces;\n      return data;\n    },\n    clone: function () {\n      /*\n       // Handle primitives\n      \t var parameters = this.parameters;\n      \t if ( parameters !== undefined ) {\n      \t var values = [];\n      \t for ( var key in parameters ) {\n      \t values.push( parameters[ key ] );\n      \t }\n      \t var geometry = Object.create( this.constructor.prototype );\n       this.constructor.apply( geometry, values );\n       return geometry;\n      \t }\n      \t return new this.constructor().copy( this );\n       */\n      return new Geometry().copy(this);\n    },\n    copy: function (source) {\n      var i, il, j, jl, k, kl; // reset\n\n      this.vertices = [];\n      this.colors = [];\n      this.faces = [];\n      this.faceVertexUvs = [[]];\n      this.morphTargets = [];\n      this.morphNormals = [];\n      this.skinWeights = [];\n      this.skinIndices = [];\n      this.lineDistances = [];\n      this.boundingBox = null;\n      this.boundingSphere = null; // name\n\n      this.name = source.name; // vertices\n\n      var vertices = source.vertices;\n\n      for (i = 0, il = vertices.length; i < il; i++) {\n        this.vertices.push(vertices[i].clone());\n      } // colors\n\n\n      var colors = source.colors;\n\n      for (i = 0, il = colors.length; i < il; i++) {\n        this.colors.push(colors[i].clone());\n      } // faces\n\n\n      var faces = source.faces;\n\n      for (i = 0, il = faces.length; i < il; i++) {\n        this.faces.push(faces[i].clone());\n      } // face vertex uvs\n\n\n      for (i = 0, il = source.faceVertexUvs.length; i < il; i++) {\n        var faceVertexUvs = source.faceVertexUvs[i];\n\n        if (this.faceVertexUvs[i] === undefined) {\n          this.faceVertexUvs[i] = [];\n        }\n\n        for (j = 0, jl = faceVertexUvs.length; j < jl; j++) {\n          var uvs = faceVertexUvs[j],\n              uvsCopy = [];\n\n          for (k = 0, kl = uvs.length; k < kl; k++) {\n            var uv = uvs[k];\n            uvsCopy.push(uv.clone());\n          }\n\n          this.faceVertexUvs[i].push(uvsCopy);\n        }\n      } // morph targets\n\n\n      var morphTargets = source.morphTargets;\n\n      for (i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = {};\n        morphTarget.name = morphTargets[i].name; // vertices\n\n        if (morphTargets[i].vertices !== undefined) {\n          morphTarget.vertices = [];\n\n          for (j = 0, jl = morphTargets[i].vertices.length; j < jl; j++) {\n            morphTarget.vertices.push(morphTargets[i].vertices[j].clone());\n          }\n        } // normals\n\n\n        if (morphTargets[i].normals !== undefined) {\n          morphTarget.normals = [];\n\n          for (j = 0, jl = morphTargets[i].normals.length; j < jl; j++) {\n            morphTarget.normals.push(morphTargets[i].normals[j].clone());\n          }\n        }\n\n        this.morphTargets.push(morphTarget);\n      } // morph normals\n\n\n      var morphNormals = source.morphNormals;\n\n      for (i = 0, il = morphNormals.length; i < il; i++) {\n        var morphNormal = {}; // vertex normals\n\n        if (morphNormals[i].vertexNormals !== undefined) {\n          morphNormal.vertexNormals = [];\n\n          for (j = 0, jl = morphNormals[i].vertexNormals.length; j < jl; j++) {\n            var srcVertexNormal = morphNormals[i].vertexNormals[j];\n            var destVertexNormal = {};\n            destVertexNormal.a = srcVertexNormal.a.clone();\n            destVertexNormal.b = srcVertexNormal.b.clone();\n            destVertexNormal.c = srcVertexNormal.c.clone();\n            morphNormal.vertexNormals.push(destVertexNormal);\n          }\n        } // face normals\n\n\n        if (morphNormals[i].faceNormals !== undefined) {\n          morphNormal.faceNormals = [];\n\n          for (j = 0, jl = morphNormals[i].faceNormals.length; j < jl; j++) {\n            morphNormal.faceNormals.push(morphNormals[i].faceNormals[j].clone());\n          }\n        }\n\n        this.morphNormals.push(morphNormal);\n      } // skin weights\n\n\n      var skinWeights = source.skinWeights;\n\n      for (i = 0, il = skinWeights.length; i < il; i++) {\n        this.skinWeights.push(skinWeights[i].clone());\n      } // skin indices\n\n\n      var skinIndices = source.skinIndices;\n\n      for (i = 0, il = skinIndices.length; i < il; i++) {\n        this.skinIndices.push(skinIndices[i].clone());\n      } // line distances\n\n\n      var lineDistances = source.lineDistances;\n\n      for (i = 0, il = lineDistances.length; i < il; i++) {\n        this.lineDistances.push(lineDistances[i]);\n      } // bounding box\n\n\n      var boundingBox = source.boundingBox;\n\n      if (boundingBox !== null) {\n        this.boundingBox = boundingBox.clone();\n      } // bounding sphere\n\n\n      var boundingSphere = source.boundingSphere;\n\n      if (boundingSphere !== null) {\n        this.boundingSphere = boundingSphere.clone();\n      } // update flags\n\n\n      this.elementsNeedUpdate = source.elementsNeedUpdate;\n      this.verticesNeedUpdate = source.verticesNeedUpdate;\n      this.uvsNeedUpdate = source.uvsNeedUpdate;\n      this.normalsNeedUpdate = source.normalsNeedUpdate;\n      this.colorsNeedUpdate = source.colorsNeedUpdate;\n      this.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n      this.groupsNeedUpdate = source.groupsNeedUpdate;\n      return this;\n    },\n    dispose: function () {\n      this.dispatchEvent({\n        type: 'dispose'\n      });\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // BoxGeometry\n\n  var BoxGeometry =\n  /*@__PURE__*/\n  function (Geometry) {\n    function BoxGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n      Geometry.call(this);\n      this.type = 'BoxGeometry';\n      this.parameters = {\n        width: width,\n        height: height,\n        depth: depth,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        depthSegments: depthSegments\n      };\n      this.fromBufferGeometry(new BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments));\n      this.mergeVertices();\n    }\n\n    if (Geometry) BoxGeometry.__proto__ = Geometry;\n    BoxGeometry.prototype = Object.create(Geometry && Geometry.prototype);\n    BoxGeometry.prototype.constructor = BoxGeometry;\n    return BoxGeometry;\n  }(Geometry); // BoxBufferGeometry\n\n\n  var BoxBufferGeometry =\n  /*@__PURE__*/\n  function (BufferGeometry) {\n    function BoxBufferGeometry(width, height, depth, widthSegments, heightSegments, depthSegments) {\n      BufferGeometry.call(this);\n      this.type = 'BoxBufferGeometry';\n      this.parameters = {\n        width: width,\n        height: height,\n        depth: depth,\n        widthSegments: widthSegments,\n        heightSegments: heightSegments,\n        depthSegments: depthSegments\n      };\n      var scope = this;\n      width = width || 1;\n      height = height || 1;\n      depth = depth || 1; // segments\n\n      widthSegments = Math.floor(widthSegments) || 1;\n      heightSegments = Math.floor(heightSegments) || 1;\n      depthSegments = Math.floor(depthSegments) || 1; // buffers\n\n      var indices = [];\n      var vertices = [];\n      var normals = [];\n      var uvs = []; // helper variables\n\n      var numberOfVertices = 0;\n      var groupStart = 0; // build each side of the box geometry\n\n      buildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n      buildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n      buildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n      buildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n      buildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n      buildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n      // build geometry\n\n      this.setIndex(indices);\n      this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n      this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n      this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n      function buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n        var segmentWidth = width / gridX;\n        var segmentHeight = height / gridY;\n        var widthHalf = width / 2;\n        var heightHalf = height / 2;\n        var depthHalf = depth / 2;\n        var gridX1 = gridX + 1;\n        var gridY1 = gridY + 1;\n        var vertexCounter = 0;\n        var groupCount = 0;\n        var ix, iy;\n        var vector = new Vector3(); // generate vertices, normals and uvs\n\n        for (iy = 0; iy < gridY1; iy++) {\n          var y = iy * segmentHeight - heightHalf;\n\n          for (ix = 0; ix < gridX1; ix++) {\n            var x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n            vector[u] = x * udir;\n            vector[v] = y * vdir;\n            vector[w] = depthHalf; // now apply vector to vertex buffer\n\n            vertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n            vector[u] = 0;\n            vector[v] = 0;\n            vector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n            normals.push(vector.x, vector.y, vector.z); // uvs\n\n            uvs.push(ix / gridX);\n            uvs.push(1 - iy / gridY); // counters\n\n            vertexCounter += 1;\n          }\n        } // indices\n        // 1. you need three indices to draw a single face\n        // 2. a single segment consists of two faces\n        // 3. so we need to generate six (2*3) indices per segment\n\n\n        for (iy = 0; iy < gridY; iy++) {\n          for (ix = 0; ix < gridX; ix++) {\n            var a = numberOfVertices + ix + gridX1 * iy;\n            var b = numberOfVertices + ix + gridX1 * (iy + 1);\n            var c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n            var d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n            indices.push(a, b, d);\n            indices.push(b, c, d); // increase counter\n\n            groupCount += 6;\n          }\n        } // add a group to the geometry. this will ensure multi material support\n\n\n        scope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n        groupStart += groupCount; // update total number of vertices\n\n        numberOfVertices += vertexCounter;\n      }\n    }\n\n    if (BufferGeometry) BoxBufferGeometry.__proto__ = BufferGeometry;\n    BoxBufferGeometry.prototype = Object.create(BufferGeometry && BufferGeometry.prototype);\n    BoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n    return BoxBufferGeometry;\n  }(BufferGeometry);\n  /**\n   * Uniform Utilities\n   */\n\n\n  function cloneUniforms(src) {\n    var dst = {};\n\n    for (var u in src) {\n      dst[u] = {};\n\n      for (var p in src[u]) {\n        var property = src[u][p];\n\n        if (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture)) {\n          dst[u][p] = property.clone();\n        } else if (Array.isArray(property)) {\n          dst[u][p] = property.slice();\n        } else {\n          dst[u][p] = property;\n        }\n      }\n    }\n\n    return dst;\n  }\n\n  function mergeUniforms(uniforms) {\n    var merged = {};\n\n    for (var u = 0; u < uniforms.length; u++) {\n      var tmp = cloneUniforms(uniforms[u]);\n\n      for (var p in tmp) {\n        merged[p] = tmp[p];\n      }\n    }\n\n    return merged;\n  } // Legacy\n\n\n  var UniformsUtils = {\n    clone: cloneUniforms,\n    merge: mergeUniforms\n  };\n  var default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n  var default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  defines: { \"label\" : \"value\" },\n   *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n   *\n   *  fragmentShader: <string>,\n   *  vertexShader: <string>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  lights: <bool>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function ShaderMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShaderMaterial';\n    this.defines = {};\n    this.uniforms = {};\n    this.vertexShader = default_vertex;\n    this.fragmentShader = default_fragment;\n    this.linewidth = 1;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false; // set to use scene fog\n\n    this.lights = false; // set to use scene lights\n\n    this.clipping = false; // set to use user-defined clipping planes\n\n    this.skinning = false; // set to use skinning attribute streams\n\n    this.morphTargets = false; // set to use morph targets\n\n    this.morphNormals = false; // set to use morph normals\n\n    this.extensions = {\n      derivatives: false,\n      // set to use derivatives\n      fragDepth: false,\n      // set to use fragment depth values\n      drawBuffers: false,\n      // set to use draw buffers\n      shaderTextureLOD: false // set to use shader texture LOD\n\n    }; // When rendered geometry doesn't include these attributes but the material does,\n    // use these default values in WebGL. This avoids errors when buffer data is missing.\n\n    this.defaultAttributeValues = {\n      'color': [1, 1, 1],\n      'uv': [0, 0],\n      'uv2': [0, 0]\n    };\n    this.index0AttributeName = undefined;\n    this.uniformsNeedUpdate = false;\n\n    if (parameters !== undefined) {\n      if (parameters.attributes !== undefined) {\n        console.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n      }\n\n      this.setValues(parameters);\n    }\n  }\n\n  ShaderMaterial.prototype = Object.create(Material.prototype);\n  ShaderMaterial.prototype.constructor = ShaderMaterial;\n  ShaderMaterial.prototype.isShaderMaterial = true;\n\n  ShaderMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.fragmentShader = source.fragmentShader;\n    this.vertexShader = source.vertexShader;\n    this.uniforms = cloneUniforms(source.uniforms);\n    this.defines = Object.assign({}, source.defines);\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.lights = source.lights;\n    this.clipping = source.clipping;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    this.extensions = source.extensions;\n    return this;\n  };\n\n  ShaderMaterial.prototype.toJSON = function (meta) {\n    var data = Material.prototype.toJSON.call(this, meta);\n    data.uniforms = {};\n\n    for (var name in this.uniforms) {\n      var uniform = this.uniforms[name];\n      var value = uniform.value;\n\n      if (value && value.isTexture) {\n        data.uniforms[name] = {\n          type: 't',\n          value: value.toJSON(meta).uuid\n        };\n      } else if (value && value.isColor) {\n        data.uniforms[name] = {\n          type: 'c',\n          value: value.getHex()\n        };\n      } else if (value && value.isVector2) {\n        data.uniforms[name] = {\n          type: 'v2',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector3) {\n        data.uniforms[name] = {\n          type: 'v3',\n          value: value.toArray()\n        };\n      } else if (value && value.isVector4) {\n        data.uniforms[name] = {\n          type: 'v4',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix3) {\n        data.uniforms[name] = {\n          type: 'm3',\n          value: value.toArray()\n        };\n      } else if (value && value.isMatrix4) {\n        data.uniforms[name] = {\n          type: 'm4',\n          value: value.toArray()\n        };\n      } else {\n        data.uniforms[name] = {\n          value: value\n        }; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n      }\n    }\n\n    if (Object.keys(this.defines).length > 0) {\n      data.defines = this.defines;\n    }\n\n    data.vertexShader = this.vertexShader;\n    data.fragmentShader = this.fragmentShader;\n    var extensions = {};\n\n    for (var key in this.extensions) {\n      if (this.extensions[key] === true) {\n        extensions[key] = true;\n      }\n    }\n\n    if (Object.keys(extensions).length > 0) {\n      data.extensions = extensions;\n    }\n\n    return data;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   * @author WestLangley / http://github.com/WestLangley\n  */\n\n\n  function Camera() {\n    Object3D.call(this);\n    this.type = 'Camera';\n    this.matrixWorldInverse = new Matrix4();\n    this.projectionMatrix = new Matrix4();\n    this.projectionMatrixInverse = new Matrix4();\n  }\n\n  Camera.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Camera,\n    isCamera: true,\n    copy: function (source, recursive) {\n      Object3D.prototype.copy.call(this, source, recursive);\n      this.matrixWorldInverse.copy(source.matrixWorldInverse);\n      this.projectionMatrix.copy(source.projectionMatrix);\n      this.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n      return this;\n    },\n    getWorldDirection: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Camera: .getWorldDirection() target is now required');\n        target = new Vector3();\n      }\n\n      this.updateMatrixWorld(true);\n      var e = this.matrixWorld.elements;\n      return target.set(-e[8], -e[9], -e[10]).normalize();\n    },\n    updateMatrixWorld: function (force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      this.matrixWorldInverse.getInverse(this.matrixWorld);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author greggman / http://games.greggman.com/\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author tschw\n   */\n\n  function PerspectiveCamera(fov, aspect, near, far) {\n    Camera.call(this);\n    this.type = 'PerspectiveCamera';\n    this.fov = fov !== undefined ? fov : 50;\n    this.zoom = 1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.focus = 10;\n    this.aspect = aspect !== undefined ? aspect : 1;\n    this.view = null;\n    this.filmGauge = 35; // width of the film (default in millimeters)\n\n    this.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n    this.updateProjectionMatrix();\n  }\n\n  PerspectiveCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: PerspectiveCamera,\n    isPerspectiveCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.fov = source.fov;\n      this.zoom = source.zoom;\n      this.near = source.near;\n      this.far = source.far;\n      this.focus = source.focus;\n      this.aspect = source.aspect;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      this.filmGauge = source.filmGauge;\n      this.filmOffset = source.filmOffset;\n      return this;\n    },\n\n    /**\n     * Sets the FOV by focal length in respect to the current .filmGauge.\n     *\n     * The default film gauge is 35, so that the focal length can be specified for\n     * a 35mm (full frame) camera.\n     *\n     * Values for focal length and film gauge must have the same unit.\n     */\n    setFocalLength: function (focalLength) {\n      // see http://www.bobatkins.com/photography/technical/field_of_view.html\n      var vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n      this.fov = _Math.RAD2DEG * 2 * Math.atan(vExtentSlope);\n      this.updateProjectionMatrix();\n    },\n\n    /**\n     * Calculates the focal length from the current .fov and .filmGauge.\n     */\n    getFocalLength: function () {\n      var vExtentSlope = Math.tan(_Math.DEG2RAD * 0.5 * this.fov);\n      return 0.5 * this.getFilmHeight() / vExtentSlope;\n    },\n    getEffectiveFOV: function () {\n      return _Math.RAD2DEG * 2 * Math.atan(Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom);\n    },\n    getFilmWidth: function () {\n      // film not completely covered in portrait format (aspect < 1)\n      return this.filmGauge * Math.min(this.aspect, 1);\n    },\n    getFilmHeight: function () {\n      // film not completely covered in landscape format (aspect > 1)\n      return this.filmGauge / Math.max(this.aspect, 1);\n    },\n\n    /**\n     * Sets an offset in a larger frustum. This is useful for multi-window or\n     * multi-monitor/multi-machine setups.\n     *\n     * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n     * the monitors are in grid like this\n     *\n     *   +---+---+---+\n     *   | A | B | C |\n     *   +---+---+---+\n     *   | D | E | F |\n     *   +---+---+---+\n     *\n     * then for each monitor you would call it like this\n     *\n     *   var w = 1920;\n     *   var h = 1080;\n     *   var fullWidth = w * 3;\n     *   var fullHeight = h * 2;\n     *\n     *   --A--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n     *   --B--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n     *   --C--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n     *   --D--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n     *   --E--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n     *   --F--\n     *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n     *\n     *   Note there is no reason monitors have to be the same size or in a grid.\n     */\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      this.aspect = fullWidth / fullHeight;\n\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var near = this.near,\n          top = near * Math.tan(_Math.DEG2RAD * 0.5 * this.fov) / this.zoom,\n          height = 2 * top,\n          width = this.aspect * height,\n          left = -0.5 * width,\n          view = this.view;\n\n      if (this.view !== null && this.view.enabled) {\n        var fullWidth = view.fullWidth,\n            fullHeight = view.fullHeight;\n        left += view.offsetX * width / fullWidth;\n        top -= view.offsetY * height / fullHeight;\n        width *= view.width / fullWidth;\n        height *= view.height / fullHeight;\n      }\n\n      var skew = this.filmOffset;\n\n      if (skew !== 0) {\n        left += near * skew / this.getFilmWidth();\n      }\n\n      this.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.fov = this.fov;\n      data.object.zoom = this.zoom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n      data.object.focus = this.focus;\n      data.object.aspect = this.aspect;\n\n      if (this.view !== null) {\n        data.object.view = Object.assign({}, this.view);\n      }\n\n      data.object.filmGauge = this.filmGauge;\n      data.object.filmOffset = this.filmOffset;\n      return data;\n    }\n  });\n  /**\n   * Camera for rendering cube maps\n   *\t- renders scene into axis-aligned cube\n   *\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  var fov = 90,\n      aspect = 1;\n\n  function CubeCamera(near, far, cubeResolution, options) {\n    Object3D.call(this);\n    this.type = 'CubeCamera';\n    var cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPX.up.set(0, -1, 0);\n    cameraPX.lookAt(new Vector3(1, 0, 0));\n    this.add(cameraPX);\n    var cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNX.up.set(0, -1, 0);\n    cameraNX.lookAt(new Vector3(-1, 0, 0));\n    this.add(cameraNX);\n    var cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPY.up.set(0, 0, 1);\n    cameraPY.lookAt(new Vector3(0, 1, 0));\n    this.add(cameraPY);\n    var cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNY.up.set(0, 0, -1);\n    cameraNY.lookAt(new Vector3(0, -1, 0));\n    this.add(cameraNY);\n    var cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraPZ.up.set(0, -1, 0);\n    cameraPZ.lookAt(new Vector3(0, 0, 1));\n    this.add(cameraPZ);\n    var cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n    cameraNZ.up.set(0, -1, 0);\n    cameraNZ.lookAt(new Vector3(0, 0, -1));\n    this.add(cameraNZ);\n    options = options || {\n      format: RGBFormat,\n      magFilter: LinearFilter,\n      minFilter: LinearFilter\n    };\n    this.renderTarget = new WebGLRenderTargetCube(cubeResolution, cubeResolution, options);\n    this.renderTarget.texture.name = \"CubeCamera\";\n\n    this.update = function (renderer, scene) {\n      if (this.parent === null) {\n        this.updateMatrixWorld();\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var renderTarget = this.renderTarget;\n      var generateMipmaps = renderTarget.texture.generateMipmaps;\n      renderTarget.texture.generateMipmaps = false;\n      renderer.setRenderTarget(renderTarget, 0);\n      renderer.render(scene, cameraPX);\n      renderer.setRenderTarget(renderTarget, 1);\n      renderer.render(scene, cameraNX);\n      renderer.setRenderTarget(renderTarget, 2);\n      renderer.render(scene, cameraPY);\n      renderer.setRenderTarget(renderTarget, 3);\n      renderer.render(scene, cameraNY);\n      renderer.setRenderTarget(renderTarget, 4);\n      renderer.render(scene, cameraPZ);\n      renderTarget.texture.generateMipmaps = generateMipmaps;\n      renderer.setRenderTarget(renderTarget, 5);\n      renderer.render(scene, cameraNZ);\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n\n    this.clear = function (renderer, color, depth, stencil) {\n      var currentRenderTarget = renderer.getRenderTarget();\n      var renderTarget = this.renderTarget;\n\n      for (var i = 0; i < 6; i++) {\n        renderer.setRenderTarget(renderTarget, i);\n        renderer.clear(color, depth, stencil);\n      }\n\n      renderer.setRenderTarget(currentRenderTarget);\n    };\n  }\n\n  CubeCamera.prototype = Object.create(Object3D.prototype);\n  CubeCamera.prototype.constructor = CubeCamera;\n  /**\n   * @author alteredq / http://alteredqualia.com\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function WebGLRenderTargetCube(width, height, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n  }\n\n  WebGLRenderTargetCube.prototype = Object.create(WebGLRenderTarget.prototype);\n  WebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n  WebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n  WebGLRenderTargetCube.prototype.fromEquirectangularTexture = function (renderer, texture) {\n    this.texture.type = texture.type;\n    this.texture.format = texture.format;\n    this.texture.encoding = texture.encoding;\n    var scene = new Scene();\n    var shader = {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: [\"varying vec3 vWorldDirection;\", \"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\", \"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\", \"}\", \"void main() {\", \"\tvWorldDirection = transformDirection( position, modelMatrix );\", \"\t#include <begin_vertex>\", \"\t#include <project_vertex>\", \"}\"].join('\\n'),\n      fragmentShader: [\"uniform sampler2D tEquirect;\", \"varying vec3 vWorldDirection;\", \"#define RECIPROCAL_PI 0.31830988618\", \"#define RECIPROCAL_PI2 0.15915494\", \"void main() {\", \"\tvec3 direction = normalize( vWorldDirection );\", \"\tvec2 sampleUV;\", \"\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\", \"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\", \"\tgl_FragColor = texture2D( tEquirect, sampleUV );\", \"}\"].join('\\n')\n    };\n    var material = new ShaderMaterial({\n      type: 'CubemapFromEquirect',\n      uniforms: cloneUniforms(shader.uniforms),\n      vertexShader: shader.vertexShader,\n      fragmentShader: shader.fragmentShader,\n      side: BackSide,\n      blending: NoBlending\n    });\n    material.uniforms.tEquirect.value = texture;\n    var mesh = new Mesh(new BoxBufferGeometry(5, 5, 5), material);\n    scene.add(mesh);\n    var camera = new CubeCamera(1, 10, 1);\n    camera.renderTarget = this;\n    camera.renderTarget.texture.name = 'CubeCameraTexture';\n    camera.update(renderer, scene);\n    mesh.geometry.dispose();\n    mesh.material.dispose();\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function DataTexture(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      data: data || null,\n      width: width || 1,\n      height: height || 1\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.unpackAlignment = 1;\n    this.needsUpdate = true;\n  }\n\n  DataTexture.prototype = Object.create(Texture.prototype);\n  DataTexture.prototype.constructor = DataTexture;\n  DataTexture.prototype.isDataTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / http://clara.io\n   */\n\n  var _sphere$1 = new Sphere();\n\n  var _vector$5 = new Vector3();\n\n  function Frustum(p0, p1, p2, p3, p4, p5) {\n    this.planes = [p0 !== undefined ? p0 : new Plane(), p1 !== undefined ? p1 : new Plane(), p2 !== undefined ? p2 : new Plane(), p3 !== undefined ? p3 : new Plane(), p4 !== undefined ? p4 : new Plane(), p5 !== undefined ? p5 : new Plane()];\n  }\n\n  Object.assign(Frustum.prototype, {\n    set: function (p0, p1, p2, p3, p4, p5) {\n      var planes = this.planes;\n      planes[0].copy(p0);\n      planes[1].copy(p1);\n      planes[2].copy(p2);\n      planes[3].copy(p3);\n      planes[4].copy(p4);\n      planes[5].copy(p5);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (frustum) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        planes[i].copy(frustum.planes[i]);\n      }\n\n      return this;\n    },\n    setFromMatrix: function (m) {\n      var planes = this.planes;\n      var me = m.elements;\n      var me0 = me[0],\n          me1 = me[1],\n          me2 = me[2],\n          me3 = me[3];\n      var me4 = me[4],\n          me5 = me[5],\n          me6 = me[6],\n          me7 = me[7];\n      var me8 = me[8],\n          me9 = me[9],\n          me10 = me[10],\n          me11 = me[11];\n      var me12 = me[12],\n          me13 = me[13],\n          me14 = me[14],\n          me15 = me[15];\n      planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n      planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n      planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n      planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n      planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n      planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n      return this;\n    },\n    intersectsObject: function (object) {\n      var geometry = object.geometry;\n\n      if (geometry.boundingSphere === null) {\n        geometry.computeBoundingSphere();\n      }\n\n      _sphere$1.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n      return this.intersectsSphere(_sphere$1);\n    },\n    intersectsSprite: function (sprite) {\n      _sphere$1.center.set(0, 0, 0);\n\n      _sphere$1.radius = 0.7071067811865476;\n\n      _sphere$1.applyMatrix4(sprite.matrixWorld);\n\n      return this.intersectsSphere(_sphere$1);\n    },\n    intersectsSphere: function (sphere) {\n      var planes = this.planes;\n      var center = sphere.center;\n      var negRadius = -sphere.radius;\n\n      for (var i = 0; i < 6; i++) {\n        var distance = planes[i].distanceToPoint(center);\n\n        if (distance < negRadius) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    intersectsBox: function (box) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        var plane = planes[i]; // corner at max distance\n\n        _vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n        _vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n        _vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n        if (plane.distanceToPoint(_vector$5) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    containsPoint: function (point) {\n      var planes = this.planes;\n\n      for (var i = 0; i < 6; i++) {\n        if (planes[i].distanceToPoint(point) < 0) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n  });\n  var alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n  var alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n  var aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n  var aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n  var begin_vertex = \"vec3 transformed = vec3( position );\";\n  var beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n  var bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n  var bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n  var clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n  var clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n  var clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n  var clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n  var color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n  var color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n  var color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n  var common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\";\n  var cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n  var defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n  var displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n  var displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n  var emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n  var emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n  var encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n  var encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n  var envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n  var envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n  var envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n  var envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n  var envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n  var fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n  var fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n  var fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n  var fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n  var gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n  var lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n  var lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n  var envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n  var lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n  var lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n  var lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = saturate( clearcoat );\\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n  var lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n  var lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n  var lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n  var lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n  var logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n  var logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n  var logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n  var logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n  var map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n  var map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n  var map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n  var metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n  var metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n  var morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n  var morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n  var morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n  var normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n  var normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n  var normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tbool frontFacing = dot( cross( S, T ), N ) > 0.0;\\n\\t\\t\\tmapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\\n\\t\\t#else\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n  var clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n  var clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n  var clearcoat_normalmap_pars_fragment = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n  var packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpack2HalfToRGBA( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n  var premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n  var project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n  var dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n  var dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n  var roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n  var roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n  var shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpack2HalfToRGBA( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n  var shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n  var shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n  var shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n  var skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n  var skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n  var skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n  var skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n  var specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n  var specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n  var tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n  var tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n  var uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n  var uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n  var uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n  var uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n  var uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n  var worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n  var background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n  var cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n  var depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n  var depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n  var distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n  var distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n  var equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n  var equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n  var linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n  var meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n  var meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n  var normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n  var points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n  var shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n  var sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n  var ShaderChunk = {\n    alphamap_fragment: alphamap_fragment,\n    alphamap_pars_fragment: alphamap_pars_fragment,\n    alphatest_fragment: alphatest_fragment,\n    aomap_fragment: aomap_fragment,\n    aomap_pars_fragment: aomap_pars_fragment,\n    begin_vertex: begin_vertex,\n    beginnormal_vertex: beginnormal_vertex,\n    bsdfs: bsdfs,\n    bumpmap_pars_fragment: bumpmap_pars_fragment,\n    clipping_planes_fragment: clipping_planes_fragment,\n    clipping_planes_pars_fragment: clipping_planes_pars_fragment,\n    clipping_planes_pars_vertex: clipping_planes_pars_vertex,\n    clipping_planes_vertex: clipping_planes_vertex,\n    color_fragment: color_fragment,\n    color_pars_fragment: color_pars_fragment,\n    color_pars_vertex: color_pars_vertex,\n    color_vertex: color_vertex,\n    common: common,\n    cube_uv_reflection_fragment: cube_uv_reflection_fragment,\n    defaultnormal_vertex: defaultnormal_vertex,\n    displacementmap_pars_vertex: displacementmap_pars_vertex,\n    displacementmap_vertex: displacementmap_vertex,\n    emissivemap_fragment: emissivemap_fragment,\n    emissivemap_pars_fragment: emissivemap_pars_fragment,\n    encodings_fragment: encodings_fragment,\n    encodings_pars_fragment: encodings_pars_fragment,\n    envmap_fragment: envmap_fragment,\n    envmap_common_pars_fragment: envmap_common_pars_fragment,\n    envmap_pars_fragment: envmap_pars_fragment,\n    envmap_pars_vertex: envmap_pars_vertex,\n    envmap_physical_pars_fragment: envmap_physical_pars_fragment,\n    envmap_vertex: envmap_vertex,\n    fog_vertex: fog_vertex,\n    fog_pars_vertex: fog_pars_vertex,\n    fog_fragment: fog_fragment,\n    fog_pars_fragment: fog_pars_fragment,\n    gradientmap_pars_fragment: gradientmap_pars_fragment,\n    lightmap_fragment: lightmap_fragment,\n    lightmap_pars_fragment: lightmap_pars_fragment,\n    lights_lambert_vertex: lights_lambert_vertex,\n    lights_pars_begin: lights_pars_begin,\n    lights_phong_fragment: lights_phong_fragment,\n    lights_phong_pars_fragment: lights_phong_pars_fragment,\n    lights_physical_fragment: lights_physical_fragment,\n    lights_physical_pars_fragment: lights_physical_pars_fragment,\n    lights_fragment_begin: lights_fragment_begin,\n    lights_fragment_maps: lights_fragment_maps,\n    lights_fragment_end: lights_fragment_end,\n    logdepthbuf_fragment: logdepthbuf_fragment,\n    logdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n    logdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n    logdepthbuf_vertex: logdepthbuf_vertex,\n    map_fragment: map_fragment,\n    map_pars_fragment: map_pars_fragment,\n    map_particle_fragment: map_particle_fragment,\n    map_particle_pars_fragment: map_particle_pars_fragment,\n    metalnessmap_fragment: metalnessmap_fragment,\n    metalnessmap_pars_fragment: metalnessmap_pars_fragment,\n    morphnormal_vertex: morphnormal_vertex,\n    morphtarget_pars_vertex: morphtarget_pars_vertex,\n    morphtarget_vertex: morphtarget_vertex,\n    normal_fragment_begin: normal_fragment_begin,\n    normal_fragment_maps: normal_fragment_maps,\n    normalmap_pars_fragment: normalmap_pars_fragment,\n    clearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n    clearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n    clearcoat_normalmap_pars_fragment: clearcoat_normalmap_pars_fragment,\n    packing: packing,\n    premultiplied_alpha_fragment: premultiplied_alpha_fragment,\n    project_vertex: project_vertex,\n    dithering_fragment: dithering_fragment,\n    dithering_pars_fragment: dithering_pars_fragment,\n    roughnessmap_fragment: roughnessmap_fragment,\n    roughnessmap_pars_fragment: roughnessmap_pars_fragment,\n    shadowmap_pars_fragment: shadowmap_pars_fragment,\n    shadowmap_pars_vertex: shadowmap_pars_vertex,\n    shadowmap_vertex: shadowmap_vertex,\n    shadowmask_pars_fragment: shadowmask_pars_fragment,\n    skinbase_vertex: skinbase_vertex,\n    skinning_pars_vertex: skinning_pars_vertex,\n    skinning_vertex: skinning_vertex,\n    skinnormal_vertex: skinnormal_vertex,\n    specularmap_fragment: specularmap_fragment,\n    specularmap_pars_fragment: specularmap_pars_fragment,\n    tonemapping_fragment: tonemapping_fragment,\n    tonemapping_pars_fragment: tonemapping_pars_fragment,\n    uv_pars_fragment: uv_pars_fragment,\n    uv_pars_vertex: uv_pars_vertex,\n    uv_vertex: uv_vertex,\n    uv2_pars_fragment: uv2_pars_fragment,\n    uv2_pars_vertex: uv2_pars_vertex,\n    uv2_vertex: uv2_vertex,\n    worldpos_vertex: worldpos_vertex,\n    background_frag: background_frag,\n    background_vert: background_vert,\n    cube_frag: cube_frag,\n    cube_vert: cube_vert,\n    depth_frag: depth_frag,\n    depth_vert: depth_vert,\n    distanceRGBA_frag: distanceRGBA_frag,\n    distanceRGBA_vert: distanceRGBA_vert,\n    equirect_frag: equirect_frag,\n    equirect_vert: equirect_vert,\n    linedashed_frag: linedashed_frag,\n    linedashed_vert: linedashed_vert,\n    meshbasic_frag: meshbasic_frag,\n    meshbasic_vert: meshbasic_vert,\n    meshlambert_frag: meshlambert_frag,\n    meshlambert_vert: meshlambert_vert,\n    meshmatcap_frag: meshmatcap_frag,\n    meshmatcap_vert: meshmatcap_vert,\n    meshphong_frag: meshphong_frag,\n    meshphong_vert: meshphong_vert,\n    meshphysical_frag: meshphysical_frag,\n    meshphysical_vert: meshphysical_vert,\n    normal_frag: normal_frag,\n    normal_vert: normal_vert,\n    points_frag: points_frag,\n    points_vert: points_vert,\n    shadow_frag: shadow_frag,\n    shadow_vert: shadow_vert,\n    sprite_frag: sprite_frag,\n    sprite_vert: sprite_vert\n  };\n  /**\n   * Uniforms library for shared webgl shaders\n   */\n\n  var UniformsLib = {\n    common: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      },\n      alphaMap: {\n        value: null\n      }\n    },\n    specularmap: {\n      specularMap: {\n        value: null\n      }\n    },\n    envmap: {\n      envMap: {\n        value: null\n      },\n      flipEnvMap: {\n        value: -1\n      },\n      reflectivity: {\n        value: 1.0\n      },\n      refractionRatio: {\n        value: 0.98\n      },\n      maxMipLevel: {\n        value: 0\n      }\n    },\n    aomap: {\n      aoMap: {\n        value: null\n      },\n      aoMapIntensity: {\n        value: 1\n      }\n    },\n    lightmap: {\n      lightMap: {\n        value: null\n      },\n      lightMapIntensity: {\n        value: 1\n      }\n    },\n    emissivemap: {\n      emissiveMap: {\n        value: null\n      }\n    },\n    bumpmap: {\n      bumpMap: {\n        value: null\n      },\n      bumpScale: {\n        value: 1\n      }\n    },\n    normalmap: {\n      normalMap: {\n        value: null\n      },\n      normalScale: {\n        value: new Vector2(1, 1)\n      }\n    },\n    displacementmap: {\n      displacementMap: {\n        value: null\n      },\n      displacementScale: {\n        value: 1\n      },\n      displacementBias: {\n        value: 0\n      }\n    },\n    roughnessmap: {\n      roughnessMap: {\n        value: null\n      }\n    },\n    metalnessmap: {\n      metalnessMap: {\n        value: null\n      }\n    },\n    gradientmap: {\n      gradientMap: {\n        value: null\n      }\n    },\n    fog: {\n      fogDensity: {\n        value: 0.00025\n      },\n      fogNear: {\n        value: 1\n      },\n      fogFar: {\n        value: 2000\n      },\n      fogColor: {\n        value: new Color(0xffffff)\n      }\n    },\n    lights: {\n      ambientLightColor: {\n        value: []\n      },\n      lightProbe: {\n        value: []\n      },\n      directionalLights: {\n        value: [],\n        properties: {\n          direction: {},\n          color: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      directionalShadowMap: {\n        value: []\n      },\n      directionalShadowMatrix: {\n        value: []\n      },\n      spotLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          direction: {},\n          distance: {},\n          coneCos: {},\n          penumbraCos: {},\n          decay: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {}\n        }\n      },\n      spotShadowMap: {\n        value: []\n      },\n      spotShadowMatrix: {\n        value: []\n      },\n      pointLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          decay: {},\n          distance: {},\n          shadow: {},\n          shadowBias: {},\n          shadowRadius: {},\n          shadowMapSize: {},\n          shadowCameraNear: {},\n          shadowCameraFar: {}\n        }\n      },\n      pointShadowMap: {\n        value: []\n      },\n      pointShadowMatrix: {\n        value: []\n      },\n      hemisphereLights: {\n        value: [],\n        properties: {\n          direction: {},\n          skyColor: {},\n          groundColor: {}\n        }\n      },\n      // TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n      rectAreaLights: {\n        value: [],\n        properties: {\n          color: {},\n          position: {},\n          width: {},\n          height: {}\n        }\n      }\n    },\n    points: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      size: {\n        value: 1.0\n      },\n      scale: {\n        value: 1.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    },\n    sprite: {\n      diffuse: {\n        value: new Color(0xeeeeee)\n      },\n      opacity: {\n        value: 1.0\n      },\n      center: {\n        value: new Vector2(0.5, 0.5)\n      },\n      rotation: {\n        value: 0.0\n      },\n      map: {\n        value: null\n      },\n      alphaMap: {\n        value: null\n      },\n      uvTransform: {\n        value: new Matrix3()\n      }\n    }\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author mikael emtinger / http://gomo.se/\n   */\n\n  var ShaderLib = {\n    basic: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n      vertexShader: ShaderChunk.meshbasic_vert,\n      fragmentShader: ShaderChunk.meshbasic_frag\n    },\n    lambert: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        }\n      }]),\n      vertexShader: ShaderChunk.meshlambert_vert,\n      fragmentShader: ShaderChunk.meshlambert_frag\n    },\n    phong: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        specular: {\n          value: new Color(0x111111)\n        },\n        shininess: {\n          value: 30\n        }\n      }]),\n      vertexShader: ShaderChunk.meshphong_vert,\n      fragmentShader: ShaderChunk.meshphong_frag\n    },\n    standard: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n        emissive: {\n          value: new Color(0x000000)\n        },\n        roughness: {\n          value: 0.5\n        },\n        metalness: {\n          value: 0.5\n        },\n        envMapIntensity: {\n          value: 1\n        } // temporary\n\n      }]),\n      vertexShader: ShaderChunk.meshphysical_vert,\n      fragmentShader: ShaderChunk.meshphysical_frag\n    },\n    matcap: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n        matcap: {\n          value: null\n        }\n      }]),\n      vertexShader: ShaderChunk.meshmatcap_vert,\n      fragmentShader: ShaderChunk.meshmatcap_frag\n    },\n    points: {\n      uniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n      vertexShader: ShaderChunk.points_vert,\n      fragmentShader: ShaderChunk.points_frag\n    },\n    dashed: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n        scale: {\n          value: 1\n        },\n        dashSize: {\n          value: 1\n        },\n        totalSize: {\n          value: 2\n        }\n      }]),\n      vertexShader: ShaderChunk.linedashed_vert,\n      fragmentShader: ShaderChunk.linedashed_frag\n    },\n    depth: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n      vertexShader: ShaderChunk.depth_vert,\n      fragmentShader: ShaderChunk.depth_frag\n    },\n    normal: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.normal_vert,\n      fragmentShader: ShaderChunk.normal_frag\n    },\n    sprite: {\n      uniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n      vertexShader: ShaderChunk.sprite_vert,\n      fragmentShader: ShaderChunk.sprite_frag\n    },\n    background: {\n      uniforms: {\n        uvTransform: {\n          value: new Matrix3()\n        },\n        t2D: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.background_vert,\n      fragmentShader: ShaderChunk.background_frag\n    },\n\n    /* -------------------------------------------------------------------------\n    //\tCube map shader\n     ------------------------------------------------------------------------- */\n    cube: {\n      uniforms: {\n        tCube: {\n          value: null\n        },\n        tFlip: {\n          value: -1\n        },\n        opacity: {\n          value: 1.0\n        }\n      },\n      vertexShader: ShaderChunk.cube_vert,\n      fragmentShader: ShaderChunk.cube_frag\n    },\n    equirect: {\n      uniforms: {\n        tEquirect: {\n          value: null\n        }\n      },\n      vertexShader: ShaderChunk.equirect_vert,\n      fragmentShader: ShaderChunk.equirect_frag\n    },\n    distanceRGBA: {\n      uniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n        referencePosition: {\n          value: new Vector3()\n        },\n        nearDistance: {\n          value: 1\n        },\n        farDistance: {\n          value: 1000\n        }\n      }]),\n      vertexShader: ShaderChunk.distanceRGBA_vert,\n      fragmentShader: ShaderChunk.distanceRGBA_frag\n    },\n    shadow: {\n      uniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n        color: {\n          value: new Color(0x00000)\n        },\n        opacity: {\n          value: 1.0\n        }\n      }]),\n      vertexShader: ShaderChunk.shadow_vert,\n      fragmentShader: ShaderChunk.shadow_frag\n    }\n  };\n  ShaderLib.physical = {\n    uniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n      transparency: {\n        value: 0\n      },\n      clearcoat: {\n        value: 0\n      },\n      clearcoatRoughness: {\n        value: 0\n      },\n      sheen: {\n        value: new Color(0x000000)\n      },\n      clearcoatNormalScale: {\n        value: new Vector2(1, 1)\n      },\n      clearcoatNormalMap: {\n        value: null\n      }\n    }]),\n    vertexShader: ShaderChunk.meshphysical_vert,\n    fragmentShader: ShaderChunk.meshphysical_frag\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLAnimation() {\n    var context = null;\n    var isAnimating = false;\n    var animationLoop = null;\n\n    function onAnimationFrame(time, frame) {\n      if (isAnimating === false) {\n        return;\n      }\n\n      animationLoop(time, frame);\n      context.requestAnimationFrame(onAnimationFrame);\n    }\n\n    return {\n      start: function () {\n        if (isAnimating === true) {\n          return;\n        }\n\n        if (animationLoop === null) {\n          return;\n        }\n\n        context.requestAnimationFrame(onAnimationFrame);\n        isAnimating = true;\n      },\n      stop: function () {\n        isAnimating = false;\n      },\n      setAnimationLoop: function (callback) {\n        animationLoop = callback;\n      },\n      setContext: function (value) {\n        context = value;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLAttributes(gl) {\n    var buffers = new WeakMap();\n\n    function createBuffer(attribute, bufferType) {\n      var array = attribute.array;\n      var usage = attribute.usage;\n      var buffer = gl.createBuffer();\n      gl.bindBuffer(bufferType, buffer);\n      gl.bufferData(bufferType, array, usage);\n      attribute.onUploadCallback();\n      var type = 5126;\n\n      if (array instanceof Float32Array) {\n        type = 5126;\n      } else if (array instanceof Float64Array) {\n        console.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n      } else if (array instanceof Uint16Array) {\n        type = 5123;\n      } else if (array instanceof Int16Array) {\n        type = 5122;\n      } else if (array instanceof Uint32Array) {\n        type = 5125;\n      } else if (array instanceof Int32Array) {\n        type = 5124;\n      } else if (array instanceof Int8Array) {\n        type = 5120;\n      } else if (array instanceof Uint8Array) {\n        type = 5121;\n      }\n\n      return {\n        buffer: buffer,\n        type: type,\n        bytesPerElement: array.BYTES_PER_ELEMENT,\n        version: attribute.version\n      };\n    }\n\n    function updateBuffer(buffer, attribute, bufferType) {\n      var array = attribute.array;\n      var updateRange = attribute.updateRange;\n      gl.bindBuffer(bufferType, buffer);\n\n      if (updateRange.count === -1) {\n        // Not using update ranges\n        gl.bufferSubData(bufferType, 0, array);\n      } else {\n        gl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n        updateRange.count = -1; // reset range\n      }\n    } //\n\n\n    function get(attribute) {\n      if (attribute.isInterleavedBufferAttribute) {\n        attribute = attribute.data;\n      }\n\n      return buffers.get(attribute);\n    }\n\n    function remove(attribute) {\n      if (attribute.isInterleavedBufferAttribute) {\n        attribute = attribute.data;\n      }\n\n      var data = buffers.get(attribute);\n\n      if (data) {\n        gl.deleteBuffer(data.buffer);\n        buffers.delete(attribute);\n      }\n    }\n\n    function update(attribute, bufferType) {\n      if (attribute.isInterleavedBufferAttribute) {\n        attribute = attribute.data;\n      }\n\n      var data = buffers.get(attribute);\n\n      if (data === undefined) {\n        buffers.set(attribute, createBuffer(attribute, bufferType));\n      } else if (data.version < attribute.version) {\n        updateBuffer(data.buffer, attribute, bufferType);\n        data.version = attribute.version;\n      }\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PlaneGeometry\n\n\n  function PlaneGeometry(width, height, widthSegments, heightSegments) {\n    Geometry.call(this);\n    this.type = 'PlaneGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    this.fromBufferGeometry(new PlaneBufferGeometry(width, height, widthSegments, heightSegments));\n    this.mergeVertices();\n  }\n\n  PlaneGeometry.prototype = Object.create(Geometry.prototype);\n  PlaneGeometry.prototype.constructor = PlaneGeometry; // PlaneBufferGeometry\n\n  function PlaneBufferGeometry(width, height, widthSegments, heightSegments) {\n    BufferGeometry.call(this);\n    this.type = 'PlaneBufferGeometry';\n    this.parameters = {\n      width: width,\n      height: height,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments\n    };\n    width = width || 1;\n    height = height || 1;\n    var width_half = width / 2;\n    var height_half = height / 2;\n    var gridX = Math.floor(widthSegments) || 1;\n    var gridY = Math.floor(heightSegments) || 1;\n    var gridX1 = gridX + 1;\n    var gridY1 = gridY + 1;\n    var segment_width = width / gridX;\n    var segment_height = height / gridY;\n    var ix, iy; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy < gridY1; iy++) {\n      var y = iy * segment_height - height_half;\n\n      for (ix = 0; ix < gridX1; ix++) {\n        var x = ix * segment_width - width_half;\n        vertices.push(x, -y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(ix / gridX);\n        uvs.push(1 - iy / gridY);\n      }\n    } // indices\n\n\n    for (iy = 0; iy < gridY; iy++) {\n      for (ix = 0; ix < gridX; ix++) {\n        var a = ix + gridX1 * iy;\n        var b = ix + gridX1 * (iy + 1);\n        var c = ix + 1 + gridX1 * (iy + 1);\n        var d = ix + 1 + gridX1 * iy; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  PlaneBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLBackground(renderer, state, objects, premultipliedAlpha) {\n    var clearColor = new Color(0x000000);\n    var clearAlpha = 0;\n    var planeMesh;\n    var boxMesh; // Store the current background texture and its `version`\n    // so we can recompile the material accordingly.\n\n    var currentBackground = null;\n    var currentBackgroundVersion = 0;\n\n    function render(renderList, scene, camera, forceClear) {\n      var background = scene.background; // Ignore background in AR\n      // TODO: Reconsider this.\n\n      var vr = renderer.vr;\n      var session = vr.getSession && vr.getSession();\n\n      if (session && session.environmentBlendMode === 'additive') {\n        background = null;\n      }\n\n      if (background === null) {\n        setClear(clearColor, clearAlpha);\n        currentBackground = null;\n        currentBackgroundVersion = 0;\n      } else if (background && background.isColor) {\n        setClear(background, 1);\n        forceClear = true;\n        currentBackground = null;\n        currentBackgroundVersion = 0;\n      }\n\n      if (renderer.autoClear || forceClear) {\n        renderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n      }\n\n      if (background && (background.isCubeTexture || background.isWebGLRenderTargetCube)) {\n        if (boxMesh === undefined) {\n          boxMesh = new Mesh(new BoxBufferGeometry(1, 1, 1), new ShaderMaterial({\n            type: 'BackgroundCubeMaterial',\n            uniforms: cloneUniforms(ShaderLib.cube.uniforms),\n            vertexShader: ShaderLib.cube.vertexShader,\n            fragmentShader: ShaderLib.cube.fragmentShader,\n            side: BackSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          boxMesh.geometry.deleteAttribute('normal');\n          boxMesh.geometry.deleteAttribute('uv');\n\n          boxMesh.onBeforeRender = function (renderer, scene, camera) {\n            this.matrixWorld.copyPosition(camera.matrixWorld);\n          }; // enable code injection for non-built-in material\n\n\n          Object.defineProperty(boxMesh.material, 'map', {\n            get: function () {\n              return this.uniforms.tCube.value;\n            }\n          });\n          objects.update(boxMesh);\n        }\n\n        var texture = background.isWebGLRenderTargetCube ? background.texture : background;\n        boxMesh.material.uniforms.tCube.value = texture;\n        boxMesh.material.uniforms.tFlip.value = background.isWebGLRenderTargetCube ? 1 : -1;\n\n        if (currentBackground !== background || currentBackgroundVersion !== texture.version) {\n          boxMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = texture.version;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n      } else if (background && background.isTexture) {\n        if (planeMesh === undefined) {\n          planeMesh = new Mesh(new PlaneBufferGeometry(2, 2), new ShaderMaterial({\n            type: 'BackgroundMaterial',\n            uniforms: cloneUniforms(ShaderLib.background.uniforms),\n            vertexShader: ShaderLib.background.vertexShader,\n            fragmentShader: ShaderLib.background.fragmentShader,\n            side: FrontSide,\n            depthTest: false,\n            depthWrite: false,\n            fog: false\n          }));\n          planeMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n          Object.defineProperty(planeMesh.material, 'map', {\n            get: function () {\n              return this.uniforms.t2D.value;\n            }\n          });\n          objects.update(planeMesh);\n        }\n\n        planeMesh.material.uniforms.t2D.value = background;\n\n        if (background.matrixAutoUpdate === true) {\n          background.updateMatrix();\n        }\n\n        planeMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n        if (currentBackground !== background || currentBackgroundVersion !== background.version) {\n          planeMesh.material.needsUpdate = true;\n          currentBackground = background;\n          currentBackgroundVersion = background.version;\n        } // push to the pre-sorted opaque render list\n\n\n        renderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n      }\n    }\n\n    function setClear(color, alpha) {\n      state.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n    }\n\n    return {\n      getClearColor: function () {\n        return clearColor;\n      },\n      setClearColor: function (color, alpha) {\n        clearColor.set(color);\n        clearAlpha = alpha !== undefined ? alpha : 1;\n        setClear(clearColor, clearAlpha);\n      },\n      getClearAlpha: function () {\n        return clearAlpha;\n      },\n      setClearAlpha: function (alpha) {\n        clearAlpha = alpha;\n        setClear(clearColor, clearAlpha);\n      },\n      render: render\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    function render(start, count) {\n      gl.drawArrays(mode, start, count);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count, primcount) {\n      if (primcount === 0) {\n        return;\n      }\n\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawArraysInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawArraysInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, start, count, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLCapabilities(gl, extensions, parameters) {\n    var maxAnisotropy;\n\n    function getMaxAnisotropy() {\n      if (maxAnisotropy !== undefined) {\n        return maxAnisotropy;\n      }\n\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension !== null) {\n        maxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n      } else {\n        maxAnisotropy = 0;\n      }\n\n      return maxAnisotropy;\n    }\n\n    function getMaxPrecision(precision) {\n      if (precision === 'highp') {\n        if (gl.getShaderPrecisionFormat(35633, 36338).precision > 0 && gl.getShaderPrecisionFormat(35632, 36338).precision > 0) {\n          return 'highp';\n        }\n\n        precision = 'mediump';\n      }\n\n      if (precision === 'mediump') {\n        if (gl.getShaderPrecisionFormat(35633, 36337).precision > 0 && gl.getShaderPrecisionFormat(35632, 36337).precision > 0) {\n          return 'mediump';\n        }\n      }\n\n      return 'lowp';\n    }\n    /* eslint-disable no-undef */\n\n\n    var isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n    /* eslint-enable no-undef */\n\n    var precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n    var maxPrecision = getMaxPrecision(precision);\n\n    if (maxPrecision !== precision) {\n      console.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n      precision = maxPrecision;\n    }\n\n    var logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n    var maxTextures = gl.getParameter(34930);\n    var maxVertexTextures = gl.getParameter(35660);\n    var maxTextureSize = gl.getParameter(3379);\n    var maxCubemapSize = gl.getParameter(34076);\n    var maxAttributes = gl.getParameter(34921);\n    var maxVertexUniforms = gl.getParameter(36347);\n    var maxVaryings = gl.getParameter(36348);\n    var maxFragmentUniforms = gl.getParameter(36349);\n    var vertexTextures = maxVertexTextures > 0;\n    var floatFragmentTextures = isWebGL2 || !!extensions.get('OES_texture_float');\n    var floatVertexTextures = vertexTextures && floatFragmentTextures;\n    var maxSamples = isWebGL2 ? gl.getParameter(36183) : 0;\n    return {\n      isWebGL2: isWebGL2,\n      getMaxAnisotropy: getMaxAnisotropy,\n      getMaxPrecision: getMaxPrecision,\n      precision: precision,\n      logarithmicDepthBuffer: logarithmicDepthBuffer,\n      maxTextures: maxTextures,\n      maxVertexTextures: maxVertexTextures,\n      maxTextureSize: maxTextureSize,\n      maxCubemapSize: maxCubemapSize,\n      maxAttributes: maxAttributes,\n      maxVertexUniforms: maxVertexUniforms,\n      maxVaryings: maxVaryings,\n      maxFragmentUniforms: maxFragmentUniforms,\n      vertexTextures: vertexTextures,\n      floatFragmentTextures: floatFragmentTextures,\n      floatVertexTextures: floatVertexTextures,\n      maxSamples: maxSamples\n    };\n  }\n  /**\n   * @author tschw\n   */\n\n\n  function WebGLClipping() {\n    var scope = this,\n        globalState = null,\n        numGlobalPlanes = 0,\n        localClippingEnabled = false,\n        renderingShadows = false,\n        plane = new Plane(),\n        viewNormalMatrix = new Matrix3(),\n        uniform = {\n      value: null,\n      needsUpdate: false\n    };\n    this.uniform = uniform;\n    this.numPlanes = 0;\n    this.numIntersection = 0;\n\n    this.init = function (planes, enableLocalClipping, camera) {\n      var enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n      // run another frame in order to reset the state:\n      numGlobalPlanes !== 0 || localClippingEnabled;\n      localClippingEnabled = enableLocalClipping;\n      globalState = projectPlanes(planes, camera, 0);\n      numGlobalPlanes = planes.length;\n      return enabled;\n    };\n\n    this.beginShadows = function () {\n      renderingShadows = true;\n      projectPlanes(null);\n    };\n\n    this.endShadows = function () {\n      renderingShadows = false;\n      resetGlobalState();\n    };\n\n    this.setState = function (planes, clipIntersection, clipShadows, camera, cache, fromCache) {\n      if (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n        // there's no local clipping\n        if (renderingShadows) {\n          // there's no global clipping\n          projectPlanes(null);\n        } else {\n          resetGlobalState();\n        }\n      } else {\n        var nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n            lGlobal = nGlobal * 4,\n            dstArray = cache.clippingState || null;\n        uniform.value = dstArray; // ensure unique state\n\n        dstArray = projectPlanes(planes, camera, lGlobal, fromCache);\n\n        for (var i = 0; i !== lGlobal; ++i) {\n          dstArray[i] = globalState[i];\n        }\n\n        cache.clippingState = dstArray;\n        this.numIntersection = clipIntersection ? this.numPlanes : 0;\n        this.numPlanes += nGlobal;\n      }\n    };\n\n    function resetGlobalState() {\n      if (uniform.value !== globalState) {\n        uniform.value = globalState;\n        uniform.needsUpdate = numGlobalPlanes > 0;\n      }\n\n      scope.numPlanes = numGlobalPlanes;\n      scope.numIntersection = 0;\n    }\n\n    function projectPlanes(planes, camera, dstOffset, skipTransform) {\n      var nPlanes = planes !== null ? planes.length : 0,\n          dstArray = null;\n\n      if (nPlanes !== 0) {\n        dstArray = uniform.value;\n\n        if (skipTransform !== true || dstArray === null) {\n          var flatSize = dstOffset + nPlanes * 4,\n              viewMatrix = camera.matrixWorldInverse;\n          viewNormalMatrix.getNormalMatrix(viewMatrix);\n\n          if (dstArray === null || dstArray.length < flatSize) {\n            dstArray = new Float32Array(flatSize);\n          }\n\n          for (var i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n            plane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n            plane.normal.toArray(dstArray, i4);\n            dstArray[i4 + 3] = plane.constant;\n          }\n        }\n\n        uniform.value = dstArray;\n        uniform.needsUpdate = true;\n      }\n\n      scope.numPlanes = nPlanes;\n      return dstArray;\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLExtensions(gl) {\n    var extensions = {};\n    return {\n      get: function (name) {\n        if (extensions[name] !== undefined) {\n          return extensions[name];\n        }\n\n        var extension;\n\n        switch (name) {\n          case 'WEBGL_depth_texture':\n            extension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n            break;\n\n          case 'EXT_texture_filter_anisotropic':\n            extension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n            break;\n\n          case 'WEBGL_compressed_texture_s3tc':\n            extension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n            break;\n\n          case 'WEBGL_compressed_texture_pvrtc':\n            extension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n            break;\n\n          default:\n            extension = gl.getExtension(name);\n        }\n\n        if (extension === null) {\n          console.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n        }\n\n        extensions[name] = extension;\n        return extension;\n      }\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLGeometries(gl, attributes, info) {\n    var geometries = new WeakMap();\n    var wireframeAttributes = new WeakMap();\n\n    function onGeometryDispose(event) {\n      var geometry = event.target;\n      var buffergeometry = geometries.get(geometry);\n\n      if (buffergeometry.index !== null) {\n        attributes.remove(buffergeometry.index);\n      }\n\n      for (var name in buffergeometry.attributes) {\n        attributes.remove(buffergeometry.attributes[name]);\n      }\n\n      geometry.removeEventListener('dispose', onGeometryDispose);\n      geometries.delete(geometry);\n      var attribute = wireframeAttributes.get(buffergeometry);\n\n      if (attribute) {\n        attributes.remove(attribute);\n        wireframeAttributes.delete(buffergeometry);\n      } //\n\n\n      info.memory.geometries--;\n    }\n\n    function get(object, geometry) {\n      var buffergeometry = geometries.get(geometry);\n\n      if (buffergeometry) {\n        return buffergeometry;\n      }\n\n      geometry.addEventListener('dispose', onGeometryDispose);\n\n      if (geometry.isBufferGeometry) {\n        buffergeometry = geometry;\n      } else if (geometry.isGeometry) {\n        if (geometry._bufferGeometry === undefined) {\n          geometry._bufferGeometry = new BufferGeometry().setFromObject(object);\n        }\n\n        buffergeometry = geometry._bufferGeometry;\n      }\n\n      geometries.set(geometry, buffergeometry);\n      info.memory.geometries++;\n      return buffergeometry;\n    }\n\n    function update(geometry) {\n      var index = geometry.index;\n      var geometryAttributes = geometry.attributes;\n\n      if (index !== null) {\n        attributes.update(index, 34963);\n      }\n\n      for (var name in geometryAttributes) {\n        attributes.update(geometryAttributes[name], 34962);\n      } // morph targets\n\n\n      var morphAttributes = geometry.morphAttributes;\n\n      for (var name in morphAttributes) {\n        var array = morphAttributes[name];\n\n        for (var i = 0, l = array.length; i < l; i++) {\n          attributes.update(array[i], 34962);\n        }\n      }\n    }\n\n    function updateWireframeAttribute(geometry) {\n      var indices = [];\n      var geometryIndex = geometry.index;\n      var geometryPosition = geometry.attributes.position;\n      var version = 0;\n\n      if (geometryIndex !== null) {\n        var array = geometryIndex.array;\n        version = geometryIndex.version;\n\n        for (var i = 0, l = array.length; i < l; i += 3) {\n          var a = array[i + 0];\n          var b = array[i + 1];\n          var c = array[i + 2];\n          indices.push(a, b, b, c, c, a);\n        }\n      } else {\n        var array = geometryPosition.array;\n        version = geometryPosition.version;\n\n        for (var i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n          var a = i + 0;\n          var b = i + 1;\n          var c = i + 2;\n          indices.push(a, b, b, c, c, a);\n        }\n      }\n\n      var attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n      attribute.version = version;\n      attributes.update(attribute, 34963); //\n\n      var previousAttribute = wireframeAttributes.get(geometry);\n\n      if (previousAttribute) {\n        attributes.remove(previousAttribute);\n      } //\n\n\n      wireframeAttributes.set(geometry, attribute);\n    }\n\n    function getWireframeAttribute(geometry) {\n      var currentAttribute = wireframeAttributes.get(geometry);\n\n      if (currentAttribute) {\n        var geometryIndex = geometry.index;\n\n        if (geometryIndex !== null) {\n          // if the attribute is obsolete, create a new one\n          if (currentAttribute.version < geometryIndex.version) {\n            updateWireframeAttribute(geometry);\n          }\n        }\n      } else {\n        updateWireframeAttribute(geometry);\n      }\n\n      return wireframeAttributes.get(geometry);\n    }\n\n    return {\n      get: get,\n      update: update,\n      getWireframeAttribute: getWireframeAttribute\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var mode;\n\n    function setMode(value) {\n      mode = value;\n    }\n\n    var type, bytesPerElement;\n\n    function setIndex(value) {\n      type = value.type;\n      bytesPerElement = value.bytesPerElement;\n    }\n\n    function render(start, count) {\n      gl.drawElements(mode, count, type, start * bytesPerElement);\n      info.update(count, mode);\n    }\n\n    function renderInstances(geometry, start, count, primcount) {\n      if (primcount === 0) {\n        return;\n      }\n\n      var extension, methodName;\n\n      if (isWebGL2) {\n        extension = gl;\n        methodName = 'drawElementsInstanced';\n      } else {\n        extension = extensions.get('ANGLE_instanced_arrays');\n        methodName = 'drawElementsInstancedANGLE';\n\n        if (extension === null) {\n          console.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n          return;\n        }\n      }\n\n      extension[methodName](mode, count, type, start * bytesPerElement, primcount);\n      info.update(count, mode, primcount);\n    } //\n\n\n    this.setMode = setMode;\n    this.setIndex = setIndex;\n    this.render = render;\n    this.renderInstances = renderInstances;\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLInfo(gl) {\n    var memory = {\n      geometries: 0,\n      textures: 0\n    };\n    var render = {\n      frame: 0,\n      calls: 0,\n      triangles: 0,\n      points: 0,\n      lines: 0\n    };\n\n    function update(count, mode, instanceCount) {\n      instanceCount = instanceCount || 1;\n      render.calls++;\n\n      switch (mode) {\n        case 4:\n          render.triangles += instanceCount * (count / 3);\n          break;\n\n        case 5:\n        case 6:\n          render.triangles += instanceCount * (count - 2);\n          break;\n\n        case 1:\n          render.lines += instanceCount * (count / 2);\n          break;\n\n        case 3:\n          render.lines += instanceCount * (count - 1);\n          break;\n\n        case 2:\n          render.lines += instanceCount * count;\n          break;\n\n        case 0:\n          render.points += instanceCount * count;\n          break;\n\n        default:\n          console.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n          break;\n      }\n    }\n\n    function reset() {\n      render.frame++;\n      render.calls = 0;\n      render.triangles = 0;\n      render.points = 0;\n      render.lines = 0;\n    }\n\n    return {\n      memory: memory,\n      render: render,\n      programs: null,\n      autoReset: true,\n      reset: reset,\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function absNumericalSort(a, b) {\n    return Math.abs(b[1]) - Math.abs(a[1]);\n  }\n\n  function WebGLMorphtargets(gl) {\n    var influencesList = {};\n    var morphInfluences = new Float32Array(8);\n\n    function update(object, geometry, material, program) {\n      var objectInfluences = object.morphTargetInfluences;\n      var length = objectInfluences.length;\n      var influences = influencesList[geometry.id];\n\n      if (influences === undefined) {\n        // initialise list\n        influences = [];\n\n        for (var i = 0; i < length; i++) {\n          influences[i] = [i, 0];\n        }\n\n        influencesList[geometry.id] = influences;\n      }\n\n      var morphTargets = material.morphTargets && geometry.morphAttributes.position;\n      var morphNormals = material.morphNormals && geometry.morphAttributes.normal; // Remove current morphAttributes\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n\n        if (influence[1] !== 0) {\n          if (morphTargets) {\n            geometry.deleteAttribute('morphTarget' + i);\n          }\n\n          if (morphNormals) {\n            geometry.deleteAttribute('morphNormal' + i);\n          }\n        }\n      } // Collect influences\n\n\n      for (var i = 0; i < length; i++) {\n        var influence = influences[i];\n        influence[0] = i;\n        influence[1] = objectInfluences[i];\n      }\n\n      influences.sort(absNumericalSort); // Add morphAttributes\n\n      var morphInfluencesSum = 0;\n\n      for (var i = 0; i < 8; i++) {\n        var influence = influences[i];\n\n        if (influence) {\n          var index = influence[0];\n          var value = influence[1];\n\n          if (value) {\n            if (morphTargets) {\n              geometry.setAttribute('morphTarget' + i, morphTargets[index]);\n            }\n\n            if (morphNormals) {\n              geometry.setAttribute('morphNormal' + i, morphNormals[index]);\n            }\n\n            morphInfluences[i] = value;\n            morphInfluencesSum += value;\n            continue;\n          }\n        }\n\n        morphInfluences[i] = 0;\n      } // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n      // This allows us to switch between absolute morphs and relative morphs without changing shader code\n      // When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n      var morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n      program.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n      program.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n    }\n\n    return {\n      update: update\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLObjects(gl, geometries, attributes, info) {\n    var updateList = {};\n\n    function update(object) {\n      var frame = info.render.frame;\n      var geometry = object.geometry;\n      var buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n      if (updateList[buffergeometry.id] !== frame) {\n        if (geometry.isGeometry) {\n          buffergeometry.updateFromObject(object);\n        }\n\n        geometries.update(buffergeometry);\n        updateList[buffergeometry.id] = frame;\n      }\n\n      if (object.isInstancedMesh) {\n        attributes.update(object.instanceMatrix, 34962);\n      }\n\n      return buffergeometry;\n    }\n\n    function dispose() {\n      updateList = {};\n    }\n\n    return {\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function CubeTexture(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n    images = images !== undefined ? images : [];\n    mapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n    format = format !== undefined ? format : RGBFormat;\n    Texture.call(this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.flipY = false;\n  }\n\n  CubeTexture.prototype = Object.create(Texture.prototype);\n  CubeTexture.prototype.constructor = CubeTexture;\n  CubeTexture.prototype.isCubeTexture = true;\n  Object.defineProperty(CubeTexture.prototype, 'images', {\n    get: function () {\n      return this.image;\n    },\n    set: function (value) {\n      this.image = value;\n    }\n  });\n  /**\n   * @author Takahiro https://github.com/takahirox\n   */\n\n  function DataTexture2DArray(data, width, height, depth) {\n    Texture.call(this, null);\n    this.image = {\n      data: data || null,\n      width: width || 1,\n      height: height || 1,\n      depth: depth || 1\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.needsUpdate = true;\n  }\n\n  DataTexture2DArray.prototype = Object.create(Texture.prototype);\n  DataTexture2DArray.prototype.constructor = DataTexture2DArray;\n  DataTexture2DArray.prototype.isDataTexture2DArray = true;\n  /**\n   * @author Artur Trzesiok\n   */\n\n  function DataTexture3D(data, width, height, depth) {\n    // We're going to add .setXXX() methods for setting properties later.\n    // Users can still set in DataTexture3D directly.\n    //\n    //\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n    // \ttexture.anisotropy = 16;\n    //\n    // See #14839\n    Texture.call(this, null);\n    this.image = {\n      data: data || null,\n      width: width || 1,\n      height: height || 1,\n      depth: depth || 1\n    };\n    this.magFilter = NearestFilter;\n    this.minFilter = NearestFilter;\n    this.wrapR = ClampToEdgeWrapping;\n    this.generateMipmaps = false;\n    this.flipY = false;\n    this.needsUpdate = true;\n  }\n\n  DataTexture3D.prototype = Object.create(Texture.prototype);\n  DataTexture3D.prototype.constructor = DataTexture3D;\n  DataTexture3D.prototype.isDataTexture3D = true;\n  /**\n   * @author tschw\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Uniforms of a program.\n   * Those form a tree structure with a special top-level container for the root,\n   * which you get by calling 'new WebGLUniforms( gl, program )'.\n   *\n   *\n   * Properties of inner nodes including the top-level container:\n   *\n   * .seq - array of nested uniforms\n   * .map - nested uniforms by name\n   *\n   *\n   * Methods of all nodes except the top-level container:\n   *\n   * .setValue( gl, value, [textures] )\n   *\n   * \t\tuploads a uniform value(s)\n   *  \tthe 'textures' parameter is needed for sampler uniforms\n   *\n   *\n   * Static methods of the top-level container (textures factorizations):\n   *\n   * .upload( gl, seq, values, textures )\n   *\n   * \t\tsets uniforms in 'seq' to 'values[id].value'\n   *\n   * .seqWithValue( seq, values ) : filteredSeq\n   *\n   * \t\tfilters 'seq' entries with corresponding entry in values\n   *\n   *\n   * Methods of the top-level container (textures factorizations):\n   *\n   * .setValue( gl, name, value, textures )\n   *\n   * \t\tsets uniform with  name 'name' to 'value'\n   *\n   * .setOptional( gl, obj, prop )\n   *\n   * \t\tlike .set for an optional property of the object\n   *\n   */\n\n  var emptyTexture = new Texture();\n  var emptyTexture2dArray = new DataTexture2DArray();\n  var emptyTexture3d = new DataTexture3D();\n  var emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n  // Array Caches (provide typed arrays for temporary by size)\n\n  var arrayCacheF32 = [];\n  var arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n  var mat4array = new Float32Array(16);\n  var mat3array = new Float32Array(9);\n  var mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n  function flatten(array, nBlocks, blockSize) {\n    var firstElem = array[0];\n\n    if (firstElem <= 0 || firstElem > 0) {\n      return array;\n    } // unoptimized: ! isNaN( firstElem )\n    // see http://jacksondunstan.com/articles/983\n\n\n    var n = nBlocks * blockSize,\n        r = arrayCacheF32[n];\n\n    if (r === undefined) {\n      r = new Float32Array(n);\n      arrayCacheF32[n] = r;\n    }\n\n    if (nBlocks !== 0) {\n      firstElem.toArray(r, 0);\n\n      for (var i = 1, offset = 0; i !== nBlocks; ++i) {\n        offset += blockSize;\n        array[i].toArray(r, offset);\n      }\n    }\n\n    return r;\n  }\n\n  function arraysEqual(a, b) {\n    if (a.length !== b.length) {\n      return false;\n    }\n\n    for (var i = 0, l = a.length; i < l; i++) {\n      if (a[i] !== b[i]) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  function copyArray(a, b) {\n    for (var i = 0, l = b.length; i < l; i++) {\n      a[i] = b[i];\n    }\n  } // Texture unit allocation\n\n\n  function allocTexUnits(textures, n) {\n    var r = arrayCacheI32[n];\n\n    if (r === undefined) {\n      r = new Int32Array(n);\n      arrayCacheI32[n] = r;\n    }\n\n    for (var i = 0; i !== n; ++i) {\n      r[i] = textures.allocateTextureUnit();\n    }\n\n    return r;\n  } // --- Setters ---\n  // Note: Defining these methods externally, because they come in a bunch\n  // and this way their names minify.\n  // Single scalar\n\n\n  function setValueV1f(gl, v) {\n    var cache = this.cache;\n\n    if (cache[0] === v) {\n      return;\n    }\n\n    gl.uniform1f(this.addr, v);\n    cache[0] = v;\n  } // Single float vector (from flat array or THREE.VectorN)\n\n\n  function setValueV2f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y) {\n        gl.uniform2f(this.addr, v.x, v.y);\n        cache[0] = v.x;\n        cache[1] = v.y;\n      }\n    } else {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniform2fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV3f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n        gl.uniform3f(this.addr, v.x, v.y, v.z);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n      }\n    } else if (v.r !== undefined) {\n      if (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n        gl.uniform3f(this.addr, v.r, v.g, v.b);\n        cache[0] = v.r;\n        cache[1] = v.g;\n        cache[2] = v.b;\n      }\n    } else {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniform3fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  }\n\n  function setValueV4f(gl, v) {\n    var cache = this.cache;\n\n    if (v.x !== undefined) {\n      if (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n        gl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n        cache[0] = v.x;\n        cache[1] = v.y;\n        cache[2] = v.z;\n        cache[3] = v.w;\n      }\n    } else {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniform4fv(this.addr, v);\n      copyArray(cache, v);\n    }\n  } // Single matrix (from flat array or MatrixN)\n\n\n  function setValueM2(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniformMatrix2fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) {\n        return;\n      }\n\n      mat2array.set(elements);\n      gl.uniformMatrix2fv(this.addr, false, mat2array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM3(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniformMatrix3fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) {\n        return;\n      }\n\n      mat3array.set(elements);\n      gl.uniformMatrix3fv(this.addr, false, mat3array);\n      copyArray(cache, elements);\n    }\n  }\n\n  function setValueM4(gl, v) {\n    var cache = this.cache;\n    var elements = v.elements;\n\n    if (elements === undefined) {\n      if (arraysEqual(cache, v)) {\n        return;\n      }\n\n      gl.uniformMatrix4fv(this.addr, false, v);\n      copyArray(cache, v);\n    } else {\n      if (arraysEqual(cache, elements)) {\n        return;\n      }\n\n      mat4array.set(elements);\n      gl.uniformMatrix4fv(this.addr, false, mat4array);\n      copyArray(cache, elements);\n    }\n  } // Single texture (2D / Cube)\n\n\n  function setValueT1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTexture2D(v || emptyTexture, unit);\n  }\n\n  function setValueT2DArray1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture2DArray(v || emptyTexture2dArray, unit);\n  }\n\n  function setValueT3D1(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.setTexture3D(v || emptyTexture3d, unit);\n  }\n\n  function setValueT6(gl, v, textures) {\n    var cache = this.cache;\n    var unit = textures.allocateTextureUnit();\n\n    if (cache[0] !== unit) {\n      gl.uniform1i(this.addr, unit);\n      cache[0] = unit;\n    }\n\n    textures.safeSetTextureCube(v || emptyCubeTexture, unit);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValueV1i(gl, v) {\n    var cache = this.cache;\n\n    if (cache[0] === v) {\n      return;\n    }\n\n    gl.uniform1i(this.addr, v);\n    cache[0] = v;\n  }\n\n  function setValueV2i(gl, v) {\n    var cache = this.cache;\n\n    if (arraysEqual(cache, v)) {\n      return;\n    }\n\n    gl.uniform2iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV3i(gl, v) {\n    var cache = this.cache;\n\n    if (arraysEqual(cache, v)) {\n      return;\n    }\n\n    gl.uniform3iv(this.addr, v);\n    copyArray(cache, v);\n  }\n\n  function setValueV4i(gl, v) {\n    var cache = this.cache;\n\n    if (arraysEqual(cache, v)) {\n      return;\n    }\n\n    gl.uniform4iv(this.addr, v);\n    copyArray(cache, v);\n  } // Helper to pick the right setter for the singular case\n\n\n  function getSingularSetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1f;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2f;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3f;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4f;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4;\n      // _MAT4\n\n      case 0x8b5e:\n      case 0x8d66:\n        return setValueT1;\n      // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\n      case 0x8b5f:\n        return setValueT3D1;\n      // SAMPLER_3D\n\n      case 0x8b60:\n        return setValueT6;\n      // SAMPLER_CUBE\n\n      case 0x8DC1:\n        return setValueT2DArray1;\n      // SAMPLER_2D_ARRAY\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1i;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2i;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3i;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4i;\n      // _VEC4\n    }\n  } // Array of scalars\n\n\n  function setValueV1fArray(gl, v) {\n    gl.uniform1fv(this.addr, v);\n  } // Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\n  function setValueV1iArray(gl, v) {\n    gl.uniform1iv(this.addr, v);\n  }\n\n  function setValueV2iArray(gl, v) {\n    gl.uniform2iv(this.addr, v);\n  }\n\n  function setValueV3iArray(gl, v) {\n    gl.uniform3iv(this.addr, v);\n  }\n\n  function setValueV4iArray(gl, v) {\n    gl.uniform4iv(this.addr, v);\n  } // Array of vectors (flat or from THREE classes)\n\n\n  function setValueV2fArray(gl, v) {\n    var data = flatten(v, this.size, 2);\n    gl.uniform2fv(this.addr, data);\n  }\n\n  function setValueV3fArray(gl, v) {\n    var data = flatten(v, this.size, 3);\n    gl.uniform3fv(this.addr, data);\n  }\n\n  function setValueV4fArray(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniform4fv(this.addr, data);\n  } // Array of matrices (flat or from THREE clases)\n\n\n  function setValueM2Array(gl, v) {\n    var data = flatten(v, this.size, 4);\n    gl.uniformMatrix2fv(this.addr, false, data);\n  }\n\n  function setValueM3Array(gl, v) {\n    var data = flatten(v, this.size, 9);\n    gl.uniformMatrix3fv(this.addr, false, data);\n  }\n\n  function setValueM4Array(gl, v) {\n    var data = flatten(v, this.size, 16);\n    gl.uniformMatrix4fv(this.addr, false, data);\n  } // Array of textures (2D / Cube)\n\n\n  function setValueT1Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      textures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n    }\n  }\n\n  function setValueT6Array(gl, v, textures) {\n    var n = v.length;\n    var units = allocTexUnits(textures, n);\n    gl.uniform1iv(this.addr, units);\n\n    for (var i = 0; i !== n; ++i) {\n      textures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n    }\n  } // Helper to pick the right setter for a pure (bottom-level) array\n\n\n  function getPureArraySetter(type) {\n    switch (type) {\n      case 0x1406:\n        return setValueV1fArray;\n      // FLOAT\n\n      case 0x8b50:\n        return setValueV2fArray;\n      // _VEC2\n\n      case 0x8b51:\n        return setValueV3fArray;\n      // _VEC3\n\n      case 0x8b52:\n        return setValueV4fArray;\n      // _VEC4\n\n      case 0x8b5a:\n        return setValueM2Array;\n      // _MAT2\n\n      case 0x8b5b:\n        return setValueM3Array;\n      // _MAT3\n\n      case 0x8b5c:\n        return setValueM4Array;\n      // _MAT4\n\n      case 0x8b5e:\n        return setValueT1Array;\n      // SAMPLER_2D\n\n      case 0x8b60:\n        return setValueT6Array;\n      // SAMPLER_CUBE\n\n      case 0x1404:\n      case 0x8b56:\n        return setValueV1iArray;\n      // INT, BOOL\n\n      case 0x8b53:\n      case 0x8b57:\n        return setValueV2iArray;\n      // _VEC2\n\n      case 0x8b54:\n      case 0x8b58:\n        return setValueV3iArray;\n      // _VEC3\n\n      case 0x8b55:\n      case 0x8b59:\n        return setValueV4iArray;\n      // _VEC4\n    }\n  } // --- Uniform Classes ---\n\n\n  function SingleUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  function PureArrayUniform(id, activeInfo, addr) {\n    this.id = id;\n    this.addr = addr;\n    this.cache = [];\n    this.size = activeInfo.size;\n    this.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n  }\n\n  PureArrayUniform.prototype.updateCache = function (data) {\n    var cache = this.cache;\n\n    if (data instanceof Float32Array && cache.length !== data.length) {\n      this.cache = new Float32Array(data.length);\n    }\n\n    copyArray(cache, data);\n  };\n\n  function StructuredUniform(id) {\n    this.id = id;\n    this.seq = [];\n    this.map = {};\n  }\n\n  StructuredUniform.prototype.setValue = function (gl, value, textures) {\n    var seq = this.seq;\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n      u.setValue(gl, value[u.id], textures);\n    }\n  }; // --- Top-level ---\n  // Parser - builds up the property tree from the path strings\n\n\n  var RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g; // extracts\n  // \t- the identifier (member name or array index)\n  //  - followed by an optional right bracket (found when array index)\n  //  - followed by an optional left bracket or dot (type of subscript)\n  //\n  // Note: These portions can be read in a non-overlapping fashion and\n  // allow straightforward parsing of the hierarchy that WebGL encodes\n  // in the uniform names.\n\n  function addUniform(container, uniformObject) {\n    container.seq.push(uniformObject);\n    container.map[uniformObject.id] = uniformObject;\n  }\n\n  function parseUniform(activeInfo, addr, container) {\n    var path = activeInfo.name,\n        pathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n    RePathPart.lastIndex = 0;\n\n    while (true) {\n      var match = RePathPart.exec(path),\n          matchEnd = RePathPart.lastIndex,\n          id = match[1],\n          idIsIndex = match[2] === ']',\n          subscript = match[3];\n\n      if (idIsIndex) {\n        id = id | 0;\n      } // convert to integer\n\n\n      if (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n        // bare name or \"pure\" bottom-level array \"[0]\" suffix\n        addUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n        break;\n      } else {\n        // step into inner node / create it in case it doesn't exist\n        var map = container.map,\n            next = map[id];\n\n        if (next === undefined) {\n          next = new StructuredUniform(id);\n          addUniform(container, next);\n        }\n\n        container = next;\n      }\n    }\n  } // Root Container\n\n\n  function WebGLUniforms(gl, program) {\n    this.seq = [];\n    this.map = {};\n    var n = gl.getProgramParameter(program, 35718);\n\n    for (var i = 0; i < n; ++i) {\n      var info = gl.getActiveUniform(program, i),\n          addr = gl.getUniformLocation(program, info.name);\n      parseUniform(info, addr, this);\n    }\n  }\n\n  WebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n    var u = this.map[name];\n\n    if (u !== undefined) {\n      u.setValue(gl, value, textures);\n    }\n  };\n\n  WebGLUniforms.prototype.setOptional = function (gl, object, name) {\n    var v = object[name];\n\n    if (v !== undefined) {\n      this.setValue(gl, name, v);\n    }\n  }; // Static interface\n\n\n  WebGLUniforms.upload = function (gl, seq, values, textures) {\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i],\n          v = values[u.id];\n\n      if (v.needsUpdate !== false) {\n        // note: always updating when .needsUpdate is undefined\n        u.setValue(gl, v.value, textures);\n      }\n    }\n  };\n\n  WebGLUniforms.seqWithValue = function (seq, values) {\n    var r = [];\n\n    for (var i = 0, n = seq.length; i !== n; ++i) {\n      var u = seq[i];\n\n      if (u.id in values) {\n        r.push(u);\n      }\n    }\n\n    return r;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLShader(gl, type, string) {\n    var shader = gl.createShader(type);\n    gl.shaderSource(shader, string);\n    gl.compileShader(shader);\n    return shader;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var programIdCount = 0;\n\n  function addLineNumbers(string) {\n    var lines = string.split('\\n');\n\n    for (var i = 0; i < lines.length; i++) {\n      lines[i] = i + 1 + ': ' + lines[i];\n    }\n\n    return lines.join('\\n');\n  }\n\n  function getEncodingComponents(encoding) {\n    switch (encoding) {\n      case LinearEncoding:\n        return ['Linear', '( value )'];\n\n      case sRGBEncoding:\n        return ['sRGB', '( value )'];\n\n      case RGBEEncoding:\n        return ['RGBE', '( value )'];\n\n      case RGBM7Encoding:\n        return ['RGBM', '( value, 7.0 )'];\n\n      case RGBM16Encoding:\n        return ['RGBM', '( value, 16.0 )'];\n\n      case RGBDEncoding:\n        return ['RGBD', '( value, 256.0 )'];\n\n      case GammaEncoding:\n        return ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n      case LogLuvEncoding:\n        return ['LogLuv', '( value )'];\n\n      default:\n        throw new Error('unsupported encoding: ' + encoding);\n    }\n  }\n\n  function getShaderErrors(gl, shader, type) {\n    var status = gl.getShaderParameter(shader, 35713);\n    var log = gl.getShaderInfoLog(shader).trim();\n\n    if (status && log === '') {\n      return '';\n    } // --enable-privileged-webgl-extension\n    // console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\n    var source = gl.getShaderSource(shader);\n    return 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n  }\n\n  function getTexelDecodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n  }\n\n  function getTexelEncodingFunction(functionName, encoding) {\n    var components = getEncodingComponents(encoding);\n    return 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n  }\n\n  function getToneMappingFunction(functionName, toneMapping) {\n    var toneMappingName;\n\n    switch (toneMapping) {\n      case LinearToneMapping:\n        toneMappingName = 'Linear';\n        break;\n\n      case ReinhardToneMapping:\n        toneMappingName = 'Reinhard';\n        break;\n\n      case Uncharted2ToneMapping:\n        toneMappingName = 'Uncharted2';\n        break;\n\n      case CineonToneMapping:\n        toneMappingName = 'OptimizedCineon';\n        break;\n\n      case ACESFilmicToneMapping:\n        toneMappingName = 'ACESFilmic';\n        break;\n\n      default:\n        throw new Error('unsupported toneMapping: ' + toneMapping);\n    }\n\n    return 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n  }\n\n  function generateExtensions(extensions, parameters, rendererExtensions) {\n    extensions = extensions || {};\n    var chunks = [extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading ? '#extension GL_OES_standard_derivatives : enable' : '', (extensions.fragDepth || parameters.logarithmicDepthBuffer) && rendererExtensions.get('EXT_frag_depth') ? '#extension GL_EXT_frag_depth : enable' : '', extensions.drawBuffers && rendererExtensions.get('WEBGL_draw_buffers') ? '#extension GL_EXT_draw_buffers : require' : '', (extensions.shaderTextureLOD || parameters.envMap) && rendererExtensions.get('EXT_shader_texture_lod') ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n    return chunks.filter(filterEmptyLine).join('\\n');\n  }\n\n  function generateDefines(defines) {\n    var chunks = [];\n\n    for (var name in defines) {\n      var value = defines[name];\n\n      if (value === false) {\n        continue;\n      }\n\n      chunks.push('#define ' + name + ' ' + value);\n    }\n\n    return chunks.join('\\n');\n  }\n\n  function fetchAttributeLocations(gl, program) {\n    var attributes = {};\n    var n = gl.getProgramParameter(program, 35721);\n\n    for (var i = 0; i < n; i++) {\n      var info = gl.getActiveAttrib(program, i);\n      var name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n      attributes[name] = gl.getAttribLocation(program, name);\n    }\n\n    return attributes;\n  }\n\n  function filterEmptyLine(string) {\n    return string !== '';\n  }\n\n  function replaceLightNums(string, parameters) {\n    return string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n  }\n\n  function replaceClippingPlaneNums(string, parameters) {\n    return string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n  } // Resolve Includes\n\n\n  var includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n  function resolveIncludes(string) {\n    return string.replace(includePattern, includeReplacer);\n  }\n\n  function includeReplacer(match, include) {\n    var string = ShaderChunk[include];\n\n    if (string === undefined) {\n      throw new Error('Can not resolve #include <' + include + '>');\n    }\n\n    return resolveIncludes(string);\n  } // Unroll Loops\n\n\n  var loopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n  function unrollLoops(string) {\n    return string.replace(loopPattern, loopReplacer);\n  }\n\n  function loopReplacer(match, start, end, snippet) {\n    var string = '';\n\n    for (var i = parseInt(start); i < parseInt(end); i++) {\n      string += snippet.replace(/\\[ i \\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n    }\n\n    return string;\n  } //\n\n\n  function generatePrecision(parameters) {\n    var precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n    if (parameters.precision === \"highp\") {\n      precisionstring += \"\\n#define HIGH_PRECISION\";\n    } else if (parameters.precision === \"mediump\") {\n      precisionstring += \"\\n#define MEDIUM_PRECISION\";\n    } else if (parameters.precision === \"lowp\") {\n      precisionstring += \"\\n#define LOW_PRECISION\";\n    }\n\n    return precisionstring;\n  }\n\n  function generateShadowMapTypeDefine(parameters) {\n    var shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n    if (parameters.shadowMapType === PCFShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n    } else if (parameters.shadowMapType === PCFSoftShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n    } else if (parameters.shadowMapType === VSMShadowMap) {\n      shadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n    }\n\n    return shadowMapTypeDefine;\n  }\n\n  function generateEnvMapTypeDefine(parameters) {\n    var envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeReflectionMapping:\n        case CubeRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n          break;\n\n        case CubeUVReflectionMapping:\n        case CubeUVRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n          break;\n\n        case EquirectangularReflectionMapping:\n        case EquirectangularRefractionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n          break;\n\n        case SphericalReflectionMapping:\n          envMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n          break;\n      }\n    }\n\n    return envMapTypeDefine;\n  }\n\n  function generateEnvMapModeDefine(parameters) {\n    var envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n    if (parameters.envMap) {\n      switch (parameters.envMapMode) {\n        case CubeRefractionMapping:\n        case EquirectangularRefractionMapping:\n          envMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n          break;\n      }\n    }\n\n    return envMapModeDefine;\n  }\n\n  function generateEnvMapBlendingDefine(parameters) {\n    var envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n    if (parameters.envMap) {\n      switch (parameters.combine) {\n        case MultiplyOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n          break;\n\n        case MixOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n          break;\n\n        case AddOperation:\n          envMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n          break;\n      }\n    }\n\n    return envMapBlendingDefine;\n  }\n\n  function WebGLProgram(renderer, extensions, cacheKey, material, shader, parameters) {\n    var gl = renderer.getContext();\n    var defines = material.defines;\n    var vertexShader = shader.vertexShader;\n    var fragmentShader = shader.fragmentShader;\n    var shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n    var envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n    var envMapModeDefine = generateEnvMapModeDefine(parameters);\n    var envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n    var gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n    var customExtensions = parameters.isWebGL2 ? '' : generateExtensions(material.extensions, parameters, extensions);\n    var customDefines = generateDefines(defines);\n    var program = gl.createProgram();\n    var prefixVertex, prefixFragment;\n    var numMultiviewViews = parameters.numMultiviewViews;\n\n    if (material.isRawShaderMaterial) {\n      prefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixVertex.length > 0) {\n        prefixVertex += '\\n';\n      }\n\n      prefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n      if (prefixFragment.length > 0) {\n        prefixFragment += '\\n';\n      }\n    } else {\n      prefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + shader.name, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (parameters.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', ' attribute mat4 instanceMatrix;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#ifdef USE_COLOR', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n      prefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + shader.name, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n      '#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && (parameters.isWebGL2 || extensions.get('EXT_frag_depth')) ? '#define USE_LOGDEPTHBUF_EXT' : '', ((material.extensions ? material.extensions.shaderTextureLOD : false) || parameters.envMap) && (parameters.isWebGL2 || extensions.get('EXT_shader_texture_lod')) ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n      parameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ? ShaderChunk['encodings_pars_fragment'] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n      parameters.mapEncoding ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcapEncoding ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMapEncoding ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMapEncoding ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.outputEncoding ? getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding) : '', parameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n    }\n\n    vertexShader = resolveIncludes(vertexShader);\n    vertexShader = replaceLightNums(vertexShader, parameters);\n    vertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n    fragmentShader = resolveIncludes(fragmentShader);\n    fragmentShader = replaceLightNums(fragmentShader, parameters);\n    fragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n    vertexShader = unrollLoops(vertexShader);\n    fragmentShader = unrollLoops(fragmentShader);\n\n    if (parameters.isWebGL2 && !material.isRawShaderMaterial) {\n      var isGLSL3ShaderMaterial = false;\n      var versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n      if (material.isShaderMaterial && vertexShader.match(versionRegex) !== null && fragmentShader.match(versionRegex) !== null) {\n        isGLSL3ShaderMaterial = true;\n        vertexShader = vertexShader.replace(versionRegex, '');\n        fragmentShader = fragmentShader.replace(versionRegex, '');\n      } // GLSL 3.0 conversion\n\n\n      prefixVertex = ['#version 300 es\\n', '#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n      prefixFragment = ['#version 300 es\\n', '#define varying in', isGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;', isGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment; // Multiview\n\n      if (numMultiviewViews > 0) {\n        prefixVertex = prefixVertex.replace('#version 300 es\\n', ['#version 300 es\\n', '#extension GL_OVR_multiview2 : require', 'layout(num_views = ' + numMultiviewViews + ') in;', '#define VIEW_ID gl_ViewID_OVR'].join('\\n'));\n        prefixVertex = prefixVertex.replace(['uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;'].join('\\n'), ['uniform mat4 modelViewMatrices[' + numMultiviewViews + '];', 'uniform mat4 projectionMatrices[' + numMultiviewViews + '];', 'uniform mat4 viewMatrices[' + numMultiviewViews + '];', 'uniform mat3 normalMatrices[' + numMultiviewViews + '];', '#define modelViewMatrix modelViewMatrices[VIEW_ID]', '#define projectionMatrix projectionMatrices[VIEW_ID]', '#define viewMatrix viewMatrices[VIEW_ID]', '#define normalMatrix normalMatrices[VIEW_ID]'].join('\\n'));\n        prefixFragment = prefixFragment.replace('#version 300 es\\n', ['#version 300 es\\n', '#extension GL_OVR_multiview2 : require', '#define VIEW_ID gl_ViewID_OVR'].join('\\n'));\n        prefixFragment = prefixFragment.replace('uniform mat4 viewMatrix;', ['uniform mat4 viewMatrices[' + numMultiviewViews + '];', '#define viewMatrix viewMatrices[VIEW_ID]'].join('\\n'));\n      }\n    }\n\n    var vertexGlsl = prefixVertex + vertexShader;\n    var fragmentGlsl = prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n    // console.log( '*FRAGMENT*', fragmentGlsl );\n\n    var glVertexShader = WebGLShader(gl, 35633, vertexGlsl);\n    var glFragmentShader = WebGLShader(gl, 35632, fragmentGlsl);\n    gl.attachShader(program, glVertexShader);\n    gl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n    if (material.index0AttributeName !== undefined) {\n      gl.bindAttribLocation(program, 0, material.index0AttributeName);\n    } else if (parameters.morphTargets === true) {\n      // programs with morphTargets displace position out of attribute 0\n      gl.bindAttribLocation(program, 0, 'position');\n    }\n\n    gl.linkProgram(program); // check for link errors\n\n    if (renderer.debug.checkShaderErrors) {\n      var programLog = gl.getProgramInfoLog(program).trim();\n      var vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n      var fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n      var runnable = true;\n      var haveDiagnostics = true;\n\n      if (gl.getProgramParameter(program, 35714) === false) {\n        runnable = false;\n        var vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n        var fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n        console.error('THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter(program, 35715), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n      } else if (programLog !== '') {\n        console.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n      } else if (vertexLog === '' || fragmentLog === '') {\n        haveDiagnostics = false;\n      }\n\n      if (haveDiagnostics) {\n        this.diagnostics = {\n          runnable: runnable,\n          material: material,\n          programLog: programLog,\n          vertexShader: {\n            log: vertexLog,\n            prefix: prefixVertex\n          },\n          fragmentShader: {\n            log: fragmentLog,\n            prefix: prefixFragment\n          }\n        };\n      }\n    } // clean up\n\n\n    gl.deleteShader(glVertexShader);\n    gl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n    var cachedUniforms;\n\n    this.getUniforms = function () {\n      if (cachedUniforms === undefined) {\n        cachedUniforms = new WebGLUniforms(gl, program);\n      }\n\n      return cachedUniforms;\n    }; // set up caching for attribute locations\n\n\n    var cachedAttributes;\n\n    this.getAttributes = function () {\n      if (cachedAttributes === undefined) {\n        cachedAttributes = fetchAttributeLocations(gl, program);\n      }\n\n      return cachedAttributes;\n    }; // free resource\n\n\n    this.destroy = function () {\n      gl.deleteProgram(program);\n      this.program = undefined;\n    }; //\n\n\n    this.name = shader.name;\n    this.id = programIdCount++;\n    this.cacheKey = cacheKey;\n    this.usedTimes = 1;\n    this.program = program;\n    this.vertexShader = glVertexShader;\n    this.fragmentShader = glFragmentShader;\n    this.numMultiviewViews = numMultiviewViews;\n    return this;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLPrograms(renderer, extensions, capabilities) {\n    var programs = [];\n    var isWebGL2 = capabilities.isWebGL2;\n    var logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n    var floatVertexTextures = capabilities.floatVertexTextures;\n    var precision = capabilities.precision;\n    var maxVertexUniforms = capabilities.maxVertexUniforms;\n    var vertexTextures = capabilities.vertexTextures;\n    var shaderIDs = {\n      MeshDepthMaterial: 'depth',\n      MeshDistanceMaterial: 'distanceRGBA',\n      MeshNormalMaterial: 'normal',\n      MeshBasicMaterial: 'basic',\n      MeshLambertMaterial: 'lambert',\n      MeshPhongMaterial: 'phong',\n      MeshToonMaterial: 'phong',\n      MeshStandardMaterial: 'physical',\n      MeshPhysicalMaterial: 'physical',\n      MeshMatcapMaterial: 'matcap',\n      LineBasicMaterial: 'basic',\n      LineDashedMaterial: 'dashed',\n      PointsMaterial: 'points',\n      ShadowMaterial: 'shadow',\n      SpriteMaterial: 'sprite'\n    };\n    var parameterNames = [\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\", \"numMultiviewViews\", \"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\", \"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\", \"roughnessMap\", \"metalnessMap\", \"gradientMap\", \"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\", \"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\", \"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\", \"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\", \"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\", \"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\", \"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights', \"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\", \"sheen\"];\n\n    function allocateBones(object) {\n      var skeleton = object.skeleton;\n      var bones = skeleton.bones;\n\n      if (floatVertexTextures) {\n        return 1024;\n      } else {\n        // default for when object is not specified\n        // ( for example when prebuilding shader to be used with multiple objects )\n        //\n        //  - leave some extra space for other uniforms\n        //  - limit here is ANGLE's 254 max uniform vectors\n        //    (up to 54 should be safe)\n        var nVertexUniforms = maxVertexUniforms;\n        var nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n        var maxBones = Math.min(nVertexMatrices, bones.length);\n\n        if (maxBones < bones.length) {\n          console.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n          return 0;\n        }\n\n        return maxBones;\n      }\n    }\n\n    function getTextureEncodingFromMap(map, gammaOverrideLinear) {\n      var encoding;\n\n      if (!map) {\n        encoding = LinearEncoding;\n      } else if (map.isTexture) {\n        encoding = map.encoding;\n      } else if (map.isWebGLRenderTarget) {\n        console.warn(\"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\");\n        encoding = map.texture.encoding;\n      } // add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\n\n      if (encoding === LinearEncoding && gammaOverrideLinear) {\n        encoding = GammaEncoding;\n      }\n\n      return encoding;\n    }\n\n    this.getParameters = function (material, lights, shadows, fog, nClipPlanes, nClipIntersection, object) {\n      var shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n      // (not to blow over maxLights budget)\n\n      var maxBones = object.isSkinnedMesh ? allocateBones(object) : 0;\n\n      if (material.precision !== null) {\n        precision = capabilities.getMaxPrecision(material.precision);\n\n        if (precision !== material.precision) {\n          console.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n        }\n      }\n\n      var currentRenderTarget = renderer.getRenderTarget();\n      var numMultiviewViews = currentRenderTarget && currentRenderTarget.isWebGLMultiviewRenderTarget ? currentRenderTarget.numViews : 0;\n      var parameters = {\n        isWebGL2: isWebGL2,\n        shaderID: shaderID,\n        precision: precision,\n        instancing: object.isInstancedMesh === true,\n        supportsVertexTextures: vertexTextures,\n        numMultiviewViews: numMultiviewViews,\n        outputEncoding: getTextureEncodingFromMap(!currentRenderTarget ? null : currentRenderTarget.texture, renderer.gammaOutput),\n        map: !!material.map,\n        mapEncoding: getTextureEncodingFromMap(material.map, renderer.gammaInput),\n        matcap: !!material.matcap,\n        matcapEncoding: getTextureEncodingFromMap(material.matcap, renderer.gammaInput),\n        envMap: !!material.envMap,\n        envMapMode: material.envMap && material.envMap.mapping,\n        envMapEncoding: getTextureEncodingFromMap(material.envMap, renderer.gammaInput),\n        envMapCubeUV: !!material.envMap && (material.envMap.mapping === CubeUVReflectionMapping || material.envMap.mapping === CubeUVRefractionMapping),\n        lightMap: !!material.lightMap,\n        aoMap: !!material.aoMap,\n        emissiveMap: !!material.emissiveMap,\n        emissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap, renderer.gammaInput),\n        bumpMap: !!material.bumpMap,\n        normalMap: !!material.normalMap,\n        objectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n        tangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n        clearcoatNormalMap: !!material.clearcoatNormalMap,\n        displacementMap: !!material.displacementMap,\n        roughnessMap: !!material.roughnessMap,\n        metalnessMap: !!material.metalnessMap,\n        specularMap: !!material.specularMap,\n        alphaMap: !!material.alphaMap,\n        gradientMap: !!material.gradientMap,\n        sheen: !!material.sheen,\n        combine: material.combine,\n        vertexTangents: material.normalMap && material.vertexTangents,\n        vertexColors: material.vertexColors,\n        vertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.displacementMap,\n        uvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap) && !!material.displacementMap,\n        fog: !!fog,\n        useFog: material.fog,\n        fogExp2: fog && fog.isFogExp2,\n        flatShading: material.flatShading,\n        sizeAttenuation: material.sizeAttenuation,\n        logarithmicDepthBuffer: logarithmicDepthBuffer,\n        skinning: material.skinning && maxBones > 0,\n        maxBones: maxBones,\n        useVertexTexture: floatVertexTextures,\n        morphTargets: material.morphTargets,\n        morphNormals: material.morphNormals,\n        maxMorphTargets: renderer.maxMorphTargets,\n        maxMorphNormals: renderer.maxMorphNormals,\n        numDirLights: lights.directional.length,\n        numPointLights: lights.point.length,\n        numSpotLights: lights.spot.length,\n        numRectAreaLights: lights.rectArea.length,\n        numHemiLights: lights.hemi.length,\n        numDirLightShadows: lights.directionalShadowMap.length,\n        numPointLightShadows: lights.pointShadowMap.length,\n        numSpotLightShadows: lights.spotShadowMap.length,\n        numClippingPlanes: nClipPlanes,\n        numClipIntersection: nClipIntersection,\n        dithering: material.dithering,\n        shadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n        shadowMapType: renderer.shadowMap.type,\n        toneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n        physicallyCorrectLights: renderer.physicallyCorrectLights,\n        premultipliedAlpha: material.premultipliedAlpha,\n        alphaTest: material.alphaTest,\n        doubleSided: material.side === DoubleSide,\n        flipSided: material.side === BackSide,\n        depthPacking: material.depthPacking !== undefined ? material.depthPacking : false\n      };\n      return parameters;\n    };\n\n    this.getProgramCacheKey = function (material, parameters) {\n      var array = [];\n\n      if (parameters.shaderID) {\n        array.push(parameters.shaderID);\n      } else {\n        array.push(material.fragmentShader);\n        array.push(material.vertexShader);\n      }\n\n      if (material.defines !== undefined) {\n        for (var name in material.defines) {\n          array.push(name);\n          array.push(material.defines[name]);\n        }\n      }\n\n      for (var i = 0; i < parameterNames.length; i++) {\n        array.push(parameters[parameterNames[i]]);\n      }\n\n      array.push(material.onBeforeCompile.toString());\n      array.push(renderer.gammaOutput);\n      array.push(renderer.gammaFactor);\n      return array.join();\n    };\n\n    this.acquireProgram = function (material, shader, parameters, cacheKey) {\n      var program; // Check if code has been already compiled\n\n      for (var p = 0, pl = programs.length; p < pl; p++) {\n        var preexistingProgram = programs[p];\n\n        if (preexistingProgram.cacheKey === cacheKey) {\n          program = preexistingProgram;\n          ++program.usedTimes;\n          break;\n        }\n      }\n\n      if (program === undefined) {\n        program = new WebGLProgram(renderer, extensions, cacheKey, material, shader, parameters);\n        programs.push(program);\n      }\n\n      return program;\n    };\n\n    this.releaseProgram = function (program) {\n      if (--program.usedTimes === 0) {\n        // Remove from unordered set\n        var i = programs.indexOf(program);\n        programs[i] = programs[programs.length - 1];\n        programs.pop(); // Free WebGL resources\n\n        program.destroy();\n      }\n    }; // Exposed for resource monitoring & error feedback via renderer.info:\n\n\n    this.programs = programs;\n  }\n  /**\n   * @author fordacious / fordacious.github.io\n   */\n\n\n  function WebGLProperties() {\n    var properties = new WeakMap();\n\n    function get(object) {\n      var map = properties.get(object);\n\n      if (map === undefined) {\n        map = {};\n        properties.set(object, map);\n      }\n\n      return map;\n    }\n\n    function remove(object) {\n      properties.delete(object);\n    }\n\n    function update(object, key, value) {\n      properties.get(object)[key] = value;\n    }\n\n    function dispose() {\n      properties = new WeakMap();\n    }\n\n    return {\n      get: get,\n      remove: remove,\n      update: update,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function painterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.program !== b.program) {\n      return a.program.id - b.program.id;\n    } else if (a.material.id !== b.material.id) {\n      return a.material.id - b.material.id;\n    } else if (a.z !== b.z) {\n      return a.z - b.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function reversePainterSortStable(a, b) {\n    if (a.groupOrder !== b.groupOrder) {\n      return a.groupOrder - b.groupOrder;\n    } else if (a.renderOrder !== b.renderOrder) {\n      return a.renderOrder - b.renderOrder;\n    } else if (a.z !== b.z) {\n      return b.z - a.z;\n    } else {\n      return a.id - b.id;\n    }\n  }\n\n  function WebGLRenderList() {\n    var renderItems = [];\n    var renderItemsIndex = 0;\n    var opaque = [];\n    var transparent = [];\n    var defaultProgram = {\n      id: -1\n    };\n\n    function init() {\n      renderItemsIndex = 0;\n      opaque.length = 0;\n      transparent.length = 0;\n    }\n\n    function getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n      var renderItem = renderItems[renderItemsIndex];\n\n      if (renderItem === undefined) {\n        renderItem = {\n          id: object.id,\n          object: object,\n          geometry: geometry,\n          material: material,\n          program: material.program || defaultProgram,\n          groupOrder: groupOrder,\n          renderOrder: object.renderOrder,\n          z: z,\n          group: group\n        };\n        renderItems[renderItemsIndex] = renderItem;\n      } else {\n        renderItem.id = object.id;\n        renderItem.object = object;\n        renderItem.geometry = geometry;\n        renderItem.material = material;\n        renderItem.program = material.program || defaultProgram;\n        renderItem.groupOrder = groupOrder;\n        renderItem.renderOrder = object.renderOrder;\n        renderItem.z = z;\n        renderItem.group = group;\n      }\n\n      renderItemsIndex++;\n      return renderItem;\n    }\n\n    function push(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n      (material.transparent === true ? transparent : opaque).push(renderItem);\n    }\n\n    function unshift(object, geometry, material, groupOrder, z, group) {\n      var renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n      (material.transparent === true ? transparent : opaque).unshift(renderItem);\n    }\n\n    function sort() {\n      if (opaque.length > 1) {\n        opaque.sort(painterSortStable);\n      }\n\n      if (transparent.length > 1) {\n        transparent.sort(reversePainterSortStable);\n      }\n    }\n\n    return {\n      opaque: opaque,\n      transparent: transparent,\n      init: init,\n      push: push,\n      unshift: unshift,\n      sort: sort\n    };\n  }\n\n  function WebGLRenderLists() {\n    var lists = new WeakMap();\n\n    function onSceneDispose(event) {\n      var scene = event.target;\n      scene.removeEventListener('dispose', onSceneDispose);\n      lists.delete(scene);\n    }\n\n    function get(scene, camera) {\n      var cameras = lists.get(scene);\n      var list;\n\n      if (cameras === undefined) {\n        list = new WebGLRenderList();\n        lists.set(scene, new WeakMap());\n        lists.get(scene).set(camera, list);\n        scene.addEventListener('dispose', onSceneDispose);\n      } else {\n        list = cameras.get(camera);\n\n        if (list === undefined) {\n          list = new WebGLRenderList();\n          cameras.set(camera, list);\n        }\n      }\n\n      return list;\n    }\n\n    function dispose() {\n      lists = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function UniformsCache() {\n    var lights = {};\n    return {\n      get: function (light) {\n        if (lights[light.id] !== undefined) {\n          return lights[light.id];\n        }\n\n        var uniforms;\n\n        switch (light.type) {\n          case 'DirectionalLight':\n            uniforms = {\n              direction: new Vector3(),\n              color: new Color(),\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'SpotLight':\n            uniforms = {\n              position: new Vector3(),\n              direction: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              coneCos: 0,\n              penumbraCos: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2()\n            };\n            break;\n\n          case 'PointLight':\n            uniforms = {\n              position: new Vector3(),\n              color: new Color(),\n              distance: 0,\n              decay: 0,\n              shadow: false,\n              shadowBias: 0,\n              shadowRadius: 1,\n              shadowMapSize: new Vector2(),\n              shadowCameraNear: 1,\n              shadowCameraFar: 1000\n            };\n            break;\n\n          case 'HemisphereLight':\n            uniforms = {\n              direction: new Vector3(),\n              skyColor: new Color(),\n              groundColor: new Color()\n            };\n            break;\n\n          case 'RectAreaLight':\n            uniforms = {\n              color: new Color(),\n              position: new Vector3(),\n              halfWidth: new Vector3(),\n              halfHeight: new Vector3() // TODO (abelnation): set RectAreaLight shadow uniforms\n\n            };\n            break;\n        }\n\n        lights[light.id] = uniforms;\n        return uniforms;\n      }\n    };\n  }\n\n  var nextVersion = 0;\n\n  function shadowCastingLightsFirst(lightA, lightB) {\n    return (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n  }\n\n  function WebGLLights() {\n    var cache = new UniformsCache();\n    var state = {\n      version: 0,\n      hash: {\n        directionalLength: -1,\n        pointLength: -1,\n        spotLength: -1,\n        rectAreaLength: -1,\n        hemiLength: -1,\n        numDirectionalShadows: -1,\n        numPointShadows: -1,\n        numSpotShadows: -1\n      },\n      ambient: [0, 0, 0],\n      probe: [],\n      directional: [],\n      directionalShadowMap: [],\n      directionalShadowMatrix: [],\n      spot: [],\n      spotShadowMap: [],\n      spotShadowMatrix: [],\n      rectArea: [],\n      point: [],\n      pointShadowMap: [],\n      pointShadowMatrix: [],\n      hemi: [],\n      numDirectionalShadows: -1,\n      numPointShadows: -1,\n      numSpotShadows: -1\n    };\n\n    for (var i = 0; i < 9; i++) {\n      state.probe.push(new Vector3());\n    }\n\n    var vector3 = new Vector3();\n    var matrix4 = new Matrix4();\n    var matrix42 = new Matrix4();\n\n    function setup(lights, shadows, camera) {\n      var r = 0,\n          g = 0,\n          b = 0;\n\n      for (var i = 0; i < 9; i++) {\n        state.probe[i].set(0, 0, 0);\n      }\n\n      var directionalLength = 0;\n      var pointLength = 0;\n      var spotLength = 0;\n      var rectAreaLength = 0;\n      var hemiLength = 0;\n      var numDirectionalShadows = 0;\n      var numPointShadows = 0;\n      var numSpotShadows = 0;\n      var viewMatrix = camera.matrixWorldInverse;\n      lights.sort(shadowCastingLightsFirst);\n\n      for (var i = 0, l = lights.length; i < l; i++) {\n        var light = lights[i];\n        var color = light.color;\n        var intensity = light.intensity;\n        var distance = light.distance;\n        var shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n        if (light.isAmbientLight) {\n          r += color.r * intensity;\n          g += color.g * intensity;\n          b += color.b * intensity;\n        } else if (light.isLightProbe) {\n          for (var j = 0; j < 9; j++) {\n            state.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n          }\n        } else if (light.isDirectionalLight) {\n          var uniforms = cache.get(light);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n            state.directionalShadowMap[directionalLength] = shadowMap;\n            state.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n            numDirectionalShadows++;\n          }\n\n          state.directional[directionalLength] = uniforms;\n          directionalLength++;\n        } else if (light.isSpotLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.distance = distance;\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          vector3.setFromMatrixPosition(light.target.matrixWorld);\n          uniforms.direction.sub(vector3);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.coneCos = Math.cos(light.angle);\n          uniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n            state.spotShadowMap[spotLength] = shadowMap;\n            state.spotShadowMatrix[spotLength] = light.shadow.matrix;\n            numSpotShadows++;\n          }\n\n          state.spot[spotLength] = uniforms;\n          spotLength++;\n        } else if (light.isRectAreaLight) {\n          var uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n          //uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n          // (b) intensity is the brightness of the light\n\n          uniforms.color.copy(color).multiplyScalar(intensity);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n          matrix42.identity();\n          matrix4.copy(light.matrixWorld);\n          matrix4.premultiply(viewMatrix);\n          matrix42.extractRotation(matrix4);\n          uniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n          uniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n          uniforms.halfWidth.applyMatrix4(matrix42);\n          uniforms.halfHeight.applyMatrix4(matrix42); // TODO (abelnation): RectAreaLight distance?\n          // uniforms.distance = distance;\n\n          state.rectArea[rectAreaLength] = uniforms;\n          rectAreaLength++;\n        } else if (light.isPointLight) {\n          var uniforms = cache.get(light);\n          uniforms.position.setFromMatrixPosition(light.matrixWorld);\n          uniforms.position.applyMatrix4(viewMatrix);\n          uniforms.color.copy(light.color).multiplyScalar(light.intensity);\n          uniforms.distance = light.distance;\n          uniforms.decay = light.decay;\n          uniforms.shadow = light.castShadow;\n\n          if (light.castShadow) {\n            var shadow = light.shadow;\n            uniforms.shadowBias = shadow.bias;\n            uniforms.shadowRadius = shadow.radius;\n            uniforms.shadowMapSize = shadow.mapSize;\n            uniforms.shadowCameraNear = shadow.camera.near;\n            uniforms.shadowCameraFar = shadow.camera.far;\n            state.pointShadowMap[pointLength] = shadowMap;\n            state.pointShadowMatrix[pointLength] = light.shadow.matrix;\n            numPointShadows++;\n          }\n\n          state.point[pointLength] = uniforms;\n          pointLength++;\n        } else if (light.isHemisphereLight) {\n          var uniforms = cache.get(light);\n          uniforms.direction.setFromMatrixPosition(light.matrixWorld);\n          uniforms.direction.transformDirection(viewMatrix);\n          uniforms.direction.normalize();\n          uniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n          uniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n          state.hemi[hemiLength] = uniforms;\n          hemiLength++;\n        }\n      }\n\n      state.ambient[0] = r;\n      state.ambient[1] = g;\n      state.ambient[2] = b;\n      var hash = state.hash;\n\n      if (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n        state.directional.length = directionalLength;\n        state.spot.length = spotLength;\n        state.rectArea.length = rectAreaLength;\n        state.point.length = pointLength;\n        state.hemi.length = hemiLength;\n        state.directionalShadowMap.length = numDirectionalShadows;\n        state.pointShadowMap.length = numPointShadows;\n        state.spotShadowMap.length = numSpotShadows;\n        state.directionalShadowMatrix.length = numDirectionalShadows;\n        state.pointShadowMatrix.length = numPointShadows;\n        state.spotShadowMatrix.length = numSpotShadows;\n        hash.directionalLength = directionalLength;\n        hash.pointLength = pointLength;\n        hash.spotLength = spotLength;\n        hash.rectAreaLength = rectAreaLength;\n        hash.hemiLength = hemiLength;\n        hash.numDirectionalShadows = numDirectionalShadows;\n        hash.numPointShadows = numPointShadows;\n        hash.numSpotShadows = numSpotShadows;\n        state.version = nextVersion++;\n      }\n    }\n\n    return {\n      setup: setup,\n      state: state\n    };\n  }\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function WebGLRenderState() {\n    var lights = new WebGLLights();\n    var lightsArray = [];\n    var shadowsArray = [];\n\n    function init() {\n      lightsArray.length = 0;\n      shadowsArray.length = 0;\n    }\n\n    function pushLight(light) {\n      lightsArray.push(light);\n    }\n\n    function pushShadow(shadowLight) {\n      shadowsArray.push(shadowLight);\n    }\n\n    function setupLights(camera) {\n      lights.setup(lightsArray, shadowsArray, camera);\n    }\n\n    var state = {\n      lightsArray: lightsArray,\n      shadowsArray: shadowsArray,\n      lights: lights\n    };\n    return {\n      init: init,\n      state: state,\n      setupLights: setupLights,\n      pushLight: pushLight,\n      pushShadow: pushShadow\n    };\n  }\n\n  function WebGLRenderStates() {\n    var renderStates = new WeakMap();\n\n    function onSceneDispose(event) {\n      var scene = event.target;\n      scene.removeEventListener('dispose', onSceneDispose);\n      renderStates.delete(scene);\n    }\n\n    function get(scene, camera) {\n      var renderState;\n\n      if (renderStates.has(scene) === false) {\n        renderState = new WebGLRenderState();\n        renderStates.set(scene, new WeakMap());\n        renderStates.get(scene).set(camera, renderState);\n        scene.addEventListener('dispose', onSceneDispose);\n      } else {\n        if (renderStates.get(scene).has(camera) === false) {\n          renderState = new WebGLRenderState();\n          renderStates.get(scene).set(camera, renderState);\n        } else {\n          renderState = renderStates.get(scene).get(camera);\n        }\n      }\n\n      return renderState;\n    }\n\n    function dispose() {\n      renderStates = new WeakMap();\n    }\n\n    return {\n      get: get,\n      dispose: dispose\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author bhouston / https://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   * }\n   */\n\n\n  function MeshDepthMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDepthMaterial';\n    this.depthPacking = BasicDepthPacking;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.setValues(parameters);\n  }\n\n  MeshDepthMaterial.prototype = Object.create(Material.prototype);\n  MeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n  MeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n  MeshDepthMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.depthPacking = source.depthPacking;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *\n   *  referencePosition: <float>,\n   *  nearDistance: <float>,\n   *  farDistance: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>\n   *\n   * }\n   */\n\n\n  function MeshDistanceMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshDistanceMaterial';\n    this.referencePosition = new Vector3();\n    this.nearDistance = 1;\n    this.farDistance = 1000;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.map = null;\n    this.alphaMap = null;\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.fog = false;\n    this.setValues(parameters);\n  }\n\n  MeshDistanceMaterial.prototype = Object.create(Material.prototype);\n  MeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n  MeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n  MeshDistanceMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.referencePosition.copy(source.referencePosition);\n    this.nearDistance = source.nearDistance;\n    this.farDistance = source.farDistance;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    return this;\n  };\n\n  var vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpack2HalfToRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n  var vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebGLShadowMap(_renderer, _objects, maxTextureSize) {\n    var _frustum = new Frustum(),\n        _shadowMapSize = new Vector2(),\n        _viewportSize = new Vector2(),\n        _viewport = new Vector4(),\n        _depthMaterials = [],\n        _distanceMaterials = [],\n        _materialCache = {};\n\n    var shadowSide = {\n      0: BackSide,\n      1: FrontSide,\n      2: DoubleSide\n    };\n    var shadowMaterialVertical = new ShaderMaterial({\n      defines: {\n        SAMPLE_RATE: 2.0 / 8.0,\n        HALF_SAMPLE_RATE: 1.0 / 8.0\n      },\n      uniforms: {\n        shadow_pass: {\n          value: null\n        },\n        resolution: {\n          value: new Vector2()\n        },\n        radius: {\n          value: 4.0\n        }\n      },\n      vertexShader: vsm_vert,\n      fragmentShader: vsm_frag\n    });\n    var shadowMaterialHorizonal = shadowMaterialVertical.clone();\n    shadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n    var fullScreenTri = new BufferGeometry();\n    fullScreenTri.setAttribute(\"position\", new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n    var fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n    var scope = this;\n    this.enabled = false;\n    this.autoUpdate = true;\n    this.needsUpdate = false;\n    this.type = PCFShadowMap;\n\n    this.render = function (lights, scene, camera) {\n      if (scope.enabled === false) {\n        return;\n      }\n\n      if (scope.autoUpdate === false && scope.needsUpdate === false) {\n        return;\n      }\n\n      if (lights.length === 0) {\n        return;\n      }\n\n      var currentRenderTarget = _renderer.getRenderTarget();\n\n      var activeCubeFace = _renderer.getActiveCubeFace();\n\n      var activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n      var _state = _renderer.state; // Set GL state for depth map.\n\n      _state.setBlending(NoBlending);\n\n      _state.buffers.color.setClear(1, 1, 1, 1);\n\n      _state.buffers.depth.setTest(true);\n\n      _state.setScissorTest(false); // render depth map\n\n\n      for (var i = 0, il = lights.length; i < il; i++) {\n        var light = lights[i];\n        var shadow = light.shadow;\n\n        if (shadow === undefined) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n          continue;\n        }\n\n        _shadowMapSize.copy(shadow.mapSize);\n\n        var shadowFrameExtents = shadow.getFrameExtents();\n\n        _shadowMapSize.multiply(shadowFrameExtents);\n\n        _viewportSize.copy(shadow.mapSize);\n\n        if (_shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize) {\n          console.warn('THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing');\n\n          if (_shadowMapSize.x > maxTextureSize) {\n            _viewportSize.x = Math.floor(maxTextureSize / shadowFrameExtents.x);\n            _shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n            shadow.mapSize.x = _viewportSize.x;\n          }\n\n          if (_shadowMapSize.y > maxTextureSize) {\n            _viewportSize.y = Math.floor(maxTextureSize / shadowFrameExtents.y);\n            _shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n            shadow.mapSize.y = _viewportSize.y;\n          }\n        }\n\n        if (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          var pars = {\n            minFilter: LinearFilter,\n            magFilter: LinearFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + \".shadowMap\";\n          shadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        if (shadow.map === null) {\n          var pars = {\n            minFilter: NearestFilter,\n            magFilter: NearestFilter,\n            format: RGBAFormat\n          };\n          shadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n          shadow.map.texture.name = light.name + \".shadowMap\";\n          shadow.camera.updateProjectionMatrix();\n        }\n\n        _renderer.setRenderTarget(shadow.map);\n\n        _renderer.clear();\n\n        var viewportCount = shadow.getViewportCount();\n\n        for (var vp = 0; vp < viewportCount; vp++) {\n          var viewport = shadow.getViewport(vp);\n\n          _viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n          _state.viewport(_viewport);\n\n          shadow.updateMatrices(light, vp);\n          _frustum = shadow.getFrustum();\n          renderObject(scene, camera, shadow.camera, light, this.type);\n        } // do blur pass for VSM\n\n\n        if (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n          VSMPass(shadow, camera);\n        }\n      }\n\n      scope.needsUpdate = false;\n\n      _renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n    };\n\n    function VSMPass(shadow, camera) {\n      var geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n      shadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n      shadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.mapPass);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizonal pass\n\n\n      shadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n      shadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n      shadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\n      _renderer.setRenderTarget(shadow.map);\n\n      _renderer.clear();\n\n      _renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null);\n    }\n\n    function getDepthMaterialVariant(useMorphing, useSkinning, useInstancing) {\n      var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n      var material = _depthMaterials[index];\n\n      if (material === undefined) {\n        material = new MeshDepthMaterial({\n          depthPacking: RGBADepthPacking,\n          morphTargets: useMorphing,\n          skinning: useSkinning\n        });\n        _depthMaterials[index] = material;\n      }\n\n      return material;\n    }\n\n    function getDistanceMaterialVariant(useMorphing, useSkinning, useInstancing) {\n      var index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n      var material = _distanceMaterials[index];\n\n      if (material === undefined) {\n        material = new MeshDistanceMaterial({\n          morphTargets: useMorphing,\n          skinning: useSkinning\n        });\n        _distanceMaterials[index] = material;\n      }\n\n      return material;\n    }\n\n    function getDepthMaterial(object, material, light, shadowCameraNear, shadowCameraFar, type) {\n      var geometry = object.geometry;\n      var result = null;\n      var getMaterialVariant = getDepthMaterialVariant;\n      var customMaterial = object.customDepthMaterial;\n\n      if (light.isPointLight === true) {\n        getMaterialVariant = getDistanceMaterialVariant;\n        customMaterial = object.customDistanceMaterial;\n      }\n\n      if (customMaterial === undefined) {\n        var useMorphing = false;\n\n        if (material.morphTargets === true) {\n          if (geometry.isBufferGeometry === true) {\n            useMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n          } else if (geometry.isGeometry === true) {\n            useMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n          }\n        }\n\n        var useSkinning = false;\n\n        if (object.isSkinnedMesh === true) {\n          if (material.skinning === true) {\n            useSkinning = true;\n          } else {\n            console.warn('THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object);\n          }\n        }\n\n        var useInstancing = object.isInstancedMesh === true;\n        result = getMaterialVariant(useMorphing, useSkinning, useInstancing);\n      } else {\n        result = customMaterial;\n      }\n\n      if (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n        // in this case we need a unique material instance reflecting the\n        // appropriate state\n        var keyA = result.uuid,\n            keyB = material.uuid;\n        var materialsForVariant = _materialCache[keyA];\n\n        if (materialsForVariant === undefined) {\n          materialsForVariant = {};\n          _materialCache[keyA] = materialsForVariant;\n        }\n\n        var cachedMaterial = materialsForVariant[keyB];\n\n        if (cachedMaterial === undefined) {\n          cachedMaterial = result.clone();\n          materialsForVariant[keyB] = cachedMaterial;\n        }\n\n        result = cachedMaterial;\n      }\n\n      result.visible = material.visible;\n      result.wireframe = material.wireframe;\n\n      if (type === VSMShadowMap) {\n        result.side = material.shadowSide !== null ? material.shadowSide : material.side;\n      } else {\n        result.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n      }\n\n      result.clipShadows = material.clipShadows;\n      result.clippingPlanes = material.clippingPlanes;\n      result.clipIntersection = material.clipIntersection;\n      result.wireframeLinewidth = material.wireframeLinewidth;\n      result.linewidth = material.linewidth;\n\n      if (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n        result.referencePosition.setFromMatrixPosition(light.matrixWorld);\n        result.nearDistance = shadowCameraNear;\n        result.farDistance = shadowCameraFar;\n      }\n\n      return result;\n    }\n\n    function renderObject(object, camera, shadowCamera, light, type) {\n      if (object.visible === false) {\n        return;\n      }\n\n      var visible = object.layers.test(camera.layers);\n\n      if (visible && (object.isMesh || object.isLine || object.isPoints)) {\n        if ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n          object.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n          var geometry = _objects.update(object);\n\n          var material = object.material;\n\n          if (Array.isArray(material)) {\n            var groups = geometry.groups;\n\n            for (var k = 0, kl = groups.length; k < kl; k++) {\n              var group = groups[k];\n              var groupMaterial = material[group.materialIndex];\n\n              if (groupMaterial && groupMaterial.visible) {\n                var depthMaterial = getDepthMaterial(object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n                _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n              }\n            }\n          } else if (material.visible) {\n            var depthMaterial = getDepthMaterial(object, material, light, shadowCamera.near, shadowCamera.far, type);\n\n            _renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        renderObject(children[i], camera, shadowCamera, light, type);\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLState(gl, extensions, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function ColorBuffer() {\n      var locked = false;\n      var color = new Vector4();\n      var currentColorMask = null;\n      var currentColorClear = new Vector4(0, 0, 0, 0);\n      return {\n        setMask: function (colorMask) {\n          if (currentColorMask !== colorMask && !locked) {\n            gl.colorMask(colorMask, colorMask, colorMask, colorMask);\n            currentColorMask = colorMask;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (r, g, b, a, premultipliedAlpha) {\n          if (premultipliedAlpha === true) {\n            r *= a;\n            g *= a;\n            b *= a;\n          }\n\n          color.set(r, g, b, a);\n\n          if (currentColorClear.equals(color) === false) {\n            gl.clearColor(r, g, b, a);\n            currentColorClear.copy(color);\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentColorMask = null;\n          currentColorClear.set(-1, 0, 0, 0); // set to invalid state\n        }\n      };\n    }\n\n    function DepthBuffer() {\n      var locked = false;\n      var currentDepthMask = null;\n      var currentDepthFunc = null;\n      var currentDepthClear = null;\n      return {\n        setTest: function (depthTest) {\n          if (depthTest) {\n            enable(2929);\n          } else {\n            disable(2929);\n          }\n        },\n        setMask: function (depthMask) {\n          if (currentDepthMask !== depthMask && !locked) {\n            gl.depthMask(depthMask);\n            currentDepthMask = depthMask;\n          }\n        },\n        setFunc: function (depthFunc) {\n          if (currentDepthFunc !== depthFunc) {\n            if (depthFunc) {\n              switch (depthFunc) {\n                case NeverDepth:\n                  gl.depthFunc(512);\n                  break;\n\n                case AlwaysDepth:\n                  gl.depthFunc(519);\n                  break;\n\n                case LessDepth:\n                  gl.depthFunc(513);\n                  break;\n\n                case LessEqualDepth:\n                  gl.depthFunc(515);\n                  break;\n\n                case EqualDepth:\n                  gl.depthFunc(514);\n                  break;\n\n                case GreaterEqualDepth:\n                  gl.depthFunc(518);\n                  break;\n\n                case GreaterDepth:\n                  gl.depthFunc(516);\n                  break;\n\n                case NotEqualDepth:\n                  gl.depthFunc(517);\n                  break;\n\n                default:\n                  gl.depthFunc(515);\n              }\n            } else {\n              gl.depthFunc(515);\n            }\n\n            currentDepthFunc = depthFunc;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (depth) {\n          if (currentDepthClear !== depth) {\n            gl.clearDepth(depth);\n            currentDepthClear = depth;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentDepthMask = null;\n          currentDepthFunc = null;\n          currentDepthClear = null;\n        }\n      };\n    }\n\n    function StencilBuffer() {\n      var locked = false;\n      var currentStencilMask = null;\n      var currentStencilFunc = null;\n      var currentStencilRef = null;\n      var currentStencilFuncMask = null;\n      var currentStencilFail = null;\n      var currentStencilZFail = null;\n      var currentStencilZPass = null;\n      var currentStencilClear = null;\n      return {\n        setTest: function (stencilTest) {\n          if (!locked) {\n            if (stencilTest) {\n              enable(2960);\n            } else {\n              disable(2960);\n            }\n          }\n        },\n        setMask: function (stencilMask) {\n          if (currentStencilMask !== stencilMask && !locked) {\n            gl.stencilMask(stencilMask);\n            currentStencilMask = stencilMask;\n          }\n        },\n        setFunc: function (stencilFunc, stencilRef, stencilMask) {\n          if (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n            gl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n            currentStencilFunc = stencilFunc;\n            currentStencilRef = stencilRef;\n            currentStencilFuncMask = stencilMask;\n          }\n        },\n        setOp: function (stencilFail, stencilZFail, stencilZPass) {\n          if (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n            gl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n            currentStencilFail = stencilFail;\n            currentStencilZFail = stencilZFail;\n            currentStencilZPass = stencilZPass;\n          }\n        },\n        setLocked: function (lock) {\n          locked = lock;\n        },\n        setClear: function (stencil) {\n          if (currentStencilClear !== stencil) {\n            gl.clearStencil(stencil);\n            currentStencilClear = stencil;\n          }\n        },\n        reset: function () {\n          locked = false;\n          currentStencilMask = null;\n          currentStencilFunc = null;\n          currentStencilRef = null;\n          currentStencilFuncMask = null;\n          currentStencilFail = null;\n          currentStencilZFail = null;\n          currentStencilZPass = null;\n          currentStencilClear = null;\n        }\n      };\n    } //\n\n\n    var colorBuffer = new ColorBuffer();\n    var depthBuffer = new DepthBuffer();\n    var stencilBuffer = new StencilBuffer();\n    var maxVertexAttributes = gl.getParameter(34921);\n    var newAttributes = new Uint8Array(maxVertexAttributes);\n    var enabledAttributes = new Uint8Array(maxVertexAttributes);\n    var attributeDivisors = new Uint8Array(maxVertexAttributes);\n    var enabledCapabilities = {};\n    var currentProgram = null;\n    var currentBlendingEnabled = null;\n    var currentBlending = null;\n    var currentBlendEquation = null;\n    var currentBlendSrc = null;\n    var currentBlendDst = null;\n    var currentBlendEquationAlpha = null;\n    var currentBlendSrcAlpha = null;\n    var currentBlendDstAlpha = null;\n    var currentPremultipledAlpha = false;\n    var currentFlipSided = null;\n    var currentCullFace = null;\n    var currentLineWidth = null;\n    var currentPolygonOffsetFactor = null;\n    var currentPolygonOffsetUnits = null;\n    var maxTextures = gl.getParameter(35661);\n    var lineWidthAvailable = false;\n    var version = 0;\n    var glVersion = gl.getParameter(7938);\n\n    if (glVersion.indexOf('WebGL') !== -1) {\n      version = parseFloat(/^WebGL\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 1.0;\n    } else if (glVersion.indexOf('OpenGL ES') !== -1) {\n      version = parseFloat(/^OpenGL\\ ES\\ ([0-9])/.exec(glVersion)[1]);\n      lineWidthAvailable = version >= 2.0;\n    }\n\n    var currentTextureSlot = null;\n    var currentBoundTextures = {};\n    var currentScissor = new Vector4();\n    var currentViewport = new Vector4();\n\n    function createTexture(type, target, count) {\n      var data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n      var texture = gl.createTexture();\n      gl.bindTexture(type, texture);\n      gl.texParameteri(type, 10241, 9728);\n      gl.texParameteri(type, 10240, 9728);\n\n      for (var i = 0; i < count; i++) {\n        gl.texImage2D(target + i, 0, 6408, 1, 1, 0, 6408, 5121, data);\n      }\n\n      return texture;\n    }\n\n    var emptyTextures = {};\n    emptyTextures[3553] = createTexture(3553, 3553, 1);\n    emptyTextures[34067] = createTexture(34067, 34069, 6); // init\n\n    colorBuffer.setClear(0, 0, 0, 1);\n    depthBuffer.setClear(1);\n    stencilBuffer.setClear(0);\n    enable(2929);\n    depthBuffer.setFunc(LessEqualDepth);\n    setFlipSided(false);\n    setCullFace(CullFaceBack);\n    enable(2884);\n    setBlending(NoBlending); //\n\n    function initAttributes() {\n      for (var i = 0, l = newAttributes.length; i < l; i++) {\n        newAttributes[i] = 0;\n      }\n    }\n\n    function enableAttribute(attribute) {\n      enableAttributeAndDivisor(attribute, 0);\n    }\n\n    function enableAttributeAndDivisor(attribute, meshPerAttribute) {\n      newAttributes[attribute] = 1;\n\n      if (enabledAttributes[attribute] === 0) {\n        gl.enableVertexAttribArray(attribute);\n        enabledAttributes[attribute] = 1;\n      }\n\n      if (attributeDivisors[attribute] !== meshPerAttribute) {\n        var extension = isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n        extension[isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n        attributeDivisors[attribute] = meshPerAttribute;\n      }\n    }\n\n    function disableUnusedAttributes() {\n      for (var i = 0, l = enabledAttributes.length; i !== l; ++i) {\n        if (enabledAttributes[i] !== newAttributes[i]) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n    }\n\n    function enable(id) {\n      if (enabledCapabilities[id] !== true) {\n        gl.enable(id);\n        enabledCapabilities[id] = true;\n      }\n    }\n\n    function disable(id) {\n      if (enabledCapabilities[id] !== false) {\n        gl.disable(id);\n        enabledCapabilities[id] = false;\n      }\n    }\n\n    function useProgram(program) {\n      if (currentProgram !== program) {\n        gl.useProgram(program);\n        currentProgram = program;\n        return true;\n      }\n\n      return false;\n    }\n\n    var equationToGL = {};\n    equationToGL[AddEquation] = 32774;\n    equationToGL[SubtractEquation] = 32778;\n    equationToGL[ReverseSubtractEquation] = 32779;\n\n    if (isWebGL2) {\n      equationToGL[MinEquation] = 32775;\n      equationToGL[MaxEquation] = 32776;\n    } else {\n      var extension = extensions.get('EXT_blend_minmax');\n\n      if (extension !== null) {\n        equationToGL[MinEquation] = extension.MIN_EXT;\n        equationToGL[MaxEquation] = extension.MAX_EXT;\n      }\n    }\n\n    var factorToGL = {};\n    factorToGL[ZeroFactor] = 0;\n    factorToGL[OneFactor] = 1;\n    factorToGL[SrcColorFactor] = 768;\n    factorToGL[SrcAlphaFactor] = 770;\n    factorToGL[SrcAlphaSaturateFactor] = 776;\n    factorToGL[DstColorFactor] = 774;\n    factorToGL[DstAlphaFactor] = 772;\n    factorToGL[OneMinusSrcColorFactor] = 769;\n    factorToGL[OneMinusSrcAlphaFactor] = 771;\n    factorToGL[OneMinusDstColorFactor] = 775;\n    factorToGL[OneMinusDstAlphaFactor] = 773;\n\n    function setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n      if (blending === NoBlending) {\n        if (currentBlendingEnabled) {\n          disable(3042);\n          currentBlendingEnabled = false;\n        }\n\n        return;\n      }\n\n      if (!currentBlendingEnabled) {\n        enable(3042);\n        currentBlendingEnabled = true;\n      }\n\n      if (blending !== CustomBlending) {\n        if (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n          if (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n            gl.blendEquation(32774);\n            currentBlendEquation = AddEquation;\n            currentBlendEquationAlpha = AddEquation;\n          }\n\n          if (premultipliedAlpha) {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(1, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(1, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFuncSeparate(0, 0, 769, 771);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFuncSeparate(0, 768, 0, 770);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          } else {\n            switch (blending) {\n              case NormalBlending:\n                gl.blendFuncSeparate(770, 771, 1, 771);\n                break;\n\n              case AdditiveBlending:\n                gl.blendFunc(770, 1);\n                break;\n\n              case SubtractiveBlending:\n                gl.blendFunc(0, 769);\n                break;\n\n              case MultiplyBlending:\n                gl.blendFunc(0, 768);\n                break;\n\n              default:\n                console.error('THREE.WebGLState: Invalid blending: ', blending);\n                break;\n            }\n          }\n\n          currentBlendSrc = null;\n          currentBlendDst = null;\n          currentBlendSrcAlpha = null;\n          currentBlendDstAlpha = null;\n          currentBlending = blending;\n          currentPremultipledAlpha = premultipliedAlpha;\n        }\n\n        return;\n      } // custom blending\n\n\n      blendEquationAlpha = blendEquationAlpha || blendEquation;\n      blendSrcAlpha = blendSrcAlpha || blendSrc;\n      blendDstAlpha = blendDstAlpha || blendDst;\n\n      if (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n        gl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n        currentBlendEquation = blendEquation;\n        currentBlendEquationAlpha = blendEquationAlpha;\n      }\n\n      if (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n        gl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n        currentBlendSrc = blendSrc;\n        currentBlendDst = blendDst;\n        currentBlendSrcAlpha = blendSrcAlpha;\n        currentBlendDstAlpha = blendDstAlpha;\n      }\n\n      currentBlending = blending;\n      currentPremultipledAlpha = null;\n    }\n\n    function setMaterial(material, frontFaceCW) {\n      material.side === DoubleSide ? disable(2884) : enable(2884);\n      var flipSided = material.side === BackSide;\n\n      if (frontFaceCW) {\n        flipSided = !flipSided;\n      }\n\n      setFlipSided(flipSided);\n      material.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n      depthBuffer.setFunc(material.depthFunc);\n      depthBuffer.setTest(material.depthTest);\n      depthBuffer.setMask(material.depthWrite);\n      colorBuffer.setMask(material.colorWrite);\n      var stencilWrite = material.stencilWrite;\n      stencilBuffer.setTest(stencilWrite);\n\n      if (stencilWrite) {\n        stencilBuffer.setMask(material.stencilWriteMask);\n        stencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n        stencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n      }\n\n      setPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n    } //\n\n\n    function setFlipSided(flipSided) {\n      if (currentFlipSided !== flipSided) {\n        if (flipSided) {\n          gl.frontFace(2304);\n        } else {\n          gl.frontFace(2305);\n        }\n\n        currentFlipSided = flipSided;\n      }\n    }\n\n    function setCullFace(cullFace) {\n      if (cullFace !== CullFaceNone) {\n        enable(2884);\n\n        if (cullFace !== currentCullFace) {\n          if (cullFace === CullFaceBack) {\n            gl.cullFace(1029);\n          } else if (cullFace === CullFaceFront) {\n            gl.cullFace(1028);\n          } else {\n            gl.cullFace(1032);\n          }\n        }\n      } else {\n        disable(2884);\n      }\n\n      currentCullFace = cullFace;\n    }\n\n    function setLineWidth(width) {\n      if (width !== currentLineWidth) {\n        if (lineWidthAvailable) {\n          gl.lineWidth(width);\n        }\n\n        currentLineWidth = width;\n      }\n    }\n\n    function setPolygonOffset(polygonOffset, factor, units) {\n      if (polygonOffset) {\n        enable(32823);\n\n        if (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n          gl.polygonOffset(factor, units);\n          currentPolygonOffsetFactor = factor;\n          currentPolygonOffsetUnits = units;\n        }\n      } else {\n        disable(32823);\n      }\n    }\n\n    function setScissorTest(scissorTest) {\n      if (scissorTest) {\n        enable(3089);\n      } else {\n        disable(3089);\n      }\n    } // texture\n\n\n    function activeTexture(webglSlot) {\n      if (webglSlot === undefined) {\n        webglSlot = 33984 + maxTextures - 1;\n      }\n\n      if (currentTextureSlot !== webglSlot) {\n        gl.activeTexture(webglSlot);\n        currentTextureSlot = webglSlot;\n      }\n    }\n\n    function bindTexture(webglType, webglTexture) {\n      if (currentTextureSlot === null) {\n        activeTexture();\n      }\n\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture === undefined) {\n        boundTexture = {\n          type: undefined,\n          texture: undefined\n        };\n        currentBoundTextures[currentTextureSlot] = boundTexture;\n      }\n\n      if (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n        gl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n        boundTexture.type = webglType;\n        boundTexture.texture = webglTexture;\n      }\n    }\n\n    function unbindTexture() {\n      var boundTexture = currentBoundTextures[currentTextureSlot];\n\n      if (boundTexture !== undefined && boundTexture.type !== undefined) {\n        gl.bindTexture(boundTexture.type, null);\n        boundTexture.type = undefined;\n        boundTexture.texture = undefined;\n      }\n    }\n\n    function compressedTexImage2D() {\n      try {\n        gl.compressedTexImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage2D() {\n      try {\n        gl.texImage2D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    }\n\n    function texImage3D() {\n      try {\n        gl.texImage3D.apply(gl, arguments);\n      } catch (error) {\n        console.error('THREE.WebGLState:', error);\n      }\n    } //\n\n\n    function scissor(scissor) {\n      if (currentScissor.equals(scissor) === false) {\n        gl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n        currentScissor.copy(scissor);\n      }\n    }\n\n    function viewport(viewport) {\n      if (currentViewport.equals(viewport) === false) {\n        gl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n        currentViewport.copy(viewport);\n      }\n    } //\n\n\n    function reset() {\n      for (var i = 0; i < enabledAttributes.length; i++) {\n        if (enabledAttributes[i] === 1) {\n          gl.disableVertexAttribArray(i);\n          enabledAttributes[i] = 0;\n        }\n      }\n\n      enabledCapabilities = {};\n      currentTextureSlot = null;\n      currentBoundTextures = {};\n      currentProgram = null;\n      currentBlending = null;\n      currentFlipSided = null;\n      currentCullFace = null;\n      colorBuffer.reset();\n      depthBuffer.reset();\n      stencilBuffer.reset();\n    }\n\n    return {\n      buffers: {\n        color: colorBuffer,\n        depth: depthBuffer,\n        stencil: stencilBuffer\n      },\n      initAttributes: initAttributes,\n      enableAttribute: enableAttribute,\n      enableAttributeAndDivisor: enableAttributeAndDivisor,\n      disableUnusedAttributes: disableUnusedAttributes,\n      enable: enable,\n      disable: disable,\n      useProgram: useProgram,\n      setBlending: setBlending,\n      setMaterial: setMaterial,\n      setFlipSided: setFlipSided,\n      setCullFace: setCullFace,\n      setLineWidth: setLineWidth,\n      setPolygonOffset: setPolygonOffset,\n      setScissorTest: setScissorTest,\n      activeTexture: activeTexture,\n      bindTexture: bindTexture,\n      unbindTexture: unbindTexture,\n      compressedTexImage2D: compressedTexImage2D,\n      texImage2D: texImage2D,\n      texImage3D: texImage3D,\n      scissor: scissor,\n      viewport: viewport,\n      reset: reset\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n    var isWebGL2 = capabilities.isWebGL2;\n    var maxTextures = capabilities.maxTextures;\n    var maxCubemapSize = capabilities.maxCubemapSize;\n    var maxTextureSize = capabilities.maxTextureSize;\n    var maxSamples = capabilities.maxSamples;\n\n    var _videoTextures = new WeakMap();\n\n    var _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n    // also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\n\n    var useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext(\"2d\") !== null;\n\n    function createCanvas(width, height) {\n      // Use OffscreenCanvas when available. Specially needed in web workers\n      return useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n    }\n\n    function resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n      var scale = 1; // handle case if texture exceeds max size\n\n      if (image.width > maxSize || image.height > maxSize) {\n        scale = maxSize / Math.max(image.width, image.height);\n      } // only perform resize if necessary\n\n\n      if (scale < 1 || needsPowerOfTwo === true) {\n        // only perform resize for certain image types\n        if (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n          var floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n          var width = floor(scale * image.width);\n          var height = floor(scale * image.height);\n\n          if (_canvas === undefined) {\n            _canvas = createCanvas(width, height);\n          } // cube textures can't reuse the same canvas\n\n\n          var canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n          canvas.width = width;\n          canvas.height = height;\n          var context = canvas.getContext('2d');\n          context.drawImage(image, 0, 0, width, height);\n          console.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n          return canvas;\n        } else {\n          if ('data' in image) {\n            console.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n          }\n\n          return image;\n        }\n      }\n\n      return image;\n    }\n\n    function isPowerOfTwo(image) {\n      return _Math.isPowerOfTwo(image.width) && _Math.isPowerOfTwo(image.height);\n    }\n\n    function textureNeedsPowerOfTwo(texture) {\n      if (isWebGL2) {\n        return false;\n      }\n\n      return texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function textureNeedsGenerateMipmaps(texture, supportsMips) {\n      return texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n    }\n\n    function generateMipmap(target, texture, width, height) {\n      _gl.generateMipmap(target);\n\n      var textureProperties = properties.get(texture); // Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\n      textureProperties.__maxMipLevel = Math.log(Math.max(width, height)) * Math.LOG2E;\n    }\n\n    function getInternalFormat(glFormat, glType) {\n      if (isWebGL2 === false) {\n        return glFormat;\n      }\n\n      var internalFormat = glFormat;\n\n      if (glFormat === 6403) {\n        if (glType === 5126) {\n          internalFormat = 33326;\n        }\n\n        if (glType === 5131) {\n          internalFormat = 33325;\n        }\n\n        if (glType === 5121) {\n          internalFormat = 33321;\n        }\n      }\n\n      if (glFormat === 6407) {\n        if (glType === 5126) {\n          internalFormat = 34837;\n        }\n\n        if (glType === 5131) {\n          internalFormat = 34843;\n        }\n\n        if (glType === 5121) {\n          internalFormat = 32849;\n        }\n      }\n\n      if (glFormat === 6408) {\n        if (glType === 5126) {\n          internalFormat = 34836;\n        }\n\n        if (glType === 5131) {\n          internalFormat = 34842;\n        }\n\n        if (glType === 5121) {\n          internalFormat = 32856;\n        }\n      }\n\n      if (internalFormat === 33325 || internalFormat === 33326 || internalFormat === 34842 || internalFormat === 34836) {\n        extensions.get('EXT_color_buffer_float');\n      } else if (internalFormat === 34843 || internalFormat === 34837) {\n        console.warn('THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.');\n      }\n\n      return internalFormat;\n    } // Fallback filters for non-power-of-2 textures\n\n\n    function filterFallback(f) {\n      if (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n        return 9728;\n      }\n\n      return 9729;\n    } //\n\n\n    function onTextureDispose(event) {\n      var texture = event.target;\n      texture.removeEventListener('dispose', onTextureDispose);\n      deallocateTexture(texture);\n\n      if (texture.isVideoTexture) {\n        _videoTextures.delete(texture);\n      }\n\n      info.memory.textures--;\n    }\n\n    function onRenderTargetDispose(event) {\n      var renderTarget = event.target;\n      renderTarget.removeEventListener('dispose', onRenderTargetDispose);\n      deallocateRenderTarget(renderTarget);\n      info.memory.textures--;\n    } //\n\n\n    function deallocateTexture(texture) {\n      var textureProperties = properties.get(texture);\n\n      if (textureProperties.__webglInit === undefined) {\n        return;\n      }\n\n      _gl.deleteTexture(textureProperties.__webglTexture);\n\n      properties.remove(texture);\n    }\n\n    function deallocateRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n\n      if (!renderTarget) {\n        return;\n      }\n\n      if (textureProperties.__webglTexture !== undefined) {\n        _gl.deleteTexture(textureProperties.__webglTexture);\n      }\n\n      if (renderTarget.depthTexture) {\n        renderTarget.depthTexture.dispose();\n      }\n\n      if (renderTarget.isWebGLRenderTargetCube) {\n        for (var i = 0; i < 6; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n          if (renderTargetProperties.__webglDepthbuffer) {\n            _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n          }\n        }\n      } else {\n        _gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n        if (renderTargetProperties.__webglDepthbuffer) {\n          _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n        }\n      }\n\n      if (renderTarget.isWebGLMultiviewRenderTarget) {\n        _gl.deleteTexture(renderTargetProperties.__webglColorTexture);\n\n        _gl.deleteTexture(renderTargetProperties.__webglDepthStencilTexture);\n\n        info.memory.textures -= 2;\n\n        for (var i = 0, il = renderTargetProperties.__webglViewFramebuffers.length; i < il; i++) {\n          _gl.deleteFramebuffer(renderTargetProperties.__webglViewFramebuffers[i]);\n        }\n      }\n\n      properties.remove(renderTarget.texture);\n      properties.remove(renderTarget);\n    } //\n\n\n    var textureUnits = 0;\n\n    function resetTextureUnits() {\n      textureUnits = 0;\n    }\n\n    function allocateTextureUnit() {\n      var textureUnit = textureUnits;\n\n      if (textureUnit >= maxTextures) {\n        console.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n      }\n\n      textureUnits += 1;\n      return textureUnit;\n    } //\n\n\n    function setTexture2D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.isVideoTexture) {\n        updateVideoTexture(texture);\n      }\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        var image = texture.image;\n\n        if (image === undefined) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n        } else if (image.complete === false) {\n          console.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n        } else {\n          uploadTexture(textureProperties, texture, slot);\n          return;\n        }\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(3553, textureProperties.__webglTexture);\n    }\n\n    function setTexture2DArray(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(35866, textureProperties.__webglTexture);\n    }\n\n    function setTexture3D(texture, slot) {\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        uploadTexture(textureProperties, texture, slot);\n        return;\n      }\n\n      state.activeTexture(33984 + slot);\n      state.bindTexture(32879, textureProperties.__webglTexture);\n    }\n\n    function setTextureCube(texture, slot) {\n      if (texture.image.length !== 6) {\n        return;\n      }\n\n      var textureProperties = properties.get(texture);\n\n      if (texture.version > 0 && textureProperties.__version !== texture.version) {\n        initTexture(textureProperties, texture);\n        state.activeTexture(33984 + slot);\n        state.bindTexture(34067, textureProperties.__webglTexture);\n\n        _gl.pixelStorei(37440, texture.flipY);\n\n        var isCompressed = texture && texture.isCompressedTexture;\n        var isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n        var cubeImage = [];\n\n        for (var i = 0; i < 6; i++) {\n          if (!isCompressed && !isDataTexture) {\n            cubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n          } else {\n            cubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n          }\n        }\n\n        var image = cubeImage[0],\n            supportsMips = isPowerOfTwo(image) || isWebGL2,\n            glFormat = utils.convert(texture.format),\n            glType = utils.convert(texture.type),\n            glInternalFormat = getInternalFormat(glFormat, glType);\n        setTextureParameters(34067, texture, supportsMips);\n        var mipmaps;\n\n        if (isCompressed) {\n          for (var i = 0; i < 6; i++) {\n            mipmaps = cubeImage[i].mipmaps;\n\n            for (var j = 0; j < mipmaps.length; j++) {\n              var mipmap = mipmaps[j];\n\n              if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n                if (glFormat !== null) {\n                  state.compressedTexImage2D(34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n                } else {\n                  console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n                }\n              } else {\n                state.texImage2D(34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n              }\n            }\n          }\n\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          mipmaps = texture.mipmaps;\n\n          for (var i = 0; i < 6; i++) {\n            if (isDataTexture) {\n              state.texImage2D(34069 + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n              for (var j = 0; j < mipmaps.length; j++) {\n                var mipmap = mipmaps[j];\n                var mipmapImage = mipmap.image[i].image;\n                state.texImage2D(34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n              }\n            } else {\n              state.texImage2D(34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n              for (var j = 0; j < mipmaps.length; j++) {\n                var mipmap = mipmaps[j];\n                state.texImage2D(34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n              }\n            }\n          }\n\n          textureProperties.__maxMipLevel = mipmaps.length;\n        }\n\n        if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n          // We assume images for cube map have the same size.\n          generateMipmap(34067, texture, image.width, image.height);\n        }\n\n        textureProperties.__version = texture.version;\n\n        if (texture.onUpdate) {\n          texture.onUpdate(texture);\n        }\n      } else {\n        state.activeTexture(33984 + slot);\n        state.bindTexture(34067, textureProperties.__webglTexture);\n      }\n    }\n\n    function setTextureCubeDynamic(texture, slot) {\n      state.activeTexture(33984 + slot);\n      state.bindTexture(34067, properties.get(texture).__webglTexture);\n    }\n\n    var wrappingToGL = {};\n    wrappingToGL[RepeatWrapping] = 10497;\n    wrappingToGL[ClampToEdgeWrapping] = 33071;\n    wrappingToGL[MirroredRepeatWrapping] = 33648;\n    var filterToGL = {};\n    filterToGL[NearestFilter] = 9728;\n    filterToGL[NearestMipmapNearestFilter] = 9984;\n    filterToGL[NearestMipmapLinearFilter] = 9986;\n    filterToGL[LinearFilter] = 9729;\n    filterToGL[LinearMipmapNearestFilter] = 9985;\n    filterToGL[LinearMipmapLinearFilter] = 9987;\n\n    function setTextureParameters(textureType, texture, supportsMips) {\n      if (supportsMips) {\n        _gl.texParameteri(textureType, 10242, wrappingToGL[texture.wrapS]);\n\n        _gl.texParameteri(textureType, 10243, wrappingToGL[texture.wrapT]);\n\n        if (textureType === 32879 || textureType === 35866) {\n          _gl.texParameteri(textureType, 32882, wrappingToGL[texture.wrapR]);\n        }\n\n        _gl.texParameteri(textureType, 10240, filterToGL[texture.magFilter]);\n\n        _gl.texParameteri(textureType, 10241, filterToGL[texture.minFilter]);\n      } else {\n        _gl.texParameteri(textureType, 10242, 33071);\n\n        _gl.texParameteri(textureType, 10243, 33071);\n\n        if (textureType === 32879 || textureType === 35866) {\n          _gl.texParameteri(textureType, 32882, 33071);\n        }\n\n        if (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n        }\n\n        _gl.texParameteri(textureType, 10240, filterFallback(texture.magFilter));\n\n        _gl.texParameteri(textureType, 10241, filterFallback(texture.minFilter));\n\n        if (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n          console.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n        }\n      }\n\n      var extension = extensions.get('EXT_texture_filter_anisotropic');\n\n      if (extension) {\n        if (texture.type === FloatType && extensions.get('OES_texture_float_linear') === null) {\n          return;\n        }\n\n        if (texture.type === HalfFloatType && (isWebGL2 || extensions.get('OES_texture_half_float_linear')) === null) {\n          return;\n        }\n\n        if (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n          _gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n          properties.get(texture).__currentAnisotropy = texture.anisotropy;\n        }\n      }\n    }\n\n    function initTexture(textureProperties, texture) {\n      if (textureProperties.__webglInit === undefined) {\n        textureProperties.__webglInit = true;\n        texture.addEventListener('dispose', onTextureDispose);\n        textureProperties.__webglTexture = _gl.createTexture();\n        info.memory.textures++;\n      }\n    }\n\n    function uploadTexture(textureProperties, texture, slot) {\n      var textureType = 3553;\n\n      if (texture.isDataTexture2DArray) {\n        textureType = 35866;\n      }\n\n      if (texture.isDataTexture3D) {\n        textureType = 32879;\n      }\n\n      initTexture(textureProperties, texture);\n      state.activeTexture(33984 + slot);\n      state.bindTexture(textureType, textureProperties.__webglTexture);\n\n      _gl.pixelStorei(37440, texture.flipY);\n\n      _gl.pixelStorei(37441, texture.premultiplyAlpha);\n\n      _gl.pixelStorei(3317, texture.unpackAlignment);\n\n      var needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo(texture.image) === false;\n      var image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n      var supportsMips = isPowerOfTwo(image) || isWebGL2,\n          glFormat = utils.convert(texture.format),\n          glType = utils.convert(texture.type),\n          glInternalFormat = getInternalFormat(glFormat, glType);\n      setTextureParameters(textureType, texture, supportsMips);\n      var mipmap,\n          mipmaps = texture.mipmaps;\n\n      if (texture.isDepthTexture) {\n        // populate depth texture with dummy data\n        glInternalFormat = 6402;\n\n        if (texture.type === FloatType) {\n          if (isWebGL2 === false) {\n            throw new Error('Float Depth Texture only supported in WebGL2.0');\n          }\n\n          glInternalFormat = 36012;\n        } else if (isWebGL2) {\n          // WebGL 2.0 requires signed internalformat for glTexImage2D\n          glInternalFormat = 33189;\n        }\n\n        if (texture.format === DepthFormat && glInternalFormat === 6402) {\n          // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n          if (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n            texture.type = UnsignedShortType;\n            glType = utils.convert(texture.type);\n          }\n        } // Depth stencil textures need the DEPTH_STENCIL internal format\n        // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\n        if (texture.format === DepthStencilFormat) {\n          glInternalFormat = 34041; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n          // DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n          // (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n          if (texture.type !== UnsignedInt248Type) {\n            console.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n            texture.type = UnsignedInt248Type;\n            glType = utils.convert(texture.type);\n          }\n        }\n\n        state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n      } else if (texture.isDataTexture) {\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n          textureProperties.__maxMipLevel = 0;\n        }\n      } else if (texture.isCompressedTexture) {\n        for (var i = 0, il = mipmaps.length; i < il; i++) {\n          mipmap = mipmaps[i];\n\n          if (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n            if (glFormat !== null) {\n              state.compressedTexImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n            } else {\n              console.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n            }\n          } else {\n            state.texImage2D(3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n          }\n        }\n\n        textureProperties.__maxMipLevel = mipmaps.length - 1;\n      } else if (texture.isDataTexture2DArray) {\n        state.texImage3D(35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else if (texture.isDataTexture3D) {\n        state.texImage3D(32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n        textureProperties.__maxMipLevel = 0;\n      } else {\n        // regular Texture (image, video, canvas)\n        // use manually created mipmaps if available\n        // if there are no manual mipmaps\n        // set 0 level mipmap and then use GL to generate other mipmap levels\n        if (mipmaps.length > 0 && supportsMips) {\n          for (var i = 0, il = mipmaps.length; i < il; i++) {\n            mipmap = mipmaps[i];\n            state.texImage2D(3553, i, glInternalFormat, glFormat, glType, mipmap);\n          }\n\n          texture.generateMipmaps = false;\n          textureProperties.__maxMipLevel = mipmaps.length - 1;\n        } else {\n          state.texImage2D(3553, 0, glInternalFormat, glFormat, glType, image);\n          textureProperties.__maxMipLevel = 0;\n        }\n      }\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        generateMipmap(3553, texture, image.width, image.height);\n      }\n\n      textureProperties.__version = texture.version;\n\n      if (texture.onUpdate) {\n        texture.onUpdate(texture);\n      }\n    } // Render targets\n    // Setup storage for target texture and bind it to correct framebuffer\n\n\n    function setupFrameBufferTexture(framebuffer, renderTarget, attachment, textureTarget) {\n      var glFormat = utils.convert(renderTarget.texture.format);\n      var glType = utils.convert(renderTarget.texture.type);\n      var glInternalFormat = getInternalFormat(glFormat, glType);\n      state.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      _gl.framebufferTexture2D(36160, attachment, textureTarget, properties.get(renderTarget.texture).__webglTexture, 0);\n\n      _gl.bindFramebuffer(36160, null);\n    } // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n    function setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n      _gl.bindRenderbuffer(36161, renderbuffer);\n\n      if (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n        if (isMultisample) {\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, samples, 33189, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, 33189, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(36160, 36096, 36161, renderbuffer);\n      } else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n        if (isMultisample) {\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, samples, 35056, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, 34041, renderTarget.width, renderTarget.height);\n        }\n\n        _gl.framebufferRenderbuffer(36160, 33306, 36161, renderbuffer);\n      } else {\n        var glFormat = utils.convert(renderTarget.texture.format);\n        var glType = utils.convert(renderTarget.texture.type);\n        var glInternalFormat = getInternalFormat(glFormat, glType);\n\n        if (isMultisample) {\n          var samples = getRenderTargetSamples(renderTarget);\n\n          _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n        } else {\n          _gl.renderbufferStorage(36161, glInternalFormat, renderTarget.width, renderTarget.height);\n        }\n      }\n\n      _gl.bindRenderbuffer(36161, null);\n    } // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n    function setupDepthTexture(framebuffer, renderTarget) {\n      var isCube = renderTarget && renderTarget.isWebGLRenderTargetCube;\n\n      if (isCube) {\n        throw new Error('Depth Texture with cube render targets is not supported');\n      }\n\n      _gl.bindFramebuffer(36160, framebuffer);\n\n      if (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n        throw new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n      } // upload an empty depth texture with framebuffer size\n\n\n      if (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n        renderTarget.depthTexture.image.width = renderTarget.width;\n        renderTarget.depthTexture.image.height = renderTarget.height;\n        renderTarget.depthTexture.needsUpdate = true;\n      }\n\n      setTexture2D(renderTarget.depthTexture, 0);\n\n      var webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n      if (renderTarget.depthTexture.format === DepthFormat) {\n        _gl.framebufferTexture2D(36160, 36096, 3553, webglDepthTexture, 0);\n      } else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n        _gl.framebufferTexture2D(36160, 33306, 3553, webglDepthTexture, 0);\n      } else {\n        throw new Error('Unknown depthTexture format');\n      }\n    } // Setup GL resources for a non-texture depth buffer\n\n\n    function setupDepthRenderbuffer(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n\n      if (renderTarget.depthTexture) {\n        if (isCube) {\n          throw new Error('target.depthTexture not supported in Cube render targets');\n        }\n\n        setupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n      } else {\n        if (isCube) {\n          renderTargetProperties.__webglDepthbuffer = [];\n\n          for (var i = 0; i < 6; i++) {\n            _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer[i]);\n\n            renderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n            setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget);\n          }\n        } else {\n          _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          renderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n          setupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget);\n        }\n      }\n\n      _gl.bindFramebuffer(36160, null);\n    } // Set up GL resources for the render target\n\n\n    function setupRenderTarget(renderTarget) {\n      var renderTargetProperties = properties.get(renderTarget);\n      var textureProperties = properties.get(renderTarget.texture);\n      renderTarget.addEventListener('dispose', onRenderTargetDispose);\n      textureProperties.__webglTexture = _gl.createTexture();\n      info.memory.textures++;\n      var isCube = renderTarget.isWebGLRenderTargetCube === true;\n      var isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n      var isMultiview = renderTarget.isWebGLMultiviewRenderTarget === true;\n      var supportsMips = isPowerOfTwo(renderTarget) || isWebGL2; // Setup framebuffer\n\n      if (isCube) {\n        renderTargetProperties.__webglFramebuffer = [];\n\n        for (var i = 0; i < 6; i++) {\n          renderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n        }\n      } else {\n        renderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n        if (isMultisample) {\n          if (isWebGL2) {\n            renderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n            renderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n            _gl.bindRenderbuffer(36161, renderTargetProperties.__webglColorRenderbuffer);\n\n            var glFormat = utils.convert(renderTarget.texture.format);\n            var glType = utils.convert(renderTarget.texture.type);\n            var glInternalFormat = getInternalFormat(glFormat, glType);\n            var samples = getRenderTargetSamples(renderTarget);\n\n            _gl.renderbufferStorageMultisample(36161, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n            _gl.bindFramebuffer(36160, renderTargetProperties.__webglMultisampledFramebuffer);\n\n            _gl.framebufferRenderbuffer(36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer);\n\n            _gl.bindRenderbuffer(36161, null);\n\n            if (renderTarget.depthBuffer) {\n              renderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n              setupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n            }\n\n            _gl.bindFramebuffer(36160, null);\n          } else {\n            console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n          }\n        } else if (isMultiview) {\n          var width = renderTarget.width;\n          var height = renderTarget.height;\n          var numViews = renderTarget.numViews;\n\n          _gl.bindFramebuffer(36160, renderTargetProperties.__webglFramebuffer);\n\n          var ext = extensions.get('OVR_multiview2');\n          info.memory.textures += 2;\n\n          var colorTexture = _gl.createTexture();\n\n          _gl.bindTexture(35866, colorTexture);\n\n          _gl.texParameteri(35866, 10240, 9728);\n\n          _gl.texParameteri(35866, 10241, 9728);\n\n          _gl.texImage3D(35866, 0, 32856, width, height, numViews, 0, 6408, 5121, null);\n\n          ext.framebufferTextureMultiviewOVR(36160, 36064, colorTexture, 0, 0, numViews);\n\n          var depthStencilTexture = _gl.createTexture();\n\n          _gl.bindTexture(35866, depthStencilTexture);\n\n          _gl.texParameteri(35866, 10240, 9728);\n\n          _gl.texParameteri(35866, 10241, 9728);\n\n          _gl.texImage3D(35866, 0, 35056, width, height, numViews, 0, 34041, 34042, null);\n\n          ext.framebufferTextureMultiviewOVR(36160, 33306, depthStencilTexture, 0, 0, numViews);\n          var viewFramebuffers = new Array(numViews);\n\n          for (var i = 0; i < numViews; ++i) {\n            viewFramebuffers[i] = _gl.createFramebuffer();\n\n            _gl.bindFramebuffer(36160, viewFramebuffers[i]);\n\n            _gl.framebufferTextureLayer(36160, 36064, colorTexture, 0, i);\n          }\n\n          renderTargetProperties.__webglColorTexture = colorTexture;\n          renderTargetProperties.__webglDepthStencilTexture = depthStencilTexture;\n          renderTargetProperties.__webglViewFramebuffers = viewFramebuffers;\n\n          _gl.bindFramebuffer(36160, null);\n\n          _gl.bindTexture(35866, null);\n        }\n      } // Setup color buffer\n\n\n      if (isCube) {\n        state.bindTexture(34067, textureProperties.__webglTexture);\n        setTextureParameters(34067, renderTarget.texture, supportsMips);\n\n        for (var i = 0; i < 6; i++) {\n          setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, 36064, 34069 + i);\n        }\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n          generateMipmap(34067, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(34067, null);\n      } else if (!isMultiview) {\n        state.bindTexture(3553, textureProperties.__webglTexture);\n        setTextureParameters(3553, renderTarget.texture, supportsMips);\n        setupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553);\n\n        if (textureNeedsGenerateMipmaps(renderTarget.texture, supportsMips)) {\n          generateMipmap(3553, renderTarget.texture, renderTarget.width, renderTarget.height);\n        }\n\n        state.bindTexture(3553, null);\n      } // Setup depth and stencil buffers\n\n\n      if (renderTarget.depthBuffer) {\n        setupDepthRenderbuffer(renderTarget);\n      }\n    }\n\n    function updateRenderTargetMipmap(renderTarget) {\n      var texture = renderTarget.texture;\n      var supportsMips = isPowerOfTwo(renderTarget) || isWebGL2;\n\n      if (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n        var target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\n        var webglTexture = properties.get(texture).__webglTexture;\n\n        state.bindTexture(target, webglTexture);\n        generateMipmap(target, texture, renderTarget.width, renderTarget.height);\n        state.bindTexture(target, null);\n      }\n    }\n\n    function updateMultisampleRenderTarget(renderTarget) {\n      if (renderTarget.isWebGLMultisampleRenderTarget) {\n        if (isWebGL2) {\n          var renderTargetProperties = properties.get(renderTarget);\n\n          _gl.bindFramebuffer(36008, renderTargetProperties.__webglMultisampledFramebuffer);\n\n          _gl.bindFramebuffer(36009, renderTargetProperties.__webglFramebuffer);\n\n          var width = renderTarget.width;\n          var height = renderTarget.height;\n          var mask = 16384;\n\n          if (renderTarget.depthBuffer) {\n            mask |= 256;\n          }\n\n          if (renderTarget.stencilBuffer) {\n            mask |= 1024;\n          }\n\n          _gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, 9728);\n        } else {\n          console.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n        }\n      }\n    }\n\n    function getRenderTargetSamples(renderTarget) {\n      return isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n    }\n\n    function updateVideoTexture(texture) {\n      var frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n      if (_videoTextures.get(texture) !== frame) {\n        _videoTextures.set(texture, frame);\n\n        texture.update();\n      }\n    } // backwards compatibility\n\n\n    var warnedTexture2D = false;\n    var warnedTextureCube = false;\n\n    function safeSetTexture2D(texture, slot) {\n      if (texture && texture.isWebGLRenderTarget) {\n        if (warnedTexture2D === false) {\n          console.warn(\"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\");\n          warnedTexture2D = true;\n        }\n\n        texture = texture.texture;\n      }\n\n      setTexture2D(texture, slot);\n    }\n\n    function safeSetTextureCube(texture, slot) {\n      if (texture && texture.isWebGLRenderTargetCube) {\n        if (warnedTextureCube === false) {\n          console.warn(\"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\");\n          warnedTextureCube = true;\n        }\n\n        texture = texture.texture;\n      } // currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n      // TODO: unify these code paths\n\n\n      if (texture && texture.isCubeTexture || Array.isArray(texture.image) && texture.image.length === 6) {\n        // CompressedTexture can have Array in image :/\n        // this function alone should take care of cube textures\n        setTextureCube(texture, slot);\n      } else {\n        // assumed: texture property of THREE.WebGLRenderTargetCube\n        setTextureCubeDynamic(texture, slot);\n      }\n    } //\n\n\n    this.allocateTextureUnit = allocateTextureUnit;\n    this.resetTextureUnits = resetTextureUnits;\n    this.setTexture2D = setTexture2D;\n    this.setTexture2DArray = setTexture2DArray;\n    this.setTexture3D = setTexture3D;\n    this.setTextureCube = setTextureCube;\n    this.setTextureCubeDynamic = setTextureCubeDynamic;\n    this.setupRenderTarget = setupRenderTarget;\n    this.updateRenderTargetMipmap = updateRenderTargetMipmap;\n    this.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n    this.safeSetTexture2D = safeSetTexture2D;\n    this.safeSetTextureCube = safeSetTextureCube;\n  }\n  /**\n   * @author thespite / http://www.twitter.com/thespite\n   */\n\n\n  function WebGLUtils(gl, extensions, capabilities) {\n    var isWebGL2 = capabilities.isWebGL2;\n\n    function convert(p) {\n      var extension;\n\n      if (p === UnsignedByteType) {\n        return 5121;\n      }\n\n      if (p === UnsignedShort4444Type) {\n        return 32819;\n      }\n\n      if (p === UnsignedShort5551Type) {\n        return 32820;\n      }\n\n      if (p === UnsignedShort565Type) {\n        return 33635;\n      }\n\n      if (p === ByteType) {\n        return 5120;\n      }\n\n      if (p === ShortType) {\n        return 5122;\n      }\n\n      if (p === UnsignedShortType) {\n        return 5123;\n      }\n\n      if (p === IntType) {\n        return 5124;\n      }\n\n      if (p === UnsignedIntType) {\n        return 5125;\n      }\n\n      if (p === FloatType) {\n        return 5126;\n      }\n\n      if (p === HalfFloatType) {\n        if (isWebGL2) {\n          return 5131;\n        }\n\n        extension = extensions.get('OES_texture_half_float');\n\n        if (extension !== null) {\n          return extension.HALF_FLOAT_OES;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === AlphaFormat) {\n        return 6406;\n      }\n\n      if (p === RGBFormat) {\n        return 6407;\n      }\n\n      if (p === RGBAFormat) {\n        return 6408;\n      }\n\n      if (p === LuminanceFormat) {\n        return 6409;\n      }\n\n      if (p === LuminanceAlphaFormat) {\n        return 6410;\n      }\n\n      if (p === DepthFormat) {\n        return 6402;\n      }\n\n      if (p === DepthStencilFormat) {\n        return 34041;\n      }\n\n      if (p === RedFormat) {\n        return 6403;\n      }\n\n      if (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n        if (extension !== null) {\n          if (p === RGB_S3TC_DXT1_Format) {\n            return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n          }\n\n          if (p === RGBA_S3TC_DXT1_Format) {\n            return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n          }\n\n          if (p === RGBA_S3TC_DXT3_Format) {\n            return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n          }\n\n          if (p === RGBA_S3TC_DXT5_Format) {\n            return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n          }\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n        if (extension !== null) {\n          if (p === RGB_PVRTC_4BPPV1_Format) {\n            return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n          }\n\n          if (p === RGB_PVRTC_2BPPV1_Format) {\n            return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n          }\n\n          if (p === RGBA_PVRTC_4BPPV1_Format) {\n            return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n          }\n\n          if (p === RGBA_PVRTC_2BPPV1_Format) {\n            return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n          }\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGB_ETC1_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_etc1');\n\n        if (extension !== null) {\n          return extension.COMPRESSED_RGB_ETC1_WEBGL;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format) {\n        extension = extensions.get('WEBGL_compressed_texture_astc');\n\n        if (extension !== null) {\n          // TODO Complete?\n          return p;\n        } else {\n          return null;\n        }\n      }\n\n      if (p === UnsignedInt248Type) {\n        if (isWebGL2) {\n          return 34042;\n        }\n\n        extension = extensions.get('WEBGL_depth_texture');\n\n        if (extension !== null) {\n          return extension.UNSIGNED_INT_24_8_WEBGL;\n        } else {\n          return null;\n        }\n      }\n    }\n\n    return {\n      convert: convert\n    };\n  }\n  /**\n   * @author fernandojsg / http://fernandojsg.com\n   * @author Takahiro https://github.com/takahirox\n   */\n\n\n  function WebGLMultiviewRenderTarget(width, height, numViews, options) {\n    WebGLRenderTarget.call(this, width, height, options);\n    this.depthBuffer = false;\n    this.stencilBuffer = false;\n    this.numViews = numViews;\n  }\n\n  WebGLMultiviewRenderTarget.prototype = Object.assign(Object.create(WebGLRenderTarget.prototype), {\n    constructor: WebGLMultiviewRenderTarget,\n    isWebGLMultiviewRenderTarget: true,\n    copy: function (source) {\n      WebGLRenderTarget.prototype.copy.call(this, source);\n      this.numViews = source.numViews;\n      return this;\n    },\n    setNumViews: function (numViews) {\n      if (this.numViews !== numViews) {\n        this.numViews = numViews;\n        this.dispose();\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author fernandojsg / http://fernandojsg.com\n   * @author Takahiro https://github.com/takahirox\n   */\n\n  function WebGLMultiview(renderer, gl) {\n    var DEFAULT_NUMVIEWS = 2;\n    var extensions = renderer.extensions;\n    var properties = renderer.properties;\n    var renderTarget, currentRenderTarget;\n    var mat3, mat4, cameraArray, renderSize;\n    var available;\n    var maxNumViews = 0; //\n\n    function isAvailable() {\n      if (available === undefined) {\n        var extension = extensions.get('OVR_multiview2');\n        available = extension !== null && gl.getContextAttributes().antialias === false;\n\n        if (available) {\n          maxNumViews = gl.getParameter(extension.MAX_VIEWS_OVR);\n          renderTarget = new WebGLMultiviewRenderTarget(0, 0, DEFAULT_NUMVIEWS);\n          renderSize = new Vector2();\n          mat4 = [];\n          mat3 = [];\n          cameraArray = [];\n\n          for (var i = 0; i < maxNumViews; i++) {\n            mat4[i] = new Matrix4();\n            mat3[i] = new Matrix3();\n          }\n        }\n      }\n\n      return available;\n    }\n\n    function getCameraArray(camera) {\n      if (camera.isArrayCamera) {\n        return camera.cameras;\n      }\n\n      cameraArray[0] = camera;\n      return cameraArray;\n    }\n\n    function updateCameraProjectionMatricesUniform(camera, uniforms) {\n      var cameras = getCameraArray(camera);\n\n      for (var i = 0; i < cameras.length; i++) {\n        mat4[i].copy(cameras[i].projectionMatrix);\n      }\n\n      uniforms.setValue(gl, 'projectionMatrices', mat4);\n    }\n\n    function updateCameraViewMatricesUniform(camera, uniforms) {\n      var cameras = getCameraArray(camera);\n\n      for (var i = 0; i < cameras.length; i++) {\n        mat4[i].copy(cameras[i].matrixWorldInverse);\n      }\n\n      uniforms.setValue(gl, 'viewMatrices', mat4);\n    }\n\n    function updateObjectMatricesUniforms(object, camera, uniforms) {\n      var cameras = getCameraArray(camera);\n\n      for (var i = 0; i < cameras.length; i++) {\n        mat4[i].multiplyMatrices(cameras[i].matrixWorldInverse, object.matrixWorld);\n        mat3[i].getNormalMatrix(mat4[i]);\n      }\n\n      uniforms.setValue(gl, 'modelViewMatrices', mat4);\n      uniforms.setValue(gl, 'normalMatrices', mat3);\n    }\n\n    function isMultiviewCompatible(camera) {\n      if (camera.isArrayCamera === undefined) {\n        return true;\n      }\n\n      var cameras = camera.cameras;\n\n      if (cameras.length > maxNumViews) {\n        return false;\n      }\n\n      for (var i = 1, il = cameras.length; i < il; i++) {\n        if (cameras[0].viewport.z !== cameras[i].viewport.z || cameras[0].viewport.w !== cameras[i].viewport.w) {\n          return false;\n        }\n      }\n\n      return true;\n    }\n\n    function resizeRenderTarget(camera) {\n      if (currentRenderTarget) {\n        renderSize.set(currentRenderTarget.width, currentRenderTarget.height);\n      } else {\n        renderer.getDrawingBufferSize(renderSize);\n      }\n\n      if (camera.isArrayCamera) {\n        var viewport = camera.cameras[0].viewport;\n        renderTarget.setSize(viewport.z, viewport.w);\n        renderTarget.setNumViews(camera.cameras.length);\n      } else {\n        renderTarget.setSize(renderSize.x, renderSize.y);\n        renderTarget.setNumViews(DEFAULT_NUMVIEWS);\n      }\n    }\n\n    function attachCamera(camera) {\n      if (isMultiviewCompatible(camera) === false) {\n        return;\n      }\n\n      currentRenderTarget = renderer.getRenderTarget();\n      resizeRenderTarget(camera);\n      renderer.setRenderTarget(renderTarget);\n    }\n\n    function detachCamera(camera) {\n      if (renderTarget !== renderer.getRenderTarget()) {\n        return;\n      }\n\n      renderer.setRenderTarget(currentRenderTarget);\n      flush(camera);\n    }\n\n    function flush(camera) {\n      var srcRenderTarget = renderTarget;\n      var numViews = srcRenderTarget.numViews;\n\n      var srcFramebuffers = properties.get(srcRenderTarget).__webglViewFramebuffers;\n\n      var viewWidth = srcRenderTarget.width;\n      var viewHeight = srcRenderTarget.height;\n\n      if (camera.isArrayCamera) {\n        for (var i = 0; i < numViews; i++) {\n          var viewport = camera.cameras[i].viewport;\n          var x1 = viewport.x;\n          var y1 = viewport.y;\n          var x2 = x1 + viewport.z;\n          var y2 = y1 + viewport.w;\n          gl.bindFramebuffer(36008, srcFramebuffers[i]);\n          gl.blitFramebuffer(0, 0, viewWidth, viewHeight, x1, y1, x2, y2, 16384, 9728);\n        }\n      } else {\n        gl.bindFramebuffer(36008, srcFramebuffers[0]);\n        gl.blitFramebuffer(0, 0, viewWidth, viewHeight, 0, 0, renderSize.x, renderSize.y, 16384, 9728);\n      }\n    }\n\n    this.isAvailable = isAvailable;\n    this.attachCamera = attachCamera;\n    this.detachCamera = detachCamera;\n    this.updateCameraProjectionMatricesUniform = updateCameraProjectionMatricesUniform;\n    this.updateCameraViewMatricesUniform = updateCameraViewMatricesUniform;\n    this.updateObjectMatricesUniforms = updateObjectMatricesUniforms;\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function Group() {\n    Object3D.call(this);\n    this.type = 'Group';\n  }\n\n  Group.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Group,\n    isGroup: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ArrayCamera(array) {\n    PerspectiveCamera.call(this);\n    this.cameras = array || [];\n  }\n\n  ArrayCamera.prototype = Object.assign(Object.create(PerspectiveCamera.prototype), {\n    constructor: ArrayCamera,\n    isArrayCamera: true\n  });\n  /**\n   * @author jsantell / https://www.jsantell.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var cameraLPos = new Vector3();\n  var cameraRPos = new Vector3();\n  /**\n   * Assumes 2 cameras that are parallel and share an X-axis, and that\n   * the cameras' projection and world matrices have already been set.\n   * And that near and far planes are identical for both cameras.\n   * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n   */\n\n  function setProjectionFromUnion(camera, cameraL, cameraR) {\n    cameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n    cameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n    var ipd = cameraLPos.distanceTo(cameraRPos);\n    var projL = cameraL.projectionMatrix.elements;\n    var projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n    // most likely identical top and bottom frustum extents.\n    // Use the left camera for these values.\n\n    var near = projL[14] / (projL[10] - 1);\n    var far = projL[14] / (projL[10] + 1);\n    var topFov = (projL[9] + 1) / projL[5];\n    var bottomFov = (projL[9] - 1) / projL[5];\n    var leftFov = (projL[8] - 1) / projL[0];\n    var rightFov = (projR[8] + 1) / projR[0];\n    var left = near * leftFov;\n    var right = near * rightFov; // Calculate the new camera's position offset from the\n    // left camera. xOffset should be roughly half `ipd`.\n\n    var zOffset = ipd / (-leftFov + rightFov);\n    var xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n    cameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n    camera.translateX(xOffset);\n    camera.translateZ(zOffset);\n    camera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n    camera.matrixWorldInverse.getInverse(camera.matrixWorld); // Find the union of the frustum values of the cameras and scale\n    // the values so that the near plane's position does not change in world space,\n    // although must now be relative to the new union camera.\n\n    var near2 = near + zOffset;\n    var far2 = far + zOffset;\n    var left2 = left - xOffset;\n    var right2 = right + (ipd - xOffset);\n    var top2 = topFov * far / far2 * near2;\n    var bottom2 = bottomFov * far / far2 * near2;\n    camera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function WebVRManager(renderer) {\n    var renderWidth, renderHeight;\n    var scope = this;\n    var device = null;\n    var frameData = null;\n    var poseTarget = null;\n    var controllers = [];\n    var standingMatrix = new Matrix4();\n    var standingMatrixInverse = new Matrix4();\n    var framebufferScaleFactor = 1.0;\n    var referenceSpaceType = 'local-floor';\n\n    if (typeof window !== 'undefined' && 'VRFrameData' in window) {\n      frameData = new window.VRFrameData();\n      window.addEventListener('vrdisplaypresentchange', onVRDisplayPresentChange, false);\n    }\n\n    var matrixWorldInverse = new Matrix4();\n    var tempQuaternion = new Quaternion();\n    var tempPosition = new Vector3();\n    var cameraL = new PerspectiveCamera();\n    cameraL.viewport = new Vector4();\n    cameraL.layers.enable(1);\n    var cameraR = new PerspectiveCamera();\n    cameraR.viewport = new Vector4();\n    cameraR.layers.enable(2);\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    function isPresenting() {\n      return device !== null && device.isPresenting === true;\n    }\n\n    var currentSize = new Vector2(),\n        currentPixelRatio;\n\n    function onVRDisplayPresentChange() {\n      if (isPresenting()) {\n        var eyeParameters = device.getEyeParameters('left');\n        renderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n        renderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n        currentPixelRatio = renderer.getPixelRatio();\n        renderer.getSize(currentSize);\n        renderer.setDrawingBufferSize(renderWidth, renderHeight, 1);\n        cameraL.viewport.set(0, 0, renderWidth / 2, renderHeight);\n        cameraR.viewport.set(renderWidth / 2, 0, renderWidth / 2, renderHeight);\n        animation.start();\n        scope.dispatchEvent({\n          type: 'sessionstart'\n        });\n      } else {\n        if (scope.enabled) {\n          renderer.setDrawingBufferSize(currentSize.width, currentSize.height, currentPixelRatio);\n        }\n\n        animation.stop();\n        scope.dispatchEvent({\n          type: 'sessionend'\n        });\n      }\n    } //\n\n\n    var triggers = [];\n\n    function findGamepad(id) {\n      var gamepads = navigator.getGamepads && navigator.getGamepads();\n\n      for (var i = 0, l = gamepads.length; i < l; i++) {\n        var gamepad = gamepads[i];\n\n        if (gamepad && (gamepad.id === 'Daydream Controller' || gamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' || gamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith('Oculus Touch') || gamepad.id.startsWith('HTC Vive Focus') || gamepad.id.startsWith('Spatial Controller'))) {\n          var hand = gamepad.hand;\n\n          if (id === 0 && (hand === '' || hand === 'right')) {\n            return gamepad;\n          }\n\n          if (id === 1 && hand === 'left') {\n            return gamepad;\n          }\n        }\n      }\n    }\n\n    function updateControllers() {\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var gamepad = findGamepad(i);\n\n        if (gamepad !== undefined && gamepad.pose !== undefined) {\n          if (gamepad.pose === null) {\n            return;\n          } // Pose\n\n\n          var pose = gamepad.pose;\n\n          if (pose.hasPosition === false) {\n            controller.position.set(0.2, -0.6, -0.05);\n          }\n\n          if (pose.position !== null) {\n            controller.position.fromArray(pose.position);\n          }\n\n          if (pose.orientation !== null) {\n            controller.quaternion.fromArray(pose.orientation);\n          }\n\n          controller.matrix.compose(controller.position, controller.quaternion, controller.scale);\n          controller.matrix.premultiply(standingMatrix);\n          controller.matrix.decompose(controller.position, controller.quaternion, controller.scale);\n          controller.matrixWorldNeedsUpdate = true;\n          controller.visible = true; // Trigger\n\n          var buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n          if (triggers[i] === undefined) {\n            triggers[i] = false;\n          }\n\n          if (triggers[i] !== gamepad.buttons[buttonId].pressed) {\n            triggers[i] = gamepad.buttons[buttonId].pressed;\n\n            if (triggers[i] === true) {\n              controller.dispatchEvent({\n                type: 'selectstart'\n              });\n            } else {\n              controller.dispatchEvent({\n                type: 'selectend'\n              });\n              controller.dispatchEvent({\n                type: 'select'\n              });\n            }\n          }\n        } else {\n          controller.visible = false;\n        }\n      }\n    }\n\n    function updateViewportFromBounds(viewport, bounds) {\n      if (bounds !== null && bounds.length === 4) {\n        viewport.set(bounds[0] * renderWidth, bounds[1] * renderHeight, bounds[2] * renderWidth, bounds[3] * renderHeight);\n      }\n    } //\n\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    };\n\n    this.getDevice = function () {\n      return device;\n    };\n\n    this.setDevice = function (value) {\n      if (value !== undefined) {\n        device = value;\n      }\n\n      animation.setContext(value);\n    };\n\n    this.setFramebufferScaleFactor = function (value) {\n      framebufferScaleFactor = value;\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n    };\n\n    this.setPoseTarget = function (object) {\n      if (object !== undefined) {\n        poseTarget = object;\n      }\n    };\n\n    this.getCamera = function (camera) {\n      var userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n      if (isPresenting() === false) {\n        camera.position.set(0, userHeight, 0);\n        camera.rotation.set(0, 0, 0);\n        return camera;\n      }\n\n      device.depthNear = camera.near;\n      device.depthFar = camera.far;\n      device.getFrameData(frameData); //\n\n      if (referenceSpaceType === 'local-floor') {\n        var stageParameters = device.stageParameters;\n\n        if (stageParameters) {\n          standingMatrix.fromArray(stageParameters.sittingToStandingTransform);\n        } else {\n          standingMatrix.makeTranslation(0, userHeight, 0);\n        }\n      }\n\n      var pose = frameData.pose;\n      var poseObject = poseTarget !== null ? poseTarget : camera; // We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\n      poseObject.matrix.copy(standingMatrix);\n      poseObject.matrix.decompose(poseObject.position, poseObject.quaternion, poseObject.scale);\n\n      if (pose.orientation !== null) {\n        tempQuaternion.fromArray(pose.orientation);\n        poseObject.quaternion.multiply(tempQuaternion);\n      }\n\n      if (pose.position !== null) {\n        tempQuaternion.setFromRotationMatrix(standingMatrix);\n        tempPosition.fromArray(pose.position);\n        tempPosition.applyQuaternion(tempQuaternion);\n        poseObject.position.add(tempPosition);\n      }\n\n      poseObject.updateMatrixWorld(); //\n\n      cameraL.near = camera.near;\n      cameraR.near = camera.near;\n      cameraL.far = camera.far;\n      cameraR.far = camera.far;\n      cameraL.matrixWorldInverse.fromArray(frameData.leftViewMatrix);\n      cameraR.matrixWorldInverse.fromArray(frameData.rightViewMatrix); // TODO (mrdoob) Double check this code\n\n      standingMatrixInverse.getInverse(standingMatrix);\n\n      if (referenceSpaceType === 'local-floor') {\n        cameraL.matrixWorldInverse.multiply(standingMatrixInverse);\n        cameraR.matrixWorldInverse.multiply(standingMatrixInverse);\n      }\n\n      var parent = poseObject.parent;\n\n      if (parent !== null) {\n        matrixWorldInverse.getInverse(parent.matrixWorld);\n        cameraL.matrixWorldInverse.multiply(matrixWorldInverse);\n        cameraR.matrixWorldInverse.multiply(matrixWorldInverse);\n      } // envMap and Mirror needs camera.matrixWorld\n\n\n      cameraL.matrixWorld.getInverse(cameraL.matrixWorldInverse);\n      cameraR.matrixWorld.getInverse(cameraR.matrixWorldInverse);\n      cameraL.projectionMatrix.fromArray(frameData.leftProjectionMatrix);\n      cameraR.projectionMatrix.fromArray(frameData.rightProjectionMatrix);\n      setProjectionFromUnion(cameraVR, cameraL, cameraR); //\n\n      var layers = device.getLayers();\n\n      if (layers.length) {\n        var layer = layers[0];\n        updateViewportFromBounds(cameraL.viewport, layer.leftBounds);\n        updateViewportFromBounds(cameraR.viewport, layer.rightBounds);\n      }\n\n      updateControllers();\n      return cameraVR;\n    };\n\n    this.getStandingMatrix = function () {\n      return standingMatrix;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var animation = new WebGLAnimation();\n\n    this.setAnimationLoop = function (callback) {\n      animation.setAnimationLoop(callback);\n\n      if (isPresenting()) {\n        animation.start();\n      }\n    };\n\n    this.submitFrame = function () {\n      if (isPresenting()) {\n        device.submitFrame();\n      }\n    };\n\n    this.dispose = function () {\n      if (typeof window !== 'undefined') {\n        window.removeEventListener('vrdisplaypresentchange', onVRDisplayPresentChange);\n      }\n    }; // DEPRECATED\n\n\n    this.setFrameOfReferenceType = function () {\n      console.warn('THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.');\n    };\n  }\n\n  Object.assign(WebVRManager.prototype, EventDispatcher.prototype);\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function WebXRManager(renderer, gl) {\n    var scope = this;\n    var session = null; // var framebufferScaleFactor = 1.0;\n\n    var referenceSpace = null;\n    var referenceSpaceType = 'local-floor';\n    var pose = null;\n    var controllers = [];\n    var sortedInputSources = [];\n\n    function isPresenting() {\n      return session !== null && referenceSpace !== null;\n    } //\n\n\n    var cameraL = new PerspectiveCamera();\n    cameraL.layers.enable(1);\n    cameraL.viewport = new Vector4();\n    var cameraR = new PerspectiveCamera();\n    cameraR.layers.enable(2);\n    cameraR.viewport = new Vector4();\n    var cameraVR = new ArrayCamera([cameraL, cameraR]);\n    cameraVR.layers.enable(1);\n    cameraVR.layers.enable(2); //\n\n    this.enabled = false;\n\n    this.getController = function (id) {\n      var controller = controllers[id];\n\n      if (controller === undefined) {\n        controller = new Group();\n        controller.matrixAutoUpdate = false;\n        controller.visible = false;\n        controllers[id] = controller;\n      }\n\n      return controller;\n    }; //\n\n\n    function onSessionEvent(event) {\n      for (var i = 0; i < controllers.length; i++) {\n        if (sortedInputSources[i] === event.inputSource) {\n          controllers[i].dispatchEvent({\n            type: event.type\n          });\n        }\n      }\n    }\n\n    function onSessionEnd() {\n      renderer.setFramebuffer(null);\n      renderer.setRenderTarget(renderer.getRenderTarget()); // Hack #15830\n\n      animation.stop();\n      scope.dispatchEvent({\n        type: 'sessionend'\n      });\n    }\n\n    function onRequestReferenceSpace(value) {\n      referenceSpace = value;\n      animation.setContext(session);\n      animation.start();\n      scope.dispatchEvent({\n        type: 'sessionstart'\n      });\n    }\n\n    this.setFramebufferScaleFactor = function ()\n    /* value */\n    {// framebufferScaleFactor = value;\n    };\n\n    this.setReferenceSpaceType = function (value) {\n      referenceSpaceType = value;\n    };\n\n    this.getSession = function () {\n      return session;\n    };\n\n    this.setSession = function (value) {\n      session = value;\n\n      if (session !== null) {\n        session.addEventListener('select', onSessionEvent);\n        session.addEventListener('selectstart', onSessionEvent);\n        session.addEventListener('selectend', onSessionEvent);\n        session.addEventListener('end', onSessionEnd); // eslint-disable-next-line no-undef\n\n        session.updateRenderState({\n          baseLayer: new XRWebGLLayer(session, gl)\n        });\n        session.requestReferenceSpace(referenceSpaceType).then(onRequestReferenceSpace); //\n\n        session.addEventListener('inputsourceschange', updateInputSources);\n        updateInputSources();\n      }\n    };\n\n    function updateInputSources() {\n      for (var i = 0; i < controllers.length; i++) {\n        sortedInputSources[i] = findInputSource(i);\n      }\n    }\n\n    function findInputSource(id) {\n      var inputSources = session.inputSources;\n\n      for (var i = 0; i < inputSources.length; i++) {\n        var inputSource = inputSources[i];\n        var handedness = inputSource.handedness;\n\n        if (id === 0 && (handedness === 'none' || handedness === 'right')) {\n          return inputSource;\n        }\n\n        if (id === 1 && handedness === 'left') {\n          return inputSource;\n        }\n      }\n    } //\n\n\n    function updateCamera(camera, parent) {\n      if (parent === null) {\n        camera.matrixWorld.copy(camera.matrix);\n      } else {\n        camera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n      }\n\n      camera.matrixWorldInverse.getInverse(camera.matrixWorld);\n    }\n\n    this.getCamera = function (camera) {\n      if (isPresenting()) {\n        var parent = camera.parent;\n        var cameras = cameraVR.cameras;\n        updateCamera(cameraVR, parent);\n\n        for (var i = 0; i < cameras.length; i++) {\n          updateCamera(cameras[i], parent);\n        } // update camera and its children\n\n\n        camera.matrixWorld.copy(cameraVR.matrixWorld);\n        var children = camera.children;\n\n        for (var i = 0, l = children.length; i < l; i++) {\n          children[i].updateMatrixWorld(true);\n        }\n\n        setProjectionFromUnion(cameraVR, cameraL, cameraR);\n        return cameraVR;\n      }\n\n      return camera;\n    };\n\n    this.isPresenting = isPresenting; // Animation Loop\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time, frame) {\n      pose = frame.getViewerPose(referenceSpace);\n\n      if (pose !== null) {\n        var views = pose.views;\n        var baseLayer = session.renderState.baseLayer;\n        renderer.setFramebuffer(baseLayer.framebuffer);\n\n        for (var i = 0; i < views.length; i++) {\n          var view = views[i];\n          var viewport = baseLayer.getViewport(view);\n          var viewMatrix = view.transform.inverse.matrix;\n          var camera = cameraVR.cameras[i];\n          camera.matrix.fromArray(viewMatrix).getInverse(camera.matrix);\n          camera.projectionMatrix.fromArray(view.projectionMatrix);\n          camera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n          if (i === 0) {\n            cameraVR.matrix.copy(camera.matrix);\n          }\n        }\n      } //\n\n\n      for (var i = 0; i < controllers.length; i++) {\n        var controller = controllers[i];\n        var inputSource = sortedInputSources[i];\n\n        if (inputSource) {\n          var inputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n          if (inputPose !== null) {\n            controller.matrix.fromArray(inputPose.transform.matrix);\n            controller.matrix.decompose(controller.position, controller.rotation, controller.scale);\n            controller.visible = true;\n            continue;\n          }\n        }\n\n        controller.visible = false;\n      }\n\n      if (onAnimationFrameCallback) {\n        onAnimationFrameCallback(time, frame, referenceSpace);\n      }\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n    };\n\n    this.dispose = function () {}; // DEPRECATED\n\n\n    this.getStandingMatrix = function () {\n      console.warn('THREE.WebXRManager: getStandingMatrix() is no longer needed.');\n      return new Matrix4();\n    };\n\n    this.getDevice = function () {\n      console.warn('THREE.WebXRManager: getDevice() has been deprecated.');\n    };\n\n    this.setDevice = function () {\n      console.warn('THREE.WebXRManager: setDevice() has been deprecated.');\n    };\n\n    this.setFrameOfReferenceType = function () {\n      console.warn('THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.');\n    };\n\n    this.submitFrame = function () {};\n  }\n\n  Object.assign(WebXRManager.prototype, EventDispatcher.prototype);\n  /**\n   * @author supereggbert / http://www.paulbrunt.co.uk/\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   * @author szimek / https://github.com/szimek/\n   * @author tschw\n   */\n\n  function WebGLRenderer(parameters) {\n    parameters = parameters || {};\n\n    var _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas'),\n        _context = parameters.context !== undefined ? parameters.context : null,\n        _alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n        _depth = parameters.depth !== undefined ? parameters.depth : true,\n        _stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n        _antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n        _premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n        _preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n        _powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n        _failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n    var currentRenderList = null;\n    var currentRenderState = null; // public properties\n\n    this.domElement = _canvas; // Debug configuration container\n\n    this.debug = {\n      /**\n       * Enables error checking and reporting when shader programs are being compiled\n       * @type {boolean}\n       */\n      checkShaderErrors: true\n    }; // clearing\n\n    this.autoClear = true;\n    this.autoClearColor = true;\n    this.autoClearDepth = true;\n    this.autoClearStencil = true; // scene graph\n\n    this.sortObjects = true; // user-defined clipping\n\n    this.clippingPlanes = [];\n    this.localClippingEnabled = false; // physically based shading\n\n    this.gammaFactor = 2.0; // for backwards compatibility\n\n    this.gammaInput = false;\n    this.gammaOutput = false; // physical lights\n\n    this.physicallyCorrectLights = false; // tone mapping\n\n    this.toneMapping = LinearToneMapping;\n    this.toneMappingExposure = 1.0;\n    this.toneMappingWhitePoint = 1.0; // morphs\n\n    this.maxMorphTargets = 8;\n    this.maxMorphNormals = 4; // internal properties\n\n    var _this = this,\n        _isContextLost = false,\n        // internal state cache\n    _framebuffer = null,\n        _currentActiveCubeFace = 0,\n        _currentActiveMipmapLevel = 0,\n        _currentRenderTarget = null,\n        _currentFramebuffer = null,\n        _currentMaterialId = -1,\n        // geometry and program caching\n    _currentGeometryProgram = {\n      geometry: null,\n      program: null,\n      wireframe: false\n    },\n        _currentCamera = null,\n        _currentArrayCamera = null,\n        _currentViewport = new Vector4(),\n        _currentScissor = new Vector4(),\n        _currentScissorTest = null,\n        //\n    _width = _canvas.width,\n        _height = _canvas.height,\n        _pixelRatio = 1,\n        _viewport = new Vector4(0, 0, _width, _height),\n        _scissor = new Vector4(0, 0, _width, _height),\n        _scissorTest = false,\n        // frustum\n    _frustum = new Frustum(),\n        // clipping\n    _clipping = new WebGLClipping(),\n        _clippingEnabled = false,\n        _localClippingEnabled = false,\n        // camera matrices cache\n    _projScreenMatrix = new Matrix4(),\n        _vector3 = new Vector3();\n\n    function getTargetPixelRatio() {\n      return _currentRenderTarget === null ? _pixelRatio : 1;\n    } // initialize\n\n\n    var _gl;\n\n    try {\n      var contextAttributes = {\n        alpha: _alpha,\n        depth: _depth,\n        stencil: _stencil,\n        antialias: _antialias,\n        premultipliedAlpha: _premultipliedAlpha,\n        preserveDrawingBuffer: _preserveDrawingBuffer,\n        powerPreference: _powerPreference,\n        failIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n        xrCompatible: true\n      }; // event listeners must be registered before WebGL context is created, see #12753\n\n      _canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n      _gl = _context || _canvas.getContext('webgl', contextAttributes) || _canvas.getContext('experimental-webgl', contextAttributes);\n\n      if (_gl === null) {\n        if (_canvas.getContext('webgl') !== null) {\n          throw new Error('Error creating WebGL context with your selected attributes.');\n        } else {\n          throw new Error('Error creating WebGL context.');\n        }\n      } // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n      if (_gl.getShaderPrecisionFormat === undefined) {\n        _gl.getShaderPrecisionFormat = function () {\n          return {\n            'rangeMin': 1,\n            'rangeMax': 1,\n            'precision': 1\n          };\n        };\n      }\n    } catch (error) {\n      console.error('THREE.WebGLRenderer: ' + error.message);\n      throw error;\n    }\n\n    var extensions, capabilities, state, info;\n    var properties, textures, attributes, geometries, objects;\n    var programCache, renderLists, renderStates;\n    var background, morphtargets, bufferRenderer, indexedBufferRenderer;\n    var utils;\n\n    function initGLContext() {\n      extensions = new WebGLExtensions(_gl);\n      capabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\n      if (capabilities.isWebGL2 === false) {\n        extensions.get('WEBGL_depth_texture');\n        extensions.get('OES_texture_float');\n        extensions.get('OES_texture_half_float');\n        extensions.get('OES_texture_half_float_linear');\n        extensions.get('OES_standard_derivatives');\n        extensions.get('OES_element_index_uint');\n        extensions.get('ANGLE_instanced_arrays');\n      }\n\n      extensions.get('OES_texture_float_linear');\n      utils = new WebGLUtils(_gl, extensions, capabilities);\n      state = new WebGLState(_gl, extensions, capabilities);\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n      info = new WebGLInfo(_gl);\n      properties = new WebGLProperties();\n      textures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n      attributes = new WebGLAttributes(_gl);\n      geometries = new WebGLGeometries(_gl, attributes, info);\n      objects = new WebGLObjects(_gl, geometries, attributes, info);\n      morphtargets = new WebGLMorphtargets(_gl);\n      programCache = new WebGLPrograms(_this, extensions, capabilities);\n      renderLists = new WebGLRenderLists();\n      renderStates = new WebGLRenderStates();\n      background = new WebGLBackground(_this, state, objects, _premultipliedAlpha);\n      bufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n      indexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n      info.programs = programCache.programs;\n      _this.capabilities = capabilities;\n      _this.extensions = extensions;\n      _this.properties = properties;\n      _this.renderLists = renderLists;\n      _this.state = state;\n      _this.info = info;\n    }\n\n    initGLContext(); // vr\n\n    var vr = typeof navigator !== 'undefined' && 'xr' in navigator ? new WebXRManager(_this, _gl) : new WebVRManager(_this);\n    this.vr = vr; // Multiview\n\n    var multiview = new WebGLMultiview(_this, _gl); // shadow map\n\n    var shadowMap = new WebGLShadowMap(_this, objects, capabilities.maxTextureSize);\n    this.shadowMap = shadowMap; // API\n\n    this.getContext = function () {\n      return _gl;\n    };\n\n    this.getContextAttributes = function () {\n      return _gl.getContextAttributes();\n    };\n\n    this.forceContextLoss = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n\n      if (extension) {\n        extension.loseContext();\n      }\n    };\n\n    this.forceContextRestore = function () {\n      var extension = extensions.get('WEBGL_lose_context');\n\n      if (extension) {\n        extension.restoreContext();\n      }\n    };\n\n    this.getPixelRatio = function () {\n      return _pixelRatio;\n    };\n\n    this.setPixelRatio = function (value) {\n      if (value === undefined) {\n        return;\n      }\n\n      _pixelRatio = value;\n      this.setSize(_width, _height, false);\n    };\n\n    this.getSize = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');\n        target = new Vector2();\n      }\n\n      return target.set(_width, _height);\n    };\n\n    this.setSize = function (width, height, updateStyle) {\n      if (vr.isPresenting()) {\n        console.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n        return;\n      }\n\n      _width = width;\n      _height = height;\n      _canvas.width = Math.floor(width * _pixelRatio);\n      _canvas.height = Math.floor(height * _pixelRatio);\n\n      if (updateStyle !== false) {\n        _canvas.style.width = width + 'px';\n        _canvas.style.height = height + 'px';\n      }\n\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getDrawingBufferSize = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');\n        target = new Vector2();\n      }\n\n      return target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n    };\n\n    this.setDrawingBufferSize = function (width, height, pixelRatio) {\n      _width = width;\n      _height = height;\n      _pixelRatio = pixelRatio;\n      _canvas.width = Math.floor(width * pixelRatio);\n      _canvas.height = Math.floor(height * pixelRatio);\n      this.setViewport(0, 0, width, height);\n    };\n\n    this.getCurrentViewport = function (target) {\n      if (target === undefined) {\n        console.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');\n        target = new Vector4();\n      }\n\n      return target.copy(_currentViewport);\n    };\n\n    this.getViewport = function (target) {\n      return target.copy(_viewport);\n    };\n\n    this.setViewport = function (x, y, width, height) {\n      if (x.isVector4) {\n        _viewport.set(x.x, x.y, x.z, x.w);\n      } else {\n        _viewport.set(x, y, width, height);\n      }\n\n      state.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissor = function (target) {\n      return target.copy(_scissor);\n    };\n\n    this.setScissor = function (x, y, width, height) {\n      if (x.isVector4) {\n        _scissor.set(x.x, x.y, x.z, x.w);\n      } else {\n        _scissor.set(x, y, width, height);\n      }\n\n      state.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n    };\n\n    this.getScissorTest = function () {\n      return _scissorTest;\n    };\n\n    this.setScissorTest = function (boolean) {\n      state.setScissorTest(_scissorTest = boolean);\n    }; // Clearing\n\n\n    this.getClearColor = function () {\n      return background.getClearColor();\n    };\n\n    this.setClearColor = function () {\n      background.setClearColor.apply(background, arguments);\n    };\n\n    this.getClearAlpha = function () {\n      return background.getClearAlpha();\n    };\n\n    this.setClearAlpha = function () {\n      background.setClearAlpha.apply(background, arguments);\n    };\n\n    this.clear = function (color, depth, stencil) {\n      var bits = 0;\n\n      if (color === undefined || color) {\n        bits |= 16384;\n      }\n\n      if (depth === undefined || depth) {\n        bits |= 256;\n      }\n\n      if (stencil === undefined || stencil) {\n        bits |= 1024;\n      }\n\n      _gl.clear(bits);\n    };\n\n    this.clearColor = function () {\n      this.clear(true, false, false);\n    };\n\n    this.clearDepth = function () {\n      this.clear(false, true, false);\n    };\n\n    this.clearStencil = function () {\n      this.clear(false, false, true);\n    }; //\n\n\n    this.dispose = function () {\n      _canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n      _canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n      renderLists.dispose();\n      renderStates.dispose();\n      properties.dispose();\n      objects.dispose();\n      vr.dispose();\n      animation.stop();\n    }; // Events\n\n\n    function onContextLost(event) {\n      event.preventDefault();\n      console.log('THREE.WebGLRenderer: Context Lost.');\n      _isContextLost = true;\n    }\n\n    function onContextRestore()\n    /* event */\n    {\n      console.log('THREE.WebGLRenderer: Context Restored.');\n      _isContextLost = false;\n      initGLContext();\n    }\n\n    function onMaterialDispose(event) {\n      var material = event.target;\n      material.removeEventListener('dispose', onMaterialDispose);\n      deallocateMaterial(material);\n    } // Buffer deallocation\n\n\n    function deallocateMaterial(material) {\n      releaseMaterialProgramReference(material);\n      properties.remove(material);\n    }\n\n    function releaseMaterialProgramReference(material) {\n      var programInfo = properties.get(material).program;\n      material.program = undefined;\n\n      if (programInfo !== undefined) {\n        programCache.releaseProgram(programInfo);\n      }\n    } // Buffer rendering\n\n\n    function renderObjectImmediate(object, program) {\n      object.render(function (object) {\n        _this.renderBufferImmediate(object, program);\n      });\n    }\n\n    this.renderBufferImmediate = function (object, program) {\n      state.initAttributes();\n      var buffers = properties.get(object);\n\n      if (object.hasPositions && !buffers.position) {\n        buffers.position = _gl.createBuffer();\n      }\n\n      if (object.hasNormals && !buffers.normal) {\n        buffers.normal = _gl.createBuffer();\n      }\n\n      if (object.hasUvs && !buffers.uv) {\n        buffers.uv = _gl.createBuffer();\n      }\n\n      if (object.hasColors && !buffers.color) {\n        buffers.color = _gl.createBuffer();\n      }\n\n      var programAttributes = program.getAttributes();\n\n      if (object.hasPositions) {\n        _gl.bindBuffer(34962, buffers.position);\n\n        _gl.bufferData(34962, object.positionArray, 35048);\n\n        state.enableAttribute(programAttributes.position);\n\n        _gl.vertexAttribPointer(programAttributes.position, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasNormals) {\n        _gl.bindBuffer(34962, buffers.normal);\n\n        _gl.bufferData(34962, object.normalArray, 35048);\n\n        state.enableAttribute(programAttributes.normal);\n\n        _gl.vertexAttribPointer(programAttributes.normal, 3, 5126, false, 0, 0);\n      }\n\n      if (object.hasUvs) {\n        _gl.bindBuffer(34962, buffers.uv);\n\n        _gl.bufferData(34962, object.uvArray, 35048);\n\n        state.enableAttribute(programAttributes.uv);\n\n        _gl.vertexAttribPointer(programAttributes.uv, 2, 5126, false, 0, 0);\n      }\n\n      if (object.hasColors) {\n        _gl.bindBuffer(34962, buffers.color);\n\n        _gl.bufferData(34962, object.colorArray, 35048);\n\n        state.enableAttribute(programAttributes.color);\n\n        _gl.vertexAttribPointer(programAttributes.color, 3, 5126, false, 0, 0);\n      }\n\n      state.disableUnusedAttributes();\n\n      _gl.drawArrays(4, 0, object.count);\n\n      object.count = 0;\n    };\n\n    this.renderBufferDirect = function (camera, fog, geometry, material, object, group) {\n      var frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n      state.setMaterial(material, frontFaceCW);\n      var program = setProgram(camera, fog, material, object);\n      var updateBuffers = false;\n\n      if (_currentGeometryProgram.geometry !== geometry.id || _currentGeometryProgram.program !== program.id || _currentGeometryProgram.wireframe !== (material.wireframe === true)) {\n        _currentGeometryProgram.geometry = geometry.id;\n        _currentGeometryProgram.program = program.id;\n        _currentGeometryProgram.wireframe = material.wireframe === true;\n        updateBuffers = true;\n      }\n\n      if (object.morphTargetInfluences) {\n        morphtargets.update(object, geometry, material, program);\n        updateBuffers = true;\n      } //\n\n\n      var index = geometry.index;\n      var position = geometry.attributes.position;\n      var rangeFactor = 1;\n\n      if (material.wireframe === true) {\n        index = geometries.getWireframeAttribute(geometry);\n        rangeFactor = 2;\n      }\n\n      var attribute;\n      var renderer = bufferRenderer;\n\n      if (index !== null) {\n        attribute = attributes.get(index);\n        renderer = indexedBufferRenderer;\n        renderer.setIndex(attribute);\n      }\n\n      if (updateBuffers) {\n        setupVertexAttributes(object, geometry, material, program);\n\n        if (index !== null) {\n          _gl.bindBuffer(34963, attribute.buffer);\n        }\n      } //\n\n\n      var dataCount = Infinity;\n\n      if (index !== null) {\n        dataCount = index.count;\n      } else if (position !== undefined) {\n        dataCount = position.count;\n      }\n\n      var rangeStart = geometry.drawRange.start * rangeFactor;\n      var rangeCount = geometry.drawRange.count * rangeFactor;\n      var groupStart = group !== null ? group.start * rangeFactor : 0;\n      var groupCount = group !== null ? group.count * rangeFactor : Infinity;\n      var drawStart = Math.max(rangeStart, groupStart);\n      var drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n      var drawCount = Math.max(0, drawEnd - drawStart + 1);\n\n      if (drawCount === 0) {\n        return;\n      } //\n\n\n      if (object.isMesh) {\n        if (material.wireframe === true) {\n          state.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n          renderer.setMode(1);\n        } else {\n          switch (object.drawMode) {\n            case TrianglesDrawMode:\n              renderer.setMode(4);\n              break;\n\n            case TriangleStripDrawMode:\n              renderer.setMode(5);\n              break;\n\n            case TriangleFanDrawMode:\n              renderer.setMode(6);\n              break;\n          }\n        }\n      } else if (object.isLine) {\n        var lineWidth = material.linewidth;\n\n        if (lineWidth === undefined) {\n          lineWidth = 1;\n        } // Not using Line*Material\n\n\n        state.setLineWidth(lineWidth * getTargetPixelRatio());\n\n        if (object.isLineSegments) {\n          renderer.setMode(1);\n        } else if (object.isLineLoop) {\n          renderer.setMode(2);\n        } else {\n          renderer.setMode(3);\n        }\n      } else if (object.isPoints) {\n        renderer.setMode(0);\n      } else if (object.isSprite) {\n        renderer.setMode(4);\n      }\n\n      if (object.isInstancedMesh) {\n        renderer.renderInstances(geometry, drawStart, drawCount, object.count);\n      } else if (geometry.isInstancedBufferGeometry) {\n        renderer.renderInstances(geometry, drawStart, drawCount, geometry.maxInstancedCount);\n      } else {\n        renderer.render(drawStart, drawCount);\n      }\n    };\n\n    function setupVertexAttributes(object, geometry, material, program) {\n      if (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n        if (extensions.get('ANGLE_instanced_arrays') === null) {\n          return;\n        }\n      }\n\n      state.initAttributes();\n      var geometryAttributes = geometry.attributes;\n      var programAttributes = program.getAttributes();\n      var materialDefaultAttributeValues = material.defaultAttributeValues;\n\n      for (var name in programAttributes) {\n        var programAttribute = programAttributes[name];\n\n        if (programAttribute >= 0) {\n          var geometryAttribute = geometryAttributes[name];\n\n          if (geometryAttribute !== undefined) {\n            var normalized = geometryAttribute.normalized;\n            var size = geometryAttribute.itemSize;\n            var attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) {\n              continue;\n            }\n\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            var bytesPerElement = attribute.bytesPerElement;\n\n            if (geometryAttribute.isInterleavedBufferAttribute) {\n              var data = geometryAttribute.data;\n              var stride = data.stride;\n              var offset = geometryAttribute.offset;\n\n              if (data && data.isInstancedInterleavedBuffer) {\n                state.enableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = data.meshPerAttribute * data.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(34962, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n            } else {\n              if (geometryAttribute.isInstancedBufferAttribute) {\n                state.enableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n                if (geometry.maxInstancedCount === undefined) {\n                  geometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n                }\n              } else {\n                state.enableAttribute(programAttribute);\n              }\n\n              _gl.bindBuffer(34962, buffer);\n\n              _gl.vertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n            }\n          } else if (name === 'instanceMatrix') {\n            var attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n            if (attribute === undefined) {\n              continue;\n            }\n\n            var buffer = attribute.buffer;\n            var type = attribute.type;\n            state.enableAttributeAndDivisor(programAttribute + 0, 1);\n            state.enableAttributeAndDivisor(programAttribute + 1, 1);\n            state.enableAttributeAndDivisor(programAttribute + 2, 1);\n            state.enableAttributeAndDivisor(programAttribute + 3, 1);\n\n            _gl.bindBuffer(34962, buffer);\n\n            _gl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\n\n            _gl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\n\n            _gl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\n\n            _gl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\n          } else if (materialDefaultAttributeValues !== undefined) {\n            var value = materialDefaultAttributeValues[name];\n\n            if (value !== undefined) {\n              switch (value.length) {\n                case 2:\n                  _gl.vertexAttrib2fv(programAttribute, value);\n\n                  break;\n\n                case 3:\n                  _gl.vertexAttrib3fv(programAttribute, value);\n\n                  break;\n\n                case 4:\n                  _gl.vertexAttrib4fv(programAttribute, value);\n\n                  break;\n\n                default:\n                  _gl.vertexAttrib1fv(programAttribute, value);\n\n              }\n            }\n          }\n        }\n      }\n\n      state.disableUnusedAttributes();\n    } // Compile\n\n\n    this.compile = function (scene, camera) {\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.traverse(function (object) {\n        if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        }\n      });\n      currentRenderState.setupLights(camera);\n      scene.traverse(function (object) {\n        if (object.material) {\n          if (Array.isArray(object.material)) {\n            for (var i = 0; i < object.material.length; i++) {\n              initMaterial(object.material[i], scene.fog, object);\n            }\n          } else {\n            initMaterial(object.material, scene.fog, object);\n          }\n        }\n      });\n    }; // Animation Loop\n\n\n    var onAnimationFrameCallback = null;\n\n    function onAnimationFrame(time) {\n      if (vr.isPresenting()) {\n        return;\n      }\n\n      if (onAnimationFrameCallback) {\n        onAnimationFrameCallback(time);\n      }\n    }\n\n    var animation = new WebGLAnimation();\n    animation.setAnimationLoop(onAnimationFrame);\n\n    if (typeof window !== 'undefined') {\n      animation.setContext(window);\n    }\n\n    this.setAnimationLoop = function (callback) {\n      onAnimationFrameCallback = callback;\n      vr.setAnimationLoop(callback);\n      animation.start();\n    }; // Rendering\n\n\n    this.render = function (scene, camera) {\n      var renderTarget, forceClear;\n\n      if (arguments[2] !== undefined) {\n        console.warn('THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.');\n        renderTarget = arguments[2];\n      }\n\n      if (arguments[3] !== undefined) {\n        console.warn('THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.');\n        forceClear = arguments[3];\n      }\n\n      if (!(camera && camera.isCamera)) {\n        console.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n        return;\n      }\n\n      if (_isContextLost) {\n        return;\n      } // reset caching for this frame\n\n\n      _currentGeometryProgram.geometry = null;\n      _currentGeometryProgram.program = null;\n      _currentGeometryProgram.wireframe = false;\n      _currentMaterialId = -1;\n      _currentCamera = null; // update scene graph\n\n      if (scene.autoUpdate === true) {\n        scene.updateMatrixWorld();\n      } // update camera matrices and frustum\n\n\n      if (camera.parent === null) {\n        camera.updateMatrixWorld();\n      }\n\n      if (vr.enabled) {\n        camera = vr.getCamera(camera);\n      } //\n\n\n      currentRenderState = renderStates.get(scene, camera);\n      currentRenderState.init();\n      scene.onBeforeRender(_this, scene, camera, renderTarget || _currentRenderTarget);\n\n      _projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      _frustum.setFromMatrix(_projScreenMatrix);\n\n      _localClippingEnabled = this.localClippingEnabled;\n      _clippingEnabled = _clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n      currentRenderList = renderLists.get(scene, camera);\n      currentRenderList.init();\n      projectObject(scene, camera, 0, _this.sortObjects);\n\n      if (_this.sortObjects === true) {\n        currentRenderList.sort();\n      } //\n\n\n      if (_clippingEnabled) {\n        _clipping.beginShadows();\n      }\n\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      shadowMap.render(shadowsArray, scene, camera);\n      currentRenderState.setupLights(camera);\n\n      if (_clippingEnabled) {\n        _clipping.endShadows();\n      } //\n\n\n      if (this.info.autoReset) {\n        this.info.reset();\n      }\n\n      if (renderTarget !== undefined) {\n        this.setRenderTarget(renderTarget);\n      }\n\n      if (vr.enabled && multiview.isAvailable()) {\n        multiview.attachCamera(camera);\n      } //\n\n\n      background.render(currentRenderList, scene, camera, forceClear); // render scene\n\n      var opaqueObjects = currentRenderList.opaque;\n      var transparentObjects = currentRenderList.transparent;\n\n      if (scene.overrideMaterial) {\n        var overrideMaterial = scene.overrideMaterial;\n\n        if (opaqueObjects.length) {\n          renderObjects(opaqueObjects, scene, camera, overrideMaterial);\n        }\n\n        if (transparentObjects.length) {\n          renderObjects(transparentObjects, scene, camera, overrideMaterial);\n        }\n      } else {\n        // opaque pass (front-to-back order)\n        if (opaqueObjects.length) {\n          renderObjects(opaqueObjects, scene, camera);\n        } // transparent pass (back-to-front order)\n\n\n        if (transparentObjects.length) {\n          renderObjects(transparentObjects, scene, camera);\n        }\n      } //\n\n\n      scene.onAfterRender(_this, scene, camera); //\n\n      if (_currentRenderTarget !== null) {\n        // Generate mipmap if we're using any kind of mipmap filtering\n        textures.updateRenderTargetMipmap(_currentRenderTarget); // resolve multisample renderbuffers to a single-sample texture if necessary\n\n        textures.updateMultisampleRenderTarget(_currentRenderTarget);\n      } // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\n      state.buffers.depth.setTest(true);\n      state.buffers.depth.setMask(true);\n      state.buffers.color.setMask(true);\n      state.setPolygonOffset(false);\n\n      if (vr.enabled) {\n        if (multiview.isAvailable()) {\n          multiview.detachCamera(camera);\n        }\n\n        vr.submitFrame();\n      } // _gl.finish();\n\n\n      currentRenderList = null;\n      currentRenderState = null;\n    };\n\n    function projectObject(object, camera, groupOrder, sortObjects) {\n      if (object.visible === false) {\n        return;\n      }\n\n      var visible = object.layers.test(camera.layers);\n\n      if (visible) {\n        if (object.isGroup) {\n          groupOrder = object.renderOrder;\n        } else if (object.isLOD) {\n          if (object.autoUpdate === true) {\n            object.update(camera);\n          }\n        } else if (object.isLight) {\n          currentRenderState.pushLight(object);\n\n          if (object.castShadow) {\n            currentRenderState.pushShadow(object);\n          }\n        } else if (object.isSprite) {\n          if (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (material.visible) {\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n            }\n          }\n        } else if (object.isImmediateRenderObject) {\n          if (sortObjects) {\n            _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n          }\n\n          currentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n        } else if (object.isMesh || object.isLine || object.isPoints) {\n          if (object.isSkinnedMesh) {\n            // update skeleton only once in a frame\n            if (object.skeleton.frame !== info.render.frame) {\n              object.skeleton.update();\n              object.skeleton.frame = info.render.frame;\n            }\n          }\n\n          if (!object.frustumCulled || _frustum.intersectsObject(object)) {\n            if (sortObjects) {\n              _vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n            }\n\n            var geometry = objects.update(object);\n            var material = object.material;\n\n            if (Array.isArray(material)) {\n              var groups = geometry.groups;\n\n              for (var i = 0, l = groups.length; i < l; i++) {\n                var group = groups[i];\n                var groupMaterial = material[group.materialIndex];\n\n                if (groupMaterial && groupMaterial.visible) {\n                  currentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n                }\n              }\n            } else if (material.visible) {\n              currentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n            }\n          }\n        }\n      }\n\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        projectObject(children[i], camera, groupOrder, sortObjects);\n      }\n    }\n\n    function renderObjects(renderList, scene, camera, overrideMaterial) {\n      for (var i = 0, l = renderList.length; i < l; i++) {\n        var renderItem = renderList[i];\n        var object = renderItem.object;\n        var geometry = renderItem.geometry;\n        var material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n        var group = renderItem.group;\n\n        if (camera.isArrayCamera) {\n          _currentArrayCamera = camera;\n\n          if (vr.enabled && multiview.isAvailable()) {\n            renderObject(object, scene, camera, geometry, material, group);\n          } else {\n            var cameras = camera.cameras;\n\n            for (var j = 0, jl = cameras.length; j < jl; j++) {\n              var camera2 = cameras[j];\n\n              if (object.layers.test(camera2.layers)) {\n                state.viewport(_currentViewport.copy(camera2.viewport));\n                currentRenderState.setupLights(camera2);\n                renderObject(object, scene, camera2, geometry, material, group);\n              }\n            }\n          }\n        } else {\n          _currentArrayCamera = null;\n          renderObject(object, scene, camera, geometry, material, group);\n        }\n      }\n    }\n\n    function renderObject(object, scene, camera, geometry, material, group) {\n      object.onBeforeRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n      object.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n      object.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n      if (object.isImmediateRenderObject) {\n        state.setMaterial(material);\n        var program = setProgram(camera, scene.fog, material, object);\n        _currentGeometryProgram.geometry = null;\n        _currentGeometryProgram.program = null;\n        _currentGeometryProgram.wireframe = false;\n        renderObjectImmediate(object, program);\n      } else {\n        _this.renderBufferDirect(camera, scene.fog, geometry, material, object, group);\n      }\n\n      object.onAfterRender(_this, scene, camera, geometry, material, group);\n      currentRenderState = renderStates.get(scene, _currentArrayCamera || camera);\n    }\n\n    function initMaterial(material, fog, object) {\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n      var shadowsArray = currentRenderState.state.shadowsArray;\n      var lightsStateVersion = lights.state.version;\n      var parameters = programCache.getParameters(material, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object);\n      var programCacheKey = programCache.getProgramCacheKey(material, parameters);\n      var program = materialProperties.program;\n      var programChange = true;\n\n      if (program === undefined) {\n        // new material\n        material.addEventListener('dispose', onMaterialDispose);\n      } else if (program.cacheKey !== programCacheKey) {\n        // changed glsl or parameters\n        releaseMaterialProgramReference(material);\n      } else if (materialProperties.lightsStateVersion !== lightsStateVersion) {\n        materialProperties.lightsStateVersion = lightsStateVersion;\n        programChange = false;\n      } else if (parameters.shaderID !== undefined) {\n        // same glsl and uniform list\n        return;\n      } else {\n        // only rebuild uniform list\n        programChange = false;\n      }\n\n      if (programChange) {\n        if (parameters.shaderID) {\n          var shader = ShaderLib[parameters.shaderID];\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: cloneUniforms(shader.uniforms),\n            vertexShader: shader.vertexShader,\n            fragmentShader: shader.fragmentShader\n          };\n        } else {\n          materialProperties.shader = {\n            name: material.type,\n            uniforms: material.uniforms,\n            vertexShader: material.vertexShader,\n            fragmentShader: material.fragmentShader\n          };\n        }\n\n        material.onBeforeCompile(materialProperties.shader, _this); // Computing cache key again as onBeforeCompile may have changed the shaders\n\n        programCacheKey = programCache.getProgramCacheKey(material, parameters);\n        program = programCache.acquireProgram(material, materialProperties.shader, parameters, programCacheKey);\n        materialProperties.program = program;\n        material.program = program;\n      }\n\n      var programAttributes = program.getAttributes();\n\n      if (material.morphTargets) {\n        material.numSupportedMorphTargets = 0;\n\n        for (var i = 0; i < _this.maxMorphTargets; i++) {\n          if (programAttributes['morphTarget' + i] >= 0) {\n            material.numSupportedMorphTargets++;\n          }\n        }\n      }\n\n      if (material.morphNormals) {\n        material.numSupportedMorphNormals = 0;\n\n        for (var i = 0; i < _this.maxMorphNormals; i++) {\n          if (programAttributes['morphNormal' + i] >= 0) {\n            material.numSupportedMorphNormals++;\n          }\n        }\n      }\n\n      var uniforms = materialProperties.shader.uniforms;\n\n      if (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n        materialProperties.numClippingPlanes = _clipping.numPlanes;\n        materialProperties.numIntersection = _clipping.numIntersection;\n        uniforms.clippingPlanes = _clipping.uniform;\n      }\n\n      materialProperties.fog = fog; // store the light setup it was created for\n\n      materialProperties.needsLights = materialNeedsLights(material);\n      materialProperties.lightsStateVersion = lightsStateVersion;\n\n      if (materialProperties.needsLights) {\n        // wire up the material to this renderer's lighting state\n        uniforms.ambientLightColor.value = lights.state.ambient;\n        uniforms.lightProbe.value = lights.state.probe;\n        uniforms.directionalLights.value = lights.state.directional;\n        uniforms.spotLights.value = lights.state.spot;\n        uniforms.rectAreaLights.value = lights.state.rectArea;\n        uniforms.pointLights.value = lights.state.point;\n        uniforms.hemisphereLights.value = lights.state.hemi;\n        uniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n        uniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n        uniforms.spotShadowMap.value = lights.state.spotShadowMap;\n        uniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n        uniforms.pointShadowMap.value = lights.state.pointShadowMap;\n        uniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n      }\n\n      var progUniforms = materialProperties.program.getUniforms(),\n          uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n      materialProperties.uniformsList = uniformsList;\n    }\n\n    function setProgram(camera, fog, material, object) {\n      textures.resetTextureUnits();\n      var materialProperties = properties.get(material);\n      var lights = currentRenderState.state.lights;\n\n      if (_clippingEnabled) {\n        if (_localClippingEnabled || camera !== _currentCamera) {\n          var useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n          // object instead of the material, once it becomes feasible\n          // (#8465, #8379)\n\n          _clipping.setState(material.clippingPlanes, material.clipIntersection, material.clipShadows, camera, materialProperties, useCache);\n        }\n      }\n\n      if (material.needsUpdate === false) {\n        if (materialProperties.program === undefined) {\n          material.needsUpdate = true;\n        } else if (material.fog && materialProperties.fog !== fog) {\n          material.needsUpdate = true;\n        } else if (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n          material.needsUpdate = true;\n        } else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== _clipping.numPlanes || materialProperties.numIntersection !== _clipping.numIntersection)) {\n          material.needsUpdate = true;\n        }\n      }\n\n      if (material.needsUpdate) {\n        initMaterial(material, fog, object);\n        material.needsUpdate = false;\n      }\n\n      var refreshProgram = false;\n      var refreshMaterial = false;\n      var refreshLights = false;\n      var program = materialProperties.program,\n          p_uniforms = program.getUniforms(),\n          m_uniforms = materialProperties.shader.uniforms;\n\n      if (state.useProgram(program.program)) {\n        refreshProgram = true;\n        refreshMaterial = true;\n        refreshLights = true;\n      }\n\n      if (material.id !== _currentMaterialId) {\n        _currentMaterialId = material.id;\n        refreshMaterial = true;\n      }\n\n      if (refreshProgram || _currentCamera !== camera) {\n        if (program.numMultiviewViews > 0) {\n          multiview.updateCameraProjectionMatricesUniform(camera, p_uniforms);\n        } else {\n          p_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n        }\n\n        if (capabilities.logarithmicDepthBuffer) {\n          p_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n        }\n\n        if (_currentCamera !== camera) {\n          _currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n          // now, in case this material supports lights - or later, when\n          // the next material that does gets activated:\n\n          refreshMaterial = true; // set to true on material change\n\n          refreshLights = true; // remains set until update done\n        } // load material specific uniforms\n        // (shader material also gets them for the sake of genericity)\n\n\n        if (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.envMap) {\n          var uCamPos = p_uniforms.map.cameraPosition;\n\n          if (uCamPos !== undefined) {\n            uCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n          }\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n          p_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n        }\n\n        if (material.isMeshPhongMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.skinning) {\n          if (program.numMultiviewViews > 0) {\n            multiview.updateCameraViewMatricesUniform(camera, p_uniforms);\n          } else {\n            p_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n          }\n        }\n      } // skinning uniforms must be set even if material didn't change\n      // auto-setting of texture unit for bone texture must go before other textures\n      // not sure why, but otherwise weird things happen\n\n\n      if (material.skinning) {\n        p_uniforms.setOptional(_gl, object, 'bindMatrix');\n        p_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n        var skeleton = object.skeleton;\n\n        if (skeleton) {\n          var bones = skeleton.bones;\n\n          if (capabilities.floatVertexTextures) {\n            if (skeleton.boneTexture === undefined) {\n              // layout (1 matrix = 4 pixels)\n              //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n              //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n              //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n              //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n              //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n              var size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\n\n              size = _Math.ceilPowerOfTwo(size);\n              size = Math.max(size, 4);\n              var boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n              boneMatrices.set(skeleton.boneMatrices); // copy current values\n\n              var boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n              skeleton.boneMatrices = boneMatrices;\n              skeleton.boneTexture = boneTexture;\n              skeleton.boneTextureSize = size;\n            }\n\n            p_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n            p_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n          } else {\n            p_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n          }\n        }\n      }\n\n      if (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n        materialProperties.receiveShadow = object.receiveShadow;\n        p_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n      }\n\n      if (refreshMaterial) {\n        p_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n        p_uniforms.setValue(_gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint);\n\n        if (materialProperties.needsLights) {\n          // the current material requires lighting info\n          // note: all lighting uniforms are always set correctly\n          // they simply reference the renderer's state for their\n          // values\n          //\n          // use the current material's .needsUpdate flags to set\n          // the GL state when required\n          markUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n        } // refresh uniforms common to several materials\n\n\n        if (fog && material.fog) {\n          refreshUniformsFog(m_uniforms, fog);\n        }\n\n        if (material.isMeshBasicMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n        } else if (material.isMeshLambertMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsLambert(m_uniforms, material);\n        } else if (material.isMeshPhongMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshToonMaterial) {\n            refreshUniformsToon(m_uniforms, material);\n          } else {\n            refreshUniformsPhong(m_uniforms, material);\n          }\n        } else if (material.isMeshStandardMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n\n          if (material.isMeshPhysicalMaterial) {\n            refreshUniformsPhysical(m_uniforms, material);\n          } else {\n            refreshUniformsStandard(m_uniforms, material);\n          }\n        } else if (material.isMeshMatcapMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsMatcap(m_uniforms, material);\n        } else if (material.isMeshDepthMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDepth(m_uniforms, material);\n        } else if (material.isMeshDistanceMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsDistance(m_uniforms, material);\n        } else if (material.isMeshNormalMaterial) {\n          refreshUniformsCommon(m_uniforms, material);\n          refreshUniformsNormal(m_uniforms, material);\n        } else if (material.isLineBasicMaterial) {\n          refreshUniformsLine(m_uniforms, material);\n\n          if (material.isLineDashedMaterial) {\n            refreshUniformsDash(m_uniforms, material);\n          }\n        } else if (material.isPointsMaterial) {\n          refreshUniformsPoints(m_uniforms, material);\n        } else if (material.isSpriteMaterial) {\n          refreshUniformsSprites(m_uniforms, material);\n        } else if (material.isShadowMaterial) {\n          m_uniforms.color.value.copy(material.color);\n          m_uniforms.opacity.value = material.opacity;\n        } // RectAreaLight Texture\n        // TODO (mrdoob): Find a nicer implementation\n\n\n        if (m_uniforms.ltc_1 !== undefined) {\n          m_uniforms.ltc_1.value = UniformsLib.LTC_1;\n        }\n\n        if (m_uniforms.ltc_2 !== undefined) {\n          m_uniforms.ltc_2.value = UniformsLib.LTC_2;\n        }\n\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\n        if (material.isShaderMaterial) {\n          material.uniformsNeedUpdate = false; // #15581\n        }\n      }\n\n      if (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n        WebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n        material.uniformsNeedUpdate = false;\n      }\n\n      if (material.isSpriteMaterial) {\n        p_uniforms.setValue(_gl, 'center', object.center);\n      } // common matrices\n\n\n      if (program.numMultiviewViews > 0) {\n        multiview.updateObjectMatricesUniforms(object, camera, p_uniforms);\n      } else {\n        p_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n        p_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n      }\n\n      p_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n      return program;\n    } // Uniforms (refresh uniforms objects)\n\n\n    function refreshUniformsCommon(uniforms, material) {\n      uniforms.opacity.value = material.opacity;\n\n      if (material.color) {\n        uniforms.diffuse.value.copy(material.color);\n      }\n\n      if (material.emissive) {\n        uniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n      }\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      }\n\n      if (material.specularMap) {\n        uniforms.specularMap.value = material.specularMap;\n      }\n\n      if (material.envMap) {\n        uniforms.envMap.value = material.envMap; // don't flip CubeTexture envMaps, flip everything else:\n        //  WebGLRenderTargetCube will be flipped for backwards compatibility\n        //  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n        // this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\n        uniforms.flipEnvMap.value = material.envMap.isCubeTexture ? -1 : 1;\n        uniforms.reflectivity.value = material.reflectivity;\n        uniforms.refractionRatio.value = material.refractionRatio;\n        uniforms.maxMipLevel.value = properties.get(material.envMap).__maxMipLevel;\n      }\n\n      if (material.lightMap) {\n        uniforms.lightMap.value = material.lightMap;\n        uniforms.lightMapIntensity.value = material.lightMapIntensity;\n      }\n\n      if (material.aoMap) {\n        uniforms.aoMap.value = material.aoMap;\n        uniforms.aoMapIntensity.value = material.aoMapIntensity;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. specular map\n      // 3. normal map\n      // 4. bump map\n      // 5. alpha map\n      // 6. emissive map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.specularMap) {\n        uvScaleMap = material.specularMap;\n      } else if (material.displacementMap) {\n        uvScaleMap = material.displacementMap;\n      } else if (material.normalMap) {\n        uvScaleMap = material.normalMap;\n      } else if (material.bumpMap) {\n        uvScaleMap = material.bumpMap;\n      } else if (material.roughnessMap) {\n        uvScaleMap = material.roughnessMap;\n      } else if (material.metalnessMap) {\n        uvScaleMap = material.metalnessMap;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      } else if (material.emissiveMap) {\n        uvScaleMap = material.emissiveMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        // backwards compatibility\n        if (uvScaleMap.isWebGLRenderTarget) {\n          uvScaleMap = uvScaleMap.texture;\n        }\n\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsLine(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n    }\n\n    function refreshUniformsDash(uniforms, material) {\n      uniforms.dashSize.value = material.dashSize;\n      uniforms.totalSize.value = material.dashSize + material.gapSize;\n      uniforms.scale.value = material.scale;\n    }\n\n    function refreshUniformsPoints(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.size.value = material.size * _pixelRatio;\n      uniforms.scale.value = _height * 0.5;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsSprites(uniforms, material) {\n      uniforms.diffuse.value.copy(material.color);\n      uniforms.opacity.value = material.opacity;\n      uniforms.rotation.value = material.rotation;\n\n      if (material.map) {\n        uniforms.map.value = material.map;\n      }\n\n      if (material.alphaMap) {\n        uniforms.alphaMap.value = material.alphaMap;\n      } // uv repeat and offset setting priorities\n      // 1. color map\n      // 2. alpha map\n\n\n      var uvScaleMap;\n\n      if (material.map) {\n        uvScaleMap = material.map;\n      } else if (material.alphaMap) {\n        uvScaleMap = material.alphaMap;\n      }\n\n      if (uvScaleMap !== undefined) {\n        if (uvScaleMap.matrixAutoUpdate === true) {\n          uvScaleMap.updateMatrix();\n        }\n\n        uniforms.uvTransform.value.copy(uvScaleMap.matrix);\n      }\n    }\n\n    function refreshUniformsFog(uniforms, fog) {\n      uniforms.fogColor.value.copy(fog.color);\n\n      if (fog.isFog) {\n        uniforms.fogNear.value = fog.near;\n        uniforms.fogFar.value = fog.far;\n      } else if (fog.isFogExp2) {\n        uniforms.fogDensity.value = fog.density;\n      }\n    }\n\n    function refreshUniformsLambert(uniforms, material) {\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n    }\n\n    function refreshUniformsPhong(uniforms, material) {\n      uniforms.specular.value.copy(material.specular);\n      uniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n\n        if (material.side === BackSide) {\n          uniforms.bumpScale.value *= -1;\n        }\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n\n        if (material.side === BackSide) {\n          uniforms.normalScale.value.negate();\n        }\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsToon(uniforms, material) {\n      refreshUniformsPhong(uniforms, material);\n\n      if (material.gradientMap) {\n        uniforms.gradientMap.value = material.gradientMap;\n      }\n    }\n\n    function refreshUniformsStandard(uniforms, material) {\n      uniforms.roughness.value = material.roughness;\n      uniforms.metalness.value = material.metalness;\n\n      if (material.roughnessMap) {\n        uniforms.roughnessMap.value = material.roughnessMap;\n      }\n\n      if (material.metalnessMap) {\n        uniforms.metalnessMap.value = material.metalnessMap;\n      }\n\n      if (material.emissiveMap) {\n        uniforms.emissiveMap.value = material.emissiveMap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n\n        if (material.side === BackSide) {\n          uniforms.bumpScale.value *= -1;\n        }\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n\n        if (material.side === BackSide) {\n          uniforms.normalScale.value.negate();\n        }\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      if (material.envMap) {\n        //uniforms.envMap.value = material.envMap; // part of uniforms common\n        uniforms.envMapIntensity.value = material.envMapIntensity;\n      }\n    }\n\n    function refreshUniformsPhysical(uniforms, material) {\n      refreshUniformsStandard(uniforms, material);\n      uniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n      uniforms.clearcoat.value = material.clearcoat;\n      uniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\n      if (material.sheen) {\n        uniforms.sheen.value.copy(material.sheen);\n      }\n\n      if (material.clearcoatNormalMap) {\n        uniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n        uniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n        if (material.side === BackSide) {\n          uniforms.clearcoatNormalScale.value.negate();\n        }\n      }\n\n      uniforms.transparency.value = material.transparency;\n    }\n\n    function refreshUniformsMatcap(uniforms, material) {\n      if (material.matcap) {\n        uniforms.matcap.value = material.matcap;\n      }\n\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n\n        if (material.side === BackSide) {\n          uniforms.bumpScale.value *= -1;\n        }\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n\n        if (material.side === BackSide) {\n          uniforms.normalScale.value.negate();\n        }\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDepth(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    }\n\n    function refreshUniformsDistance(uniforms, material) {\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n\n      uniforms.referencePosition.value.copy(material.referencePosition);\n      uniforms.nearDistance.value = material.nearDistance;\n      uniforms.farDistance.value = material.farDistance;\n    }\n\n    function refreshUniformsNormal(uniforms, material) {\n      if (material.bumpMap) {\n        uniforms.bumpMap.value = material.bumpMap;\n        uniforms.bumpScale.value = material.bumpScale;\n\n        if (material.side === BackSide) {\n          uniforms.bumpScale.value *= -1;\n        }\n      }\n\n      if (material.normalMap) {\n        uniforms.normalMap.value = material.normalMap;\n        uniforms.normalScale.value.copy(material.normalScale);\n\n        if (material.side === BackSide) {\n          uniforms.normalScale.value.negate();\n        }\n      }\n\n      if (material.displacementMap) {\n        uniforms.displacementMap.value = material.displacementMap;\n        uniforms.displacementScale.value = material.displacementScale;\n        uniforms.displacementBias.value = material.displacementBias;\n      }\n    } // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n    function markUniformsLightsNeedsUpdate(uniforms, value) {\n      uniforms.ambientLightColor.needsUpdate = value;\n      uniforms.lightProbe.needsUpdate = value;\n      uniforms.directionalLights.needsUpdate = value;\n      uniforms.pointLights.needsUpdate = value;\n      uniforms.spotLights.needsUpdate = value;\n      uniforms.rectAreaLights.needsUpdate = value;\n      uniforms.hemisphereLights.needsUpdate = value;\n    }\n\n    function materialNeedsLights(material) {\n      return material.isMeshLambertMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n    } //\n\n\n    this.setFramebuffer = function (value) {\n      if (_framebuffer !== value && _currentRenderTarget === null) {\n        _gl.bindFramebuffer(36160, value);\n      }\n\n      _framebuffer = value;\n    };\n\n    this.getActiveCubeFace = function () {\n      return _currentActiveCubeFace;\n    };\n\n    this.getActiveMipmapLevel = function () {\n      return _currentActiveMipmapLevel;\n    };\n\n    this.getRenderTarget = function () {\n      return _currentRenderTarget;\n    };\n\n    this.setRenderTarget = function (renderTarget, activeCubeFace, activeMipmapLevel) {\n      _currentRenderTarget = renderTarget;\n      _currentActiveCubeFace = activeCubeFace;\n      _currentActiveMipmapLevel = activeMipmapLevel;\n\n      if (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n        textures.setupRenderTarget(renderTarget);\n      }\n\n      var framebuffer = _framebuffer;\n      var isCube = false;\n\n      if (renderTarget) {\n        var __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n        if (renderTarget.isWebGLRenderTargetCube) {\n          framebuffer = __webglFramebuffer[activeCubeFace || 0];\n          isCube = true;\n        } else if (renderTarget.isWebGLMultisampleRenderTarget) {\n          framebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n        } else {\n          framebuffer = __webglFramebuffer;\n        }\n\n        _currentViewport.copy(renderTarget.viewport);\n\n        _currentScissor.copy(renderTarget.scissor);\n\n        _currentScissorTest = renderTarget.scissorTest;\n      } else {\n        _currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n        _currentScissorTest = _scissorTest;\n      }\n\n      if (_currentFramebuffer !== framebuffer) {\n        _gl.bindFramebuffer(36160, framebuffer);\n\n        _currentFramebuffer = framebuffer;\n      }\n\n      state.viewport(_currentViewport);\n      state.scissor(_currentScissor);\n      state.setScissorTest(_currentScissorTest);\n\n      if (isCube) {\n        var textureProperties = properties.get(renderTarget.texture);\n\n        _gl.framebufferTexture2D(36160, 36064, 34069 + (activeCubeFace || 0), textureProperties.__webglTexture, activeMipmapLevel || 0);\n      }\n    };\n\n    this.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n      if (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n        console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n        return;\n      }\n\n      var framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n      if (renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined) {\n        framebuffer = framebuffer[activeCubeFaceIndex];\n      }\n\n      if (framebuffer) {\n        var restore = false;\n\n        if (framebuffer !== _currentFramebuffer) {\n          _gl.bindFramebuffer(36160, framebuffer);\n\n          restore = true;\n        }\n\n        try {\n          var texture = renderTarget.texture;\n          var textureFormat = texture.format;\n          var textureType = texture.type;\n\n          if (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(35739)) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n            return;\n          }\n\n          if (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(35738) && // IE11, Edge and Chrome Mac < 52 (#9513)\n          !(textureType === FloatType && (capabilities.isWebGL2 || extensions.get('OES_texture_float') || extensions.get('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n          !(textureType === HalfFloatType && (capabilities.isWebGL2 ? extensions.get('EXT_color_buffer_float') : extensions.get('EXT_color_buffer_half_float')))) {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n            return;\n          }\n\n          if (_gl.checkFramebufferStatus(36160) === 36053) {\n            // the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n            if (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n              _gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n            }\n          } else {\n            console.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n          }\n        } finally {\n          if (restore) {\n            _gl.bindFramebuffer(36160, _currentFramebuffer);\n          }\n        }\n      }\n    };\n\n    this.copyFramebufferToTexture = function (position, texture, level) {\n      if (level === undefined) {\n        level = 0;\n      }\n\n      var levelScale = Math.pow(2, -level);\n      var width = Math.floor(texture.image.width * levelScale);\n      var height = Math.floor(texture.image.height * levelScale);\n      var glFormat = utils.convert(texture.format);\n      textures.setTexture2D(texture, 0);\n\n      _gl.copyTexImage2D(3553, level, glFormat, position.x, position.y, width, height, 0);\n\n      state.unbindTexture();\n    };\n\n    this.copyTextureToTexture = function (position, srcTexture, dstTexture, level) {\n      var width = srcTexture.image.width;\n      var height = srcTexture.image.height;\n      var glFormat = utils.convert(dstTexture.format);\n      var glType = utils.convert(dstTexture.type);\n      textures.setTexture2D(dstTexture, 0);\n\n      if (srcTexture.isDataTexture) {\n        _gl.texSubImage2D(3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n      } else {\n        _gl.texSubImage2D(3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image);\n      }\n\n      state.unbindTexture();\n    };\n\n    this.initTexture = function (texture) {\n      textures.setTexture2D(texture, 0);\n      state.unbindTexture();\n    };\n\n    if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n      __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n        detail: this\n      })); // eslint-disable-line no-undef\n\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  function FogExp2(color, density) {\n    this.name = '';\n    this.color = new Color(color);\n    this.density = density !== undefined ? density : 0.00025;\n  }\n\n  Object.assign(FogExp2.prototype, {\n    isFogExp2: true,\n    clone: function () {\n      return new FogExp2(this.color, this.density);\n    },\n    toJSON: function ()\n    /* meta */\n    {\n      return {\n        type: 'FogExp2',\n        color: this.color.getHex(),\n        density: this.density\n      };\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Fog(color, near, far) {\n    this.name = '';\n    this.color = new Color(color);\n    this.near = near !== undefined ? near : 1;\n    this.far = far !== undefined ? far : 1000;\n  }\n\n  Object.assign(Fog.prototype, {\n    isFog: true,\n    clone: function () {\n      return new Fog(this.color, this.near, this.far);\n    },\n    toJSON: function ()\n    /* meta */\n    {\n      return {\n        type: 'Fog',\n        color: this.color.getHex(),\n        near: this.near,\n        far: this.far\n      };\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBuffer(array, stride) {\n    this.array = array;\n    this.stride = stride;\n    this.count = array !== undefined ? array.length / stride : 0;\n    this.usage = StaticDrawUsage;\n    this.updateRange = {\n      offset: 0,\n      count: -1\n    };\n    this.version = 0;\n  }\n\n  Object.defineProperty(InterleavedBuffer.prototype, 'needsUpdate', {\n    set: function (value) {\n      if (value === true) {\n        this.version++;\n      }\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    isInterleavedBuffer: true,\n    onUploadCallback: function () {},\n    setUsage: function (value) {\n      this.usage = value;\n      return this;\n    },\n    copy: function (source) {\n      this.array = new source.array.constructor(source.array);\n      this.count = source.count;\n      this.stride = source.stride;\n      this.usage = source.usage;\n      return this;\n    },\n    copyAt: function (index1, attribute, index2) {\n      index1 *= this.stride;\n      index2 *= attribute.stride;\n\n      for (var i = 0, l = this.stride; i < l; i++) {\n        this.array[index1 + i] = attribute.array[index2 + i];\n      }\n\n      return this;\n    },\n    set: function (value, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      this.array.set(value, offset);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    onUpload: function (callback) {\n      this.onUploadCallback = callback;\n      return this;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InterleavedBufferAttribute(interleavedBuffer, itemSize, offset, normalized) {\n    this.data = interleavedBuffer;\n    this.itemSize = itemSize;\n    this.offset = offset;\n    this.normalized = normalized === true;\n  }\n\n  Object.defineProperties(InterleavedBufferAttribute.prototype, {\n    count: {\n      get: function () {\n        return this.data.count;\n      }\n    },\n    array: {\n      get: function () {\n        return this.data.array;\n      }\n    }\n  });\n  Object.assign(InterleavedBufferAttribute.prototype, {\n    isInterleavedBufferAttribute: true,\n    setX: function (index, x) {\n      this.data.array[index * this.data.stride + this.offset] = x;\n      return this;\n    },\n    setY: function (index, y) {\n      this.data.array[index * this.data.stride + this.offset + 1] = y;\n      return this;\n    },\n    setZ: function (index, z) {\n      this.data.array[index * this.data.stride + this.offset + 2] = z;\n      return this;\n    },\n    setW: function (index, w) {\n      this.data.array[index * this.data.stride + this.offset + 3] = w;\n      return this;\n    },\n    getX: function (index) {\n      return this.data.array[index * this.data.stride + this.offset];\n    },\n    getY: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 1];\n    },\n    getZ: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 2];\n    },\n    getW: function (index) {\n      return this.data.array[index * this.data.stride + this.offset + 3];\n    },\n    setXY: function (index, x, y) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      return this;\n    },\n    setXYZ: function (index, x, y, z) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      return this;\n    },\n    setXYZW: function (index, x, y, z, w) {\n      index = index * this.data.stride + this.offset;\n      this.data.array[index + 0] = x;\n      this.data.array[index + 1] = y;\n      this.data.array[index + 2] = z;\n      this.data.array[index + 3] = w;\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  map: new THREE.Texture( <Image> ),\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *  rotation: <float>,\n   *  sizeAttenuation: <bool>\n   * }\n   */\n\n  function SpriteMaterial(parameters) {\n    Material.call(this);\n    this.type = 'SpriteMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.rotation = 0;\n    this.sizeAttenuation = true;\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  SpriteMaterial.prototype = Object.create(Material.prototype);\n  SpriteMaterial.prototype.constructor = SpriteMaterial;\n  SpriteMaterial.prototype.isSpriteMaterial = true;\n\n  SpriteMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.rotation = source.rotation;\n    this.sizeAttenuation = source.sizeAttenuation;\n    return this;\n  };\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  var _geometry;\n\n  var _intersectPoint = new Vector3();\n\n  var _worldScale = new Vector3();\n\n  var _mvPosition = new Vector3();\n\n  var _alignedPosition = new Vector2();\n\n  var _rotatedPosition = new Vector2();\n\n  var _viewWorldMatrix = new Matrix4();\n\n  var _vA$1 = new Vector3();\n\n  var _vB$1 = new Vector3();\n\n  var _vC$1 = new Vector3();\n\n  var _uvA$1 = new Vector2();\n\n  var _uvB$1 = new Vector2();\n\n  var _uvC$1 = new Vector2();\n\n  function Sprite(material) {\n    Object3D.call(this);\n    this.type = 'Sprite';\n\n    if (_geometry === undefined) {\n      _geometry = new BufferGeometry();\n      var float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n      var interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n      _geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n      _geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n      _geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n    }\n\n    this.geometry = _geometry;\n    this.material = material !== undefined ? material : new SpriteMaterial();\n    this.center = new Vector2(0.5, 0.5);\n  }\n\n  Sprite.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Sprite,\n    isSprite: true,\n    raycast: function (raycaster, intersects) {\n      if (raycaster.camera === null) {\n        console.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n      }\n\n      _worldScale.setFromMatrixScale(this.matrixWorld);\n\n      _viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n      this.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n      _mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n      if (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n        _worldScale.multiplyScalar(-_mvPosition.z);\n      }\n\n      var rotation = this.material.rotation;\n      var sin, cos;\n\n      if (rotation !== 0) {\n        cos = Math.cos(rotation);\n        sin = Math.sin(rotation);\n      }\n\n      var center = this.center;\n      transformVertex(_vA$1.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vB$1.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n      transformVertex(_vC$1.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n      _uvA$1.set(0, 0);\n\n      _uvB$1.set(1, 0);\n\n      _uvC$1.set(1, 1); // check first triangle\n\n\n      var intersect = raycaster.ray.intersectTriangle(_vA$1, _vB$1, _vC$1, false, _intersectPoint);\n\n      if (intersect === null) {\n        // check second triangle\n        transformVertex(_vB$1.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n        _uvB$1.set(0, 1);\n\n        intersect = raycaster.ray.intersectTriangle(_vA$1, _vC$1, _vB$1, false, _intersectPoint);\n\n        if (intersect === null) {\n          return;\n        }\n      }\n\n      var distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\n      if (distance < raycaster.near || distance > raycaster.far) {\n        return;\n      }\n\n      intersects.push({\n        distance: distance,\n        point: _intersectPoint.clone(),\n        uv: Triangle.getUV(_intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2()),\n        face: null,\n        object: this\n      });\n    },\n    clone: function () {\n      return new this.constructor(this.material).copy(this);\n    },\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n\n      if (source.center !== undefined) {\n        this.center.copy(source.center);\n      }\n\n      return this;\n    }\n  });\n\n  function transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n    // compute position in camera space\n    _alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n    if (sin !== undefined) {\n      _rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n      _rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n    } else {\n      _rotatedPosition.copy(_alignedPosition);\n    }\n\n    vertexPosition.copy(mvPosition);\n    vertexPosition.x += _rotatedPosition.x;\n    vertexPosition.y += _rotatedPosition.y; // transform to world space\n\n    vertexPosition.applyMatrix4(_viewWorldMatrix);\n  }\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var _v1$4 = new Vector3();\n\n  var _v2$2 = new Vector3();\n\n  function LOD() {\n    Object3D.call(this);\n    this.type = 'LOD';\n    Object.defineProperties(this, {\n      levels: {\n        enumerable: true,\n        value: []\n      }\n    });\n    this.autoUpdate = true;\n  }\n\n  LOD.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: LOD,\n    isLOD: true,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source, false);\n      var levels = source.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        this.addLevel(level.object.clone(), level.distance);\n      }\n\n      this.autoUpdate = source.autoUpdate;\n      return this;\n    },\n    addLevel: function (object, distance) {\n      if (distance === undefined) {\n        distance = 0;\n      }\n\n      distance = Math.abs(distance);\n      var levels = this.levels;\n\n      for (var l = 0; l < levels.length; l++) {\n        if (distance < levels[l].distance) {\n          break;\n        }\n      }\n\n      levels.splice(l, 0, {\n        distance: distance,\n        object: object\n      });\n      this.add(object);\n      return this;\n    },\n    getObjectForDistance: function (distance) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance < levels[i].distance) {\n            break;\n          }\n        }\n\n        return levels[i - 1].object;\n      }\n\n      return null;\n    },\n    raycast: function (raycaster, intersects) {\n      var levels = this.levels;\n\n      if (levels.length > 0) {\n        _v1$4.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = raycaster.ray.origin.distanceTo(_v1$4);\n        this.getObjectForDistance(distance).raycast(raycaster, intersects);\n      }\n    },\n    update: function (camera) {\n      var levels = this.levels;\n\n      if (levels.length > 1) {\n        _v1$4.setFromMatrixPosition(camera.matrixWorld);\n\n        _v2$2.setFromMatrixPosition(this.matrixWorld);\n\n        var distance = _v1$4.distanceTo(_v2$2);\n\n        levels[0].object.visible = true;\n\n        for (var i = 1, l = levels.length; i < l; i++) {\n          if (distance >= levels[i].distance) {\n            levels[i - 1].object.visible = false;\n            levels[i].object.visible = true;\n          } else {\n            break;\n          }\n        }\n\n        for (; i < l; i++) {\n          levels[i].object.visible = false;\n        }\n      }\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n\n      if (this.autoUpdate === false) {\n        data.object.autoUpdate = false;\n      }\n\n      data.object.levels = [];\n      var levels = this.levels;\n\n      for (var i = 0, l = levels.length; i < l; i++) {\n        var level = levels[i];\n        data.object.levels.push({\n          object: level.object.uuid,\n          distance: level.distance\n        });\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function SkinnedMesh(geometry, material) {\n    if (geometry && geometry.isGeometry) {\n      console.error('THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n    }\n\n    Mesh.call(this, geometry, material);\n    this.type = 'SkinnedMesh';\n    this.bindMode = 'attached';\n    this.bindMatrix = new Matrix4();\n    this.bindMatrixInverse = new Matrix4();\n  }\n\n  SkinnedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: SkinnedMesh,\n    isSkinnedMesh: true,\n    bind: function (skeleton, bindMatrix) {\n      this.skeleton = skeleton;\n\n      if (bindMatrix === undefined) {\n        this.updateMatrixWorld(true);\n        this.skeleton.calculateInverses();\n        bindMatrix = this.matrixWorld;\n      }\n\n      this.bindMatrix.copy(bindMatrix);\n      this.bindMatrixInverse.getInverse(bindMatrix);\n    },\n    pose: function () {\n      this.skeleton.pose();\n    },\n    normalizeSkinWeights: function () {\n      var vector = new Vector4();\n      var skinWeight = this.geometry.attributes.skinWeight;\n\n      for (var i = 0, l = skinWeight.count; i < l; i++) {\n        vector.x = skinWeight.getX(i);\n        vector.y = skinWeight.getY(i);\n        vector.z = skinWeight.getZ(i);\n        vector.w = skinWeight.getW(i);\n        var scale = 1.0 / vector.manhattanLength();\n\n        if (scale !== Infinity) {\n          vector.multiplyScalar(scale);\n        } else {\n          vector.set(1, 0, 0, 0); // do something reasonable\n        }\n\n        skinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n      }\n    },\n    updateMatrixWorld: function (force) {\n      Mesh.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.bindMode === 'attached') {\n        this.bindMatrixInverse.getInverse(this.matrixWorld);\n      } else if (this.bindMode === 'detached') {\n        this.bindMatrixInverse.getInverse(this.bindMatrix);\n      } else {\n        console.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author michael guerrero / http://realitymeltdown.com\n   * @author ikerr / http://verold.com\n   */\n\n  var _offsetMatrix = new Matrix4();\n\n  var _identityMatrix = new Matrix4();\n\n  function Skeleton(bones, boneInverses) {\n    // copy the bone array\n    bones = bones || [];\n    this.bones = bones.slice(0);\n    this.boneMatrices = new Float32Array(this.bones.length * 16);\n    this.frame = -1; // use the supplied bone inverses or calculate the inverses\n\n    if (boneInverses === undefined) {\n      this.calculateInverses();\n    } else {\n      if (this.bones.length === boneInverses.length) {\n        this.boneInverses = boneInverses.slice(0);\n      } else {\n        console.warn('THREE.Skeleton boneInverses is the wrong length.');\n        this.boneInverses = [];\n\n        for (var i = 0, il = this.bones.length; i < il; i++) {\n          this.boneInverses.push(new Matrix4());\n        }\n      }\n    }\n  }\n\n  Object.assign(Skeleton.prototype, {\n    calculateInverses: function () {\n      this.boneInverses = [];\n\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var inverse = new Matrix4();\n\n        if (this.bones[i]) {\n          inverse.getInverse(this.bones[i].matrixWorld);\n        }\n\n        this.boneInverses.push(inverse);\n      }\n    },\n    pose: function () {\n      var bone, i, il; // recover the bind-time world matrices\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          bone.matrixWorld.getInverse(this.boneInverses[i]);\n        }\n      } // compute the local matrices, positions, rotations and scales\n\n\n      for (i = 0, il = this.bones.length; i < il; i++) {\n        bone = this.bones[i];\n\n        if (bone) {\n          if (bone.parent && bone.parent.isBone) {\n            bone.matrix.getInverse(bone.parent.matrixWorld);\n            bone.matrix.multiply(bone.matrixWorld);\n          } else {\n            bone.matrix.copy(bone.matrixWorld);\n          }\n\n          bone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n        }\n      }\n    },\n    update: function () {\n      var bones = this.bones;\n      var boneInverses = this.boneInverses;\n      var boneMatrices = this.boneMatrices;\n      var boneTexture = this.boneTexture; // flatten bone matrices to array\n\n      for (var i = 0, il = bones.length; i < il; i++) {\n        // compute the offset between the current and the original transform\n        var matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n        _offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n        _offsetMatrix.toArray(boneMatrices, i * 16);\n      }\n\n      if (boneTexture !== undefined) {\n        boneTexture.needsUpdate = true;\n      }\n    },\n    clone: function () {\n      return new Skeleton(this.bones, this.boneInverses);\n    },\n    getBoneByName: function (name) {\n      for (var i = 0, il = this.bones.length; i < il; i++) {\n        var bone = this.bones[i];\n\n        if (bone.name === name) {\n          return bone;\n        }\n      }\n\n      return undefined;\n    }\n  });\n  /**\n   * @author mikael emtinger / http://gomo.se/\n   * @author alteredq / http://alteredqualia.com/\n   * @author ikerr / http://verold.com\n   */\n\n  function Bone() {\n    Object3D.call(this);\n    this.type = 'Bone';\n  }\n\n  Bone.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Bone,\n    isBone: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function InstancedMesh(geometry, material, count) {\n    Mesh.call(this, geometry, material);\n    this.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n    this.count = count;\n  }\n\n  InstancedMesh.prototype = Object.assign(Object.create(Mesh.prototype), {\n    constructor: InstancedMesh,\n    isInstancedMesh: true,\n    raycast: function () {},\n    setMatrixAt: function (index, matrix) {\n      matrix.toArray(this.instanceMatrix.array, index * 16);\n    },\n    updateMorphTargets: function () {}\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *  linecap: \"round\",\n   *  linejoin: \"round\"\n   * }\n   */\n\n  function LineBasicMaterial(parameters) {\n    Material.call(this);\n    this.type = 'LineBasicMaterial';\n    this.color = new Color(0xffffff);\n    this.linewidth = 1;\n    this.linecap = 'round';\n    this.linejoin = 'round';\n    this.setValues(parameters);\n  }\n\n  LineBasicMaterial.prototype = Object.create(Material.prototype);\n  LineBasicMaterial.prototype.constructor = LineBasicMaterial;\n  LineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n  LineBasicMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.linewidth = source.linewidth;\n    this.linecap = source.linecap;\n    this.linejoin = source.linejoin;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  var _start = new Vector3();\n\n  var _end = new Vector3();\n\n  var _inverseMatrix$1 = new Matrix4();\n\n  var _ray$1 = new Ray();\n\n  var _sphere$2 = new Sphere();\n\n  function Line(geometry, material, mode) {\n    if (mode === 1) {\n      console.error('THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.');\n    }\n\n    Object3D.call(this);\n    this.type = 'Line';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new LineBasicMaterial({\n      color: Math.random() * 0xffffff\n    });\n  }\n\n  Line.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Line,\n    isLine: true,\n    computeLineDistances: function () {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [0];\n\n          for (var i = 1, l = positionAttribute.count; i < l; i++) {\n            _start.fromBufferAttribute(positionAttribute, i - 1);\n\n            _end.fromBufferAttribute(positionAttribute, i);\n\n            lineDistances[i] = lineDistances[i - 1];\n            lineDistances[i] += _start.distanceTo(_end);\n          }\n\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var lineDistances = geometry.lineDistances;\n        lineDistances[0] = 0;\n\n        for (var i = 1, l = vertices.length; i < l; i++) {\n          lineDistances[i] = lineDistances[i - 1];\n          lineDistances[i] += vertices[i - 1].distanceTo(vertices[i]);\n        }\n      }\n\n      return this;\n    },\n    raycast: function (raycaster, intersects) {\n      var precision = raycaster.linePrecision;\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) {\n        geometry.computeBoundingSphere();\n      }\n\n      _sphere$2.copy(geometry.boundingSphere);\n\n      _sphere$2.applyMatrix4(matrixWorld);\n\n      _sphere$2.radius += precision;\n\n      if (raycaster.ray.intersectsSphere(_sphere$2) === false) {\n        return;\n      } //\n\n\n      _inverseMatrix$1.getInverse(matrixWorld);\n\n      _ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n      var localPrecision = precision / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localPrecisionSq = localPrecision * localPrecision;\n      var vStart = new Vector3();\n      var vEnd = new Vector3();\n      var interSegment = new Vector3();\n      var interRay = new Vector3();\n      var step = this && this.isLineSegments ? 2 : 1;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, l = indices.length - 1; i < l; i += step) {\n            var a = indices[i];\n            var b = indices[i + 1];\n            vStart.fromArray(positions, a * 3);\n            vEnd.fromArray(positions, b * 3);\n\n            var distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n            if (distSq > localPrecisionSq) {\n              continue;\n            }\n\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n\n            if (distance < raycaster.near || distance > raycaster.far) {\n              continue;\n            }\n\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3 - 1; i < l; i += step) {\n            vStart.fromArray(positions, 3 * i);\n            vEnd.fromArray(positions, 3 * i + 3);\n\n            var distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n            if (distSq > localPrecisionSq) {\n              continue;\n            }\n\n            interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n            var distance = raycaster.ray.origin.distanceTo(interRay);\n\n            if (distance < raycaster.near || distance > raycaster.far) {\n              continue;\n            }\n\n            intersects.push({\n              distance: distance,\n              // What do we want? intersection point on the ray or on the segment??\n              // point: raycaster.ray.at( distance ),\n              point: interSegment.clone().applyMatrix4(this.matrixWorld),\n              index: i,\n              face: null,\n              faceIndex: null,\n              object: this\n            });\n          }\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var nbVertices = vertices.length;\n\n        for (var i = 0; i < nbVertices - 1; i += step) {\n          var distSq = _ray$1.distanceSqToSegment(vertices[i], vertices[i + 1], interRay, interSegment);\n\n          if (distSq > localPrecisionSq) {\n            continue;\n          }\n\n          interRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n          var distance = raycaster.ray.origin.distanceTo(interRay);\n\n          if (distance < raycaster.near || distance > raycaster.far) {\n            continue;\n          }\n\n          intersects.push({\n            distance: distance,\n            // What do we want? intersection point on the ray or on the segment??\n            // point: raycaster.ray.at( distance ),\n            point: interSegment.clone().applyMatrix4(this.matrixWorld),\n            index: i,\n            face: null,\n            faceIndex: null,\n            object: this\n          });\n        }\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _start$1 = new Vector3();\n\n  var _end$1 = new Vector3();\n\n  function LineSegments(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineSegments';\n  }\n\n  LineSegments.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineSegments,\n    isLineSegments: true,\n    computeLineDistances: function () {\n      var geometry = this.geometry;\n\n      if (geometry.isBufferGeometry) {\n        // we assume non-indexed geometry\n        if (geometry.index === null) {\n          var positionAttribute = geometry.attributes.position;\n          var lineDistances = [];\n\n          for (var i = 0, l = positionAttribute.count; i < l; i += 2) {\n            _start$1.fromBufferAttribute(positionAttribute, i);\n\n            _end$1.fromBufferAttribute(positionAttribute, i + 1);\n\n            lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n            lineDistances[i + 1] = lineDistances[i] + _start$1.distanceTo(_end$1);\n          }\n\n          geometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n        } else {\n          console.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n        }\n      } else if (geometry.isGeometry) {\n        var vertices = geometry.vertices;\n        var lineDistances = geometry.lineDistances;\n\n        for (var i = 0, l = vertices.length; i < l; i += 2) {\n          _start$1.copy(vertices[i]);\n\n          _end$1.copy(vertices[i + 1]);\n\n          lineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n          lineDistances[i + 1] = lineDistances[i] + _start$1.distanceTo(_end$1);\n        }\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mgreter / http://github.com/mgreter\n   */\n\n  function LineLoop(geometry, material) {\n    Line.call(this, geometry, material);\n    this.type = 'LineLoop';\n  }\n\n  LineLoop.prototype = Object.assign(Object.create(Line.prototype), {\n    constructor: LineLoop,\n    isLineLoop: true\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *  map: new THREE.Texture( <Image> ),\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  size: <float>,\n   *  sizeAttenuation: <bool>\n   *\n   *  morphTargets: <bool>\n   * }\n   */\n\n  function PointsMaterial(parameters) {\n    Material.call(this);\n    this.type = 'PointsMaterial';\n    this.color = new Color(0xffffff);\n    this.map = null;\n    this.alphaMap = null;\n    this.size = 1;\n    this.sizeAttenuation = true;\n    this.morphTargets = false;\n    this.setValues(parameters);\n  }\n\n  PointsMaterial.prototype = Object.create(Material.prototype);\n  PointsMaterial.prototype.constructor = PointsMaterial;\n  PointsMaterial.prototype.isPointsMaterial = true;\n\n  PointsMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.alphaMap = source.alphaMap;\n    this.size = source.size;\n    this.sizeAttenuation = source.sizeAttenuation;\n    this.morphTargets = source.morphTargets;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n\n  var _inverseMatrix$2 = new Matrix4();\n\n  var _ray$2 = new Ray();\n\n  var _sphere$3 = new Sphere();\n\n  var _position$1 = new Vector3();\n\n  function Points(geometry, material) {\n    Object3D.call(this);\n    this.type = 'Points';\n    this.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n    this.material = material !== undefined ? material : new PointsMaterial({\n      color: Math.random() * 0xffffff\n    });\n    this.updateMorphTargets();\n  }\n\n  Points.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Points,\n    isPoints: true,\n    raycast: function (raycaster, intersects) {\n      var geometry = this.geometry;\n      var matrixWorld = this.matrixWorld;\n      var threshold = raycaster.params.Points.threshold; // Checking boundingSphere distance to ray\n\n      if (geometry.boundingSphere === null) {\n        geometry.computeBoundingSphere();\n      }\n\n      _sphere$3.copy(geometry.boundingSphere);\n\n      _sphere$3.applyMatrix4(matrixWorld);\n\n      _sphere$3.radius += threshold;\n\n      if (raycaster.ray.intersectsSphere(_sphere$3) === false) {\n        return;\n      } //\n\n\n      _inverseMatrix$2.getInverse(matrixWorld);\n\n      _ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2);\n\n      var localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n      var localThresholdSq = localThreshold * localThreshold;\n\n      if (geometry.isBufferGeometry) {\n        var index = geometry.index;\n        var attributes = geometry.attributes;\n        var positions = attributes.position.array;\n\n        if (index !== null) {\n          var indices = index.array;\n\n          for (var i = 0, il = indices.length; i < il; i++) {\n            var a = indices[i];\n\n            _position$1.fromArray(positions, a * 3);\n\n            testPoint(_position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n          }\n        } else {\n          for (var i = 0, l = positions.length / 3; i < l; i++) {\n            _position$1.fromArray(positions, i * 3);\n\n            testPoint(_position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n          }\n        }\n      } else {\n        var vertices = geometry.vertices;\n\n        for (var i = 0, l = vertices.length; i < l; i++) {\n          testPoint(vertices[i], i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n        }\n      }\n    },\n    updateMorphTargets: function () {\n      var geometry = this.geometry;\n      var m, ml, name;\n\n      if (geometry.isBufferGeometry) {\n        var morphAttributes = geometry.morphAttributes;\n        var keys = Object.keys(morphAttributes);\n\n        if (keys.length > 0) {\n          var morphAttribute = morphAttributes[keys[0]];\n\n          if (morphAttribute !== undefined) {\n            this.morphTargetInfluences = [];\n            this.morphTargetDictionary = {};\n\n            for (m = 0, ml = morphAttribute.length; m < ml; m++) {\n              name = morphAttribute[m].name || String(m);\n              this.morphTargetInfluences.push(0);\n              this.morphTargetDictionary[name] = m;\n            }\n          }\n        }\n      } else {\n        var morphTargets = geometry.morphTargets;\n\n        if (morphTargets !== undefined && morphTargets.length > 0) {\n          console.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n        }\n      }\n    },\n    clone: function () {\n      return new this.constructor(this.geometry, this.material).copy(this);\n    }\n  });\n\n  function testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n    var rayPointDistanceSq = _ray$2.distanceSqToPoint(point);\n\n    if (rayPointDistanceSq < localThresholdSq) {\n      var intersectPoint = new Vector3();\n\n      _ray$2.closestPointToPoint(point, intersectPoint);\n\n      intersectPoint.applyMatrix4(matrixWorld);\n      var distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\n      if (distance < raycaster.near || distance > raycaster.far) {\n        return;\n      }\n\n      intersects.push({\n        distance: distance,\n        distanceToRay: Math.sqrt(rayPointDistanceSq),\n        point: intersectPoint,\n        index: index,\n        face: null,\n        object: object\n      });\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function VideoTexture(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.format = format !== undefined ? format : RGBFormat;\n    this.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n    this.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n    this.generateMipmaps = false;\n  }\n\n  VideoTexture.prototype = Object.assign(Object.create(Texture.prototype), {\n    constructor: VideoTexture,\n    isVideoTexture: true,\n    update: function () {\n      var video = this.image;\n\n      if (video.readyState >= video.HAVE_CURRENT_DATA) {\n        this.needsUpdate = true;\n      }\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function CompressedTexture(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.mipmaps = mipmaps; // no flipping for cube textures\n    // (also flipping doesn't work for compressed textures )\n\n    this.flipY = false; // can't generate mipmaps for compressed textures\n    // mips must be embedded in DDS files\n\n    this.generateMipmaps = false;\n  }\n\n  CompressedTexture.prototype = Object.create(Texture.prototype);\n  CompressedTexture.prototype.constructor = CompressedTexture;\n  CompressedTexture.prototype.isCompressedTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CanvasTexture(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n    Texture.call(this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.needsUpdate = true;\n  }\n\n  CanvasTexture.prototype = Object.create(Texture.prototype);\n  CanvasTexture.prototype.constructor = CanvasTexture;\n  CanvasTexture.prototype.isCanvasTexture = true;\n  /**\n   * @author Matt DesLauriers / @mattdesl\n   * @author atix / arthursilber.de\n   */\n\n  function DepthTexture(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n    format = format !== undefined ? format : DepthFormat;\n\n    if (format !== DepthFormat && format !== DepthStencilFormat) {\n      throw new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n    }\n\n    if (type === undefined && format === DepthFormat) {\n      type = UnsignedShortType;\n    }\n\n    if (type === undefined && format === DepthStencilFormat) {\n      type = UnsignedInt248Type;\n    }\n\n    Texture.call(this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n    this.image = {\n      width: width,\n      height: height\n    };\n    this.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n    this.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n    this.flipY = false;\n    this.generateMipmaps = false;\n  }\n\n  DepthTexture.prototype = Object.create(Texture.prototype);\n  DepthTexture.prototype.constructor = DepthTexture;\n  DepthTexture.prototype.isDepthTexture = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n  function WireframeGeometry(geometry) {\n    BufferGeometry.call(this);\n    this.type = 'WireframeGeometry'; // buffer\n\n    var vertices = []; // helper variables\n\n    var i, j, l, o, ol;\n    var edge = [0, 0],\n        edges = {},\n        e,\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c'];\n    var vertex; // different logic for Geometry and BufferGeometry\n\n    if (geometry && geometry.isGeometry) {\n      // create a data structure that contains all edges without duplicates\n      var faces = geometry.faces;\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (j = 0; j < 3; j++) {\n          edge1 = face[keys[j]];\n          edge2 = face[keys[(j + 1) % 3]];\n          edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n          edge[1] = Math.max(edge1, edge2);\n          key = edge[0] + ',' + edge[1];\n\n          if (edges[key] === undefined) {\n            edges[key] = {\n              index1: edge[0],\n              index2: edge[1]\n            };\n          }\n        }\n      } // generate vertices\n\n\n      for (key in edges) {\n        e = edges[key];\n        vertex = geometry.vertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = geometry.vertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } else if (geometry && geometry.isBufferGeometry) {\n      var position, indices, groups;\n      var group, start, count;\n      var index1, index2;\n      vertex = new Vector3();\n\n      if (geometry.index !== null) {\n        // indexed BufferGeometry\n        position = geometry.attributes.position;\n        indices = geometry.index;\n        groups = geometry.groups;\n\n        if (groups.length === 0) {\n          groups = [{\n            start: 0,\n            count: indices.count,\n            materialIndex: 0\n          }];\n        } // create a data structure that contains all eges without duplicates\n\n\n        for (o = 0, ol = groups.length; o < ol; ++o) {\n          group = groups[o];\n          start = group.start;\n          count = group.count;\n\n          for (i = start, l = start + count; i < l; i += 3) {\n            for (j = 0; j < 3; j++) {\n              edge1 = indices.getX(i + j);\n              edge2 = indices.getX(i + (j + 1) % 3);\n              edge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n              edge[1] = Math.max(edge1, edge2);\n              key = edge[0] + ',' + edge[1];\n\n              if (edges[key] === undefined) {\n                edges[key] = {\n                  index1: edge[0],\n                  index2: edge[1]\n                };\n              }\n            }\n          }\n        } // generate vertices\n\n\n        for (key in edges) {\n          e = edges[key];\n          vertex.fromBufferAttribute(position, e.index1);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n          vertex.fromBufferAttribute(position, e.index2);\n          vertices.push(vertex.x, vertex.y, vertex.z);\n        }\n      } else {\n        // non-indexed BufferGeometry\n        position = geometry.attributes.position;\n\n        for (i = 0, l = position.count / 3; i < l; i++) {\n          for (j = 0; j < 3; j++) {\n            // three edges per triangle, an edge is represented as (index1, index2)\n            // e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n            index1 = 3 * i + j;\n            vertex.fromBufferAttribute(position, index1);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n            index2 = 3 * i + (j + 1) % 3;\n            vertex.fromBufferAttribute(position, index2);\n            vertices.push(vertex.x, vertex.y, vertex.z);\n          }\n        }\n      }\n    } // build geometry\n\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  WireframeGeometry.prototype = Object.create(BufferGeometry.prototype);\n  WireframeGeometry.prototype.constructor = WireframeGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Parametric Surfaces Geometry\n   * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n   */\n  // ParametricGeometry\n\n  function ParametricGeometry(func, slices, stacks) {\n    Geometry.call(this);\n    this.type = 'ParametricGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    };\n    this.fromBufferGeometry(new ParametricBufferGeometry(func, slices, stacks));\n    this.mergeVertices();\n  }\n\n  ParametricGeometry.prototype = Object.create(Geometry.prototype);\n  ParametricGeometry.prototype.constructor = ParametricGeometry; // ParametricBufferGeometry\n\n  function ParametricBufferGeometry(func, slices, stacks) {\n    BufferGeometry.call(this);\n    this.type = 'ParametricBufferGeometry';\n    this.parameters = {\n      func: func,\n      slices: slices,\n      stacks: stacks\n    }; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var EPS = 0.00001;\n    var normal = new Vector3();\n    var p0 = new Vector3(),\n        p1 = new Vector3();\n    var pu = new Vector3(),\n        pv = new Vector3();\n    var i, j;\n\n    if (func.length < 3) {\n      console.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n    } // generate vertices, normals and uvs\n\n\n    var sliceCount = slices + 1;\n\n    for (i = 0; i <= stacks; i++) {\n      var v = i / stacks;\n\n      for (j = 0; j <= slices; j++) {\n        var u = j / slices; // vertex\n\n        func(u, v, p0);\n        vertices.push(p0.x, p0.y, p0.z); // normal\n        // approximate tangent vectors via finite differences\n\n        if (u - EPS >= 0) {\n          func(u - EPS, v, p1);\n          pu.subVectors(p0, p1);\n        } else {\n          func(u + EPS, v, p1);\n          pu.subVectors(p1, p0);\n        }\n\n        if (v - EPS >= 0) {\n          func(u, v - EPS, p1);\n          pv.subVectors(p0, p1);\n        } else {\n          func(u, v + EPS, p1);\n          pv.subVectors(p1, p0);\n        } // cross product of tangent vectors returns surface normal\n\n\n        normal.crossVectors(pu, pv).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u, v);\n      }\n    } // generate indices\n\n\n    for (i = 0; i < stacks; i++) {\n      for (j = 0; j < slices; j++) {\n        var a = i * sliceCount + j;\n        var b = i * sliceCount + j + 1;\n        var c = (i + 1) * sliceCount + j + 1;\n        var d = (i + 1) * sliceCount + j; // faces one and two\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  ParametricBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n  /**\n   * @author clockworkgeek / https://github.com/clockworkgeek\n   * @author timothypratley / https://github.com/timothypratley\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // PolyhedronGeometry\n\n  function PolyhedronGeometry(vertices, indices, radius, detail) {\n    Geometry.call(this);\n    this.type = 'PolyhedronGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new PolyhedronBufferGeometry(vertices, indices, radius, detail));\n    this.mergeVertices();\n  }\n\n  PolyhedronGeometry.prototype = Object.create(Geometry.prototype);\n  PolyhedronGeometry.prototype.constructor = PolyhedronGeometry; // PolyhedronBufferGeometry\n\n  function PolyhedronBufferGeometry(vertices, indices, radius, detail) {\n    BufferGeometry.call(this);\n    this.type = 'PolyhedronBufferGeometry';\n    this.parameters = {\n      vertices: vertices,\n      indices: indices,\n      radius: radius,\n      detail: detail\n    };\n    radius = radius || 1;\n    detail = detail || 0; // default buffer data\n\n    var vertexBuffer = [];\n    var uvBuffer = []; // the subdivision creates the vertex buffer data\n\n    subdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n    applyRadius(radius); // finally, create the uv data\n\n    generateUVs(); // build non-indexed geometry\n\n    this.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n    if (detail === 0) {\n      this.computeVertexNormals(); // flat normals\n    } else {\n      this.normalizeNormals(); // smooth normals\n    } // helper functions\n\n\n    function subdivide(detail) {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n      for (var i = 0; i < indices.length; i += 3) {\n        // get the vertices of the face\n        getVertexByIndex(indices[i + 0], a);\n        getVertexByIndex(indices[i + 1], b);\n        getVertexByIndex(indices[i + 2], c); // perform subdivision\n\n        subdivideFace(a, b, c, detail);\n      }\n    }\n\n    function subdivideFace(a, b, c, detail) {\n      var cols = Math.pow(2, detail); // we use this multidimensional array as a data structure for creating the subdivision\n\n      var v = [];\n      var i, j; // construct all of the vertices for this subdivision\n\n      for (i = 0; i <= cols; i++) {\n        v[i] = [];\n        var aj = a.clone().lerp(c, i / cols);\n        var bj = b.clone().lerp(c, i / cols);\n        var rows = cols - i;\n\n        for (j = 0; j <= rows; j++) {\n          if (j === 0 && i === cols) {\n            v[i][j] = aj;\n          } else {\n            v[i][j] = aj.clone().lerp(bj, j / rows);\n          }\n        }\n      } // construct all of the faces\n\n\n      for (i = 0; i < cols; i++) {\n        for (j = 0; j < 2 * (cols - i) - 1; j++) {\n          var k = Math.floor(j / 2);\n\n          if (j % 2 === 0) {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k]);\n            pushVertex(v[i][k]);\n          } else {\n            pushVertex(v[i][k + 1]);\n            pushVertex(v[i + 1][k + 1]);\n            pushVertex(v[i + 1][k]);\n          }\n        }\n      }\n    }\n\n    function applyRadius(radius) {\n      var vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        vertex.normalize().multiplyScalar(radius);\n        vertexBuffer[i + 0] = vertex.x;\n        vertexBuffer[i + 1] = vertex.y;\n        vertexBuffer[i + 2] = vertex.z;\n      }\n    }\n\n    function generateUVs() {\n      var vertex = new Vector3();\n\n      for (var i = 0; i < vertexBuffer.length; i += 3) {\n        vertex.x = vertexBuffer[i + 0];\n        vertex.y = vertexBuffer[i + 1];\n        vertex.z = vertexBuffer[i + 2];\n        var u = azimuth(vertex) / 2 / Math.PI + 0.5;\n        var v = inclination(vertex) / Math.PI + 0.5;\n        uvBuffer.push(u, 1 - v);\n      }\n\n      correctUVs();\n      correctSeam();\n    }\n\n    function correctSeam() {\n      // handle case when face straddles the seam, see #3269\n      for (var i = 0; i < uvBuffer.length; i += 6) {\n        // uv data of a single face\n        var x0 = uvBuffer[i + 0];\n        var x1 = uvBuffer[i + 2];\n        var x2 = uvBuffer[i + 4];\n        var max = Math.max(x0, x1, x2);\n        var min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n        if (max > 0.9 && min < 0.1) {\n          if (x0 < 0.2) {\n            uvBuffer[i + 0] += 1;\n          }\n\n          if (x1 < 0.2) {\n            uvBuffer[i + 2] += 1;\n          }\n\n          if (x2 < 0.2) {\n            uvBuffer[i + 4] += 1;\n          }\n        }\n      }\n    }\n\n    function pushVertex(vertex) {\n      vertexBuffer.push(vertex.x, vertex.y, vertex.z);\n    }\n\n    function getVertexByIndex(index, vertex) {\n      var stride = index * 3;\n      vertex.x = vertices[stride + 0];\n      vertex.y = vertices[stride + 1];\n      vertex.z = vertices[stride + 2];\n    }\n\n    function correctUVs() {\n      var a = new Vector3();\n      var b = new Vector3();\n      var c = new Vector3();\n      var centroid = new Vector3();\n      var uvA = new Vector2();\n      var uvB = new Vector2();\n      var uvC = new Vector2();\n\n      for (var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n        a.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n        b.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n        c.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n        uvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n        uvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n        uvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n        centroid.copy(a).add(b).add(c).divideScalar(3);\n        var azi = azimuth(centroid);\n        correctUV(uvA, j + 0, a, azi);\n        correctUV(uvB, j + 2, b, azi);\n        correctUV(uvC, j + 4, c, azi);\n      }\n    }\n\n    function correctUV(uv, stride, vector, azimuth) {\n      if (azimuth < 0 && uv.x === 1) {\n        uvBuffer[stride] = uv.x - 1;\n      }\n\n      if (vector.x === 0 && vector.z === 0) {\n        uvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n      }\n    } // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n    function azimuth(vector) {\n      return Math.atan2(vector.z, -vector.x);\n    } // Angle above the XZ plane.\n\n\n    function inclination(vector) {\n      return Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n    }\n  }\n\n  PolyhedronBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  PolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TetrahedronGeometry\n\n  function TetrahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'TetrahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new TetrahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  TetrahedronGeometry.prototype = Object.create(Geometry.prototype);\n  TetrahedronGeometry.prototype.constructor = TetrahedronGeometry; // TetrahedronBufferGeometry\n\n  function TetrahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n    var indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'TetrahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  TetrahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  TetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // OctahedronGeometry\n\n  function OctahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'OctahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new OctahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  OctahedronGeometry.prototype = Object.create(Geometry.prototype);\n  OctahedronGeometry.prototype.constructor = OctahedronGeometry; // OctahedronBufferGeometry\n\n  function OctahedronBufferGeometry(radius, detail) {\n    var vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n    var indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'OctahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  OctahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  OctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n  /**\n   * @author timothypratley / https://github.com/timothypratley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // IcosahedronGeometry\n\n  function IcosahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'IcosahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new IcosahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  IcosahedronGeometry.prototype = Object.create(Geometry.prototype);\n  IcosahedronGeometry.prototype.constructor = IcosahedronGeometry; // IcosahedronBufferGeometry\n\n  function IcosahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n    var indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'IcosahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  IcosahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  IcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n  /**\n   * @author Abe Pazos / https://hamoid.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // DodecahedronGeometry\n\n  function DodecahedronGeometry(radius, detail) {\n    Geometry.call(this);\n    this.type = 'DodecahedronGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n    this.fromBufferGeometry(new DodecahedronBufferGeometry(radius, detail));\n    this.mergeVertices();\n  }\n\n  DodecahedronGeometry.prototype = Object.create(Geometry.prototype);\n  DodecahedronGeometry.prototype.constructor = DodecahedronGeometry; // DodecahedronBufferGeometry\n\n  function DodecahedronBufferGeometry(radius, detail) {\n    var t = (1 + Math.sqrt(5)) / 2;\n    var r = 1 / t;\n    var vertices = [// (±1, ±1, ±1)\n    -1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n    0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n    -r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n    -t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n    var indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n    PolyhedronBufferGeometry.call(this, vertices, indices, radius, detail);\n    this.type = 'DodecahedronBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      detail: detail\n    };\n  }\n\n  DodecahedronBufferGeometry.prototype = Object.create(PolyhedronBufferGeometry.prototype);\n  DodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n  /**\n   * @author oosmoxiecode / https://github.com/oosmoxiecode\n   * @author WestLangley / https://github.com/WestLangley\n   * @author zz85 / https://github.com/zz85\n   * @author miningold / https://github.com/miningold\n   * @author jonobr1 / https://github.com/jonobr1\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   */\n  // TubeGeometry\n\n  function TubeGeometry(path, tubularSegments, radius, radialSegments, closed, taper) {\n    Geometry.call(this);\n    this.type = 'TubeGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n\n    if (taper !== undefined) {\n      console.warn('THREE.TubeGeometry: taper has been removed.');\n    }\n\n    var bufferGeometry = new TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed); // expose internals\n\n    this.tangents = bufferGeometry.tangents;\n    this.normals = bufferGeometry.normals;\n    this.binormals = bufferGeometry.binormals; // create geometry\n\n    this.fromBufferGeometry(bufferGeometry);\n    this.mergeVertices();\n  }\n\n  TubeGeometry.prototype = Object.create(Geometry.prototype);\n  TubeGeometry.prototype.constructor = TubeGeometry; // TubeBufferGeometry\n\n  function TubeBufferGeometry(path, tubularSegments, radius, radialSegments, closed) {\n    BufferGeometry.call(this);\n    this.type = 'TubeBufferGeometry';\n    this.parameters = {\n      path: path,\n      tubularSegments: tubularSegments,\n      radius: radius,\n      radialSegments: radialSegments,\n      closed: closed\n    };\n    tubularSegments = tubularSegments || 64;\n    radius = radius || 1;\n    radialSegments = radialSegments || 8;\n    closed = closed || false;\n    var frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n    this.tangents = frames.tangents;\n    this.normals = frames.normals;\n    this.binormals = frames.binormals; // helper variables\n\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var uv = new Vector2();\n    var P = new Vector3();\n    var i, j; // buffer\n\n    var vertices = [];\n    var normals = [];\n    var uvs = [];\n    var indices = []; // create buffer data\n\n    generateBufferData(); // build geometry\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n    function generateBufferData() {\n      for (i = 0; i < tubularSegments; i++) {\n        generateSegment(i);\n      } // if the geometry is not closed, generate the last row of vertices and normals\n      // at the regular position on the given path\n      //\n      // if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n      generateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n      // this makes it easy compute correct values for closed geometries\n\n      generateUVs(); // finally create faces\n\n      generateIndices();\n    }\n\n    function generateSegment(i) {\n      // we use getPointAt to sample evenly distributed points from the given path\n      P = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n      var N = frames.normals[i];\n      var B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n      for (j = 0; j <= radialSegments; j++) {\n        var v = j / radialSegments * Math.PI * 2;\n        var sin = Math.sin(v);\n        var cos = -Math.cos(v); // normal\n\n        normal.x = cos * N.x + sin * B.x;\n        normal.y = cos * N.y + sin * B.y;\n        normal.z = cos * N.z + sin * B.z;\n        normal.normalize();\n        normals.push(normal.x, normal.y, normal.z); // vertex\n\n        vertex.x = P.x + radius * normal.x;\n        vertex.y = P.y + radius * normal.y;\n        vertex.z = P.z + radius * normal.z;\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    }\n\n    function generateIndices() {\n      for (j = 1; j <= tubularSegments; j++) {\n        for (i = 1; i <= radialSegments; i++) {\n          var a = (radialSegments + 1) * (j - 1) + (i - 1);\n          var b = (radialSegments + 1) * j + (i - 1);\n          var c = (radialSegments + 1) * j + i;\n          var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d);\n        }\n      }\n    }\n\n    function generateUVs() {\n      for (i = 0; i <= tubularSegments; i++) {\n        for (j = 0; j <= radialSegments; j++) {\n          uv.x = i / tubularSegments;\n          uv.y = j / radialSegments;\n          uvs.push(uv.x, uv.y);\n        }\n      }\n    }\n  }\n\n  TubeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n  TubeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    data.path = this.parameters.path.toJSON();\n    return data;\n  };\n  /**\n   * @author oosmoxiecode\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * based on http://www.blackpawn.com/texts/pqtorus/\n   */\n  // TorusKnotGeometry\n\n\n  function TorusKnotGeometry(radius, tube, tubularSegments, radialSegments, p, q, heightScale) {\n    Geometry.call(this);\n    this.type = 'TorusKnotGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n\n    if (heightScale !== undefined) {\n      console.warn('THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.');\n    }\n\n    this.fromBufferGeometry(new TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q));\n    this.mergeVertices();\n  }\n\n  TorusKnotGeometry.prototype = Object.create(Geometry.prototype);\n  TorusKnotGeometry.prototype.constructor = TorusKnotGeometry; // TorusKnotBufferGeometry\n\n  function TorusKnotBufferGeometry(radius, tube, tubularSegments, radialSegments, p, q) {\n    BufferGeometry.call(this);\n    this.type = 'TorusKnotBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      tubularSegments: tubularSegments,\n      radialSegments: radialSegments,\n      p: p,\n      q: q\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    tubularSegments = Math.floor(tubularSegments) || 64;\n    radialSegments = Math.floor(radialSegments) || 8;\n    p = p || 2;\n    q = q || 3; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, j;\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var P1 = new Vector3();\n    var P2 = new Vector3();\n    var B = new Vector3();\n    var T = new Vector3();\n    var N = new Vector3(); // generate vertices, normals and uvs\n\n    for (i = 0; i <= tubularSegments; ++i) {\n      // the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n      var u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n      // these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n      calculatePositionOnCurve(u, p, q, radius, P1);\n      calculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n      T.subVectors(P2, P1);\n      N.addVectors(P2, P1);\n      B.crossVectors(T, N);\n      N.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n      B.normalize();\n      N.normalize();\n\n      for (j = 0; j <= radialSegments; ++j) {\n        // now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n        // because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n        var v = j / radialSegments * Math.PI * 2;\n        var cx = -tube * Math.cos(v);\n        var cy = tube * Math.sin(v); // now calculate the final vertex position.\n        // first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n        vertex.x = P1.x + (cx * N.x + cy * B.x);\n        vertex.y = P1.y + (cx * N.y + cy * B.y);\n        vertex.z = P1.z + (cx * N.z + cy * B.z);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n        normal.subVectors(vertex, P1).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= tubularSegments; j++) {\n      for (i = 1; i <= radialSegments; i++) {\n        // indices\n        var a = (radialSegments + 1) * (j - 1) + (i - 1);\n        var b = (radialSegments + 1) * j + (i - 1);\n        var c = (radialSegments + 1) * j + i;\n        var d = (radialSegments + 1) * (j - 1) + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n    function calculatePositionOnCurve(u, p, q, radius, position) {\n      var cu = Math.cos(u);\n      var su = Math.sin(u);\n      var quOverP = q / p * u;\n      var cs = Math.cos(quOverP);\n      position.x = radius * (2 + cs) * 0.5 * cu;\n      position.y = radius * (2 + cs) * su * 0.5;\n      position.z = radius * Math.sin(quOverP) * 0.5;\n    }\n  }\n\n  TorusKnotBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n  /**\n   * @author oosmoxiecode\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // TorusGeometry\n\n  function TorusGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    Geometry.call(this);\n    this.type = 'TorusGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    this.fromBufferGeometry(new TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc));\n    this.mergeVertices();\n  }\n\n  TorusGeometry.prototype = Object.create(Geometry.prototype);\n  TorusGeometry.prototype.constructor = TorusGeometry; // TorusBufferGeometry\n\n  function TorusBufferGeometry(radius, tube, radialSegments, tubularSegments, arc) {\n    BufferGeometry.call(this);\n    this.type = 'TorusBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      tube: tube,\n      radialSegments: radialSegments,\n      tubularSegments: tubularSegments,\n      arc: arc\n    };\n    radius = radius || 1;\n    tube = tube || 0.4;\n    radialSegments = Math.floor(radialSegments) || 8;\n    tubularSegments = Math.floor(tubularSegments) || 6;\n    arc = arc || Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var center = new Vector3();\n    var vertex = new Vector3();\n    var normal = new Vector3();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= radialSegments; j++) {\n      for (i = 0; i <= tubularSegments; i++) {\n        var u = i / tubularSegments * arc;\n        var v = j / radialSegments * Math.PI * 2; // vertex\n\n        vertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n        vertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n        vertex.z = tube * Math.sin(v);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        center.x = radius * Math.cos(u);\n        center.y = radius * Math.sin(u);\n        normal.subVectors(vertex, center).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(i / tubularSegments);\n        uvs.push(j / radialSegments);\n      }\n    } // generate indices\n\n\n    for (j = 1; j <= radialSegments; j++) {\n      for (i = 1; i <= tubularSegments; i++) {\n        // indices\n        var a = (tubularSegments + 1) * j + i - 1;\n        var b = (tubularSegments + 1) * (j - 1) + i - 1;\n        var c = (tubularSegments + 1) * (j - 1) + i;\n        var d = (tubularSegments + 1) * j + i; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  TorusBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  TorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   * Port from https://github.com/mapbox/earcut (v2.1.5)\n   */\n\n  var Earcut = {\n    triangulate: function (data, holeIndices, dim) {\n      dim = dim || 2;\n      var hasHoles = holeIndices && holeIndices.length,\n          outerLen = hasHoles ? holeIndices[0] * dim : data.length,\n          outerNode = linkedList(data, 0, outerLen, dim, true),\n          triangles = [];\n\n      if (!outerNode || outerNode.next === outerNode.prev) {\n        return triangles;\n      }\n\n      var minX, minY, maxX, maxY, x, y, invSize;\n\n      if (hasHoles) {\n        outerNode = eliminateHoles(data, holeIndices, outerNode, dim);\n      } // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\n      if (data.length > 80 * dim) {\n        minX = maxX = data[0];\n        minY = maxY = data[1];\n\n        for (var i = dim; i < outerLen; i += dim) {\n          x = data[i];\n          y = data[i + 1];\n\n          if (x < minX) {\n            minX = x;\n          }\n\n          if (y < minY) {\n            minY = y;\n          }\n\n          if (x > maxX) {\n            maxX = x;\n          }\n\n          if (y > maxY) {\n            maxY = y;\n          }\n        } // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n        invSize = Math.max(maxX - minX, maxY - minY);\n        invSize = invSize !== 0 ? 1 / invSize : 0;\n      }\n\n      earcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n      return triangles;\n    }\n  }; // create a circular doubly linked list from polygon points in the specified winding order\n\n  function linkedList(data, start, end, dim, clockwise) {\n    var i, last;\n\n    if (clockwise === signedArea(data, start, end, dim) > 0) {\n      for (i = start; i < end; i += dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    } else {\n      for (i = end - dim; i >= start; i -= dim) {\n        last = insertNode(i, data[i], data[i + 1], last);\n      }\n    }\n\n    if (last && equals(last, last.next)) {\n      removeNode(last);\n      last = last.next;\n    }\n\n    return last;\n  } // eliminate colinear or duplicate points\n\n\n  function filterPoints(start, end) {\n    if (!start) {\n      return start;\n    }\n\n    if (!end) {\n      end = start;\n    }\n\n    var p = start,\n        again;\n\n    do {\n      again = false;\n\n      if (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n        removeNode(p);\n        p = end = p.prev;\n\n        if (p === p.next) {\n          break;\n        }\n\n        again = true;\n      } else {\n        p = p.next;\n      }\n    } while (again || p !== end);\n\n    return end;\n  } // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n  function earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n    if (!ear) {\n      return;\n    } // interlink polygon nodes in z-order\n\n\n    if (!pass && invSize) {\n      indexCurve(ear, minX, minY, invSize);\n    }\n\n    var stop = ear,\n        prev,\n        next; // iterate through ears, slicing them one by one\n\n    while (ear.prev !== ear.next) {\n      prev = ear.prev;\n      next = ear.next;\n\n      if (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n        // cut off the triangle\n        triangles.push(prev.i / dim);\n        triangles.push(ear.i / dim);\n        triangles.push(next.i / dim);\n        removeNode(ear); // skipping the next vertex leads to less sliver triangles\n\n        ear = next.next;\n        stop = next.next;\n        continue;\n      }\n\n      ear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n      if (ear === stop) {\n        // try filtering points and slicing again\n        if (!pass) {\n          earcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n        } else if (pass === 1) {\n          ear = cureLocalIntersections(ear, triangles, dim);\n          earcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n        } else if (pass === 2) {\n          splitEarcut(ear, triangles, dim, minX, minY, invSize);\n        }\n\n        break;\n      }\n    }\n  } // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n  function isEar(ear) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) {\n      return false;\n    } // reflex, can't be an ear\n    // now make sure we don't have other points inside the potential ear\n\n\n    var p = ear.next.next;\n\n    while (p !== ear.prev) {\n      if (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n        return false;\n      }\n\n      p = p.next;\n    }\n\n    return true;\n  }\n\n  function isEarHashed(ear, minX, minY, invSize) {\n    var a = ear.prev,\n        b = ear,\n        c = ear.next;\n\n    if (area(a, b, c) >= 0) {\n      return false;\n    } // reflex, can't be an ear\n    // triangle bbox; min & max are calculated like this for speed\n\n\n    var minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n        minTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n        maxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n        maxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n    var minZ = zOrder(minTX, minTY, minX, minY, invSize),\n        maxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n    var p = ear.prevZ,\n        n = ear.nextZ; // look for points inside the triangle in both directions\n\n    while (p && p.z >= minZ && n && n.z <= maxZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n        return false;\n      }\n\n      p = p.prevZ;\n\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) {\n        return false;\n      }\n\n      n = n.nextZ;\n    } // look for remaining points in decreasing z-order\n\n\n    while (p && p.z >= minZ) {\n      if (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) {\n        return false;\n      }\n\n      p = p.prevZ;\n    } // look for remaining points in increasing z-order\n\n\n    while (n && n.z <= maxZ) {\n      if (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) {\n        return false;\n      }\n\n      n = n.nextZ;\n    }\n\n    return true;\n  } // go through all polygon nodes and cure small local self-intersections\n\n\n  function cureLocalIntersections(start, triangles, dim) {\n    var p = start;\n\n    do {\n      var a = p.prev,\n          b = p.next.next;\n\n      if (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n        triangles.push(a.i / dim);\n        triangles.push(p.i / dim);\n        triangles.push(b.i / dim); // remove two nodes involved\n\n        removeNode(p);\n        removeNode(p.next);\n        p = start = b;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return p;\n  } // try splitting polygon into two and triangulate them independently\n\n\n  function splitEarcut(start, triangles, dim, minX, minY, invSize) {\n    // look for a valid diagonal that divides the polygon into two\n    var a = start;\n\n    do {\n      var b = a.next.next;\n\n      while (b !== a.prev) {\n        if (a.i !== b.i && isValidDiagonal(a, b)) {\n          // split the polygon in two by the diagonal\n          var c = splitPolygon(a, b); // filter colinear points around the cuts\n\n          a = filterPoints(a, a.next);\n          c = filterPoints(c, c.next); // run earcut on each half\n\n          earcutLinked(a, triangles, dim, minX, minY, invSize);\n          earcutLinked(c, triangles, dim, minX, minY, invSize);\n          return;\n        }\n\n        b = b.next;\n      }\n\n      a = a.next;\n    } while (a !== start);\n  } // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n  function eliminateHoles(data, holeIndices, outerNode, dim) {\n    var queue = [],\n        i,\n        len,\n        start,\n        end,\n        list;\n\n    for (i = 0, len = holeIndices.length; i < len; i++) {\n      start = holeIndices[i] * dim;\n      end = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n      list = linkedList(data, start, end, dim, false);\n\n      if (list === list.next) {\n        list.steiner = true;\n      }\n\n      queue.push(getLeftmost(list));\n    }\n\n    queue.sort(compareX); // process holes from left to right\n\n    for (i = 0; i < queue.length; i++) {\n      eliminateHole(queue[i], outerNode);\n      outerNode = filterPoints(outerNode, outerNode.next);\n    }\n\n    return outerNode;\n  }\n\n  function compareX(a, b) {\n    return a.x - b.x;\n  } // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n  function eliminateHole(hole, outerNode) {\n    outerNode = findHoleBridge(hole, outerNode);\n\n    if (outerNode) {\n      var b = splitPolygon(outerNode, hole);\n      filterPoints(b, b.next);\n    }\n  } // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n  function findHoleBridge(hole, outerNode) {\n    var p = outerNode,\n        hx = hole.x,\n        hy = hole.y,\n        qx = -Infinity,\n        m; // find a segment intersected by a ray from the hole's leftmost point to the left;\n    // segment's endpoint with lesser x will be potential connection point\n\n    do {\n      if (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n        var x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n        if (x <= hx && x > qx) {\n          qx = x;\n\n          if (x === hx) {\n            if (hy === p.y) {\n              return p;\n            }\n\n            if (hy === p.next.y) {\n              return p.next;\n            }\n          }\n\n          m = p.x < p.next.x ? p : p.next;\n        }\n      }\n\n      p = p.next;\n    } while (p !== outerNode);\n\n    if (!m) {\n      return null;\n    }\n\n    if (hx === qx) {\n      return m.prev;\n    } // hole touches outer segment; pick lower endpoint\n    // look for points inside the triangle of hole point, segment intersection and endpoint;\n    // if there are no points found, we have a valid connection;\n    // otherwise choose the point of the minimum angle with the ray as connection point\n\n\n    var stop = m,\n        mx = m.x,\n        my = m.y,\n        tanMin = Infinity,\n        tan;\n    p = m.next;\n\n    while (p !== stop) {\n      if (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n        tan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n        if ((tan < tanMin || tan === tanMin && p.x > m.x) && locallyInside(p, hole)) {\n          m = p;\n          tanMin = tan;\n        }\n      }\n\n      p = p.next;\n    }\n\n    return m;\n  } // interlink polygon nodes in z-order\n\n\n  function indexCurve(start, minX, minY, invSize) {\n    var p = start;\n\n    do {\n      if (p.z === null) {\n        p.z = zOrder(p.x, p.y, minX, minY, invSize);\n      }\n\n      p.prevZ = p.prev;\n      p.nextZ = p.next;\n      p = p.next;\n    } while (p !== start);\n\n    p.prevZ.nextZ = null;\n    p.prevZ = null;\n    sortLinked(p);\n  } // Simon Tatham's linked list merge sort algorithm\n  // http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n  function sortLinked(list) {\n    var i,\n        p,\n        q,\n        e,\n        tail,\n        numMerges,\n        pSize,\n        qSize,\n        inSize = 1;\n\n    do {\n      p = list;\n      list = null;\n      tail = null;\n      numMerges = 0;\n\n      while (p) {\n        numMerges++;\n        q = p;\n        pSize = 0;\n\n        for (i = 0; i < inSize; i++) {\n          pSize++;\n          q = q.nextZ;\n\n          if (!q) {\n            break;\n          }\n        }\n\n        qSize = inSize;\n\n        while (pSize > 0 || qSize > 0 && q) {\n          if (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n            e = p;\n            p = p.nextZ;\n            pSize--;\n          } else {\n            e = q;\n            q = q.nextZ;\n            qSize--;\n          }\n\n          if (tail) {\n            tail.nextZ = e;\n          } else {\n            list = e;\n          }\n\n          e.prevZ = tail;\n          tail = e;\n        }\n\n        p = q;\n      }\n\n      tail.nextZ = null;\n      inSize *= 2;\n    } while (numMerges > 1);\n\n    return list;\n  } // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n  function zOrder(x, y, minX, minY, invSize) {\n    // coords are transformed into non-negative 15-bit integer range\n    x = 32767 * (x - minX) * invSize;\n    y = 32767 * (y - minY) * invSize;\n    x = (x | x << 8) & 0x00FF00FF;\n    x = (x | x << 4) & 0x0F0F0F0F;\n    x = (x | x << 2) & 0x33333333;\n    x = (x | x << 1) & 0x55555555;\n    y = (y | y << 8) & 0x00FF00FF;\n    y = (y | y << 4) & 0x0F0F0F0F;\n    y = (y | y << 2) & 0x33333333;\n    y = (y | y << 1) & 0x55555555;\n    return x | y << 1;\n  } // find the leftmost node of a polygon ring\n\n\n  function getLeftmost(start) {\n    var p = start,\n        leftmost = start;\n\n    do {\n      if (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) {\n        leftmost = p;\n      }\n\n      p = p.next;\n    } while (p !== start);\n\n    return leftmost;\n  } // check if a point lies within a convex triangle\n\n\n  function pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n    return (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n  } // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n  function isValidDiagonal(a, b) {\n    return a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && locallyInside(a, b) && locallyInside(b, a) && middleInside(a, b);\n  } // signed area of a triangle\n\n\n  function area(p, q, r) {\n    return (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n  } // check if two points are equal\n\n\n  function equals(p1, p2) {\n    return p1.x === p2.x && p1.y === p2.y;\n  } // check if two segments intersect\n\n\n  function intersects(p1, q1, p2, q2) {\n    if (equals(p1, p2) && equals(q1, q2) || equals(p1, q2) && equals(p2, q1)) {\n      return true;\n    }\n\n    return area(p1, q1, p2) > 0 !== area(p1, q1, q2) > 0 && area(p2, q2, p1) > 0 !== area(p2, q2, q1) > 0;\n  } // check if a polygon diagonal intersects any polygon segments\n\n\n  function intersectsPolygon(a, b) {\n    var p = a;\n\n    do {\n      if (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) {\n        return true;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return false;\n  } // check if a polygon diagonal is locally inside the polygon\n\n\n  function locallyInside(a, b) {\n    return area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n  } // check if the middle point of a polygon diagonal is inside the polygon\n\n\n  function middleInside(a, b) {\n    var p = a,\n        inside = false,\n        px = (a.x + b.x) / 2,\n        py = (a.y + b.y) / 2;\n\n    do {\n      if (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) {\n        inside = !inside;\n      }\n\n      p = p.next;\n    } while (p !== a);\n\n    return inside;\n  } // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n  // if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n  function splitPolygon(a, b) {\n    var a2 = new Node(a.i, a.x, a.y),\n        b2 = new Node(b.i, b.x, b.y),\n        an = a.next,\n        bp = b.prev;\n    a.next = b;\n    b.prev = a;\n    a2.next = an;\n    an.prev = a2;\n    b2.next = a2;\n    a2.prev = b2;\n    bp.next = b2;\n    b2.prev = bp;\n    return b2;\n  } // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n  function insertNode(i, x, y, last) {\n    var p = new Node(i, x, y);\n\n    if (!last) {\n      p.prev = p;\n      p.next = p;\n    } else {\n      p.next = last.next;\n      p.prev = last;\n      last.next.prev = p;\n      last.next = p;\n    }\n\n    return p;\n  }\n\n  function removeNode(p) {\n    p.next.prev = p.prev;\n    p.prev.next = p.next;\n\n    if (p.prevZ) {\n      p.prevZ.nextZ = p.nextZ;\n    }\n\n    if (p.nextZ) {\n      p.nextZ.prevZ = p.prevZ;\n    }\n  }\n\n  function Node(i, x, y) {\n    // vertex index in coordinates array\n    this.i = i; // vertex coordinates\n\n    this.x = x;\n    this.y = y; // previous and next vertex nodes in a polygon ring\n\n    this.prev = null;\n    this.next = null; // z-order curve value\n\n    this.z = null; // previous and next nodes in z-order\n\n    this.prevZ = null;\n    this.nextZ = null; // indicates whether this is a steiner point\n\n    this.steiner = false;\n  }\n\n  function signedArea(data, start, end, dim) {\n    var sum = 0;\n\n    for (var i = start, j = end - dim; i < end; i += dim) {\n      sum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n      j = i;\n    }\n\n    return sum;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   */\n\n\n  var ShapeUtils = {\n    // calculate area of the contour polygon\n    area: function (contour) {\n      var n = contour.length;\n      var a = 0.0;\n\n      for (var p = n - 1, q = 0; q < n; p = q++) {\n        a += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n      }\n\n      return a * 0.5;\n    },\n    isClockWise: function (pts) {\n      return ShapeUtils.area(pts) < 0;\n    },\n    triangulateShape: function (contour, holes) {\n      var vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n      var holeIndices = []; // array of hole indices\n\n      var faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n      removeDupEndPts(contour);\n      addContour(vertices, contour); //\n\n      var holeIndex = contour.length;\n      holes.forEach(removeDupEndPts);\n\n      for (var i = 0; i < holes.length; i++) {\n        holeIndices.push(holeIndex);\n        holeIndex += holes[i].length;\n        addContour(vertices, holes[i]);\n      } //\n\n\n      var triangles = Earcut.triangulate(vertices, holeIndices); //\n\n      for (var i = 0; i < triangles.length; i += 3) {\n        faces.push(triangles.slice(i, i + 3));\n      }\n\n      return faces;\n    }\n  };\n\n  function removeDupEndPts(points) {\n    var l = points.length;\n\n    if (l > 2 && points[l - 1].equals(points[0])) {\n      points.pop();\n    }\n  }\n\n  function addContour(vertices, contour) {\n    for (var i = 0; i < contour.length; i++) {\n      vertices.push(contour[i].x);\n      vertices.push(contour[i].y);\n    }\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Creates extruded geometry from a path shape.\n   *\n   * parameters = {\n   *\n   *  curveSegments: <int>, // number of points on the curves\n   *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n   *  depth: <float>, // Depth to extrude the shape\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into the original shape bevel goes\n   *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n   *  bevelOffset: <float>, // how far from shape outline does bevel start\n   *  bevelSegments: <int>, // number of bevel layers\n   *\n   *  extrudePath: <THREE.Curve> // curve to extrude shape along\n   *\n   *  UVGenerator: <Object> // object that provides UV generator functions\n   *\n   * }\n   */\n  // ExtrudeGeometry\n\n\n  function ExtrudeGeometry(shapes, options) {\n    Geometry.call(this);\n    this.type = 'ExtrudeGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    this.fromBufferGeometry(new ExtrudeBufferGeometry(shapes, options));\n    this.mergeVertices();\n  }\n\n  ExtrudeGeometry.prototype = Object.create(Geometry.prototype);\n  ExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n  ExtrudeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; // ExtrudeBufferGeometry\n\n\n  function ExtrudeBufferGeometry(shapes, options) {\n    BufferGeometry.call(this);\n    this.type = 'ExtrudeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      options: options\n    };\n    shapes = Array.isArray(shapes) ? shapes : [shapes];\n    var scope = this;\n    var verticesArray = [];\n    var uvArray = [];\n\n    for (var i = 0, l = shapes.length; i < l; i++) {\n      var shape = shapes[i];\n      addShape(shape);\n    } // build geometry\n\n\n    this.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n    this.computeVertexNormals(); // functions\n\n    function addShape(shape) {\n      var placeholder = []; // options\n\n      var curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n      var steps = options.steps !== undefined ? options.steps : 1;\n      var depth = options.depth !== undefined ? options.depth : 100;\n      var bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n      var bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n      var bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n      var bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n      var bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n      var extrudePath = options.extrudePath;\n      var uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n      if (options.amount !== undefined) {\n        console.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n        depth = options.amount;\n      } //\n\n\n      var extrudePts,\n          extrudeByPath = false;\n      var splineTube, binormal, normal, position2;\n\n      if (extrudePath) {\n        extrudePts = extrudePath.getSpacedPoints(steps);\n        extrudeByPath = true;\n        bevelEnabled = false; // bevels not supported for path extrusion\n        // SETUP TNB variables\n        // TODO1 - have a .isClosed in spline?\n\n        splineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n        binormal = new Vector3();\n        normal = new Vector3();\n        position2 = new Vector3();\n      } // Safeguards if bevels are not enabled\n\n\n      if (!bevelEnabled) {\n        bevelSegments = 0;\n        bevelThickness = 0;\n        bevelSize = 0;\n        bevelOffset = 0;\n      } // Variables initialization\n\n\n      var ahole, h, hl; // looping of holes\n\n      var shapePoints = shape.extractPoints(curveSegments);\n      var vertices = shapePoints.shape;\n      var holes = shapePoints.holes;\n      var reverse = !ShapeUtils.isClockWise(vertices);\n\n      if (reverse) {\n        vertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n\n          if (ShapeUtils.isClockWise(ahole)) {\n            holes[h] = ahole.reverse();\n          }\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(vertices, holes);\n      /* Vertices */\n\n      var contour = vertices; // vertices has all points but contour has only points of circumference\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        vertices = vertices.concat(ahole);\n      }\n\n      function scalePt2(pt, vec, size) {\n        if (!vec) {\n          console.error(\"THREE.ExtrudeGeometry: vec does not exist\");\n        }\n\n        return vec.clone().multiplyScalar(size).add(pt);\n      }\n\n      var b,\n          bs,\n          t,\n          z,\n          vert,\n          vlen = vertices.length,\n          face,\n          flen = faces.length; // Find directions for point movement\n\n      function getBevelVec(inPt, inPrev, inNext) {\n        // computes for inPt the corresponding point inPt' on a new contour\n        //   shifted by 1 unit (length of normalized vector) to the left\n        // if we walk along contour clockwise, this new contour is outside the old one\n        //\n        // inPt' is the intersection of the two lines parallel to the two\n        //  adjacent edges of inPt at a distance of 1 unit on the left side.\n        var v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n        // good reading for geometry algorithms (here: line-line intersection)\n        // http://geomalgorithms.com/a05-_intersect-1.html\n\n        var v_prev_x = inPt.x - inPrev.x,\n            v_prev_y = inPt.y - inPrev.y;\n        var v_next_x = inNext.x - inPt.x,\n            v_next_y = inNext.y - inPt.y;\n        var v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n        var collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n        if (Math.abs(collinear0) > Number.EPSILON) {\n          // not collinear\n          // length of vectors for normalizing\n          var v_prev_len = Math.sqrt(v_prev_lensq);\n          var v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n          var ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n          var ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n          var ptNextShift_x = inNext.x - v_next_y / v_next_len;\n          var ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n          var sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n          v_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n          v_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n          //  but prevent crazy spikes\n\n          var v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n          if (v_trans_lensq <= 2) {\n            return new Vector2(v_trans_x, v_trans_y);\n          } else {\n            shrink_by = Math.sqrt(v_trans_lensq / 2);\n          }\n        } else {\n          // handle special case of collinear edges\n          var direction_eq = false; // assumes: opposite\n\n          if (v_prev_x > Number.EPSILON) {\n            if (v_next_x > Number.EPSILON) {\n              direction_eq = true;\n            }\n          } else {\n            if (v_prev_x < -Number.EPSILON) {\n              if (v_next_x < -Number.EPSILON) {\n                direction_eq = true;\n              }\n            } else {\n              if (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n                direction_eq = true;\n              }\n            }\n          }\n\n          if (direction_eq) {\n            // console.log(\"Warning: lines are a straight sequence\");\n            v_trans_x = -v_prev_y;\n            v_trans_y = v_prev_x;\n            shrink_by = Math.sqrt(v_prev_lensq);\n          } else {\n            // console.log(\"Warning: lines are a straight spike\");\n            v_trans_x = v_prev_x;\n            v_trans_y = v_prev_y;\n            shrink_by = Math.sqrt(v_prev_lensq / 2);\n          }\n        }\n\n        return new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n      }\n\n      var contourMovements = [];\n\n      for (var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n        if (j === il) {\n          j = 0;\n        }\n\n        if (k === il) {\n          k = 0;\n        } //  (j)---(i)---(k)\n        // console.log('i,j,k', i, j , k)\n\n\n        contourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n      }\n\n      var holesMovements = [],\n          oneHoleMovements,\n          verticesMovements = contourMovements.concat();\n\n      for (h = 0, hl = holes.length; h < hl; h++) {\n        ahole = holes[h];\n        oneHoleMovements = [];\n\n        for (i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n          if (j === il) {\n            j = 0;\n          }\n\n          if (k === il) {\n            k = 0;\n          } //  (j)---(i)---(k)\n\n\n          oneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n        }\n\n        holesMovements.push(oneHoleMovements);\n        verticesMovements = verticesMovements.concat(oneHoleMovements);\n      } // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n      for (b = 0; b < bevelSegments; b++) {\n        //for ( b = bevelSegments; b > 0; b -- ) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, -z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n            v(vert.x, vert.y, -z);\n          }\n        }\n      }\n\n      bs = bevelSize + bevelOffset; // Back facing vertices\n\n      for (i = 0; i < vlen; i++) {\n        vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n        if (!extrudeByPath) {\n          v(vert.x, vert.y, 0);\n        } else {\n          // v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n          normal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n          binormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n          position2.copy(extrudePts[0]).add(normal).add(binormal);\n          v(position2.x, position2.y, position2.z);\n        }\n      } // Add stepped vertices...\n      // Including front facing vertices\n\n\n      var s;\n\n      for (s = 1; s <= steps; s++) {\n        for (i = 0; i < vlen; i++) {\n          vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n          if (!extrudeByPath) {\n            v(vert.x, vert.y, depth / steps * s);\n          } else {\n            // v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n            normal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n            binormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n            position2.copy(extrudePts[s]).add(normal).add(binormal);\n            v(position2.x, position2.y, position2.z);\n          }\n        }\n      } // Add bevel segments planes\n      //for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n      for (b = bevelSegments - 1; b >= 0; b--) {\n        t = b / bevelSegments;\n        z = bevelThickness * Math.cos(t * Math.PI / 2);\n        bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n        for (i = 0, il = contour.length; i < il; i++) {\n          vert = scalePt2(contour[i], contourMovements[i], bs);\n          v(vert.x, vert.y, depth + z);\n        } // expand holes\n\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          oneHoleMovements = holesMovements[h];\n\n          for (i = 0, il = ahole.length; i < il; i++) {\n            vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n            if (!extrudeByPath) {\n              v(vert.x, vert.y, depth + z);\n            } else {\n              v(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n            }\n          }\n        }\n      }\n      /* Faces */\n      // Top and bottom faces\n\n\n      buildLidFaces(); // Sides faces\n\n      buildSideFaces(); /////  Internal functions\n\n      function buildLidFaces() {\n        var start = verticesArray.length / 3;\n\n        if (bevelEnabled) {\n          var layer = 0; // steps + 1\n\n          var offset = vlen * layer; // Bottom faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2] + offset, face[1] + offset, face[0] + offset);\n          }\n\n          layer = steps + bevelSegments * 2;\n          offset = vlen * layer; // Top faces\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + offset, face[1] + offset, face[2] + offset);\n          }\n        } else {\n          // Bottom faces\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[2], face[1], face[0]);\n          } // Top faces\n\n\n          for (i = 0; i < flen; i++) {\n            face = faces[i];\n            f3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n          }\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 0);\n      } // Create faces for the z-sides of the shape\n\n\n      function buildSideFaces() {\n        var start = verticesArray.length / 3;\n        var layeroffset = 0;\n        sidewalls(contour, layeroffset);\n        layeroffset += contour.length;\n\n        for (h = 0, hl = holes.length; h < hl; h++) {\n          ahole = holes[h];\n          sidewalls(ahole, layeroffset); //, true\n\n          layeroffset += ahole.length;\n        }\n\n        scope.addGroup(start, verticesArray.length / 3 - start, 1);\n      }\n\n      function sidewalls(contour, layeroffset) {\n        var j, k;\n        i = contour.length;\n\n        while (--i >= 0) {\n          j = i;\n          k = i - 1;\n\n          if (k < 0) {\n            k = contour.length - 1;\n          } //console.log('b', i,j, i-1, k,vertices.length);\n\n\n          var s = 0,\n              sl = steps + bevelSegments * 2;\n\n          for (s = 0; s < sl; s++) {\n            var slen1 = vlen * s;\n            var slen2 = vlen * (s + 1);\n            var a = layeroffset + j + slen1,\n                b = layeroffset + k + slen1,\n                c = layeroffset + k + slen2,\n                d = layeroffset + j + slen2;\n            f4(a, b, c, d);\n          }\n        }\n      }\n\n      function v(x, y, z) {\n        placeholder.push(x);\n        placeholder.push(y);\n        placeholder.push(z);\n      }\n\n      function f3(a, b, c) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(c);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n      }\n\n      function f4(a, b, c, d) {\n        addVertex(a);\n        addVertex(b);\n        addVertex(d);\n        addVertex(b);\n        addVertex(c);\n        addVertex(d);\n        var nextIndex = verticesArray.length / 3;\n        var uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n        addUV(uvs[0]);\n        addUV(uvs[1]);\n        addUV(uvs[3]);\n        addUV(uvs[1]);\n        addUV(uvs[2]);\n        addUV(uvs[3]);\n      }\n\n      function addVertex(index) {\n        verticesArray.push(placeholder[index * 3 + 0]);\n        verticesArray.push(placeholder[index * 3 + 1]);\n        verticesArray.push(placeholder[index * 3 + 2]);\n      }\n\n      function addUV(vector2) {\n        uvArray.push(vector2.x);\n        uvArray.push(vector2.y);\n      }\n    }\n  }\n\n  ExtrudeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n  ExtrudeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    var options = this.parameters.options;\n    return toJSON(shapes, options, data);\n  }; //\n\n\n  var WorldUVGenerator = {\n    generateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      return [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n    },\n    generateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n      var a_x = vertices[indexA * 3];\n      var a_y = vertices[indexA * 3 + 1];\n      var a_z = vertices[indexA * 3 + 2];\n      var b_x = vertices[indexB * 3];\n      var b_y = vertices[indexB * 3 + 1];\n      var b_z = vertices[indexB * 3 + 2];\n      var c_x = vertices[indexC * 3];\n      var c_y = vertices[indexC * 3 + 1];\n      var c_z = vertices[indexC * 3 + 2];\n      var d_x = vertices[indexD * 3];\n      var d_y = vertices[indexD * 3 + 1];\n      var d_z = vertices[indexD * 3 + 2];\n\n      if (Math.abs(a_y - b_y) < 0.01) {\n        return [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n      } else {\n        return [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n      }\n    }\n  };\n\n  function toJSON(shapes, options, data) {\n    //\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    } //\n\n\n    if (options.extrudePath !== undefined) {\n      data.options.extrudePath = options.extrudePath.toJSON();\n    }\n\n    return data;\n  }\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * Text = 3D Text\n   *\n   * parameters = {\n   *  font: <THREE.Font>, // font\n   *\n   *  size: <float>, // size of the text\n   *  height: <float>, // thickness to extrude text\n   *  curveSegments: <int>, // number of points on the curves\n   *\n   *  bevelEnabled: <bool>, // turn on bevel\n   *  bevelThickness: <float>, // how deep into text bevel goes\n   *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n   *  bevelOffset: <float> // how far from text outline does bevel start\n   * }\n   */\n  // TextGeometry\n\n\n  function TextGeometry(text, parameters) {\n    Geometry.call(this);\n    this.type = 'TextGeometry';\n    this.parameters = {\n      text: text,\n      parameters: parameters\n    };\n    this.fromBufferGeometry(new TextBufferGeometry(text, parameters));\n    this.mergeVertices();\n  }\n\n  TextGeometry.prototype = Object.create(Geometry.prototype);\n  TextGeometry.prototype.constructor = TextGeometry; // TextBufferGeometry\n\n  function TextBufferGeometry(text, parameters) {\n    parameters = parameters || {};\n    var font = parameters.font;\n\n    if (!(font && font.isFont)) {\n      console.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n      return new Geometry();\n    }\n\n    var shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n    parameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n    if (parameters.bevelThickness === undefined) {\n      parameters.bevelThickness = 10;\n    }\n\n    if (parameters.bevelSize === undefined) {\n      parameters.bevelSize = 8;\n    }\n\n    if (parameters.bevelEnabled === undefined) {\n      parameters.bevelEnabled = false;\n    }\n\n    ExtrudeBufferGeometry.call(this, shapes, parameters);\n    this.type = 'TextBufferGeometry';\n  }\n\n  TextBufferGeometry.prototype = Object.create(ExtrudeBufferGeometry.prototype);\n  TextBufferGeometry.prototype.constructor = TextBufferGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // SphereGeometry\n\n  function SphereGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'SphereGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  SphereGeometry.prototype = Object.create(Geometry.prototype);\n  SphereGeometry.prototype.constructor = SphereGeometry; // SphereBufferGeometry\n\n  function SphereBufferGeometry(radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'SphereBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      widthSegments: widthSegments,\n      heightSegments: heightSegments,\n      phiStart: phiStart,\n      phiLength: phiLength,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    widthSegments = Math.max(3, Math.floor(widthSegments) || 8);\n    heightSegments = Math.max(2, Math.floor(heightSegments) || 6);\n    phiStart = phiStart !== undefined ? phiStart : 0;\n    phiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n    var thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n    var ix, iy;\n    var index = 0;\n    var grid = [];\n    var vertex = new Vector3();\n    var normal = new Vector3(); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // generate vertices, normals and uvs\n\n    for (iy = 0; iy <= heightSegments; iy++) {\n      var verticesRow = [];\n      var v = iy / heightSegments; // special case for the poles\n\n      var uOffset = 0;\n\n      if (iy == 0 && thetaStart == 0) {\n        uOffset = 0.5 / widthSegments;\n      } else if (iy == heightSegments && thetaEnd == Math.PI) {\n        uOffset = -0.5 / widthSegments;\n      }\n\n      for (ix = 0; ix <= widthSegments; ix++) {\n        var u = ix / widthSegments; // vertex\n\n        vertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n        vertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normal.copy(vertex).normalize();\n        normals.push(normal.x, normal.y, normal.z); // uv\n\n        uvs.push(u + uOffset, 1 - v);\n        verticesRow.push(index++);\n      }\n\n      grid.push(verticesRow);\n    } // indices\n\n\n    for (iy = 0; iy < heightSegments; iy++) {\n      for (ix = 0; ix < widthSegments; ix++) {\n        var a = grid[iy][ix + 1];\n        var b = grid[iy][ix];\n        var c = grid[iy + 1][ix];\n        var d = grid[iy + 1][ix + 1];\n\n        if (iy !== 0 || thetaStart > 0) {\n          indices.push(a, b, d);\n        }\n\n        if (iy !== heightSegments - 1 || thetaEnd < Math.PI) {\n          indices.push(b, c, d);\n        }\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  SphereBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  SphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n  /**\n   * @author Kaleb Murphy\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // RingGeometry\n\n  function RingGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'RingGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  RingGeometry.prototype = Object.create(Geometry.prototype);\n  RingGeometry.prototype.constructor = RingGeometry; // RingBufferGeometry\n\n  function RingBufferGeometry(innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'RingBufferGeometry';\n    this.parameters = {\n      innerRadius: innerRadius,\n      outerRadius: outerRadius,\n      thetaSegments: thetaSegments,\n      phiSegments: phiSegments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    innerRadius = innerRadius || 0.5;\n    outerRadius = outerRadius || 1;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n    thetaSegments = thetaSegments !== undefined ? Math.max(3, thetaSegments) : 8;\n    phiSegments = phiSegments !== undefined ? Math.max(1, phiSegments) : 1; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // some helper variables\n\n    var segment;\n    var radius = innerRadius;\n    var radiusStep = (outerRadius - innerRadius) / phiSegments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var j, i; // generate vertices, normals and uvs\n\n    for (j = 0; j <= phiSegments; j++) {\n      for (i = 0; i <= thetaSegments; i++) {\n        // values are generate from the inside of the ring to the outside\n        segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n        vertex.x = radius * Math.cos(segment);\n        vertex.y = radius * Math.sin(segment);\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, 0, 1); // uv\n\n        uv.x = (vertex.x / outerRadius + 1) / 2;\n        uv.y = (vertex.y / outerRadius + 1) / 2;\n        uvs.push(uv.x, uv.y);\n      } // increase the radius for next row of vertices\n\n\n      radius += radiusStep;\n    } // indices\n\n\n    for (j = 0; j < phiSegments; j++) {\n      var thetaSegmentLevel = j * (thetaSegments + 1);\n\n      for (i = 0; i < thetaSegments; i++) {\n        segment = i + thetaSegmentLevel;\n        var a = segment;\n        var b = segment + thetaSegments + 1;\n        var c = segment + thetaSegments + 2;\n        var d = segment + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  RingBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  RingBufferGeometry.prototype.constructor = RingBufferGeometry;\n  /**\n   * @author zz85 / https://github.com/zz85\n   * @author bhouston / http://clara.io\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // LatheGeometry\n\n  function LatheGeometry(points, segments, phiStart, phiLength) {\n    Geometry.call(this);\n    this.type = 'LatheGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    this.fromBufferGeometry(new LatheBufferGeometry(points, segments, phiStart, phiLength));\n    this.mergeVertices();\n  }\n\n  LatheGeometry.prototype = Object.create(Geometry.prototype);\n  LatheGeometry.prototype.constructor = LatheGeometry; // LatheBufferGeometry\n\n  function LatheBufferGeometry(points, segments, phiStart, phiLength) {\n    BufferGeometry.call(this);\n    this.type = 'LatheBufferGeometry';\n    this.parameters = {\n      points: points,\n      segments: segments,\n      phiStart: phiStart,\n      phiLength: phiLength\n    };\n    segments = Math.floor(segments) || 12;\n    phiStart = phiStart || 0;\n    phiLength = phiLength || Math.PI * 2; // clamp phiLength so it's in range of [ 0, 2PI ]\n\n    phiLength = _Math.clamp(phiLength, 0, Math.PI * 2); // buffers\n\n    var indices = [];\n    var vertices = [];\n    var uvs = []; // helper variables\n\n    var base;\n    var inverseSegments = 1.0 / segments;\n    var vertex = new Vector3();\n    var uv = new Vector2();\n    var i, j; // generate vertices and uvs\n\n    for (i = 0; i <= segments; i++) {\n      var phi = phiStart + i * inverseSegments * phiLength;\n      var sin = Math.sin(phi);\n      var cos = Math.cos(phi);\n\n      for (j = 0; j <= points.length - 1; j++) {\n        // vertex\n        vertex.x = points[j].x * sin;\n        vertex.y = points[j].y;\n        vertex.z = points[j].x * cos;\n        vertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n        uv.x = i / segments;\n        uv.y = j / (points.length - 1);\n        uvs.push(uv.x, uv.y);\n      }\n    } // indices\n\n\n    for (i = 0; i < segments; i++) {\n      for (j = 0; j < points.length - 1; j++) {\n        base = j + i * points.length;\n        var a = base;\n        var b = base + points.length;\n        var c = base + points.length + 1;\n        var d = base + 1; // faces\n\n        indices.push(a, b, d);\n        indices.push(b, c, d);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n    this.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n    // because the corresponding vertices are identical (but still have different UVs).\n\n    if (phiLength === Math.PI * 2) {\n      var normals = this.attributes.normal.array;\n      var n1 = new Vector3();\n      var n2 = new Vector3();\n      var n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n      base = segments * points.length * 3;\n\n      for (i = 0, j = 0; i < points.length; i++, j += 3) {\n        // select the normal of the vertex in the first line\n        n1.x = normals[j + 0];\n        n1.y = normals[j + 1];\n        n1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n        n2.x = normals[base + j + 0];\n        n2.y = normals[base + j + 1];\n        n2.z = normals[base + j + 2]; // average normals\n\n        n.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n        normals[j + 0] = normals[base + j + 0] = n.x;\n        normals[j + 1] = normals[base + j + 1] = n.y;\n        normals[j + 2] = normals[base + j + 2] = n.z;\n      }\n    }\n  }\n\n  LatheBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  LatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n  /**\n   * @author jonobr1 / http://jonobr1.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // ShapeGeometry\n\n  function ShapeGeometry(shapes, curveSegments) {\n    Geometry.call(this);\n    this.type = 'ShapeGeometry';\n\n    if (typeof curveSegments === 'object') {\n      console.warn('THREE.ShapeGeometry: Options parameter has been removed.');\n      curveSegments = curveSegments.curveSegments;\n    }\n\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    this.fromBufferGeometry(new ShapeBufferGeometry(shapes, curveSegments));\n    this.mergeVertices();\n  }\n\n  ShapeGeometry.prototype = Object.create(Geometry.prototype);\n  ShapeGeometry.prototype.constructor = ShapeGeometry;\n\n  ShapeGeometry.prototype.toJSON = function () {\n    var data = Geometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; // ShapeBufferGeometry\n\n\n  function ShapeBufferGeometry(shapes, curveSegments) {\n    BufferGeometry.call(this);\n    this.type = 'ShapeBufferGeometry';\n    this.parameters = {\n      shapes: shapes,\n      curveSegments: curveSegments\n    };\n    curveSegments = curveSegments || 12; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var groupStart = 0;\n    var groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n    if (Array.isArray(shapes) === false) {\n      addShape(shapes);\n    } else {\n      for (var i = 0; i < shapes.length; i++) {\n        addShape(shapes[i]);\n        this.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n        groupStart += groupCount;\n        groupCount = 0;\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n    function addShape(shape) {\n      var i, l, shapeHole;\n      var indexOffset = vertices.length / 3;\n      var points = shape.extractPoints(curveSegments);\n      var shapeVertices = points.shape;\n      var shapeHoles = points.holes; // check direction of vertices\n\n      if (ShapeUtils.isClockWise(shapeVertices) === false) {\n        shapeVertices = shapeVertices.reverse();\n      }\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n\n        if (ShapeUtils.isClockWise(shapeHole) === true) {\n          shapeHoles[i] = shapeHole.reverse();\n        }\n      }\n\n      var faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n      for (i = 0, l = shapeHoles.length; i < l; i++) {\n        shapeHole = shapeHoles[i];\n        shapeVertices = shapeVertices.concat(shapeHole);\n      } // vertices, normals, uvs\n\n\n      for (i = 0, l = shapeVertices.length; i < l; i++) {\n        var vertex = shapeVertices[i];\n        vertices.push(vertex.x, vertex.y, 0);\n        normals.push(0, 0, 1);\n        uvs.push(vertex.x, vertex.y); // world uvs\n      } // incides\n\n\n      for (i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n        var a = face[0] + indexOffset;\n        var b = face[1] + indexOffset;\n        var c = face[2] + indexOffset;\n        indices.push(a, b, c);\n        groupCount += 3;\n      }\n    }\n  }\n\n  ShapeBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  ShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n  ShapeBufferGeometry.prototype.toJSON = function () {\n    var data = BufferGeometry.prototype.toJSON.call(this);\n    var shapes = this.parameters.shapes;\n    return toJSON$1(shapes, data);\n  }; //\n\n\n  function toJSON$1(shapes, data) {\n    data.shapes = [];\n\n    if (Array.isArray(shapes)) {\n      for (var i = 0, l = shapes.length; i < l; i++) {\n        var shape = shapes[i];\n        data.shapes.push(shape.uuid);\n      }\n    } else {\n      data.shapes.push(shapes.uuid);\n    }\n\n    return data;\n  }\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  function EdgesGeometry(geometry, thresholdAngle) {\n    BufferGeometry.call(this);\n    this.type = 'EdgesGeometry';\n    this.parameters = {\n      thresholdAngle: thresholdAngle\n    };\n    thresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1; // buffer\n\n    var vertices = []; // helper variables\n\n    var thresholdDot = Math.cos(_Math.DEG2RAD * thresholdAngle);\n    var edge = [0, 0],\n        edges = {},\n        edge1,\n        edge2;\n    var key,\n        keys = ['a', 'b', 'c']; // prepare source geometry\n\n    var geometry2;\n\n    if (geometry.isBufferGeometry) {\n      geometry2 = new Geometry();\n      geometry2.fromBufferGeometry(geometry);\n    } else {\n      geometry2 = geometry.clone();\n    }\n\n    geometry2.mergeVertices();\n    geometry2.computeFaceNormals();\n    var sourceVertices = geometry2.vertices;\n    var faces = geometry2.faces; // now create a data structure where each entry represents an edge with its adjoining faces\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n\n      for (var j = 0; j < 3; j++) {\n        edge1 = face[keys[j]];\n        edge2 = face[keys[(j + 1) % 3]];\n        edge[0] = Math.min(edge1, edge2);\n        edge[1] = Math.max(edge1, edge2);\n        key = edge[0] + ',' + edge[1];\n\n        if (edges[key] === undefined) {\n          edges[key] = {\n            index1: edge[0],\n            index2: edge[1],\n            face1: i,\n            face2: undefined\n          };\n        } else {\n          edges[key].face2 = i;\n        }\n      }\n    } // generate vertices\n\n\n    for (key in edges) {\n      var e = edges[key]; // an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n      if (e.face2 === undefined || faces[e.face1].normal.dot(faces[e.face2].normal) <= thresholdDot) {\n        var vertex = sourceVertices[e.index1];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n        vertex = sourceVertices[e.index2];\n        vertices.push(vertex.x, vertex.y, vertex.z);\n      }\n    } // build geometry\n\n\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n  }\n\n  EdgesGeometry.prototype = Object.create(BufferGeometry.prototype);\n  EdgesGeometry.prototype.constructor = EdgesGeometry;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n  // CylinderGeometry\n\n  function CylinderGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CylinderGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CylinderGeometry.prototype = Object.create(Geometry.prototype);\n  CylinderGeometry.prototype.constructor = CylinderGeometry; // CylinderBufferGeometry\n\n  function CylinderBufferGeometry(radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CylinderBufferGeometry';\n    this.parameters = {\n      radiusTop: radiusTop,\n      radiusBottom: radiusBottom,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    var scope = this;\n    radiusTop = radiusTop !== undefined ? radiusTop : 1;\n    radiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n    height = height || 1;\n    radialSegments = Math.floor(radialSegments) || 8;\n    heightSegments = Math.floor(heightSegments) || 1;\n    openEnded = openEnded !== undefined ? openEnded : false;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var index = 0;\n    var indexArray = [];\n    var halfHeight = height / 2;\n    var groupStart = 0; // generate geometry\n\n    generateTorso();\n\n    if (openEnded === false) {\n      if (radiusTop > 0) {\n        generateCap(true);\n      }\n\n      if (radiusBottom > 0) {\n        generateCap(false);\n      }\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n    function generateTorso() {\n      var x, y;\n      var normal = new Vector3();\n      var vertex = new Vector3();\n      var groupCount = 0; // this will be used to calculate the normal\n\n      var slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n      for (y = 0; y <= heightSegments; y++) {\n        var indexRow = [];\n        var v = y / heightSegments; // calculate the radius of the current row\n\n        var radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n        for (x = 0; x <= radialSegments; x++) {\n          var u = x / radialSegments;\n          var theta = u * thetaLength + thetaStart;\n          var sinTheta = Math.sin(theta);\n          var cosTheta = Math.cos(theta); // vertex\n\n          vertex.x = radius * sinTheta;\n          vertex.y = -v * height + halfHeight;\n          vertex.z = radius * cosTheta;\n          vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n          normal.set(sinTheta, slope, cosTheta).normalize();\n          normals.push(normal.x, normal.y, normal.z); // uv\n\n          uvs.push(u, 1 - v); // save index of vertex in respective row\n\n          indexRow.push(index++);\n        } // now save vertices of the row in our index array\n\n\n        indexArray.push(indexRow);\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        for (y = 0; y < heightSegments; y++) {\n          // we use the index array to access the correct indices\n          var a = indexArray[y][x];\n          var b = indexArray[y + 1][x];\n          var c = indexArray[y + 1][x + 1];\n          var d = indexArray[y][x + 1]; // faces\n\n          indices.push(a, b, d);\n          indices.push(b, c, d); // update group counter\n\n          groupCount += 6;\n        }\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n\n    function generateCap(top) {\n      var x, centerIndexStart, centerIndexEnd;\n      var uv = new Vector2();\n      var vertex = new Vector3();\n      var groupCount = 0;\n      var radius = top === true ? radiusTop : radiusBottom;\n      var sign = top === true ? 1 : -1; // save the index of the first center vertex\n\n      centerIndexStart = index; // first we generate the center vertex data of the cap.\n      // because the geometry needs one set of uvs per face,\n      // we must generate a center vertex per face/segment\n\n      for (x = 1; x <= radialSegments; x++) {\n        // vertex\n        vertices.push(0, halfHeight * sign, 0); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uvs.push(0.5, 0.5); // increase index\n\n        index++;\n      } // save the index of the last center vertex\n\n\n      centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n      for (x = 0; x <= radialSegments; x++) {\n        var u = x / radialSegments;\n        var theta = u * thetaLength + thetaStart;\n        var cosTheta = Math.cos(theta);\n        var sinTheta = Math.sin(theta); // vertex\n\n        vertex.x = radius * sinTheta;\n        vertex.y = halfHeight * sign;\n        vertex.z = radius * cosTheta;\n        vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n        normals.push(0, sign, 0); // uv\n\n        uv.x = cosTheta * 0.5 + 0.5;\n        uv.y = sinTheta * 0.5 * sign + 0.5;\n        uvs.push(uv.x, uv.y); // increase index\n\n        index++;\n      } // generate indices\n\n\n      for (x = 0; x < radialSegments; x++) {\n        var c = centerIndexStart + x;\n        var i = centerIndexEnd + x;\n\n        if (top === true) {\n          // face top\n          indices.push(i, i + 1, c);\n        } else {\n          // face bottom\n          indices.push(i + 1, i, c);\n        }\n\n        groupCount += 3;\n      } // add a group to the geometry. this will ensure multi material support\n\n\n      scope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n      groupStart += groupCount;\n    }\n  }\n\n  CylinderBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n  // ConeGeometry\n\n  function ConeGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeGeometry.prototype = Object.create(CylinderGeometry.prototype);\n  ConeGeometry.prototype.constructor = ConeGeometry; // ConeBufferGeometry\n\n  function ConeBufferGeometry(radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength) {\n    CylinderBufferGeometry.call(this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n    this.type = 'ConeBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      height: height,\n      radialSegments: radialSegments,\n      heightSegments: heightSegments,\n      openEnded: openEnded,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n  }\n\n  ConeBufferGeometry.prototype = Object.create(CylinderBufferGeometry.prototype);\n  ConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   * @author Mugen87 / https://github.com/Mugen87\n   * @author hughes\n   */\n  // CircleGeometry\n\n  function CircleGeometry(radius, segments, thetaStart, thetaLength) {\n    Geometry.call(this);\n    this.type = 'CircleGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    this.fromBufferGeometry(new CircleBufferGeometry(radius, segments, thetaStart, thetaLength));\n    this.mergeVertices();\n  }\n\n  CircleGeometry.prototype = Object.create(Geometry.prototype);\n  CircleGeometry.prototype.constructor = CircleGeometry; // CircleBufferGeometry\n\n  function CircleBufferGeometry(radius, segments, thetaStart, thetaLength) {\n    BufferGeometry.call(this);\n    this.type = 'CircleBufferGeometry';\n    this.parameters = {\n      radius: radius,\n      segments: segments,\n      thetaStart: thetaStart,\n      thetaLength: thetaLength\n    };\n    radius = radius || 1;\n    segments = segments !== undefined ? Math.max(3, segments) : 8;\n    thetaStart = thetaStart !== undefined ? thetaStart : 0;\n    thetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2; // buffers\n\n    var indices = [];\n    var vertices = [];\n    var normals = [];\n    var uvs = []; // helper variables\n\n    var i, s;\n    var vertex = new Vector3();\n    var uv = new Vector2(); // center point\n\n    vertices.push(0, 0, 0);\n    normals.push(0, 0, 1);\n    uvs.push(0.5, 0.5);\n\n    for (s = 0, i = 3; s <= segments; s++, i += 3) {\n      var segment = thetaStart + s / segments * thetaLength; // vertex\n\n      vertex.x = radius * Math.cos(segment);\n      vertex.y = radius * Math.sin(segment);\n      vertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n      normals.push(0, 0, 1); // uvs\n\n      uv.x = (vertices[i] / radius + 1) / 2;\n      uv.y = (vertices[i + 1] / radius + 1) / 2;\n      uvs.push(uv.x, uv.y);\n    } // indices\n\n\n    for (i = 1; i <= segments; i++) {\n      indices.push(i, i + 1, 0);\n    } // build geometry\n\n\n    this.setIndex(indices);\n    this.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    this.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n    this.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n  }\n\n  CircleBufferGeometry.prototype = Object.create(BufferGeometry.prototype);\n  CircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n  var Geometries =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null,\n    WireframeGeometry: WireframeGeometry,\n    ParametricGeometry: ParametricGeometry,\n    ParametricBufferGeometry: ParametricBufferGeometry,\n    TetrahedronGeometry: TetrahedronGeometry,\n    TetrahedronBufferGeometry: TetrahedronBufferGeometry,\n    OctahedronGeometry: OctahedronGeometry,\n    OctahedronBufferGeometry: OctahedronBufferGeometry,\n    IcosahedronGeometry: IcosahedronGeometry,\n    IcosahedronBufferGeometry: IcosahedronBufferGeometry,\n    DodecahedronGeometry: DodecahedronGeometry,\n    DodecahedronBufferGeometry: DodecahedronBufferGeometry,\n    PolyhedronGeometry: PolyhedronGeometry,\n    PolyhedronBufferGeometry: PolyhedronBufferGeometry,\n    TubeGeometry: TubeGeometry,\n    TubeBufferGeometry: TubeBufferGeometry,\n    TorusKnotGeometry: TorusKnotGeometry,\n    TorusKnotBufferGeometry: TorusKnotBufferGeometry,\n    TorusGeometry: TorusGeometry,\n    TorusBufferGeometry: TorusBufferGeometry,\n    TextGeometry: TextGeometry,\n    TextBufferGeometry: TextBufferGeometry,\n    SphereGeometry: SphereGeometry,\n    SphereBufferGeometry: SphereBufferGeometry,\n    RingGeometry: RingGeometry,\n    RingBufferGeometry: RingBufferGeometry,\n    PlaneGeometry: PlaneGeometry,\n    PlaneBufferGeometry: PlaneBufferGeometry,\n    LatheGeometry: LatheGeometry,\n    LatheBufferGeometry: LatheBufferGeometry,\n    ShapeGeometry: ShapeGeometry,\n    ShapeBufferGeometry: ShapeBufferGeometry,\n    ExtrudeGeometry: ExtrudeGeometry,\n    ExtrudeBufferGeometry: ExtrudeBufferGeometry,\n    EdgesGeometry: EdgesGeometry,\n    ConeGeometry: ConeGeometry,\n    ConeBufferGeometry: ConeBufferGeometry,\n    CylinderGeometry: CylinderGeometry,\n    CylinderBufferGeometry: CylinderBufferGeometry,\n    CircleGeometry: CircleGeometry,\n    CircleBufferGeometry: CircleBufferGeometry,\n    BoxGeometry: BoxGeometry,\n    BoxBufferGeometry: BoxBufferGeometry\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * parameters = {\n   *  color: <THREE.Color>\n   * }\n   */\n\n  function ShadowMaterial(parameters) {\n    Material.call(this);\n    this.type = 'ShadowMaterial';\n    this.color = new Color(0x000000);\n    this.transparent = true;\n    this.setValues(parameters);\n  }\n\n  ShadowMaterial.prototype = Object.create(Material.prototype);\n  ShadowMaterial.prototype.constructor = ShadowMaterial;\n  ShadowMaterial.prototype.isShadowMaterial = true;\n\n  ShadowMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function RawShaderMaterial(parameters) {\n    ShaderMaterial.call(this, parameters);\n    this.type = 'RawShaderMaterial';\n  }\n\n  RawShaderMaterial.prototype = Object.create(ShaderMaterial.prototype);\n  RawShaderMaterial.prototype.constructor = RawShaderMaterial;\n  RawShaderMaterial.prototype.isRawShaderMaterial = true;\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  roughness: <float>,\n   *  metalness: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  roughnessMap: new THREE.Texture( <Image> ),\n   *\n   *  metalnessMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  envMapIntensity: <float>\n   *\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n  function MeshStandardMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.type = 'MeshStandardMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.roughness = 0.5;\n    this.metalness = 0.5;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.roughnessMap = null;\n    this.metalnessMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.envMapIntensity = 1.0;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshStandardMaterial.prototype = Object.create(Material.prototype);\n  MeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n  MeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n  MeshStandardMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': ''\n    };\n    this.color.copy(source.color);\n    this.roughness = source.roughness;\n    this.metalness = source.metalness;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.roughnessMap = source.roughnessMap;\n    this.metalnessMap = source.metalnessMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.envMapIntensity = source.envMapIntensity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  reflectivity: <float>\n   *  clearcoat: <float>\n   *  clearcoatRoughness: <float>\n   *\n   *  sheen: <Color>\n   *\n   *  clearcoatNormalScale: <Vector2>,\n   *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n   * }\n   */\n\n\n  function MeshPhysicalMaterial(parameters) {\n    MeshStandardMaterial.call(this);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.type = 'MeshPhysicalMaterial';\n    this.reflectivity = 0.5; // maps to F0 = 0.04\n\n    this.clearcoat = 0.0;\n    this.clearcoatRoughness = 0.0;\n    this.sheen = null; // null will disable sheen bsdf\n\n    this.clearcoatNormalScale = new Vector2(1, 1);\n    this.clearcoatNormalMap = null;\n    this.transparency = 0.0;\n    this.setValues(parameters);\n  }\n\n  MeshPhysicalMaterial.prototype = Object.create(MeshStandardMaterial.prototype);\n  MeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n  MeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n  MeshPhysicalMaterial.prototype.copy = function (source) {\n    MeshStandardMaterial.prototype.copy.call(this, source);\n    this.defines = {\n      'STANDARD': '',\n      'PHYSICAL': ''\n    };\n    this.reflectivity = source.reflectivity;\n    this.clearcoat = source.clearcoat;\n    this.clearcoatRoughness = source.clearcoatRoughness;\n\n    if (source.sheen) {\n      this.sheen = (this.sheen || new Color()).copy(source.sheen);\n    } else {\n      this.sheen = null;\n    }\n\n    this.clearcoatNormalMap = source.clearcoatNormalMap;\n    this.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n    this.transparency = source.transparency;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  specular: <hex>,\n   *  shininess: <float>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.MultiplyOperation,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshPhongMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshPhongMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.specular = new Color(0x111111);\n    this.shininess = 30;\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshPhongMaterial.prototype = Object.create(Material.prototype);\n  MeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n  MeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n  MeshPhongMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.specular.copy(source.specular);\n    this.shininess = source.shininess;\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author takahirox / http://github.com/takahirox\n   *\n   * parameters = {\n   *  gradientMap: new THREE.Texture( <Image> )\n   * }\n   */\n\n\n  function MeshToonMaterial(parameters) {\n    MeshPhongMaterial.call(this);\n    this.defines = {\n      'TOON': ''\n    };\n    this.type = 'MeshToonMaterial';\n    this.gradientMap = null;\n    this.setValues(parameters);\n  }\n\n  MeshToonMaterial.prototype = Object.create(MeshPhongMaterial.prototype);\n  MeshToonMaterial.prototype.constructor = MeshToonMaterial;\n  MeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n  MeshToonMaterial.prototype.copy = function (source) {\n    MeshPhongMaterial.prototype.copy.call(this, source);\n    this.gradientMap = source.gradientMap;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  opacity: <float>,\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshNormalMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshNormalMaterial';\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.fog = false;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshNormalMaterial.prototype = Object.create(Material.prototype);\n  MeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n  MeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n  MeshNormalMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  lightMap: new THREE.Texture( <Image> ),\n   *  lightMapIntensity: <float>\n   *\n   *  aoMap: new THREE.Texture( <Image> ),\n   *  aoMapIntensity: <float>\n   *\n   *  emissive: <hex>,\n   *  emissiveIntensity: <float>\n   *  emissiveMap: new THREE.Texture( <Image> ),\n   *\n   *  specularMap: new THREE.Texture( <Image> ),\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n   *  combine: THREE.Multiply,\n   *  reflectivity: <float>,\n   *  refractionRatio: <float>,\n   *\n   *  wireframe: <boolean>,\n   *  wireframeLinewidth: <float>,\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshLambertMaterial(parameters) {\n    Material.call(this);\n    this.type = 'MeshLambertMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.map = null;\n    this.lightMap = null;\n    this.lightMapIntensity = 1.0;\n    this.aoMap = null;\n    this.aoMapIntensity = 1.0;\n    this.emissive = new Color(0x000000);\n    this.emissiveIntensity = 1.0;\n    this.emissiveMap = null;\n    this.specularMap = null;\n    this.alphaMap = null;\n    this.envMap = null;\n    this.combine = MultiplyOperation;\n    this.reflectivity = 1;\n    this.refractionRatio = 0.98;\n    this.wireframe = false;\n    this.wireframeLinewidth = 1;\n    this.wireframeLinecap = 'round';\n    this.wireframeLinejoin = 'round';\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshLambertMaterial.prototype = Object.create(Material.prototype);\n  MeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n  MeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n  MeshLambertMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.color.copy(source.color);\n    this.map = source.map;\n    this.lightMap = source.lightMap;\n    this.lightMapIntensity = source.lightMapIntensity;\n    this.aoMap = source.aoMap;\n    this.aoMapIntensity = source.aoMapIntensity;\n    this.emissive.copy(source.emissive);\n    this.emissiveMap = source.emissiveMap;\n    this.emissiveIntensity = source.emissiveIntensity;\n    this.specularMap = source.specularMap;\n    this.alphaMap = source.alphaMap;\n    this.envMap = source.envMap;\n    this.combine = source.combine;\n    this.reflectivity = source.reflectivity;\n    this.refractionRatio = source.refractionRatio;\n    this.wireframe = source.wireframe;\n    this.wireframeLinewidth = source.wireframeLinewidth;\n    this.wireframeLinecap = source.wireframeLinecap;\n    this.wireframeLinejoin = source.wireframeLinejoin;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  matcap: new THREE.Texture( <Image> ),\n   *\n   *  map: new THREE.Texture( <Image> ),\n   *\n   *  bumpMap: new THREE.Texture( <Image> ),\n   *  bumpScale: <float>,\n   *\n   *  normalMap: new THREE.Texture( <Image> ),\n   *  normalMapType: THREE.TangentSpaceNormalMap,\n   *  normalScale: <Vector2>,\n   *\n   *  displacementMap: new THREE.Texture( <Image> ),\n   *  displacementScale: <float>,\n   *  displacementBias: <float>,\n   *\n   *  alphaMap: new THREE.Texture( <Image> ),\n   *\n   *  skinning: <bool>,\n   *  morphTargets: <bool>,\n   *  morphNormals: <bool>\n   * }\n   */\n\n\n  function MeshMatcapMaterial(parameters) {\n    Material.call(this);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.type = 'MeshMatcapMaterial';\n    this.color = new Color(0xffffff); // diffuse\n\n    this.matcap = null;\n    this.map = null;\n    this.bumpMap = null;\n    this.bumpScale = 1;\n    this.normalMap = null;\n    this.normalMapType = TangentSpaceNormalMap;\n    this.normalScale = new Vector2(1, 1);\n    this.displacementMap = null;\n    this.displacementScale = 1;\n    this.displacementBias = 0;\n    this.alphaMap = null;\n    this.skinning = false;\n    this.morphTargets = false;\n    this.morphNormals = false;\n    this.setValues(parameters);\n  }\n\n  MeshMatcapMaterial.prototype = Object.create(Material.prototype);\n  MeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n  MeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n  MeshMatcapMaterial.prototype.copy = function (source) {\n    Material.prototype.copy.call(this, source);\n    this.defines = {\n      'MATCAP': ''\n    };\n    this.color.copy(source.color);\n    this.matcap = source.matcap;\n    this.map = source.map;\n    this.bumpMap = source.bumpMap;\n    this.bumpScale = source.bumpScale;\n    this.normalMap = source.normalMap;\n    this.normalMapType = source.normalMapType;\n    this.normalScale.copy(source.normalScale);\n    this.displacementMap = source.displacementMap;\n    this.displacementScale = source.displacementScale;\n    this.displacementBias = source.displacementBias;\n    this.alphaMap = source.alphaMap;\n    this.skinning = source.skinning;\n    this.morphTargets = source.morphTargets;\n    this.morphNormals = source.morphNormals;\n    return this;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   *\n   * parameters = {\n   *  color: <hex>,\n   *  opacity: <float>,\n   *\n   *  linewidth: <float>,\n   *\n   *  scale: <float>,\n   *  dashSize: <float>,\n   *  gapSize: <float>\n   * }\n   */\n\n\n  function LineDashedMaterial(parameters) {\n    LineBasicMaterial.call(this);\n    this.type = 'LineDashedMaterial';\n    this.scale = 1;\n    this.dashSize = 3;\n    this.gapSize = 1;\n    this.setValues(parameters);\n  }\n\n  LineDashedMaterial.prototype = Object.create(LineBasicMaterial.prototype);\n  LineDashedMaterial.prototype.constructor = LineDashedMaterial;\n  LineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n  LineDashedMaterial.prototype.copy = function (source) {\n    LineBasicMaterial.prototype.copy.call(this, source);\n    this.scale = source.scale;\n    this.dashSize = source.dashSize;\n    this.gapSize = source.gapSize;\n    return this;\n  };\n\n  var Materials =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null,\n    ShadowMaterial: ShadowMaterial,\n    SpriteMaterial: SpriteMaterial,\n    RawShaderMaterial: RawShaderMaterial,\n    ShaderMaterial: ShaderMaterial,\n    PointsMaterial: PointsMaterial,\n    MeshPhysicalMaterial: MeshPhysicalMaterial,\n    MeshStandardMaterial: MeshStandardMaterial,\n    MeshPhongMaterial: MeshPhongMaterial,\n    MeshToonMaterial: MeshToonMaterial,\n    MeshNormalMaterial: MeshNormalMaterial,\n    MeshLambertMaterial: MeshLambertMaterial,\n    MeshDepthMaterial: MeshDepthMaterial,\n    MeshDistanceMaterial: MeshDistanceMaterial,\n    MeshBasicMaterial: MeshBasicMaterial,\n    MeshMatcapMaterial: MeshMatcapMaterial,\n    LineDashedMaterial: LineDashedMaterial,\n    LineBasicMaterial: LineBasicMaterial,\n    Material: Material\n  });\n  /**\n   * @author tschw\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  var AnimationUtils = {\n    // same as Array.prototype.slice, but also works on typed arrays\n    arraySlice: function (array, from, to) {\n      if (AnimationUtils.isTypedArray(array)) {\n        // in ios9 array.subarray(from, undefined) will return empty array\n        // but array.subarray(from) or array.subarray(from, len) is correct\n        return new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n      }\n\n      return array.slice(from, to);\n    },\n    // converts an array to a specific type\n    convertArray: function (array, type, forceClone) {\n      if (!array || // let 'undefined' and 'null' pass\n      !forceClone && array.constructor === type) {\n        return array;\n      }\n\n      if (typeof type.BYTES_PER_ELEMENT === 'number') {\n        return new type(array); // create typed array\n      }\n\n      return Array.prototype.slice.call(array); // create Array\n    },\n    isTypedArray: function (object) {\n      return ArrayBuffer.isView(object) && !(object instanceof DataView);\n    },\n    // returns an array by which times and values can be sorted\n    getKeyframeOrder: function (times) {\n      function compareTime(i, j) {\n        return times[i] - times[j];\n      }\n\n      var n = times.length;\n      var result = new Array(n);\n\n      for (var i = 0; i !== n; ++i) {\n        result[i] = i;\n      }\n\n      result.sort(compareTime);\n      return result;\n    },\n    // uses the array previously returned by 'getKeyframeOrder' to sort data\n    sortedArray: function (values, stride, order) {\n      var nValues = values.length;\n      var result = new values.constructor(nValues);\n\n      for (var i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n        var srcOffset = order[i] * stride;\n\n        for (var j = 0; j !== stride; ++j) {\n          result[dstOffset++] = values[srcOffset + j];\n        }\n      }\n\n      return result;\n    },\n    // function for parsing AOS keyframe formats\n    flattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n      var i = 1,\n          key = jsonKeys[0];\n\n      while (key !== undefined && key[valuePropertyName] === undefined) {\n        key = jsonKeys[i++];\n      }\n\n      if (key === undefined) {\n        return;\n      } // no data\n\n\n      var value = key[valuePropertyName];\n\n      if (value === undefined) {\n        return;\n      } // no data\n\n\n      if (Array.isArray(value)) {\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push.apply(values, value); // push all elements\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else if (value.toArray !== undefined) {\n        // ...assume THREE.Math-ish\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            value.toArray(values, values.length);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      } else {\n        // otherwise push as-is\n        do {\n          value = key[valuePropertyName];\n\n          if (value !== undefined) {\n            times.push(key.time);\n            values.push(value);\n          }\n\n          key = jsonKeys[i++];\n        } while (key !== undefined);\n      }\n    },\n    subclip: function (sourceClip, name, startFrame, endFrame, fps) {\n      fps = fps || 30;\n      var clip = sourceClip.clone();\n      clip.name = name;\n      var tracks = [];\n\n      for (var i = 0; i < clip.tracks.length; ++i) {\n        var track = clip.tracks[i];\n        var valueSize = track.getValueSize();\n        var times = [];\n        var values = [];\n\n        for (var j = 0; j < track.times.length; ++j) {\n          var frame = track.times[j] * fps;\n\n          if (frame < startFrame || frame >= endFrame) {\n            continue;\n          }\n\n          times.push(track.times[j]);\n\n          for (var k = 0; k < valueSize; ++k) {\n            values.push(track.values[j * valueSize + k]);\n          }\n        }\n\n        if (times.length === 0) {\n          continue;\n        }\n\n        track.times = AnimationUtils.convertArray(times, track.times.constructor);\n        track.values = AnimationUtils.convertArray(values, track.values.constructor);\n        tracks.push(track);\n      }\n\n      clip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n      var minStartTime = Infinity;\n\n      for (var i = 0; i < clip.tracks.length; ++i) {\n        if (minStartTime > clip.tracks[i].times[0]) {\n          minStartTime = clip.tracks[i].times[0];\n        }\n      } // shift all tracks such that clip begins at t=0\n\n\n      for (var i = 0; i < clip.tracks.length; ++i) {\n        clip.tracks[i].shift(-1 * minStartTime);\n      }\n\n      clip.resetDuration();\n      return clip;\n    }\n  };\n  /**\n   * Abstract base class of interpolants over parametric samples.\n   *\n   * The parameter domain is one dimensional, typically the time or a path\n   * along a curve defined by the data.\n   *\n   * The sample values can have any dimensionality and derived classes may\n   * apply special interpretations to the data.\n   *\n   * This class provides the interval seek in a Template Method, deferring\n   * the actual interpolation to derived classes.\n   *\n   * Time complexity is O(1) for linear access crossing at most two points\n   * and O(log N) for random access, where N is the number of positions.\n   *\n   * References:\n   *\n   * \t\thttp://www.oodesign.com/template-method-pattern.html\n   *\n   * @author tschw\n   */\n\n  function Interpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    this.parameterPositions = parameterPositions;\n    this._cachedIndex = 0;\n    this.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n    this.sampleValues = sampleValues;\n    this.valueSize = sampleSize;\n  }\n\n  Object.assign(Interpolant.prototype, {\n    evaluate: function (t) {\n      var pp = this.parameterPositions,\n          i1 = this._cachedIndex,\n          t1 = pp[i1],\n          t0 = pp[i1 - 1];\n\n      validate_interval: {\n        seek: {\n          var right;\n\n          linear_scan: {\n            //- See http://jsperf.com/comparison-to-undefined/3\n            //- slower code:\n            //-\n            //- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n            forward_scan: if (!(t < t1)) {\n              for (var giveUpAt = i1 + 2;;) {\n                if (t1 === undefined) {\n                  if (t < t0) {\n                    break forward_scan;\n                  } // after end\n\n\n                  i1 = pp.length;\n                  this._cachedIndex = i1;\n                  return this.afterEnd_(i1 - 1, t, t0);\n                }\n\n                if (i1 === giveUpAt) {\n                  break;\n                } // this loop\n\n\n                t0 = t1;\n                t1 = pp[++i1];\n\n                if (t < t1) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the right side of the index\n\n\n              right = pp.length;\n              break linear_scan;\n            } //- slower code:\n            //-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n            if (!(t >= t0)) {\n              // looping?\n              var t1global = pp[1];\n\n              if (t < t1global) {\n                i1 = 2; // + 1, using the scan for the details\n\n                t0 = t1global;\n              } // linear reverse scan\n\n\n              for (var giveUpAt = i1 - 2;;) {\n                if (t0 === undefined) {\n                  // before start\n                  this._cachedIndex = 0;\n                  return this.beforeStart_(0, t, t1);\n                }\n\n                if (i1 === giveUpAt) {\n                  break;\n                } // this loop\n\n\n                t1 = t0;\n                t0 = pp[--i1 - 1];\n\n                if (t >= t0) {\n                  // we have arrived at the sought interval\n                  break seek;\n                }\n              } // prepare binary search on the left side of the index\n\n\n              right = i1;\n              i1 = 0;\n              break linear_scan;\n            } // the interval is valid\n\n\n            break validate_interval;\n          } // linear scan\n          // binary search\n\n\n          while (i1 < right) {\n            var mid = i1 + right >>> 1;\n\n            if (t < pp[mid]) {\n              right = mid;\n            } else {\n              i1 = mid + 1;\n            }\n          }\n\n          t1 = pp[i1];\n          t0 = pp[i1 - 1]; // check boundary cases, again\n\n          if (t0 === undefined) {\n            this._cachedIndex = 0;\n            return this.beforeStart_(0, t, t1);\n          }\n\n          if (t1 === undefined) {\n            i1 = pp.length;\n            this._cachedIndex = i1;\n            return this.afterEnd_(i1 - 1, t0, t);\n          }\n        } // seek\n\n\n        this._cachedIndex = i1;\n        this.intervalChanged_(i1, t0, t1);\n      } // validate_interval\n\n\n      return this.interpolate_(i1, t0, t, t1);\n    },\n    settings: null,\n    // optional, subclass-specific settings structure\n    // Note: The indirection allows central control of many interpolants.\n    // --- Protected interface\n    DefaultSettings_: {},\n    getSettings_: function () {\n      return this.settings || this.DefaultSettings_;\n    },\n    copySampleValue_: function (index) {\n      // copies a sample value to the result buffer\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = index * stride;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset + i];\n      }\n\n      return result;\n    },\n    // Template methods for derived classes:\n    interpolate_: function ()\n    /* i1, t0, t, t1 */\n    {\n      throw new Error('call to abstract method'); // implementations shall return this.resultBuffer\n    },\n    intervalChanged_: function ()\n    /* i1, t0, t1 */\n    {// empty\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(Interpolant.prototype, {\n    //( 0, t, t0 ), returns this.resultBuffer\n    beforeStart_: Interpolant.prototype.copySampleValue_,\n    //( N-1, tN-1, t ), returns this.resultBuffer\n    afterEnd_: Interpolant.prototype.copySampleValue_\n  });\n  /**\n   * Fast and simple cubic spline interpolant.\n   *\n   * It was derived from a Hermitian construction setting the first derivative\n   * at each sample position to the linear slope between neighboring positions\n   * over their parameter interval.\n   *\n   * @author tschw\n   */\n\n  function CubicInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n    this._weightPrev = -0;\n    this._offsetPrev = -0;\n    this._weightNext = -0;\n    this._offsetNext = -0;\n  }\n\n  CubicInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: CubicInterpolant,\n    DefaultSettings_: {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    },\n    intervalChanged_: function (i1, t0, t1) {\n      var pp = this.parameterPositions,\n          iPrev = i1 - 2,\n          iNext = i1 + 1,\n          tPrev = pp[iPrev],\n          tNext = pp[iNext];\n\n      if (tPrev === undefined) {\n        switch (this.getSettings_().endingStart) {\n          case ZeroSlopeEnding:\n            // f'(t0) = 0\n            iPrev = i1;\n            tPrev = 2 * t0 - t1;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iPrev = pp.length - 2;\n            tPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(t0) = 0 a.k.a. Natural Spline\n            iPrev = i1;\n            tPrev = t1;\n        }\n      }\n\n      if (tNext === undefined) {\n        switch (this.getSettings_().endingEnd) {\n          case ZeroSlopeEnding:\n            // f'(tN) = 0\n            iNext = i1;\n            tNext = 2 * t1 - t0;\n            break;\n\n          case WrapAroundEnding:\n            // use the other end of the curve\n            iNext = 1;\n            tNext = t1 + pp[1] - pp[0];\n            break;\n\n          default:\n            // ZeroCurvatureEnding\n            // f''(tN) = 0, a.k.a. Natural Spline\n            iNext = i1 - 1;\n            tNext = t0;\n        }\n      }\n\n      var halfDt = (t1 - t0) * 0.5,\n          stride = this.valueSize;\n      this._weightPrev = halfDt / (t0 - tPrev);\n      this._weightNext = halfDt / (tNext - t1);\n      this._offsetPrev = iPrev * stride;\n      this._offsetNext = iNext * stride;\n    },\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          o1 = i1 * stride,\n          o0 = o1 - stride,\n          oP = this._offsetPrev,\n          oN = this._offsetNext,\n          wP = this._weightPrev,\n          wN = this._weightNext,\n          p = (t - t0) / (t1 - t0),\n          pp = p * p,\n          ppp = pp * p; // evaluate polynomials\n\n      var sP = -wP * ppp + 2 * wP * pp - wP * p;\n      var s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n      var s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n      var sN = wN * ppp - wN * pp; // combine data linearly\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n      }\n\n      return result;\n    }\n  });\n  /**\n   * @author tschw\n   */\n\n  function LinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  LinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: LinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset1 = i1 * stride,\n          offset0 = offset1 - stride,\n          weight1 = (t - t0) / (t1 - t0),\n          weight0 = 1 - weight1;\n\n      for (var i = 0; i !== stride; ++i) {\n        result[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * Interpolant that evaluates to the sample value at the position preceeding\n   * the parameter.\n   *\n   * @author tschw\n   */\n\n  function DiscreteInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  DiscreteInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: DiscreteInterpolant,\n    interpolate_: function (i1\n    /*, t0, t, t1 */\n    ) {\n      return this.copySampleValue_(i1 - 1);\n    }\n  });\n  /**\n   *\n   * A timed sequence of keyframes for a specific property.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function KeyframeTrack(name, times, values, interpolation) {\n    if (name === undefined) {\n      throw new Error('THREE.KeyframeTrack: track name is undefined');\n    }\n\n    if (times === undefined || times.length === 0) {\n      throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n    }\n\n    this.name = name;\n    this.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n    this.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n    this.setInterpolation(interpolation || this.DefaultInterpolation);\n  } // Static methods\n\n\n  Object.assign(KeyframeTrack, {\n    // Serialization (in static context, because of constructor invocation\n    // and automatic invocation of .toJSON):\n    toJSON: function (track) {\n      var trackType = track.constructor;\n      var json; // derived classes can define a static toJSON method\n\n      if (trackType.toJSON !== undefined) {\n        json = trackType.toJSON(track);\n      } else {\n        // by default, we assume the data can be serialized as-is\n        json = {\n          'name': track.name,\n          'times': AnimationUtils.convertArray(track.times, Array),\n          'values': AnimationUtils.convertArray(track.values, Array)\n        };\n        var interpolation = track.getInterpolation();\n\n        if (interpolation !== track.DefaultInterpolation) {\n          json.interpolation = interpolation;\n        }\n      }\n\n      json.type = track.ValueTypeName; // mandatory\n\n      return json;\n    }\n  });\n  Object.assign(KeyframeTrack.prototype, {\n    constructor: KeyframeTrack,\n    TimeBufferType: Float32Array,\n    ValueBufferType: Float32Array,\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodDiscrete: function (result) {\n      return new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodLinear: function (result) {\n      return new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: function (result) {\n      return new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    setInterpolation: function (interpolation) {\n      var factoryMethod;\n\n      switch (interpolation) {\n        case InterpolateDiscrete:\n          factoryMethod = this.InterpolantFactoryMethodDiscrete;\n          break;\n\n        case InterpolateLinear:\n          factoryMethod = this.InterpolantFactoryMethodLinear;\n          break;\n\n        case InterpolateSmooth:\n          factoryMethod = this.InterpolantFactoryMethodSmooth;\n          break;\n      }\n\n      if (factoryMethod === undefined) {\n        var message = \"unsupported interpolation for \" + this.ValueTypeName + \" keyframe track named \" + this.name;\n\n        if (this.createInterpolant === undefined) {\n          // fall back to default, unless the default itself is messed up\n          if (interpolation !== this.DefaultInterpolation) {\n            this.setInterpolation(this.DefaultInterpolation);\n          } else {\n            throw new Error(message); // fatal, in this case\n          }\n        }\n\n        console.warn('THREE.KeyframeTrack:', message);\n        return this;\n      }\n\n      this.createInterpolant = factoryMethod;\n      return this;\n    },\n    getInterpolation: function () {\n      switch (this.createInterpolant) {\n        case this.InterpolantFactoryMethodDiscrete:\n          return InterpolateDiscrete;\n\n        case this.InterpolantFactoryMethodLinear:\n          return InterpolateLinear;\n\n        case this.InterpolantFactoryMethodSmooth:\n          return InterpolateSmooth;\n      }\n    },\n    getValueSize: function () {\n      return this.values.length / this.times.length;\n    },\n    // move all keyframes either forwards or backwards in time\n    shift: function (timeOffset) {\n      if (timeOffset !== 0.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] += timeOffset;\n        }\n      }\n\n      return this;\n    },\n    // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n    scale: function (timeScale) {\n      if (timeScale !== 1.0) {\n        var times = this.times;\n\n        for (var i = 0, n = times.length; i !== n; ++i) {\n          times[i] *= timeScale;\n        }\n      }\n\n      return this;\n    },\n    // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n    // IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n    trim: function (startTime, endTime) {\n      var times = this.times,\n          nKeys = times.length,\n          from = 0,\n          to = nKeys - 1;\n\n      while (from !== nKeys && times[from] < startTime) {\n        ++from;\n      }\n\n      while (to !== -1 && times[to] > endTime) {\n        --to;\n      }\n\n      ++to; // inclusive -> exclusive bound\n\n      if (from !== 0 || to !== nKeys) {\n        // empty tracks are forbidden, so keep at least one keyframe\n        if (from >= to) {\n          to = Math.max(to, 1), from = to - 1;\n        }\n\n        var stride = this.getValueSize();\n        this.times = AnimationUtils.arraySlice(times, from, to);\n        this.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n      }\n\n      return this;\n    },\n    // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n    validate: function () {\n      var valid = true;\n      var valueSize = this.getValueSize();\n\n      if (valueSize - Math.floor(valueSize) !== 0) {\n        console.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n        valid = false;\n      }\n\n      var times = this.times,\n          values = this.values,\n          nKeys = times.length;\n\n      if (nKeys === 0) {\n        console.error('THREE.KeyframeTrack: Track is empty.', this);\n        valid = false;\n      }\n\n      var prevTime = null;\n\n      for (var i = 0; i !== nKeys; i++) {\n        var currTime = times[i];\n\n        if (typeof currTime === 'number' && isNaN(currTime)) {\n          console.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n          valid = false;\n          break;\n        }\n\n        if (prevTime !== null && prevTime > currTime) {\n          console.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n          valid = false;\n          break;\n        }\n\n        prevTime = currTime;\n      }\n\n      if (values !== undefined) {\n        if (AnimationUtils.isTypedArray(values)) {\n          for (var i = 0, n = values.length; i !== n; ++i) {\n            var value = values[i];\n\n            if (isNaN(value)) {\n              console.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n              valid = false;\n              break;\n            }\n          }\n        }\n      }\n\n      return valid;\n    },\n    // removes equivalent sequential keys as common in morph target sequences\n    // (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n    optimize: function () {\n      var times = this.times,\n          values = this.values,\n          stride = this.getValueSize(),\n          smoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n          writeIndex = 1,\n          lastIndex = times.length - 1;\n\n      for (var i = 1; i < lastIndex; ++i) {\n        var keep = false;\n        var time = times[i];\n        var timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n        if (time !== timeNext && (i !== 1 || time !== time[0])) {\n          if (!smoothInterpolation) {\n            // remove unnecessary keyframes same as their neighbors\n            var offset = i * stride,\n                offsetP = offset - stride,\n                offsetN = offset + stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              var value = values[offset + j];\n\n              if (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n                keep = true;\n                break;\n              }\n            }\n          } else {\n            keep = true;\n          }\n        } // in-place compaction\n\n\n        if (keep) {\n          if (i !== writeIndex) {\n            times[writeIndex] = times[i];\n            var readOffset = i * stride,\n                writeOffset = writeIndex * stride;\n\n            for (var j = 0; j !== stride; ++j) {\n              values[writeOffset + j] = values[readOffset + j];\n            }\n          }\n\n          ++writeIndex;\n        }\n      } // flush last keyframe (compaction looks ahead)\n\n\n      if (lastIndex > 0) {\n        times[writeIndex] = times[lastIndex];\n\n        for (var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n          values[writeOffset + j] = values[readOffset + j];\n        }\n\n        ++writeIndex;\n      }\n\n      if (writeIndex !== times.length) {\n        this.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n        this.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n      }\n\n      return this;\n    },\n    clone: function () {\n      var times = AnimationUtils.arraySlice(this.times, 0);\n      var values = AnimationUtils.arraySlice(this.values, 0);\n      var TypedKeyframeTrack = this.constructor;\n      var track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n      track.createInterpolant = this.createInterpolant;\n      return track;\n    }\n  });\n  /**\n   *\n   * A Track of Boolean keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function BooleanKeyframeTrack(name, times, values) {\n    KeyframeTrack.call(this, name, times, values);\n  }\n\n  BooleanKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: BooleanKeyframeTrack,\n    ValueTypeName: 'bool',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined // Note: Actually this track could have a optimized / compressed\n    // representation of a single value and a custom interpolant that\n    // computes \"firstValue ^ isOdd( index )\".\n\n  });\n  /**\n   *\n   * A Track of keyframe values that represent color.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function ColorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  ColorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: ColorKeyframeTrack,\n    ValueTypeName: 'color' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n    // Note: Very basic implementation and nothing special yet.\n    // However, this is the place for color space parameterization.\n\n  });\n  /**\n   *\n   * A Track of numeric keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function NumberKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  NumberKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: NumberKeyframeTrack,\n    ValueTypeName: 'number' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   * Spherical linear unit quaternion interpolant.\n   *\n   * @author tschw\n   */\n\n  function QuaternionLinearInterpolant(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n    Interpolant.call(this, parameterPositions, sampleValues, sampleSize, resultBuffer);\n  }\n\n  QuaternionLinearInterpolant.prototype = Object.assign(Object.create(Interpolant.prototype), {\n    constructor: QuaternionLinearInterpolant,\n    interpolate_: function (i1, t0, t, t1) {\n      var result = this.resultBuffer,\n          values = this.sampleValues,\n          stride = this.valueSize,\n          offset = i1 * stride,\n          alpha = (t - t0) / (t1 - t0);\n\n      for (var end = offset + stride; offset !== end; offset += 4) {\n        Quaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n      }\n\n      return result;\n    }\n  });\n  /**\n   *\n   * A Track of quaternion keyframe values.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function QuaternionKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  QuaternionKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: QuaternionKeyframeTrack,\n    ValueTypeName: 'quaternion',\n    // ValueBufferType is inherited\n    DefaultInterpolation: InterpolateLinear,\n    InterpolantFactoryMethodLinear: function (result) {\n      return new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n    },\n    InterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n  });\n  /**\n   *\n   * A Track that interpolates Strings\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function StringKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  StringKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: StringKeyframeTrack,\n    ValueTypeName: 'string',\n    ValueBufferType: Array,\n    DefaultInterpolation: InterpolateDiscrete,\n    InterpolantFactoryMethodLinear: undefined,\n    InterpolantFactoryMethodSmooth: undefined\n  });\n  /**\n   *\n   * A Track of vectored keyframe values.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function VectorKeyframeTrack(name, times, values, interpolation) {\n    KeyframeTrack.call(this, name, times, values, interpolation);\n  }\n\n  VectorKeyframeTrack.prototype = Object.assign(Object.create(KeyframeTrack.prototype), {\n    constructor: VectorKeyframeTrack,\n    ValueTypeName: 'vector' // ValueBufferType is inherited\n    // DefaultInterpolation is inherited\n\n  });\n  /**\n   *\n   * Reusable set of Tracks that represent an animation.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   */\n\n  function AnimationClip(name, duration, tracks) {\n    this.name = name;\n    this.tracks = tracks;\n    this.duration = duration !== undefined ? duration : -1;\n    this.uuid = _Math.generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n    if (this.duration < 0) {\n      this.resetDuration();\n    }\n  }\n\n  function getTrackTypeForValueTypeName(typeName) {\n    switch (typeName.toLowerCase()) {\n      case 'scalar':\n      case 'double':\n      case 'float':\n      case 'number':\n      case 'integer':\n        return NumberKeyframeTrack;\n\n      case 'vector':\n      case 'vector2':\n      case 'vector3':\n      case 'vector4':\n        return VectorKeyframeTrack;\n\n      case 'color':\n        return ColorKeyframeTrack;\n\n      case 'quaternion':\n        return QuaternionKeyframeTrack;\n\n      case 'bool':\n      case 'boolean':\n        return BooleanKeyframeTrack;\n\n      case 'string':\n        return StringKeyframeTrack;\n    }\n\n    throw new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n  }\n\n  function parseKeyframeTrack(json) {\n    if (json.type === undefined) {\n      throw new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n    }\n\n    var trackType = getTrackTypeForValueTypeName(json.type);\n\n    if (json.times === undefined) {\n      var times = [],\n          values = [];\n      AnimationUtils.flattenJSON(json.keys, times, values, 'value');\n      json.times = times;\n      json.values = values;\n    } // derived classes can define a static parse method\n\n\n    if (trackType.parse !== undefined) {\n      return trackType.parse(json);\n    } else {\n      // by default, we assume a constructor compatible with the base\n      return new trackType(json.name, json.times, json.values, json.interpolation);\n    }\n  }\n\n  Object.assign(AnimationClip, {\n    parse: function (json) {\n      var tracks = [],\n          jsonTracks = json.tracks,\n          frameTime = 1.0 / (json.fps || 1.0);\n\n      for (var i = 0, n = jsonTracks.length; i !== n; ++i) {\n        tracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n      }\n\n      return new AnimationClip(json.name, json.duration, tracks);\n    },\n    toJSON: function (clip) {\n      var tracks = [],\n          clipTracks = clip.tracks;\n      var json = {\n        'name': clip.name,\n        'duration': clip.duration,\n        'tracks': tracks,\n        'uuid': clip.uuid\n      };\n\n      for (var i = 0, n = clipTracks.length; i !== n; ++i) {\n        tracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n      }\n\n      return json;\n    },\n    CreateFromMorphTargetSequence: function (name, morphTargetSequence, fps, noLoop) {\n      var numMorphTargets = morphTargetSequence.length;\n      var tracks = [];\n\n      for (var i = 0; i < numMorphTargets; i++) {\n        var times = [];\n        var values = [];\n        times.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n        values.push(0, 1, 0);\n        var order = AnimationUtils.getKeyframeOrder(times);\n        times = AnimationUtils.sortedArray(times, 1, order);\n        values = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n        // last frame as well for perfect loop.\n\n        if (!noLoop && times[0] === 0) {\n          times.push(numMorphTargets);\n          values.push(values[0]);\n        }\n\n        tracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n      }\n\n      return new AnimationClip(name, -1, tracks);\n    },\n    findByName: function (objectOrClipArray, name) {\n      var clipArray = objectOrClipArray;\n\n      if (!Array.isArray(objectOrClipArray)) {\n        var o = objectOrClipArray;\n        clipArray = o.geometry && o.geometry.animations || o.animations;\n      }\n\n      for (var i = 0; i < clipArray.length; i++) {\n        if (clipArray[i].name === name) {\n          return clipArray[i];\n        }\n      }\n\n      return null;\n    },\n    CreateClipsFromMorphTargetSequences: function (morphTargets, fps, noLoop) {\n      var animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n      // such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n      var pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n      // patterns like Walk_001, Walk_002, Run_001, Run_002\n\n      for (var i = 0, il = morphTargets.length; i < il; i++) {\n        var morphTarget = morphTargets[i];\n        var parts = morphTarget.name.match(pattern);\n\n        if (parts && parts.length > 1) {\n          var name = parts[1];\n          var animationMorphTargets = animationToMorphTargets[name];\n\n          if (!animationMorphTargets) {\n            animationToMorphTargets[name] = animationMorphTargets = [];\n          }\n\n          animationMorphTargets.push(morphTarget);\n        }\n      }\n\n      var clips = [];\n\n      for (var name in animationToMorphTargets) {\n        clips.push(AnimationClip.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n      }\n\n      return clips;\n    },\n    // parse the animation.hierarchy format\n    parseAnimation: function (animation, bones) {\n      if (!animation) {\n        console.error('THREE.AnimationClip: No animation in JSONLoader data.');\n        return null;\n      }\n\n      var addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n        // only return track if there are actually keys.\n        if (animationKeys.length !== 0) {\n          var times = [];\n          var values = [];\n          AnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n          if (times.length !== 0) {\n            destTracks.push(new trackType(trackName, times, values));\n          }\n        }\n      };\n\n      var tracks = [];\n      var clipName = animation.name || 'default'; // automatic length determination in AnimationClip.\n\n      var duration = animation.length || -1;\n      var fps = animation.fps || 30;\n      var hierarchyTracks = animation.hierarchy || [];\n\n      for (var h = 0; h < hierarchyTracks.length; h++) {\n        var animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n        if (!animationKeys || animationKeys.length === 0) {\n          continue;\n        } // process morph targets\n\n\n        if (animationKeys[0].morphTargets) {\n          // figure out all morph targets used in this track\n          var morphTargetNames = {};\n\n          for (var k = 0; k < animationKeys.length; k++) {\n            if (animationKeys[k].morphTargets) {\n              for (var m = 0; m < animationKeys[k].morphTargets.length; m++) {\n                morphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n              }\n            }\n          } // create a track for each morph target with all zero\n          // morphTargetInfluences except for the keys in which\n          // the morphTarget is named.\n\n\n          for (var morphTargetName in morphTargetNames) {\n            var times = [];\n            var values = [];\n\n            for (var m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n              var animationKey = animationKeys[k];\n              times.push(animationKey.time);\n              values.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n            }\n\n            tracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n          }\n\n          duration = morphTargetNames.length * (fps || 1.0);\n        } else {\n          // ...assume skeletal animation\n          var boneName = '.bones[' + bones[h].name + ']';\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n          addNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n          addNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n        }\n      }\n\n      if (tracks.length === 0) {\n        return null;\n      }\n\n      var clip = new AnimationClip(clipName, duration, tracks);\n      return clip;\n    }\n  });\n  Object.assign(AnimationClip.prototype, {\n    resetDuration: function () {\n      var tracks = this.tracks,\n          duration = 0;\n\n      for (var i = 0, n = tracks.length; i !== n; ++i) {\n        var track = this.tracks[i];\n        duration = Math.max(duration, track.times[track.times.length - 1]);\n      }\n\n      this.duration = duration;\n      return this;\n    },\n    trim: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].trim(0, this.duration);\n      }\n\n      return this;\n    },\n    validate: function () {\n      var valid = true;\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        valid = valid && this.tracks[i].validate();\n      }\n\n      return valid;\n    },\n    optimize: function () {\n      for (var i = 0; i < this.tracks.length; i++) {\n        this.tracks[i].optimize();\n      }\n\n      return this;\n    },\n    clone: function () {\n      var tracks = [];\n\n      for (var i = 0; i < this.tracks.length; i++) {\n        tracks.push(this.tracks[i].clone());\n      }\n\n      return new AnimationClip(this.name, this.duration, tracks);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var Cache = {\n    enabled: false,\n    files: {},\n    add: function (key, file) {\n      if (this.enabled === false) {\n        return;\n      } // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\n      this.files[key] = file;\n    },\n    get: function (key) {\n      if (this.enabled === false) {\n        return;\n      } // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\n      return this.files[key];\n    },\n    remove: function (key) {\n      delete this.files[key];\n    },\n    clear: function () {\n      this.files = {};\n    }\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LoadingManager(onLoad, onProgress, onError) {\n    var scope = this;\n    var isLoading = false;\n    var itemsLoaded = 0;\n    var itemsTotal = 0;\n    var urlModifier = undefined;\n    var handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n    // in the constructor\n\n    this.onStart = undefined;\n    this.onLoad = onLoad;\n    this.onProgress = onProgress;\n    this.onError = onError;\n\n    this.itemStart = function (url) {\n      itemsTotal++;\n\n      if (isLoading === false) {\n        if (scope.onStart !== undefined) {\n          scope.onStart(url, itemsLoaded, itemsTotal);\n        }\n      }\n\n      isLoading = true;\n    };\n\n    this.itemEnd = function (url) {\n      itemsLoaded++;\n\n      if (scope.onProgress !== undefined) {\n        scope.onProgress(url, itemsLoaded, itemsTotal);\n      }\n\n      if (itemsLoaded === itemsTotal) {\n        isLoading = false;\n\n        if (scope.onLoad !== undefined) {\n          scope.onLoad();\n        }\n      }\n    };\n\n    this.itemError = function (url) {\n      if (scope.onError !== undefined) {\n        scope.onError(url);\n      }\n    };\n\n    this.resolveURL = function (url) {\n      if (urlModifier) {\n        return urlModifier(url);\n      }\n\n      return url;\n    };\n\n    this.setURLModifier = function (transform) {\n      urlModifier = transform;\n      return this;\n    };\n\n    this.addHandler = function (regex, loader) {\n      handlers.push(regex, loader);\n      return this;\n    };\n\n    this.removeHandler = function (regex) {\n      var index = handlers.indexOf(regex);\n\n      if (index !== -1) {\n        handlers.splice(index, 2);\n      }\n\n      return this;\n    };\n\n    this.getHandler = function (file) {\n      for (var i = 0, l = handlers.length; i < l; i += 2) {\n        var regex = handlers[i];\n        var loader = handlers[i + 1];\n\n        if (regex.global) {\n          regex.lastIndex = 0;\n        } // see #17920\n\n\n        if (regex.test(file)) {\n          return loader;\n        }\n      }\n\n      return null;\n    };\n  }\n\n  var DefaultLoadingManager = new LoadingManager();\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Loader(manager) {\n    this.manager = manager !== undefined ? manager : DefaultLoadingManager;\n    this.crossOrigin = 'anonymous';\n    this.path = '';\n    this.resourcePath = '';\n  }\n\n  Object.assign(Loader.prototype, {\n    load: function ()\n    /* url, onLoad, onProgress, onError */\n    {},\n    parse: function ()\n    /* data */\n    {},\n    setCrossOrigin: function (crossOrigin) {\n      this.crossOrigin = crossOrigin;\n      return this;\n    },\n    setPath: function (path) {\n      this.path = path;\n      return this;\n    },\n    setResourcePath: function (resourcePath) {\n      this.resourcePath = resourcePath;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var loading = {};\n\n  function FileLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  FileLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: FileLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) {\n        url = '';\n      }\n\n      if (this.path !== undefined) {\n        url = this.path + url;\n      }\n\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) {\n            onLoad(cached);\n          }\n\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      } // Check if request is duplicate\n\n\n      if (loading[url] !== undefined) {\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        return;\n      } // Check for data: URI\n\n\n      var dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n      var dataUriRegexResult = url.match(dataUriRegex); // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n      if (dataUriRegexResult) {\n        var mimeType = dataUriRegexResult[1];\n        var isBase64 = !!dataUriRegexResult[2];\n        var data = dataUriRegexResult[3];\n        data = decodeURIComponent(data);\n\n        if (isBase64) {\n          data = atob(data);\n        }\n\n        try {\n          var response;\n          var responseType = (this.responseType || '').toLowerCase();\n\n          switch (responseType) {\n            case 'arraybuffer':\n            case 'blob':\n              var view = new Uint8Array(data.length);\n\n              for (var i = 0; i < data.length; i++) {\n                view[i] = data.charCodeAt(i);\n              }\n\n              if (responseType === 'blob') {\n                response = new Blob([view.buffer], {\n                  type: mimeType\n                });\n              } else {\n                response = view.buffer;\n              }\n\n              break;\n\n            case 'document':\n              var parser = new DOMParser();\n              response = parser.parseFromString(data, mimeType);\n              break;\n\n            case 'json':\n              response = JSON.parse(data);\n              break;\n\n            default:\n              // 'text' or other\n              response = data;\n              break;\n          } // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n          setTimeout(function () {\n            if (onLoad) {\n              onLoad(response);\n            }\n\n            scope.manager.itemEnd(url);\n          }, 0);\n        } catch (error) {\n          // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n          setTimeout(function () {\n            if (onError) {\n              onError(error);\n            }\n\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }, 0);\n        }\n      } else {\n        // Initialise array for duplicate requests\n        loading[url] = [];\n        loading[url].push({\n          onLoad: onLoad,\n          onProgress: onProgress,\n          onError: onError\n        });\n        var request = new XMLHttpRequest();\n        request.open('GET', url, true);\n        request.addEventListener('load', function (event) {\n          var response = this.response;\n          var callbacks = loading[url];\n          delete loading[url];\n\n          if (this.status === 200 || this.status === 0) {\n            // Some browsers return HTTP Status 0 when using non-http protocol\n            // e.g. 'file://' or 'data://'. Handle as success.\n            if (this.status === 0) {\n              console.warn('THREE.FileLoader: HTTP Status 0 received.');\n            } // Add to cache only on HTTP success, so that we do not cache\n            // error response bodies as proper responses to requests.\n\n\n            Cache.add(url, response);\n\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n\n              if (callback.onLoad) {\n                callback.onLoad(response);\n              }\n            }\n\n            scope.manager.itemEnd(url);\n          } else {\n            for (var i = 0, il = callbacks.length; i < il; i++) {\n              var callback = callbacks[i];\n\n              if (callback.onError) {\n                callback.onError(event);\n              }\n            }\n\n            scope.manager.itemError(url);\n            scope.manager.itemEnd(url);\n          }\n        }, false);\n        request.addEventListener('progress', function (event) {\n          var callbacks = loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n\n            if (callback.onProgress) {\n              callback.onProgress(event);\n            }\n          }\n        }, false);\n        request.addEventListener('error', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n\n            if (callback.onError) {\n              callback.onError(event);\n            }\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n        request.addEventListener('abort', function (event) {\n          var callbacks = loading[url];\n          delete loading[url];\n\n          for (var i = 0, il = callbacks.length; i < il; i++) {\n            var callback = callbacks[i];\n\n            if (callback.onError) {\n              callback.onError(event);\n            }\n          }\n\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        }, false);\n\n        if (this.responseType !== undefined) {\n          request.responseType = this.responseType;\n        }\n\n        if (this.withCredentials !== undefined) {\n          request.withCredentials = this.withCredentials;\n        }\n\n        if (request.overrideMimeType) {\n          request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n        }\n\n        for (var header in this.requestHeader) {\n          request.setRequestHeader(header, this.requestHeader[header]);\n        }\n\n        request.send(null);\n      }\n\n      scope.manager.itemStart(url);\n      return request;\n    },\n    setResponseType: function (value) {\n      this.responseType = value;\n      return this;\n    },\n    setWithCredentials: function (value) {\n      this.withCredentials = value;\n      return this;\n    },\n    setMimeType: function (value) {\n      this.mimeType = value;\n      return this;\n    },\n    setRequestHeader: function (value) {\n      this.requestHeader = value;\n      return this;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io/\n   */\n\n  function AnimationLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  AnimationLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: AnimationLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var clip = AnimationClip.parse(json[i]);\n        animations.push(clip);\n      }\n\n      return animations;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   *\n   * Abstract Base class to block based textures loader (dds, pvr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n  function CompressedTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  CompressedTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: CompressedTextureLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var images = [];\n      var texture = new CompressedTexture();\n      texture.image = images;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setResponseType('arraybuffer');\n\n      function loadTexture(i) {\n        loader.load(url[i], function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n          images[i] = {\n            width: texDatas.width,\n            height: texDatas.height,\n            format: texDatas.format,\n            mipmaps: texDatas.mipmaps\n          };\n          loaded += 1;\n\n          if (loaded === 6) {\n            if (texDatas.mipmapCount === 1) {\n              texture.minFilter = LinearFilter;\n            }\n\n            texture.format = texDatas.format;\n            texture.needsUpdate = true;\n\n            if (onLoad) {\n              onLoad(texture);\n            }\n          }\n        }, onProgress, onError);\n      }\n\n      if (Array.isArray(url)) {\n        var loaded = 0;\n\n        for (var i = 0, il = url.length; i < il; ++i) {\n          loadTexture(i);\n        }\n      } else {\n        // compressed cubemap texture stored in a single DDS file\n        loader.load(url, function (buffer) {\n          var texDatas = scope.parse(buffer, true);\n\n          if (texDatas.isCubemap) {\n            var faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n            for (var f = 0; f < faces; f++) {\n              images[f] = {\n                mipmaps: []\n              };\n\n              for (var i = 0; i < texDatas.mipmapCount; i++) {\n                images[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n                images[f].format = texDatas.format;\n                images[f].width = texDatas.width;\n                images[f].height = texDatas.height;\n              }\n            }\n          } else {\n            texture.image.width = texDatas.width;\n            texture.image.height = texDatas.height;\n            texture.mipmaps = texDatas.mipmaps;\n          }\n\n          if (texDatas.mipmapCount === 1) {\n            texture.minFilter = LinearFilter;\n          }\n\n          texture.format = texDatas.format;\n          texture.needsUpdate = true;\n\n          if (onLoad) {\n            onLoad(texture);\n          }\n        }, onProgress, onError);\n      }\n\n      return texture;\n    }\n  });\n  /**\n   * @author Nikos M. / https://github.com/foo123/\n   *\n   * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n   *\n   * Sub classes have to implement the parse() method which will be used in load().\n   */\n\n  function DataTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  DataTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: DataTextureLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var texture = new DataTexture();\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(this.path);\n      loader.load(url, function (buffer) {\n        var texData = scope.parse(buffer);\n\n        if (!texData) {\n          return;\n        }\n\n        if (texData.image !== undefined) {\n          texture.image = texData.image;\n        } else if (texData.data !== undefined) {\n          texture.image.width = texData.width;\n          texture.image.height = texData.height;\n          texture.image.data = texData.data;\n        }\n\n        texture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n        texture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n        texture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n        texture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n        texture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n        if (texData.format !== undefined) {\n          texture.format = texData.format;\n        }\n\n        if (texData.type !== undefined) {\n          texture.type = texData.type;\n        }\n\n        if (texData.mipmaps !== undefined) {\n          texture.mipmaps = texData.mipmaps;\n          texture.minFilter = LinearMipmapLinearFilter; // presumably...\n        }\n\n        if (texData.mipmapCount === 1) {\n          texture.minFilter = LinearFilter;\n        }\n\n        texture.needsUpdate = true;\n\n        if (onLoad) {\n          onLoad(texture, texData);\n        }\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ImageLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  ImageLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: ImageLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      if (this.path !== undefined) {\n        url = this.path + url;\n      }\n\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) {\n            onLoad(cached);\n          }\n\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      var image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n      function onImageLoad() {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n        Cache.add(url, this);\n\n        if (onLoad) {\n          onLoad(this);\n        }\n\n        scope.manager.itemEnd(url);\n      }\n\n      function onImageError(event) {\n        image.removeEventListener('load', onImageLoad, false);\n        image.removeEventListener('error', onImageError, false);\n\n        if (onError) {\n          onError(event);\n        }\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      }\n\n      image.addEventListener('load', onImageLoad, false);\n      image.addEventListener('error', onImageError, false);\n\n      if (url.substr(0, 5) !== 'data:') {\n        if (this.crossOrigin !== undefined) {\n          image.crossOrigin = this.crossOrigin;\n        }\n      }\n\n      scope.manager.itemStart(url);\n      image.src = url;\n      return image;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function CubeTextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  CubeTextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: CubeTextureLoader,\n    load: function (urls, onLoad, onProgress, onError) {\n      var texture = new CubeTexture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      var loaded = 0;\n\n      function loadTexture(i) {\n        loader.load(urls[i], function (image) {\n          texture.images[i] = image;\n          loaded++;\n\n          if (loaded === 6) {\n            texture.needsUpdate = true;\n\n            if (onLoad) {\n              onLoad(texture);\n            }\n          }\n        }, undefined, onError);\n      }\n\n      for (var i = 0; i < urls.length; ++i) {\n        loadTexture(i);\n      }\n\n      return texture;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function TextureLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  TextureLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: TextureLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var texture = new Texture();\n      var loader = new ImageLoader(this.manager);\n      loader.setCrossOrigin(this.crossOrigin);\n      loader.setPath(this.path);\n      loader.load(url, function (image) {\n        texture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n        var isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n        texture.format = isJPEG ? RGBFormat : RGBAFormat;\n        texture.needsUpdate = true;\n\n        if (onLoad !== undefined) {\n          onLoad(texture);\n        }\n      }, onProgress, onError);\n      return texture;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Extensible curve object\n   *\n   * Some common of curve methods:\n   * .getPoint( t, optionalTarget ), .getTangent( t )\n   * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n   * .getPoints(), .getSpacedPoints()\n   * .getLength()\n   * .updateArcLengths()\n   *\n   * This following curves inherit from THREE.Curve:\n   *\n   * -- 2D curves --\n   * THREE.ArcCurve\n   * THREE.CubicBezierCurve\n   * THREE.EllipseCurve\n   * THREE.LineCurve\n   * THREE.QuadraticBezierCurve\n   * THREE.SplineCurve\n   *\n   * -- 3D curves --\n   * THREE.CatmullRomCurve3\n   * THREE.CubicBezierCurve3\n   * THREE.LineCurve3\n   * THREE.QuadraticBezierCurve3\n   *\n   * A series of curves can be represented as a THREE.CurvePath.\n   *\n   **/\n\n  /**************************************************************\n   *\tAbstract Curve base class\n   **************************************************************/\n\n  function Curve() {\n    this.type = 'Curve';\n    this.arcLengthDivisions = 200;\n  }\n\n  Object.assign(Curve.prototype, {\n    // Virtual base class method to overwrite and implement in subclasses\n    //\t- t [0 .. 1]\n    getPoint: function ()\n    /* t, optionalTarget */\n    {\n      console.warn('THREE.Curve: .getPoint() not implemented.');\n      return null;\n    },\n    // Get point at relative position in curve according to arc length\n    // - u [0 .. 1]\n    getPointAt: function (u, optionalTarget) {\n      var t = this.getUtoTmapping(u);\n      return this.getPoint(t, optionalTarget);\n    },\n    // Get sequence of points using getPoint( t )\n    getPoints: function (divisions) {\n      if (divisions === undefined) {\n        divisions = 5;\n      }\n\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPoint(d / divisions));\n      }\n\n      return points;\n    },\n    // Get sequence of points using getPointAt( u )\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) {\n        divisions = 5;\n      }\n\n      var points = [];\n\n      for (var d = 0; d <= divisions; d++) {\n        points.push(this.getPointAt(d / divisions));\n      }\n\n      return points;\n    },\n    // Get total curve arc length\n    getLength: function () {\n      var lengths = this.getLengths();\n      return lengths[lengths.length - 1];\n    },\n    // Get list of cumulative segment lengths\n    getLengths: function (divisions) {\n      if (divisions === undefined) {\n        divisions = this.arcLengthDivisions;\n      }\n\n      if (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n        return this.cacheArcLengths;\n      }\n\n      this.needsUpdate = false;\n      var cache = [];\n      var current,\n          last = this.getPoint(0);\n      var p,\n          sum = 0;\n      cache.push(0);\n\n      for (p = 1; p <= divisions; p++) {\n        current = this.getPoint(p / divisions);\n        sum += current.distanceTo(last);\n        cache.push(sum);\n        last = current;\n      }\n\n      this.cacheArcLengths = cache;\n      return cache; // { sums: cache, sum: sum }; Sum is in the last element.\n    },\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.getLengths();\n    },\n    // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n    getUtoTmapping: function (u, distance) {\n      var arcLengths = this.getLengths();\n      var i = 0,\n          il = arcLengths.length;\n      var targetArcLength; // The targeted u distance value to get\n\n      if (distance) {\n        targetArcLength = distance;\n      } else {\n        targetArcLength = u * arcLengths[il - 1];\n      } // binary search for the index with largest value smaller than target u distance\n\n\n      var low = 0,\n          high = il - 1,\n          comparison;\n\n      while (low <= high) {\n        i = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n        comparison = arcLengths[i] - targetArcLength;\n\n        if (comparison < 0) {\n          low = i + 1;\n        } else if (comparison > 0) {\n          high = i - 1;\n        } else {\n          high = i;\n          break; // DONE\n        }\n      }\n\n      i = high;\n\n      if (arcLengths[i] === targetArcLength) {\n        return i / (il - 1);\n      } // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n      var lengthBefore = arcLengths[i];\n      var lengthAfter = arcLengths[i + 1];\n      var segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n      var segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n      var t = (i + segmentFraction) / (il - 1);\n      return t;\n    },\n    // Returns a unit vector tangent at t\n    // In case any sub curve does not implement its tangent derivation,\n    // 2 points a small delta apart will be used to find its gradient\n    // which seems to give a reasonable approximation\n    getTangent: function (t) {\n      var delta = 0.0001;\n      var t1 = t - delta;\n      var t2 = t + delta; // Capping in case of danger\n\n      if (t1 < 0) {\n        t1 = 0;\n      }\n\n      if (t2 > 1) {\n        t2 = 1;\n      }\n\n      var pt1 = this.getPoint(t1);\n      var pt2 = this.getPoint(t2);\n      var vec = pt2.clone().sub(pt1);\n      return vec.normalize();\n    },\n    getTangentAt: function (u) {\n      var t = this.getUtoTmapping(u);\n      return this.getTangent(t);\n    },\n    computeFrenetFrames: function (segments, closed) {\n      // see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n      var normal = new Vector3();\n      var tangents = [];\n      var normals = [];\n      var binormals = [];\n      var vec = new Vector3();\n      var mat = new Matrix4();\n      var i, u, theta; // compute the tangent vectors for each segment on the curve\n\n      for (i = 0; i <= segments; i++) {\n        u = i / segments;\n        tangents[i] = this.getTangentAt(u);\n        tangents[i].normalize();\n      } // select an initial normal vector perpendicular to the first tangent vector,\n      // and in the direction of the minimum tangent xyz component\n\n\n      normals[0] = new Vector3();\n      binormals[0] = new Vector3();\n      var min = Number.MAX_VALUE;\n      var tx = Math.abs(tangents[0].x);\n      var ty = Math.abs(tangents[0].y);\n      var tz = Math.abs(tangents[0].z);\n\n      if (tx <= min) {\n        min = tx;\n        normal.set(1, 0, 0);\n      }\n\n      if (ty <= min) {\n        min = ty;\n        normal.set(0, 1, 0);\n      }\n\n      if (tz <= min) {\n        normal.set(0, 0, 1);\n      }\n\n      vec.crossVectors(tangents[0], normal).normalize();\n      normals[0].crossVectors(tangents[0], vec);\n      binormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n      for (i = 1; i <= segments; i++) {\n        normals[i] = normals[i - 1].clone();\n        binormals[i] = binormals[i - 1].clone();\n        vec.crossVectors(tangents[i - 1], tangents[i]);\n\n        if (vec.length() > Number.EPSILON) {\n          vec.normalize();\n          theta = Math.acos(_Math.clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n          normals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n        }\n\n        binormals[i].crossVectors(tangents[i], normals[i]);\n      } // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n      if (closed === true) {\n        theta = Math.acos(_Math.clamp(normals[0].dot(normals[segments]), -1, 1));\n        theta /= segments;\n\n        if (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n          theta = -theta;\n        }\n\n        for (i = 1; i <= segments; i++) {\n          // twist a little...\n          normals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n          binormals[i].crossVectors(tangents[i], normals[i]);\n        }\n      }\n\n      return {\n        tangents: tangents,\n        normals: normals,\n        binormals: binormals\n      };\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (source) {\n      this.arcLengthDivisions = source.arcLengthDivisions;\n      return this;\n    },\n    toJSON: function () {\n      var data = {\n        metadata: {\n          version: 4.5,\n          type: 'Curve',\n          generator: 'Curve.toJSON'\n        }\n      };\n      data.arcLengthDivisions = this.arcLengthDivisions;\n      data.type = this.type;\n      return data;\n    },\n    fromJSON: function (json) {\n      this.arcLengthDivisions = json.arcLengthDivisions;\n      return this;\n    }\n  });\n\n  function EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n    Curve.call(this);\n    this.type = 'EllipseCurve';\n    this.aX = aX || 0;\n    this.aY = aY || 0;\n    this.xRadius = xRadius || 1;\n    this.yRadius = yRadius || 1;\n    this.aStartAngle = aStartAngle || 0;\n    this.aEndAngle = aEndAngle || 2 * Math.PI;\n    this.aClockwise = aClockwise || false;\n    this.aRotation = aRotation || 0;\n  }\n\n  EllipseCurve.prototype = Object.create(Curve.prototype);\n  EllipseCurve.prototype.constructor = EllipseCurve;\n  EllipseCurve.prototype.isEllipseCurve = true;\n\n  EllipseCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var twoPi = Math.PI * 2;\n    var deltaAngle = this.aEndAngle - this.aStartAngle;\n    var samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n    while (deltaAngle < 0) {\n      deltaAngle += twoPi;\n    }\n\n    while (deltaAngle > twoPi) {\n      deltaAngle -= twoPi;\n    }\n\n    if (deltaAngle < Number.EPSILON) {\n      if (samePoints) {\n        deltaAngle = 0;\n      } else {\n        deltaAngle = twoPi;\n      }\n    }\n\n    if (this.aClockwise === true && !samePoints) {\n      if (deltaAngle === twoPi) {\n        deltaAngle = -twoPi;\n      } else {\n        deltaAngle = deltaAngle - twoPi;\n      }\n    }\n\n    var angle = this.aStartAngle + t * deltaAngle;\n    var x = this.aX + this.xRadius * Math.cos(angle);\n    var y = this.aY + this.yRadius * Math.sin(angle);\n\n    if (this.aRotation !== 0) {\n      var cos = Math.cos(this.aRotation);\n      var sin = Math.sin(this.aRotation);\n      var tx = x - this.aX;\n      var ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n      x = tx * cos - ty * sin + this.aX;\n      y = tx * sin + ty * cos + this.aY;\n    }\n\n    return point.set(x, y);\n  };\n\n  EllipseCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.aX = source.aX;\n    this.aY = source.aY;\n    this.xRadius = source.xRadius;\n    this.yRadius = source.yRadius;\n    this.aStartAngle = source.aStartAngle;\n    this.aEndAngle = source.aEndAngle;\n    this.aClockwise = source.aClockwise;\n    this.aRotation = source.aRotation;\n    return this;\n  };\n\n  EllipseCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.aX = this.aX;\n    data.aY = this.aY;\n    data.xRadius = this.xRadius;\n    data.yRadius = this.yRadius;\n    data.aStartAngle = this.aStartAngle;\n    data.aEndAngle = this.aEndAngle;\n    data.aClockwise = this.aClockwise;\n    data.aRotation = this.aRotation;\n    return data;\n  };\n\n  EllipseCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.aX = json.aX;\n    this.aY = json.aY;\n    this.xRadius = json.xRadius;\n    this.yRadius = json.yRadius;\n    this.aStartAngle = json.aStartAngle;\n    this.aEndAngle = json.aEndAngle;\n    this.aClockwise = json.aClockwise;\n    this.aRotation = json.aRotation;\n    return this;\n  };\n\n  function ArcCurve(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n    EllipseCurve.call(this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n    this.type = 'ArcCurve';\n  }\n\n  ArcCurve.prototype = Object.create(EllipseCurve.prototype);\n  ArcCurve.prototype.constructor = ArcCurve;\n  ArcCurve.prototype.isArcCurve = true;\n  /**\n   * @author zz85 https://github.com/zz85\n   *\n   * Centripetal CatmullRom Curve - which is useful for avoiding\n   * cusps and self-intersections in non-uniform catmull rom curves.\n   * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n   *\n   * curve.type accepts centripetal(default), chordal and catmullrom\n   * curve.tension is used for catmullrom which defaults to 0.5\n   */\n\n  /*\n  Based on an optimized c++ solution in\n   - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n   - http://ideone.com/NoEbVM\n  \tThis CubicPoly class could be used for reusing some variables and calculations,\n  but for three.js curve use, it could be possible inlined and flatten into a single function call\n  which can be placed in CurveUtils.\n  */\n\n  function CubicPoly() {\n    var c0 = 0,\n        c1 = 0,\n        c2 = 0,\n        c3 = 0;\n    /*\n     * Compute coefficients for a cubic polynomial\n     *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n     * such that\n     *   p(0) = x0, p(1) = x1\n     *  and\n     *   p'(0) = t0, p'(1) = t1.\n     */\n\n    function init(x0, x1, t0, t1) {\n      c0 = x0;\n      c1 = t0;\n      c2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n      c3 = 2 * x0 - 2 * x1 + t0 + t1;\n    }\n\n    return {\n      initCatmullRom: function (x0, x1, x2, x3, tension) {\n        init(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n      },\n      initNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n        // compute tangents when parameterized in [t1,t2]\n        var t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n        var t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n        t1 *= dt1;\n        t2 *= dt1;\n        init(x1, x2, t1, t2);\n      },\n      calc: function (t) {\n        var t2 = t * t;\n        var t3 = t2 * t;\n        return c0 + c1 * t + c2 * t2 + c3 * t3;\n      }\n    };\n  } //\n\n\n  var tmp = new Vector3();\n  var px = new CubicPoly(),\n      py = new CubicPoly(),\n      pz = new CubicPoly();\n\n  function CatmullRomCurve3(points, closed, curveType, tension) {\n    Curve.call(this);\n    this.type = 'CatmullRomCurve3';\n    this.points = points || [];\n    this.closed = closed || false;\n    this.curveType = curveType || 'centripetal';\n    this.tension = tension || 0.5;\n  }\n\n  CatmullRomCurve3.prototype = Object.create(Curve.prototype);\n  CatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n  CatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n  CatmullRomCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var points = this.points;\n    var l = points.length;\n    var p = (l - (this.closed ? 0 : 1)) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n\n    if (this.closed) {\n      intPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n    } else if (weight === 0 && intPoint === l - 1) {\n      intPoint = l - 2;\n      weight = 1;\n    }\n\n    var p0, p1, p2, p3; // 4 points\n\n    if (this.closed || intPoint > 0) {\n      p0 = points[(intPoint - 1) % l];\n    } else {\n      // extrapolate first point\n      tmp.subVectors(points[0], points[1]).add(points[0]);\n      p0 = tmp;\n    }\n\n    p1 = points[intPoint % l];\n    p2 = points[(intPoint + 1) % l];\n\n    if (this.closed || intPoint + 2 < l) {\n      p3 = points[(intPoint + 2) % l];\n    } else {\n      // extrapolate last point\n      tmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n      p3 = tmp;\n    }\n\n    if (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n      // init Centripetal / Chordal Catmull-Rom\n      var pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n      var dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n      var dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n      var dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n      if (dt1 < 1e-4) {\n        dt1 = 1.0;\n      }\n\n      if (dt0 < 1e-4) {\n        dt0 = dt1;\n      }\n\n      if (dt2 < 1e-4) {\n        dt2 = dt1;\n      }\n\n      px.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n      py.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n      pz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n    } else if (this.curveType === 'catmullrom') {\n      px.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n      py.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n      pz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n    }\n\n    point.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n    return point;\n  };\n\n  CatmullRomCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    this.closed = source.closed;\n    this.curveType = source.curveType;\n    this.tension = source.tension;\n    return this;\n  };\n\n  CatmullRomCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    data.closed = this.closed;\n    data.curveType = this.curveType;\n    data.tension = this.tension;\n    return data;\n  };\n\n  CatmullRomCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector3().fromArray(point));\n    }\n\n    this.closed = json.closed;\n    this.curveType = json.curveType;\n    this.tension = json.tension;\n    return this;\n  };\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   * Bezier Curves formulas obtained from\n   * http://en.wikipedia.org/wiki/Bézier_curve\n   */\n\n\n  function CatmullRom(t, p0, p1, p2, p3) {\n    var v0 = (p2 - p0) * 0.5;\n    var v1 = (p3 - p1) * 0.5;\n    var t2 = t * t;\n    var t3 = t * t2;\n    return (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n  } //\n\n\n  function QuadraticBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * p;\n  }\n\n  function QuadraticBezierP1(t, p) {\n    return 2 * (1 - t) * t * p;\n  }\n\n  function QuadraticBezierP2(t, p) {\n    return t * t * p;\n  }\n\n  function QuadraticBezier(t, p0, p1, p2) {\n    return QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n  } //\n\n\n  function CubicBezierP0(t, p) {\n    var k = 1 - t;\n    return k * k * k * p;\n  }\n\n  function CubicBezierP1(t, p) {\n    var k = 1 - t;\n    return 3 * k * k * t * p;\n  }\n\n  function CubicBezierP2(t, p) {\n    return 3 * (1 - t) * t * t * p;\n  }\n\n  function CubicBezierP3(t, p) {\n    return t * t * t * p;\n  }\n\n  function CubicBezier(t, p0, p1, p2, p3) {\n    return CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n  }\n\n  function CubicBezierCurve(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n    this.v3 = v3 || new Vector2();\n  }\n\n  CubicBezierCurve.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve.prototype.constructor = CubicBezierCurve;\n  CubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n  CubicBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n    return point;\n  };\n\n  CubicBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function CubicBezierCurve3(v0, v1, v2, v3) {\n    Curve.call(this);\n    this.type = 'CubicBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n    this.v3 = v3 || new Vector3();\n  }\n\n  CubicBezierCurve3.prototype = Object.create(Curve.prototype);\n  CubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n  CubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n  CubicBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2,\n        v3 = this.v3;\n    point.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n    return point;\n  };\n\n  CubicBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    this.v3.copy(source.v3);\n    return this;\n  };\n\n  CubicBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    data.v3 = this.v3.toArray();\n    return data;\n  };\n\n  CubicBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    this.v3.fromArray(json.v3);\n    return this;\n  };\n\n  function LineCurve(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve';\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  LineCurve.prototype = Object.create(Curve.prototype);\n  LineCurve.prototype.constructor = LineCurve;\n  LineCurve.prototype.isLineCurve = true;\n\n  LineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve.prototype.getTangent = function ()\n  /* t */\n  {\n    var tangent = this.v2.clone().sub(this.v1);\n    return tangent.normalize();\n  };\n\n  LineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function LineCurve3(v1, v2) {\n    Curve.call(this);\n    this.type = 'LineCurve3';\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  LineCurve3.prototype = Object.create(Curve.prototype);\n  LineCurve3.prototype.constructor = LineCurve3;\n  LineCurve3.prototype.isLineCurve3 = true;\n\n  LineCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n\n    if (t === 1) {\n      point.copy(this.v2);\n    } else {\n      point.copy(this.v2).sub(this.v1);\n      point.multiplyScalar(t).add(this.v1);\n    }\n\n    return point;\n  }; // Line curve is linear, so we can overwrite default getPointAt\n\n\n  LineCurve3.prototype.getPointAt = function (u, optionalTarget) {\n    return this.getPoint(u, optionalTarget);\n  };\n\n  LineCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  LineCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  LineCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve';\n    this.v0 = v0 || new Vector2();\n    this.v1 = v1 || new Vector2();\n    this.v2 = v2 || new Vector2();\n  }\n\n  QuadraticBezierCurve.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n  QuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n  QuadraticBezierCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n    return point;\n  };\n\n  QuadraticBezierCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function QuadraticBezierCurve3(v0, v1, v2) {\n    Curve.call(this);\n    this.type = 'QuadraticBezierCurve3';\n    this.v0 = v0 || new Vector3();\n    this.v1 = v1 || new Vector3();\n    this.v2 = v2 || new Vector3();\n  }\n\n  QuadraticBezierCurve3.prototype = Object.create(Curve.prototype);\n  QuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n  QuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n  QuadraticBezierCurve3.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector3();\n    var v0 = this.v0,\n        v1 = this.v1,\n        v2 = this.v2;\n    point.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n    return point;\n  };\n\n  QuadraticBezierCurve3.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.v0.copy(source.v0);\n    this.v1.copy(source.v1);\n    this.v2.copy(source.v2);\n    return this;\n  };\n\n  QuadraticBezierCurve3.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.v0 = this.v0.toArray();\n    data.v1 = this.v1.toArray();\n    data.v2 = this.v2.toArray();\n    return data;\n  };\n\n  QuadraticBezierCurve3.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.v0.fromArray(json.v0);\n    this.v1.fromArray(json.v1);\n    this.v2.fromArray(json.v2);\n    return this;\n  };\n\n  function SplineCurve(points\n  /* array of Vector2 */\n  ) {\n    Curve.call(this);\n    this.type = 'SplineCurve';\n    this.points = points || [];\n  }\n\n  SplineCurve.prototype = Object.create(Curve.prototype);\n  SplineCurve.prototype.constructor = SplineCurve;\n  SplineCurve.prototype.isSplineCurve = true;\n\n  SplineCurve.prototype.getPoint = function (t, optionalTarget) {\n    var point = optionalTarget || new Vector2();\n    var points = this.points;\n    var p = (points.length - 1) * t;\n    var intPoint = Math.floor(p);\n    var weight = p - intPoint;\n    var p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n    var p1 = points[intPoint];\n    var p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n    var p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n    point.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n    return point;\n  };\n\n  SplineCurve.prototype.copy = function (source) {\n    Curve.prototype.copy.call(this, source);\n    this.points = [];\n\n    for (var i = 0, l = source.points.length; i < l; i++) {\n      var point = source.points[i];\n      this.points.push(point.clone());\n    }\n\n    return this;\n  };\n\n  SplineCurve.prototype.toJSON = function () {\n    var data = Curve.prototype.toJSON.call(this);\n    data.points = [];\n\n    for (var i = 0, l = this.points.length; i < l; i++) {\n      var point = this.points[i];\n      data.points.push(point.toArray());\n    }\n\n    return data;\n  };\n\n  SplineCurve.prototype.fromJSON = function (json) {\n    Curve.prototype.fromJSON.call(this, json);\n    this.points = [];\n\n    for (var i = 0, l = json.points.length; i < l; i++) {\n      var point = json.points[i];\n      this.points.push(new Vector2().fromArray(point));\n    }\n\n    return this;\n  };\n\n  var Curves =\n  /*#__PURE__*/\n  Object.freeze({\n    __proto__: null,\n    ArcCurve: ArcCurve,\n    CatmullRomCurve3: CatmullRomCurve3,\n    CubicBezierCurve: CubicBezierCurve,\n    CubicBezierCurve3: CubicBezierCurve3,\n    EllipseCurve: EllipseCurve,\n    LineCurve: LineCurve,\n    LineCurve3: LineCurve3,\n    QuadraticBezierCurve: QuadraticBezierCurve,\n    QuadraticBezierCurve3: QuadraticBezierCurve3,\n    SplineCurve: SplineCurve\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   *\n   **/\n\n  /**************************************************************\n   *\tCurved Path - a curve path is simply a array of connected\n   *  curves, but retains the api of a curve\n   **************************************************************/\n\n  function CurvePath() {\n    Curve.call(this);\n    this.type = 'CurvePath';\n    this.curves = [];\n    this.autoClose = false; // Automatically closes the path\n  }\n\n  CurvePath.prototype = Object.assign(Object.create(Curve.prototype), {\n    constructor: CurvePath,\n    add: function (curve) {\n      this.curves.push(curve);\n    },\n    closePath: function () {\n      // Add a line curve if start and end of lines are not connected\n      var startPoint = this.curves[0].getPoint(0);\n      var endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n      if (!startPoint.equals(endPoint)) {\n        this.curves.push(new LineCurve(endPoint, startPoint));\n      }\n    },\n    // To get accurate point with reference to\n    // entire path distance at time t,\n    // following has to be done:\n    // 1. Length of each sub path have to be known\n    // 2. Locate and identify type of curve\n    // 3. Get t for the curve\n    // 4. Return curve.getPointAt(t')\n    getPoint: function (t) {\n      var d = t * this.getLength();\n      var curveLengths = this.getCurveLengths();\n      var i = 0; // To think about boundaries points.\n\n      while (i < curveLengths.length) {\n        if (curveLengths[i] >= d) {\n          var diff = curveLengths[i] - d;\n          var curve = this.curves[i];\n          var segmentLength = curve.getLength();\n          var u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n          return curve.getPointAt(u);\n        }\n\n        i++;\n      }\n\n      return null; // loop where sum != 0, sum > d , sum+1 <d\n    },\n    // We cannot use the default THREE.Curve getPoint() with getLength() because in\n    // THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n    // getPoint() depends on getLength\n    getLength: function () {\n      var lens = this.getCurveLengths();\n      return lens[lens.length - 1];\n    },\n    // cacheLengths must be recalculated.\n    updateArcLengths: function () {\n      this.needsUpdate = true;\n      this.cacheLengths = null;\n      this.getCurveLengths();\n    },\n    // Compute lengths and cache them\n    // We cannot overwrite getLengths() because UtoT mapping uses it.\n    getCurveLengths: function () {\n      // We use cache values if curves and cache array are same length\n      if (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n        return this.cacheLengths;\n      } // Get length of sub-curve\n      // Push sums into cached array\n\n\n      var lengths = [],\n          sums = 0;\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        sums += this.curves[i].getLength();\n        lengths.push(sums);\n      }\n\n      this.cacheLengths = lengths;\n      return lengths;\n    },\n    getSpacedPoints: function (divisions) {\n      if (divisions === undefined) {\n        divisions = 40;\n      }\n\n      var points = [];\n\n      for (var i = 0; i <= divisions; i++) {\n        points.push(this.getPoint(i / divisions));\n      }\n\n      if (this.autoClose) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    getPoints: function (divisions) {\n      divisions = divisions || 12;\n      var points = [],\n          last;\n\n      for (var i = 0, curves = this.curves; i < curves.length; i++) {\n        var curve = curves[i];\n        var resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n        var pts = curve.getPoints(resolution);\n\n        for (var j = 0; j < pts.length; j++) {\n          var point = pts[j];\n\n          if (last && last.equals(point)) {\n            continue;\n          } // ensures no consecutive points are duplicates\n\n\n          points.push(point);\n          last = point;\n        }\n      }\n\n      if (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n        points.push(points[0]);\n      }\n\n      return points;\n    },\n    copy: function (source) {\n      Curve.prototype.copy.call(this, source);\n      this.curves = [];\n\n      for (var i = 0, l = source.curves.length; i < l; i++) {\n        var curve = source.curves[i];\n        this.curves.push(curve.clone());\n      }\n\n      this.autoClose = source.autoClose;\n      return this;\n    },\n    toJSON: function () {\n      var data = Curve.prototype.toJSON.call(this);\n      data.autoClose = this.autoClose;\n      data.curves = [];\n\n      for (var i = 0, l = this.curves.length; i < l; i++) {\n        var curve = this.curves[i];\n        data.curves.push(curve.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function (json) {\n      Curve.prototype.fromJSON.call(this, json);\n      this.autoClose = json.autoClose;\n      this.curves = [];\n\n      for (var i = 0, l = json.curves.length; i < l; i++) {\n        var curve = json.curves[i];\n        this.curves.push(new Curves[curve.type]().fromJSON(curve));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Creates free form 2d path using series of points, lines or curves.\n   **/\n\n  function Path(points) {\n    CurvePath.call(this);\n    this.type = 'Path';\n    this.currentPoint = new Vector2();\n\n    if (points) {\n      this.setFromPoints(points);\n    }\n  }\n\n  Path.prototype = Object.assign(Object.create(CurvePath.prototype), {\n    constructor: Path,\n    setFromPoints: function (points) {\n      this.moveTo(points[0].x, points[0].y);\n\n      for (var i = 1, l = points.length; i < l; i++) {\n        this.lineTo(points[i].x, points[i].y);\n      }\n\n      return this;\n    },\n    moveTo: function (x, y) {\n      this.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n      return this;\n    },\n    lineTo: function (x, y) {\n      var curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n      this.curves.push(curve);\n      this.currentPoint.set(x, y);\n      return this;\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      var curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      var curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n      this.curves.push(curve);\n      this.currentPoint.set(aX, aY);\n      return this;\n    },\n    splineThru: function (pts\n    /*Array of Vector*/\n    ) {\n      var npts = [this.currentPoint.clone()].concat(pts);\n      var curve = new SplineCurve(npts);\n      this.curves.push(curve);\n      this.currentPoint.copy(pts[pts.length - 1]);\n      return this;\n    },\n    arc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    },\n    absarc: function (aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n      this.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n      return this;\n    },\n    ellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var x0 = this.currentPoint.x;\n      var y0 = this.currentPoint.y;\n      this.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n      return this;\n    },\n    absellipse: function (aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n      var curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n      if (this.curves.length > 0) {\n        // if a previous curve is present, attempt to join\n        var firstPoint = curve.getPoint(0);\n\n        if (!firstPoint.equals(this.currentPoint)) {\n          this.lineTo(firstPoint.x, firstPoint.y);\n        }\n      }\n\n      this.curves.push(curve);\n      var lastPoint = curve.getPoint(1);\n      this.currentPoint.copy(lastPoint);\n      return this;\n    },\n    copy: function (source) {\n      CurvePath.prototype.copy.call(this, source);\n      this.currentPoint.copy(source.currentPoint);\n      return this;\n    },\n    toJSON: function () {\n      var data = CurvePath.prototype.toJSON.call(this);\n      data.currentPoint = this.currentPoint.toArray();\n      return data;\n    },\n    fromJSON: function (json) {\n      CurvePath.prototype.fromJSON.call(this, json);\n      this.currentPoint.fromArray(json.currentPoint);\n      return this;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * Defines a 2d shape plane using paths.\n   **/\n  // STEP 1 Create a path.\n  // STEP 2 Turn path into shape.\n  // STEP 3 ExtrudeGeometry takes in Shape/Shapes\n  // STEP 3a - Extract points from each shape, turn to vertices\n  // STEP 3b - Triangulate each shape, add faces.\n\n  function Shape(points) {\n    Path.call(this, points);\n    this.uuid = _Math.generateUUID();\n    this.type = 'Shape';\n    this.holes = [];\n  }\n\n  Shape.prototype = Object.assign(Object.create(Path.prototype), {\n    constructor: Shape,\n    getPointsHoles: function (divisions) {\n      var holesPts = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        holesPts[i] = this.holes[i].getPoints(divisions);\n      }\n\n      return holesPts;\n    },\n    // get points of shape and holes (keypoints based on segments parameter)\n    extractPoints: function (divisions) {\n      return {\n        shape: this.getPoints(divisions),\n        holes: this.getPointsHoles(divisions)\n      };\n    },\n    copy: function (source) {\n      Path.prototype.copy.call(this, source);\n      this.holes = [];\n\n      for (var i = 0, l = source.holes.length; i < l; i++) {\n        var hole = source.holes[i];\n        this.holes.push(hole.clone());\n      }\n\n      return this;\n    },\n    toJSON: function () {\n      var data = Path.prototype.toJSON.call(this);\n      data.uuid = this.uuid;\n      data.holes = [];\n\n      for (var i = 0, l = this.holes.length; i < l; i++) {\n        var hole = this.holes[i];\n        data.holes.push(hole.toJSON());\n      }\n\n      return data;\n    },\n    fromJSON: function (json) {\n      Path.prototype.fromJSON.call(this, json);\n      this.uuid = json.uuid;\n      this.holes = [];\n\n      for (var i = 0, l = json.holes.length; i < l; i++) {\n        var hole = json.holes[i];\n        this.holes.push(new Path().fromJSON(hole));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Light(color, intensity) {\n    Object3D.call(this);\n    this.type = 'Light';\n    this.color = new Color(color);\n    this.intensity = intensity !== undefined ? intensity : 1;\n    this.receiveShadow = undefined;\n  }\n\n  Light.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Light,\n    isLight: true,\n    copy: function (source) {\n      Object3D.prototype.copy.call(this, source);\n      this.color.copy(source.color);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.color = this.color.getHex();\n      data.object.intensity = this.intensity;\n\n      if (this.groundColor !== undefined) {\n        data.object.groundColor = this.groundColor.getHex();\n      }\n\n      if (this.distance !== undefined) {\n        data.object.distance = this.distance;\n      }\n\n      if (this.angle !== undefined) {\n        data.object.angle = this.angle;\n      }\n\n      if (this.decay !== undefined) {\n        data.object.decay = this.decay;\n      }\n\n      if (this.penumbra !== undefined) {\n        data.object.penumbra = this.penumbra;\n      }\n\n      if (this.shadow !== undefined) {\n        data.object.shadow = this.shadow.toJSON();\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function HemisphereLight(skyColor, groundColor, intensity) {\n    Light.call(this, skyColor, intensity);\n    this.type = 'HemisphereLight';\n    this.castShadow = undefined;\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.groundColor = new Color(groundColor);\n  }\n\n  HemisphereLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: HemisphereLight,\n    isHemisphereLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.groundColor.copy(source.groundColor);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function LightShadow(camera) {\n    this.camera = camera;\n    this.bias = 0;\n    this.radius = 1;\n    this.mapSize = new Vector2(512, 512);\n    this.map = null;\n    this.mapPass = null;\n    this.matrix = new Matrix4();\n    this._frustum = new Frustum();\n    this._frameExtents = new Vector2(1, 1);\n    this._viewportCount = 1;\n    this._viewports = [new Vector4(0, 0, 1, 1)];\n  }\n\n  Object.assign(LightShadow.prototype, {\n    _projScreenMatrix: new Matrix4(),\n    _lightPositionWorld: new Vector3(),\n    _lookTarget: new Vector3(),\n    getViewportCount: function () {\n      return this._viewportCount;\n    },\n    getFrustum: function () {\n      return this._frustum;\n    },\n    updateMatrices: function (light) {\n      var shadowCamera = this.camera,\n          shadowMatrix = this.matrix,\n          projScreenMatrix = this._projScreenMatrix,\n          lookTarget = this._lookTarget,\n          lightPositionWorld = this._lightPositionWorld;\n      lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n      shadowCamera.position.copy(lightPositionWorld);\n      lookTarget.setFromMatrixPosition(light.target.matrixWorld);\n      shadowCamera.lookAt(lookTarget);\n      shadowCamera.updateMatrixWorld();\n      projScreenMatrix.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n      this._frustum.setFromMatrix(projScreenMatrix);\n\n      shadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n      shadowMatrix.multiply(shadowCamera.projectionMatrix);\n      shadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n    },\n    getViewport: function (viewportIndex) {\n      return this._viewports[viewportIndex];\n    },\n    getFrameExtents: function () {\n      return this._frameExtents;\n    },\n    copy: function (source) {\n      this.camera = source.camera.clone();\n      this.bias = source.bias;\n      this.radius = source.radius;\n      this.mapSize.copy(source.mapSize);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function () {\n      var object = {};\n\n      if (this.bias !== 0) {\n        object.bias = this.bias;\n      }\n\n      if (this.radius !== 1) {\n        object.radius = this.radius;\n      }\n\n      if (this.mapSize.x !== 512 || this.mapSize.y !== 512) {\n        object.mapSize = this.mapSize.toArray();\n      }\n\n      object.camera = this.camera.toJSON(false).object;\n      delete object.camera.matrix;\n      return object;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function SpotLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(50, 1, 0.5, 500));\n  }\n\n  SpotLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: SpotLightShadow,\n    isSpotLightShadow: true,\n    updateMatrices: function (light) {\n      var camera = this.camera;\n      var fov = _Math.RAD2DEG * 2 * light.angle;\n      var aspect = this.mapSize.width / this.mapSize.height;\n      var far = light.distance || camera.far;\n\n      if (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n        camera.fov = fov;\n        camera.aspect = aspect;\n        camera.far = far;\n        camera.updateProjectionMatrix();\n      }\n\n      LightShadow.prototype.updateMatrices.call(this, light);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function SpotLight(color, intensity, distance, angle, penumbra, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'SpotLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / Math.PI;\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.angle = angle !== undefined ? angle : Math.PI / 3;\n    this.penumbra = penumbra !== undefined ? penumbra : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new SpotLightShadow();\n  }\n\n  SpotLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: SpotLight,\n    isSpotLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.angle = source.angle;\n      this.penumbra = source.penumbra;\n      this.decay = source.decay;\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n\n  function PointLightShadow() {\n    LightShadow.call(this, new PerspectiveCamera(90, 1, 0.5, 500));\n    this._frameExtents = new Vector2(4, 2);\n    this._viewportCount = 6;\n    this._viewports = [// These viewports map a cube-map onto a 2D texture with the\n    // following orientation:\n    //\n    //  xzXZ\n    //   y Y\n    //\n    // X - Positive x direction\n    // x - Negative x direction\n    // Y - Positive y direction\n    // y - Negative y direction\n    // Z - Positive z direction\n    // z - Negative z direction\n    // positive X\n    new Vector4(2, 1, 1, 1), // negative X\n    new Vector4(0, 1, 1, 1), // positive Z\n    new Vector4(3, 1, 1, 1), // negative Z\n    new Vector4(1, 1, 1, 1), // positive Y\n    new Vector4(3, 0, 1, 1), // negative Y\n    new Vector4(1, 0, 1, 1)];\n    this._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n    this._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n  }\n\n  PointLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: PointLightShadow,\n    isPointLightShadow: true,\n    updateMatrices: function (light, viewportIndex) {\n      if (viewportIndex === undefined) {\n        viewportIndex = 0;\n      }\n\n      var camera = this.camera,\n          shadowMatrix = this.matrix,\n          lightPositionWorld = this._lightPositionWorld,\n          lookTarget = this._lookTarget,\n          projScreenMatrix = this._projScreenMatrix;\n      lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n      camera.position.copy(lightPositionWorld);\n      lookTarget.copy(camera.position);\n      lookTarget.add(this._cubeDirections[viewportIndex]);\n      camera.up.copy(this._cubeUps[viewportIndex]);\n      camera.lookAt(lookTarget);\n      camera.updateMatrixWorld();\n      shadowMatrix.makeTranslation(-lightPositionWorld.x, -lightPositionWorld.y, -lightPositionWorld.z);\n      projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n      this._frustum.setFromMatrix(projScreenMatrix);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function PointLight(color, intensity, distance, decay) {\n    Light.call(this, color, intensity);\n    this.type = 'PointLight';\n    Object.defineProperty(this, 'power', {\n      get: function () {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        return this.intensity * 4 * Math.PI;\n      },\n      set: function (power) {\n        // intensity = power per solid angle.\n        // ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n        this.intensity = power / (4 * Math.PI);\n      }\n    });\n    this.distance = distance !== undefined ? distance : 0;\n    this.decay = decay !== undefined ? decay : 1; // for physically correct lights, should be 2.\n\n    this.shadow = new PointLightShadow();\n  }\n\n  PointLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: PointLight,\n    isPointLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.distance = source.distance;\n      this.decay = source.decay;\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author arose / http://github.com/arose\n   */\n\n  function OrthographicCamera(left, right, top, bottom, near, far) {\n    Camera.call(this);\n    this.type = 'OrthographicCamera';\n    this.zoom = 1;\n    this.view = null;\n    this.left = left !== undefined ? left : -1;\n    this.right = right !== undefined ? right : 1;\n    this.top = top !== undefined ? top : 1;\n    this.bottom = bottom !== undefined ? bottom : -1;\n    this.near = near !== undefined ? near : 0.1;\n    this.far = far !== undefined ? far : 2000;\n    this.updateProjectionMatrix();\n  }\n\n  OrthographicCamera.prototype = Object.assign(Object.create(Camera.prototype), {\n    constructor: OrthographicCamera,\n    isOrthographicCamera: true,\n    copy: function (source, recursive) {\n      Camera.prototype.copy.call(this, source, recursive);\n      this.left = source.left;\n      this.right = source.right;\n      this.top = source.top;\n      this.bottom = source.bottom;\n      this.near = source.near;\n      this.far = source.far;\n      this.zoom = source.zoom;\n      this.view = source.view === null ? null : Object.assign({}, source.view);\n      return this;\n    },\n    setViewOffset: function (fullWidth, fullHeight, x, y, width, height) {\n      if (this.view === null) {\n        this.view = {\n          enabled: true,\n          fullWidth: 1,\n          fullHeight: 1,\n          offsetX: 0,\n          offsetY: 0,\n          width: 1,\n          height: 1\n        };\n      }\n\n      this.view.enabled = true;\n      this.view.fullWidth = fullWidth;\n      this.view.fullHeight = fullHeight;\n      this.view.offsetX = x;\n      this.view.offsetY = y;\n      this.view.width = width;\n      this.view.height = height;\n      this.updateProjectionMatrix();\n    },\n    clearViewOffset: function () {\n      if (this.view !== null) {\n        this.view.enabled = false;\n      }\n\n      this.updateProjectionMatrix();\n    },\n    updateProjectionMatrix: function () {\n      var dx = (this.right - this.left) / (2 * this.zoom);\n      var dy = (this.top - this.bottom) / (2 * this.zoom);\n      var cx = (this.right + this.left) / 2;\n      var cy = (this.top + this.bottom) / 2;\n      var left = cx - dx;\n      var right = cx + dx;\n      var top = cy + dy;\n      var bottom = cy - dy;\n\n      if (this.view !== null && this.view.enabled) {\n        var zoomW = this.zoom / (this.view.width / this.view.fullWidth);\n        var zoomH = this.zoom / (this.view.height / this.view.fullHeight);\n        var scaleW = (this.right - this.left) / this.view.width;\n        var scaleH = (this.top - this.bottom) / this.view.height;\n        left += scaleW * (this.view.offsetX / zoomW);\n        right = left + scaleW * (this.view.width / zoomW);\n        top -= scaleH * (this.view.offsetY / zoomH);\n        bottom = top - scaleH * (this.view.height / zoomH);\n      }\n\n      this.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n      this.projectionMatrixInverse.getInverse(this.projectionMatrix);\n    },\n    toJSON: function (meta) {\n      var data = Object3D.prototype.toJSON.call(this, meta);\n      data.object.zoom = this.zoom;\n      data.object.left = this.left;\n      data.object.right = this.right;\n      data.object.top = this.top;\n      data.object.bottom = this.bottom;\n      data.object.near = this.near;\n      data.object.far = this.far;\n\n      if (this.view !== null) {\n        data.object.view = Object.assign({}, this.view);\n      }\n\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function DirectionalLightShadow() {\n    LightShadow.call(this, new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n  }\n\n  DirectionalLightShadow.prototype = Object.assign(Object.create(LightShadow.prototype), {\n    constructor: DirectionalLightShadow,\n    isDirectionalLightShadow: true,\n    updateMatrices: function (light) {\n      LightShadow.prototype.updateMatrices.call(this, light);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function DirectionalLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'DirectionalLight';\n    this.position.copy(Object3D.DefaultUp);\n    this.updateMatrix();\n    this.target = new Object3D();\n    this.shadow = new DirectionalLightShadow();\n  }\n\n  DirectionalLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: DirectionalLight,\n    isDirectionalLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.target = source.target.clone();\n      this.shadow = source.shadow.clone();\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AmbientLight(color, intensity) {\n    Light.call(this, color, intensity);\n    this.type = 'AmbientLight';\n    this.castShadow = undefined;\n  }\n\n  AmbientLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: AmbientLight,\n    isAmbientLight: true\n  });\n  /**\n   * @author abelnation / http://github.com/abelnation\n   */\n\n  function RectAreaLight(color, intensity, width, height) {\n    Light.call(this, color, intensity);\n    this.type = 'RectAreaLight';\n    this.width = width !== undefined ? width : 10;\n    this.height = height !== undefined ? height : 10;\n  }\n\n  RectAreaLight.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: RectAreaLight,\n    isRectAreaLight: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.width = source.width;\n      this.height = source.height;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Light.prototype.toJSON.call(this, meta);\n      data.object.width = this.width;\n      data.object.height = this.height;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function MaterialLoader(manager) {\n    Loader.call(this, manager);\n    this.textures = {};\n  }\n\n  MaterialLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: MaterialLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var textures = this.textures;\n\n      function getTexture(name) {\n        if (textures[name] === undefined) {\n          console.warn('THREE.MaterialLoader: Undefined texture', name);\n        }\n\n        return textures[name];\n      }\n\n      var material = new Materials[json.type]();\n\n      if (json.uuid !== undefined) {\n        material.uuid = json.uuid;\n      }\n\n      if (json.name !== undefined) {\n        material.name = json.name;\n      }\n\n      if (json.color !== undefined) {\n        material.color.setHex(json.color);\n      }\n\n      if (json.roughness !== undefined) {\n        material.roughness = json.roughness;\n      }\n\n      if (json.metalness !== undefined) {\n        material.metalness = json.metalness;\n      }\n\n      if (json.sheen !== undefined) {\n        material.sheen = new Color().setHex(json.sheen);\n      }\n\n      if (json.emissive !== undefined) {\n        material.emissive.setHex(json.emissive);\n      }\n\n      if (json.specular !== undefined) {\n        material.specular.setHex(json.specular);\n      }\n\n      if (json.shininess !== undefined) {\n        material.shininess = json.shininess;\n      }\n\n      if (json.clearcoat !== undefined) {\n        material.clearcoat = json.clearcoat;\n      }\n\n      if (json.clearcoatRoughness !== undefined) {\n        material.clearcoatRoughness = json.clearcoatRoughness;\n      }\n\n      if (json.vertexColors !== undefined) {\n        material.vertexColors = json.vertexColors;\n      }\n\n      if (json.fog !== undefined) {\n        material.fog = json.fog;\n      }\n\n      if (json.flatShading !== undefined) {\n        material.flatShading = json.flatShading;\n      }\n\n      if (json.blending !== undefined) {\n        material.blending = json.blending;\n      }\n\n      if (json.combine !== undefined) {\n        material.combine = json.combine;\n      }\n\n      if (json.side !== undefined) {\n        material.side = json.side;\n      }\n\n      if (json.opacity !== undefined) {\n        material.opacity = json.opacity;\n      }\n\n      if (json.transparent !== undefined) {\n        material.transparent = json.transparent;\n      }\n\n      if (json.alphaTest !== undefined) {\n        material.alphaTest = json.alphaTest;\n      }\n\n      if (json.depthTest !== undefined) {\n        material.depthTest = json.depthTest;\n      }\n\n      if (json.depthWrite !== undefined) {\n        material.depthWrite = json.depthWrite;\n      }\n\n      if (json.colorWrite !== undefined) {\n        material.colorWrite = json.colorWrite;\n      }\n\n      if (json.stencilWrite !== undefined) {\n        material.stencilWrite = json.stencilWrite;\n      }\n\n      if (json.stencilWriteMask !== undefined) {\n        material.stencilWriteMask = json.stencilWriteMask;\n      }\n\n      if (json.stencilFunc !== undefined) {\n        material.stencilFunc = json.stencilFunc;\n      }\n\n      if (json.stencilRef !== undefined) {\n        material.stencilRef = json.stencilRef;\n      }\n\n      if (json.stencilFuncMask !== undefined) {\n        material.stencilFuncMask = json.stencilFuncMask;\n      }\n\n      if (json.stencilFail !== undefined) {\n        material.stencilFail = json.stencilFail;\n      }\n\n      if (json.stencilZFail !== undefined) {\n        material.stencilZFail = json.stencilZFail;\n      }\n\n      if (json.stencilZPass !== undefined) {\n        material.stencilZPass = json.stencilZPass;\n      }\n\n      if (json.wireframe !== undefined) {\n        material.wireframe = json.wireframe;\n      }\n\n      if (json.wireframeLinewidth !== undefined) {\n        material.wireframeLinewidth = json.wireframeLinewidth;\n      }\n\n      if (json.wireframeLinecap !== undefined) {\n        material.wireframeLinecap = json.wireframeLinecap;\n      }\n\n      if (json.wireframeLinejoin !== undefined) {\n        material.wireframeLinejoin = json.wireframeLinejoin;\n      }\n\n      if (json.rotation !== undefined) {\n        material.rotation = json.rotation;\n      }\n\n      if (json.linewidth !== 1) {\n        material.linewidth = json.linewidth;\n      }\n\n      if (json.dashSize !== undefined) {\n        material.dashSize = json.dashSize;\n      }\n\n      if (json.gapSize !== undefined) {\n        material.gapSize = json.gapSize;\n      }\n\n      if (json.scale !== undefined) {\n        material.scale = json.scale;\n      }\n\n      if (json.polygonOffset !== undefined) {\n        material.polygonOffset = json.polygonOffset;\n      }\n\n      if (json.polygonOffsetFactor !== undefined) {\n        material.polygonOffsetFactor = json.polygonOffsetFactor;\n      }\n\n      if (json.polygonOffsetUnits !== undefined) {\n        material.polygonOffsetUnits = json.polygonOffsetUnits;\n      }\n\n      if (json.skinning !== undefined) {\n        material.skinning = json.skinning;\n      }\n\n      if (json.morphTargets !== undefined) {\n        material.morphTargets = json.morphTargets;\n      }\n\n      if (json.morphNormals !== undefined) {\n        material.morphNormals = json.morphNormals;\n      }\n\n      if (json.dithering !== undefined) {\n        material.dithering = json.dithering;\n      }\n\n      if (json.visible !== undefined) {\n        material.visible = json.visible;\n      }\n\n      if (json.toneMapped !== undefined) {\n        material.toneMapped = json.toneMapped;\n      }\n\n      if (json.userData !== undefined) {\n        material.userData = json.userData;\n      } // Shader Material\n\n\n      if (json.uniforms !== undefined) {\n        for (var name in json.uniforms) {\n          var uniform = json.uniforms[name];\n          material.uniforms[name] = {};\n\n          switch (uniform.type) {\n            case 't':\n              material.uniforms[name].value = getTexture(uniform.value);\n              break;\n\n            case 'c':\n              material.uniforms[name].value = new Color().setHex(uniform.value);\n              break;\n\n            case 'v2':\n              material.uniforms[name].value = new Vector2().fromArray(uniform.value);\n              break;\n\n            case 'v3':\n              material.uniforms[name].value = new Vector3().fromArray(uniform.value);\n              break;\n\n            case 'v4':\n              material.uniforms[name].value = new Vector4().fromArray(uniform.value);\n              break;\n\n            case 'm3':\n              material.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\n            case 'm4':\n              material.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n              break;\n\n            default:\n              material.uniforms[name].value = uniform.value;\n          }\n        }\n      }\n\n      if (json.defines !== undefined) {\n        material.defines = json.defines;\n      }\n\n      if (json.vertexShader !== undefined) {\n        material.vertexShader = json.vertexShader;\n      }\n\n      if (json.fragmentShader !== undefined) {\n        material.fragmentShader = json.fragmentShader;\n      }\n\n      if (json.extensions !== undefined) {\n        for (var key in json.extensions) {\n          material.extensions[key] = json.extensions[key];\n        }\n      } // Deprecated\n\n\n      if (json.shading !== undefined) {\n        material.flatShading = json.shading === 1;\n      } // THREE.FlatShading\n      // for PointsMaterial\n\n\n      if (json.size !== undefined) {\n        material.size = json.size;\n      }\n\n      if (json.sizeAttenuation !== undefined) {\n        material.sizeAttenuation = json.sizeAttenuation;\n      } // maps\n\n\n      if (json.map !== undefined) {\n        material.map = getTexture(json.map);\n      }\n\n      if (json.matcap !== undefined) {\n        material.matcap = getTexture(json.matcap);\n      }\n\n      if (json.alphaMap !== undefined) {\n        material.alphaMap = getTexture(json.alphaMap);\n        material.transparent = true;\n      }\n\n      if (json.bumpMap !== undefined) {\n        material.bumpMap = getTexture(json.bumpMap);\n      }\n\n      if (json.bumpScale !== undefined) {\n        material.bumpScale = json.bumpScale;\n      }\n\n      if (json.normalMap !== undefined) {\n        material.normalMap = getTexture(json.normalMap);\n      }\n\n      if (json.normalMapType !== undefined) {\n        material.normalMapType = json.normalMapType;\n      }\n\n      if (json.normalScale !== undefined) {\n        var normalScale = json.normalScale;\n\n        if (Array.isArray(normalScale) === false) {\n          // Blender exporter used to export a scalar. See #7459\n          normalScale = [normalScale, normalScale];\n        }\n\n        material.normalScale = new Vector2().fromArray(normalScale);\n      }\n\n      if (json.displacementMap !== undefined) {\n        material.displacementMap = getTexture(json.displacementMap);\n      }\n\n      if (json.displacementScale !== undefined) {\n        material.displacementScale = json.displacementScale;\n      }\n\n      if (json.displacementBias !== undefined) {\n        material.displacementBias = json.displacementBias;\n      }\n\n      if (json.roughnessMap !== undefined) {\n        material.roughnessMap = getTexture(json.roughnessMap);\n      }\n\n      if (json.metalnessMap !== undefined) {\n        material.metalnessMap = getTexture(json.metalnessMap);\n      }\n\n      if (json.emissiveMap !== undefined) {\n        material.emissiveMap = getTexture(json.emissiveMap);\n      }\n\n      if (json.emissiveIntensity !== undefined) {\n        material.emissiveIntensity = json.emissiveIntensity;\n      }\n\n      if (json.specularMap !== undefined) {\n        material.specularMap = getTexture(json.specularMap);\n      }\n\n      if (json.envMap !== undefined) {\n        material.envMap = getTexture(json.envMap);\n      }\n\n      if (json.envMapIntensity !== undefined) {\n        material.envMapIntensity = json.envMapIntensity;\n      }\n\n      if (json.reflectivity !== undefined) {\n        material.reflectivity = json.reflectivity;\n      }\n\n      if (json.refractionRatio !== undefined) {\n        material.refractionRatio = json.refractionRatio;\n      }\n\n      if (json.lightMap !== undefined) {\n        material.lightMap = getTexture(json.lightMap);\n      }\n\n      if (json.lightMapIntensity !== undefined) {\n        material.lightMapIntensity = json.lightMapIntensity;\n      }\n\n      if (json.aoMap !== undefined) {\n        material.aoMap = getTexture(json.aoMap);\n      }\n\n      if (json.aoMapIntensity !== undefined) {\n        material.aoMapIntensity = json.aoMapIntensity;\n      }\n\n      if (json.gradientMap !== undefined) {\n        material.gradientMap = getTexture(json.gradientMap);\n      }\n\n      if (json.clearcoatNormalMap !== undefined) {\n        material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n      }\n\n      if (json.clearcoatNormalScale !== undefined) {\n        material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n      }\n\n      return material;\n    },\n    setTextures: function (value) {\n      this.textures = value;\n      return this;\n    }\n  });\n  /**\n   * @author Don McCurdy / https://www.donmccurdy.com\n   */\n\n  var LoaderUtils = {\n    decodeText: function (array) {\n      if (typeof TextDecoder !== 'undefined') {\n        return new TextDecoder().decode(array);\n      } // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n      // throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n      var s = '';\n\n      for (var i = 0, il = array.length; i < il; i++) {\n        // Implicitly assumes little-endian.\n        s += String.fromCharCode(array[i]);\n      }\n\n      try {\n        // merges multi-byte utf-8 characters.\n        return decodeURIComponent(escape(s));\n      } catch (e) {\n        // see #16358\n        return s;\n      }\n    },\n    extractUrlBase: function (url) {\n      var index = url.lastIndexOf('/');\n\n      if (index === -1) {\n        return './';\n      }\n\n      return url.substr(0, index + 1);\n    }\n  };\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedBufferGeometry() {\n    BufferGeometry.call(this);\n    this.type = 'InstancedBufferGeometry';\n    this.maxInstancedCount = undefined;\n  }\n\n  InstancedBufferGeometry.prototype = Object.assign(Object.create(BufferGeometry.prototype), {\n    constructor: InstancedBufferGeometry,\n    isInstancedBufferGeometry: true,\n    copy: function (source) {\n      BufferGeometry.prototype.copy.call(this, source);\n      this.maxInstancedCount = source.maxInstancedCount;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    toJSON: function () {\n      var data = BufferGeometry.prototype.toJSON.call(this);\n      data.maxInstancedCount = this.maxInstancedCount;\n      data.isInstancedBufferGeometry = true;\n      return data;\n    }\n  });\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n  function InstancedBufferAttribute(array, itemSize, normalized, meshPerAttribute) {\n    if (typeof normalized === 'number') {\n      meshPerAttribute = normalized;\n      normalized = false;\n      console.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n    }\n\n    BufferAttribute.call(this, array, itemSize, normalized);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedBufferAttribute.prototype = Object.assign(Object.create(BufferAttribute.prototype), {\n    constructor: InstancedBufferAttribute,\n    isInstancedBufferAttribute: true,\n    copy: function (source) {\n      BufferAttribute.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    },\n    toJSON: function () {\n      var data = BufferAttribute.prototype.toJSON.call(this);\n      data.meshPerAttribute = this.meshPerAttribute;\n      data.isInstancedBufferAttribute = true;\n      return data;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function BufferGeometryLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  BufferGeometryLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: BufferGeometryLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(scope.path);\n      loader.load(url, function (text) {\n        onLoad(scope.parse(JSON.parse(text)));\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      var geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n      var index = json.data.index;\n\n      if (index !== undefined) {\n        var typedArray = new TYPED_ARRAYS[index.type](index.array);\n        geometry.setIndex(new BufferAttribute(typedArray, 1));\n      }\n\n      var attributes = json.data.attributes;\n\n      for (var key in attributes) {\n        var attribute = attributes[key];\n        var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n        var bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n        var bufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\n        if (attribute.name !== undefined) {\n          bufferAttribute.name = attribute.name;\n        }\n\n        geometry.setAttribute(key, bufferAttribute);\n      }\n\n      var morphAttributes = json.data.morphAttributes;\n\n      if (morphAttributes) {\n        for (var key in morphAttributes) {\n          var attributeArray = morphAttributes[key];\n          var array = [];\n\n          for (var i = 0, il = attributeArray.length; i < il; i++) {\n            var attribute = attributeArray[i];\n            var typedArray = new TYPED_ARRAYS[attribute.type](attribute.array);\n            var bufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\n            if (attribute.name !== undefined) {\n              bufferAttribute.name = attribute.name;\n            }\n\n            array.push(bufferAttribute);\n          }\n\n          geometry.morphAttributes[key] = array;\n        }\n      }\n\n      var morphTargetsRelative = json.data.morphTargetsRelative;\n\n      if (morphTargetsRelative) {\n        geometry.morphTargetsRelative = true;\n      }\n\n      var groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n      if (groups !== undefined) {\n        for (var i = 0, n = groups.length; i !== n; ++i) {\n          var group = groups[i];\n          geometry.addGroup(group.start, group.count, group.materialIndex);\n        }\n      }\n\n      var boundingSphere = json.data.boundingSphere;\n\n      if (boundingSphere !== undefined) {\n        var center = new Vector3();\n\n        if (boundingSphere.center !== undefined) {\n          center.fromArray(boundingSphere.center);\n        }\n\n        geometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n      }\n\n      if (json.name) {\n        geometry.name = json.name;\n      }\n\n      if (json.userData) {\n        geometry.userData = json.userData;\n      }\n\n      return geometry;\n    }\n  });\n  var TYPED_ARRAYS = {\n    Int8Array: Int8Array,\n    Uint8Array: Uint8Array,\n    // Workaround for IE11 pre KB2929437. See #11440\n    Uint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n    Int16Array: Int16Array,\n    Uint16Array: Uint16Array,\n    Int32Array: Int32Array,\n    Uint32Array: Uint32Array,\n    Float32Array: Float32Array,\n    Float64Array: Float64Array\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function ObjectLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  ObjectLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: ObjectLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n      this.resourcePath = this.resourcePath || path;\n      var loader = new FileLoader(scope.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json = null;\n\n        try {\n          json = JSON.parse(text);\n        } catch (error) {\n          if (onError !== undefined) {\n            onError(error);\n          }\n\n          console.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n          return;\n        }\n\n        var metadata = json.metadata;\n\n        if (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n          console.error('THREE.ObjectLoader: Can\\'t load ' + url);\n          return;\n        }\n\n        scope.parse(json, onLoad);\n      }, onProgress, onError);\n    },\n    parse: function (json, onLoad) {\n      var shapes = this.parseShape(json.shapes);\n      var geometries = this.parseGeometries(json.geometries, shapes);\n      var images = this.parseImages(json.images, function () {\n        if (onLoad !== undefined) {\n          onLoad(object);\n        }\n      });\n      var textures = this.parseTextures(json.textures, images);\n      var materials = this.parseMaterials(json.materials, textures);\n      var object = this.parseObject(json.object, geometries, materials);\n\n      if (json.animations) {\n        object.animations = this.parseAnimations(json.animations);\n      }\n\n      if (json.images === undefined || json.images.length === 0) {\n        if (onLoad !== undefined) {\n          onLoad(object);\n        }\n      }\n\n      return object;\n    },\n    parseShape: function (json) {\n      var shapes = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var shape = new Shape().fromJSON(json[i]);\n          shapes[shape.uuid] = shape;\n        }\n      }\n\n      return shapes;\n    },\n    parseGeometries: function (json, shapes) {\n      var geometries = {};\n\n      if (json !== undefined) {\n        var bufferGeometryLoader = new BufferGeometryLoader();\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var geometry;\n          var data = json[i];\n\n          switch (data.type) {\n            case 'PlaneGeometry':\n            case 'PlaneBufferGeometry':\n              geometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n              break;\n\n            case 'BoxGeometry':\n            case 'BoxBufferGeometry':\n            case 'CubeGeometry':\n              // backwards compatible\n              geometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n              break;\n\n            case 'CircleGeometry':\n            case 'CircleBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'CylinderGeometry':\n            case 'CylinderBufferGeometry':\n              geometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'ConeGeometry':\n            case 'ConeBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'SphereGeometry':\n            case 'SphereBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'DodecahedronGeometry':\n            case 'DodecahedronBufferGeometry':\n            case 'IcosahedronGeometry':\n            case 'IcosahedronBufferGeometry':\n            case 'OctahedronGeometry':\n            case 'OctahedronBufferGeometry':\n            case 'TetrahedronGeometry':\n            case 'TetrahedronBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.detail);\n              break;\n\n            case 'RingGeometry':\n            case 'RingBufferGeometry':\n              geometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n              break;\n\n            case 'TorusGeometry':\n            case 'TorusBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n              break;\n\n            case 'TorusKnotGeometry':\n            case 'TorusKnotBufferGeometry':\n              geometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n              break;\n\n            case 'TubeGeometry':\n            case 'TubeBufferGeometry':\n              // This only works for built-in curves (e.g. CatmullRomCurve3).\n              // User defined curves or instances of CurvePath will not be deserialized.\n              geometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n              break;\n\n            case 'LatheGeometry':\n            case 'LatheBufferGeometry':\n              geometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n              break;\n\n            case 'PolyhedronGeometry':\n            case 'PolyhedronBufferGeometry':\n              geometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n              break;\n\n            case 'ShapeGeometry':\n            case 'ShapeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n              break;\n\n            case 'ExtrudeGeometry':\n            case 'ExtrudeBufferGeometry':\n              var geometryShapes = [];\n\n              for (var j = 0, jl = data.shapes.length; j < jl; j++) {\n                var shape = shapes[data.shapes[j]];\n                geometryShapes.push(shape);\n              }\n\n              var extrudePath = data.options.extrudePath;\n\n              if (extrudePath !== undefined) {\n                data.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n              }\n\n              geometry = new Geometries[data.type](geometryShapes, data.options);\n              break;\n\n            case 'BufferGeometry':\n            case 'InstancedBufferGeometry':\n              geometry = bufferGeometryLoader.parse(data);\n              break;\n\n            case 'Geometry':\n              if ('THREE' in window && 'LegacyJSONLoader' in THREE) {\n                var geometryLoader = new THREE.LegacyJSONLoader();\n                geometry = geometryLoader.parse(data, this.resourcePath).geometry;\n              } else {\n                console.error('THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".');\n              }\n\n              break;\n\n            default:\n              console.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n              continue;\n          }\n\n          geometry.uuid = data.uuid;\n\n          if (data.name !== undefined) {\n            geometry.name = data.name;\n          }\n\n          if (geometry.isBufferGeometry === true && data.userData !== undefined) {\n            geometry.userData = data.userData;\n          }\n\n          geometries[data.uuid] = geometry;\n        }\n      }\n\n      return geometries;\n    },\n    parseMaterials: function (json, textures) {\n      var cache = {}; // MultiMaterial\n\n      var materials = {};\n\n      if (json !== undefined) {\n        var loader = new MaterialLoader();\n        loader.setTextures(textures);\n\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.type === 'MultiMaterial') {\n            // Deprecated\n            var array = [];\n\n            for (var j = 0; j < data.materials.length; j++) {\n              var material = data.materials[j];\n\n              if (cache[material.uuid] === undefined) {\n                cache[material.uuid] = loader.parse(material);\n              }\n\n              array.push(cache[material.uuid]);\n            }\n\n            materials[data.uuid] = array;\n          } else {\n            if (cache[data.uuid] === undefined) {\n              cache[data.uuid] = loader.parse(data);\n            }\n\n            materials[data.uuid] = cache[data.uuid];\n          }\n        }\n      }\n\n      return materials;\n    },\n    parseAnimations: function (json) {\n      var animations = [];\n\n      for (var i = 0; i < json.length; i++) {\n        var data = json[i];\n        var clip = AnimationClip.parse(data);\n\n        if (data.uuid !== undefined) {\n          clip.uuid = data.uuid;\n        }\n\n        animations.push(clip);\n      }\n\n      return animations;\n    },\n    parseImages: function (json, onLoad) {\n      var scope = this;\n      var images = {};\n\n      function loadImage(url) {\n        scope.manager.itemStart(url);\n        return loader.load(url, function () {\n          scope.manager.itemEnd(url);\n        }, undefined, function () {\n          scope.manager.itemError(url);\n          scope.manager.itemEnd(url);\n        });\n      }\n\n      if (json !== undefined && json.length > 0) {\n        var manager = new LoadingManager(onLoad);\n        var loader = new ImageLoader(manager);\n        loader.setCrossOrigin(this.crossOrigin);\n\n        for (var i = 0, il = json.length; i < il; i++) {\n          var image = json[i];\n          var url = image.url;\n\n          if (Array.isArray(url)) {\n            // load array of images e.g CubeTexture\n            images[image.uuid] = [];\n\n            for (var j = 0, jl = url.length; j < jl; j++) {\n              var currentUrl = url[j];\n              var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(currentUrl) ? currentUrl : scope.resourcePath + currentUrl;\n              images[image.uuid].push(loadImage(path));\n            }\n          } else {\n            // load single image\n            var path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(image.url) ? image.url : scope.resourcePath + image.url;\n            images[image.uuid] = loadImage(path);\n          }\n        }\n      }\n\n      return images;\n    },\n    parseTextures: function (json, images) {\n      function parseConstant(value, type) {\n        if (typeof value === 'number') {\n          return value;\n        }\n\n        console.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n        return type[value];\n      }\n\n      var textures = {};\n\n      if (json !== undefined) {\n        for (var i = 0, l = json.length; i < l; i++) {\n          var data = json[i];\n\n          if (data.image === undefined) {\n            console.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n          }\n\n          if (images[data.image] === undefined) {\n            console.warn('THREE.ObjectLoader: Undefined image', data.image);\n          }\n\n          var texture;\n\n          if (Array.isArray(images[data.image])) {\n            texture = new CubeTexture(images[data.image]);\n          } else {\n            texture = new Texture(images[data.image]);\n          }\n\n          texture.needsUpdate = true;\n          texture.uuid = data.uuid;\n\n          if (data.name !== undefined) {\n            texture.name = data.name;\n          }\n\n          if (data.mapping !== undefined) {\n            texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n          }\n\n          if (data.offset !== undefined) {\n            texture.offset.fromArray(data.offset);\n          }\n\n          if (data.repeat !== undefined) {\n            texture.repeat.fromArray(data.repeat);\n          }\n\n          if (data.center !== undefined) {\n            texture.center.fromArray(data.center);\n          }\n\n          if (data.rotation !== undefined) {\n            texture.rotation = data.rotation;\n          }\n\n          if (data.wrap !== undefined) {\n            texture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n            texture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n          }\n\n          if (data.format !== undefined) {\n            texture.format = data.format;\n          }\n\n          if (data.type !== undefined) {\n            texture.type = data.type;\n          }\n\n          if (data.encoding !== undefined) {\n            texture.encoding = data.encoding;\n          }\n\n          if (data.minFilter !== undefined) {\n            texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n          }\n\n          if (data.magFilter !== undefined) {\n            texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n          }\n\n          if (data.anisotropy !== undefined) {\n            texture.anisotropy = data.anisotropy;\n          }\n\n          if (data.flipY !== undefined) {\n            texture.flipY = data.flipY;\n          }\n\n          if (data.premultiplyAlpha !== undefined) {\n            texture.premultiplyAlpha = data.premultiplyAlpha;\n          }\n\n          if (data.unpackAlignment !== undefined) {\n            texture.unpackAlignment = data.unpackAlignment;\n          }\n\n          textures[data.uuid] = texture;\n        }\n      }\n\n      return textures;\n    },\n    parseObject: function (data, geometries, materials) {\n      var object;\n\n      function getGeometry(name) {\n        if (geometries[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined geometry', name);\n        }\n\n        return geometries[name];\n      }\n\n      function getMaterial(name) {\n        if (name === undefined) {\n          return undefined;\n        }\n\n        if (Array.isArray(name)) {\n          var array = [];\n\n          for (var i = 0, l = name.length; i < l; i++) {\n            var uuid = name[i];\n\n            if (materials[uuid] === undefined) {\n              console.warn('THREE.ObjectLoader: Undefined material', uuid);\n            }\n\n            array.push(materials[uuid]);\n          }\n\n          return array;\n        }\n\n        if (materials[name] === undefined) {\n          console.warn('THREE.ObjectLoader: Undefined material', name);\n        }\n\n        return materials[name];\n      }\n\n      switch (data.type) {\n        case 'Scene':\n          object = new Scene();\n\n          if (data.background !== undefined) {\n            if (Number.isInteger(data.background)) {\n              object.background = new Color(data.background);\n            }\n          }\n\n          if (data.fog !== undefined) {\n            if (data.fog.type === 'Fog') {\n              object.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n            } else if (data.fog.type === 'FogExp2') {\n              object.fog = new FogExp2(data.fog.color, data.fog.density);\n            }\n          }\n\n          break;\n\n        case 'PerspectiveCamera':\n          object = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\n          if (data.focus !== undefined) {\n            object.focus = data.focus;\n          }\n\n          if (data.zoom !== undefined) {\n            object.zoom = data.zoom;\n          }\n\n          if (data.filmGauge !== undefined) {\n            object.filmGauge = data.filmGauge;\n          }\n\n          if (data.filmOffset !== undefined) {\n            object.filmOffset = data.filmOffset;\n          }\n\n          if (data.view !== undefined) {\n            object.view = Object.assign({}, data.view);\n          }\n\n          break;\n\n        case 'OrthographicCamera':\n          object = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\n          if (data.zoom !== undefined) {\n            object.zoom = data.zoom;\n          }\n\n          if (data.view !== undefined) {\n            object.view = Object.assign({}, data.view);\n          }\n\n          break;\n\n        case 'AmbientLight':\n          object = new AmbientLight(data.color, data.intensity);\n          break;\n\n        case 'DirectionalLight':\n          object = new DirectionalLight(data.color, data.intensity);\n          break;\n\n        case 'PointLight':\n          object = new PointLight(data.color, data.intensity, data.distance, data.decay);\n          break;\n\n        case 'RectAreaLight':\n          object = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n          break;\n\n        case 'SpotLight':\n          object = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n          break;\n\n        case 'HemisphereLight':\n          object = new HemisphereLight(data.color, data.groundColor, data.intensity);\n          break;\n\n        case 'SkinnedMesh':\n          console.warn('THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.');\n\n        case 'Mesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n\n          if (geometry.bones && geometry.bones.length > 0) {\n            object = new SkinnedMesh(geometry, material);\n          } else {\n            object = new Mesh(geometry, material);\n          }\n\n          break;\n\n        case 'InstancedMesh':\n          var geometry = getGeometry(data.geometry);\n          var material = getMaterial(data.material);\n          var count = data.count;\n          var instanceMatrix = data.instanceMatrix;\n          object = new InstancedMesh(geometry, material, count);\n          object.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n          break;\n\n        case 'LOD':\n          object = new LOD();\n          break;\n\n        case 'Line':\n          object = new Line(getGeometry(data.geometry), getMaterial(data.material), data.mode);\n          break;\n\n        case 'LineLoop':\n          object = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'LineSegments':\n          object = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'PointCloud':\n        case 'Points':\n          object = new Points(getGeometry(data.geometry), getMaterial(data.material));\n          break;\n\n        case 'Sprite':\n          object = new Sprite(getMaterial(data.material));\n          break;\n\n        case 'Group':\n          object = new Group();\n          break;\n\n        default:\n          object = new Object3D();\n      }\n\n      object.uuid = data.uuid;\n\n      if (data.name !== undefined) {\n        object.name = data.name;\n      }\n\n      if (data.matrix !== undefined) {\n        object.matrix.fromArray(data.matrix);\n\n        if (data.matrixAutoUpdate !== undefined) {\n          object.matrixAutoUpdate = data.matrixAutoUpdate;\n        }\n\n        if (object.matrixAutoUpdate) {\n          object.matrix.decompose(object.position, object.quaternion, object.scale);\n        }\n      } else {\n        if (data.position !== undefined) {\n          object.position.fromArray(data.position);\n        }\n\n        if (data.rotation !== undefined) {\n          object.rotation.fromArray(data.rotation);\n        }\n\n        if (data.quaternion !== undefined) {\n          object.quaternion.fromArray(data.quaternion);\n        }\n\n        if (data.scale !== undefined) {\n          object.scale.fromArray(data.scale);\n        }\n      }\n\n      if (data.castShadow !== undefined) {\n        object.castShadow = data.castShadow;\n      }\n\n      if (data.receiveShadow !== undefined) {\n        object.receiveShadow = data.receiveShadow;\n      }\n\n      if (data.shadow) {\n        if (data.shadow.bias !== undefined) {\n          object.shadow.bias = data.shadow.bias;\n        }\n\n        if (data.shadow.radius !== undefined) {\n          object.shadow.radius = data.shadow.radius;\n        }\n\n        if (data.shadow.mapSize !== undefined) {\n          object.shadow.mapSize.fromArray(data.shadow.mapSize);\n        }\n\n        if (data.shadow.camera !== undefined) {\n          object.shadow.camera = this.parseObject(data.shadow.camera);\n        }\n      }\n\n      if (data.visible !== undefined) {\n        object.visible = data.visible;\n      }\n\n      if (data.frustumCulled !== undefined) {\n        object.frustumCulled = data.frustumCulled;\n      }\n\n      if (data.renderOrder !== undefined) {\n        object.renderOrder = data.renderOrder;\n      }\n\n      if (data.userData !== undefined) {\n        object.userData = data.userData;\n      }\n\n      if (data.layers !== undefined) {\n        object.layers.mask = data.layers;\n      }\n\n      if (data.drawMode !== undefined) {\n        object.setDrawMode(data.drawMode);\n      }\n\n      if (data.children !== undefined) {\n        var children = data.children;\n\n        for (var i = 0; i < children.length; i++) {\n          object.add(this.parseObject(children[i], geometries, materials));\n        }\n      }\n\n      if (data.type === 'LOD') {\n        if (data.autoUpdate !== undefined) {\n          object.autoUpdate = data.autoUpdate;\n        }\n\n        var levels = data.levels;\n\n        for (var l = 0; l < levels.length; l++) {\n          var level = levels[l];\n          var child = object.getObjectByProperty('uuid', level.object);\n\n          if (child !== undefined) {\n            object.addLevel(child, level.distance);\n          }\n        }\n      }\n\n      return object;\n    }\n  });\n  var TEXTURE_MAPPING = {\n    UVMapping: UVMapping,\n    CubeReflectionMapping: CubeReflectionMapping,\n    CubeRefractionMapping: CubeRefractionMapping,\n    EquirectangularReflectionMapping: EquirectangularReflectionMapping,\n    EquirectangularRefractionMapping: EquirectangularRefractionMapping,\n    SphericalReflectionMapping: SphericalReflectionMapping,\n    CubeUVReflectionMapping: CubeUVReflectionMapping,\n    CubeUVRefractionMapping: CubeUVRefractionMapping\n  };\n  var TEXTURE_WRAPPING = {\n    RepeatWrapping: RepeatWrapping,\n    ClampToEdgeWrapping: ClampToEdgeWrapping,\n    MirroredRepeatWrapping: MirroredRepeatWrapping\n  };\n  var TEXTURE_FILTER = {\n    NearestFilter: NearestFilter,\n    NearestMipmapNearestFilter: NearestMipmapNearestFilter,\n    NearestMipmapLinearFilter: NearestMipmapLinearFilter,\n    LinearFilter: LinearFilter,\n    LinearMipmapNearestFilter: LinearMipmapNearestFilter,\n    LinearMipmapLinearFilter: LinearMipmapLinearFilter\n  };\n  /**\n   * @author thespite / http://clicktorelease.com/\n   */\n\n  function ImageBitmapLoader(manager) {\n    if (typeof createImageBitmap === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n    }\n\n    if (typeof fetch === 'undefined') {\n      console.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n    }\n\n    Loader.call(this, manager);\n    this.options = undefined;\n  }\n\n  ImageBitmapLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: ImageBitmapLoader,\n    setOptions: function setOptions(options) {\n      this.options = options;\n      return this;\n    },\n    load: function (url, onLoad, onProgress, onError) {\n      if (url === undefined) {\n        url = '';\n      }\n\n      if (this.path !== undefined) {\n        url = this.path + url;\n      }\n\n      url = this.manager.resolveURL(url);\n      var scope = this;\n      var cached = Cache.get(url);\n\n      if (cached !== undefined) {\n        scope.manager.itemStart(url);\n        setTimeout(function () {\n          if (onLoad) {\n            onLoad(cached);\n          }\n\n          scope.manager.itemEnd(url);\n        }, 0);\n        return cached;\n      }\n\n      fetch(url).then(function (res) {\n        return res.blob();\n      }).then(function (blob) {\n        if (scope.options === undefined) {\n          // Workaround for FireFox. It causes an error if you pass options.\n          return createImageBitmap(blob);\n        } else {\n          return createImageBitmap(blob, scope.options);\n        }\n      }).then(function (imageBitmap) {\n        Cache.add(url, imageBitmap);\n\n        if (onLoad) {\n          onLoad(imageBitmap);\n        }\n\n        scope.manager.itemEnd(url);\n      }).catch(function (e) {\n        if (onError) {\n          onError(e);\n        }\n\n        scope.manager.itemError(url);\n        scope.manager.itemEnd(url);\n      });\n      scope.manager.itemStart(url);\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n   **/\n\n  function ShapePath() {\n    this.type = 'ShapePath';\n    this.color = new Color();\n    this.subPaths = [];\n    this.currentPath = null;\n  }\n\n  Object.assign(ShapePath.prototype, {\n    moveTo: function (x, y) {\n      this.currentPath = new Path();\n      this.subPaths.push(this.currentPath);\n      this.currentPath.moveTo(x, y);\n      return this;\n    },\n    lineTo: function (x, y) {\n      this.currentPath.lineTo(x, y);\n      return this;\n    },\n    quadraticCurveTo: function (aCPx, aCPy, aX, aY) {\n      this.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n      return this;\n    },\n    bezierCurveTo: function (aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n      this.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n      return this;\n    },\n    splineThru: function (pts) {\n      this.currentPath.splineThru(pts);\n      return this;\n    },\n    toShapes: function (isCCW, noHoles) {\n      function toShapesNoHoles(inSubpaths) {\n        var shapes = [];\n\n        for (var i = 0, l = inSubpaths.length; i < l; i++) {\n          var tmpPath = inSubpaths[i];\n          var tmpShape = new Shape();\n          tmpShape.curves = tmpPath.curves;\n          shapes.push(tmpShape);\n        }\n\n        return shapes;\n      }\n\n      function isPointInsidePolygon(inPt, inPolygon) {\n        var polyLen = inPolygon.length; // inPt on polygon contour => immediate success    or\n        // toggling of inside/outside at every single! intersection point of an edge\n        //  with the horizontal line through inPt, left of inPt\n        //  not counting lowerY endpoints of edges and whole edges on that line\n\n        var inside = false;\n\n        for (var p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n          var edgeLowPt = inPolygon[p];\n          var edgeHighPt = inPolygon[q];\n          var edgeDx = edgeHighPt.x - edgeLowPt.x;\n          var edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n          if (Math.abs(edgeDy) > Number.EPSILON) {\n            // not parallel\n            if (edgeDy < 0) {\n              edgeLowPt = inPolygon[q];\n              edgeDx = -edgeDx;\n              edgeHighPt = inPolygon[p];\n              edgeDy = -edgeDy;\n            }\n\n            if (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) {\n              continue;\n            }\n\n            if (inPt.y === edgeLowPt.y) {\n              if (inPt.x === edgeLowPt.x) {\n                return true;\n              } // inPt is on contour ?\n              // continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n            } else {\n              var perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\n              if (perpEdge === 0) {\n                return true;\n              } // inPt is on contour ?\n\n\n              if (perpEdge < 0) {\n                continue;\n              }\n\n              inside = !inside; // true intersection left of inPt\n            }\n          } else {\n            // parallel or collinear\n            if (inPt.y !== edgeLowPt.y) {\n              continue;\n            } // parallel\n            // edge lies on the same horizontal line as inPt\n\n\n            if (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) {\n              return true;\n            } // inPt: Point on contour !\n            // continue;\n\n          }\n        }\n\n        return inside;\n      }\n\n      var isClockWise = ShapeUtils.isClockWise;\n      var subPaths = this.subPaths;\n\n      if (subPaths.length === 0) {\n        return [];\n      }\n\n      if (noHoles === true) {\n        return toShapesNoHoles(subPaths);\n      }\n\n      var solid,\n          tmpPath,\n          tmpShape,\n          shapes = [];\n\n      if (subPaths.length === 1) {\n        tmpPath = subPaths[0];\n        tmpShape = new Shape();\n        tmpShape.curves = tmpPath.curves;\n        shapes.push(tmpShape);\n        return shapes;\n      }\n\n      var holesFirst = !isClockWise(subPaths[0].getPoints());\n      holesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n      var betterShapeHoles = [];\n      var newShapes = [];\n      var newShapeHoles = [];\n      var mainIdx = 0;\n      var tmpPoints;\n      newShapes[mainIdx] = undefined;\n      newShapeHoles[mainIdx] = [];\n\n      for (var i = 0, l = subPaths.length; i < l; i++) {\n        tmpPath = subPaths[i];\n        tmpPoints = tmpPath.getPoints();\n        solid = isClockWise(tmpPoints);\n        solid = isCCW ? !solid : solid;\n\n        if (solid) {\n          if (!holesFirst && newShapes[mainIdx]) {\n            mainIdx++;\n          }\n\n          newShapes[mainIdx] = {\n            s: new Shape(),\n            p: tmpPoints\n          };\n          newShapes[mainIdx].s.curves = tmpPath.curves;\n\n          if (holesFirst) {\n            mainIdx++;\n          }\n\n          newShapeHoles[mainIdx] = []; //console.log('cw', i);\n        } else {\n          newShapeHoles[mainIdx].push({\n            h: tmpPath,\n            p: tmpPoints[0]\n          }); //console.log('ccw', i);\n        }\n      } // only Holes? -> probably all Shapes with wrong orientation\n\n\n      if (!newShapes[0]) {\n        return toShapesNoHoles(subPaths);\n      }\n\n      if (newShapes.length > 1) {\n        var ambiguous = false;\n        var toChange = [];\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          betterShapeHoles[sIdx] = [];\n        }\n\n        for (var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n          var sho = newShapeHoles[sIdx];\n\n          for (var hIdx = 0; hIdx < sho.length; hIdx++) {\n            var ho = sho[hIdx];\n            var hole_unassigned = true;\n\n            for (var s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n              if (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n                if (sIdx !== s2Idx) {\n                  toChange.push({\n                    froms: sIdx,\n                    tos: s2Idx,\n                    hole: hIdx\n                  });\n                }\n\n                if (hole_unassigned) {\n                  hole_unassigned = false;\n                  betterShapeHoles[s2Idx].push(ho);\n                } else {\n                  ambiguous = true;\n                }\n              }\n            }\n\n            if (hole_unassigned) {\n              betterShapeHoles[sIdx].push(ho);\n            }\n          }\n        } // console.log(\"ambiguous: \", ambiguous);\n\n\n        if (toChange.length > 0) {\n          // console.log(\"to change: \", toChange);\n          if (!ambiguous) {\n            newShapeHoles = betterShapeHoles;\n          }\n        }\n      }\n\n      var tmpHoles;\n\n      for (var i = 0, il = newShapes.length; i < il; i++) {\n        tmpShape = newShapes[i].s;\n        shapes.push(tmpShape);\n        tmpHoles = newShapeHoles[i];\n\n        for (var j = 0, jl = tmpHoles.length; j < jl; j++) {\n          tmpShape.holes.push(tmpHoles[j].h);\n        }\n      } //console.log(\"shape\", shapes);\n\n\n      return shapes;\n    }\n  });\n  /**\n   * @author zz85 / http://www.lab4games.net/zz85/blog\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Font(data) {\n    this.type = 'Font';\n    this.data = data;\n  }\n\n  Object.assign(Font.prototype, {\n    isFont: true,\n    generateShapes: function (text, size) {\n      if (size === undefined) {\n        size = 100;\n      }\n\n      var shapes = [];\n      var paths = createPaths(text, size, this.data);\n\n      for (var p = 0, pl = paths.length; p < pl; p++) {\n        Array.prototype.push.apply(shapes, paths[p].toShapes());\n      }\n\n      return shapes;\n    }\n  });\n\n  function createPaths(text, size, data) {\n    var chars = Array.from ? Array.from(text) : String(text).split(''); // see #13988\n\n    var scale = size / data.resolution;\n    var line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n    var paths = [];\n    var offsetX = 0,\n        offsetY = 0;\n\n    for (var i = 0; i < chars.length; i++) {\n      var char = chars[i];\n\n      if (char === '\\n') {\n        offsetX = 0;\n        offsetY -= line_height;\n      } else {\n        var ret = createPath(char, scale, offsetX, offsetY, data);\n        offsetX += ret.offsetX;\n        paths.push(ret.path);\n      }\n    }\n\n    return paths;\n  }\n\n  function createPath(char, scale, offsetX, offsetY, data) {\n    var glyph = data.glyphs[char] || data.glyphs['?'];\n\n    if (!glyph) {\n      console.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n      return;\n    }\n\n    var path = new ShapePath();\n    var x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n    if (glyph.o) {\n      var outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n      for (var i = 0, l = outline.length; i < l;) {\n        var action = outline[i++];\n\n        switch (action) {\n          case 'm':\n            // moveTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.moveTo(x, y);\n            break;\n\n          case 'l':\n            // lineTo\n            x = outline[i++] * scale + offsetX;\n            y = outline[i++] * scale + offsetY;\n            path.lineTo(x, y);\n            break;\n\n          case 'q':\n            // quadraticCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            path.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n            break;\n\n          case 'b':\n            // bezierCurveTo\n            cpx = outline[i++] * scale + offsetX;\n            cpy = outline[i++] * scale + offsetY;\n            cpx1 = outline[i++] * scale + offsetX;\n            cpy1 = outline[i++] * scale + offsetY;\n            cpx2 = outline[i++] * scale + offsetX;\n            cpy2 = outline[i++] * scale + offsetY;\n            path.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n            break;\n        }\n      }\n    }\n\n    return {\n      offsetX: glyph.ha * scale,\n      path: path\n    };\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function FontLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  FontLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: FontLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.load(url, function (text) {\n        var json;\n\n        try {\n          json = JSON.parse(text);\n        } catch (e) {\n          console.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n          json = JSON.parse(text.substring(65, text.length - 2));\n        }\n\n        var font = scope.parse(json);\n\n        if (onLoad) {\n          onLoad(font);\n        }\n      }, onProgress, onError);\n    },\n    parse: function (json) {\n      return new Font(json);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _context;\n\n  var AudioContext = {\n    getContext: function () {\n      if (_context === undefined) {\n        _context = new (window.AudioContext || window.webkitAudioContext)();\n      }\n\n      return _context;\n    },\n    setContext: function (value) {\n      _context = value;\n    }\n  };\n  /**\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function AudioLoader(manager) {\n    Loader.call(this, manager);\n  }\n\n  AudioLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: AudioLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var loader = new FileLoader(this.manager);\n      loader.setResponseType('arraybuffer');\n      loader.setPath(this.path);\n      loader.load(url, function (buffer) {\n        // Create a copy of the buffer. The `decodeAudioData` method\n        // detaches the buffer when complete, preventing reuse.\n        var bufferCopy = buffer.slice(0);\n        var context = AudioContext.getContext();\n        context.decodeAudioData(bufferCopy, function (audioBuffer) {\n          onLoad(audioBuffer);\n        });\n      }, onProgress, onError);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Primary reference:\n   *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n   *\n   * Secondary reference:\n   *   https://www.ppsloan.org/publications/StupidSH36.pdf\n   */\n  // 3-band SH defined by 9 coefficients\n\n  function SphericalHarmonics3() {\n    this.coefficients = [];\n\n    for (var i = 0; i < 9; i++) {\n      this.coefficients.push(new Vector3());\n    }\n  }\n\n  Object.assign(SphericalHarmonics3.prototype, {\n    isSphericalHarmonics3: true,\n    set: function (coefficients) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].copy(coefficients[i]);\n      }\n\n      return this;\n    },\n    zero: function () {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].set(0, 0, 0);\n      }\n\n      return this;\n    },\n    // get the radiance in the direction of the normal\n    // target is a Vector3\n    getAt: function (normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n      target.addScale(coeff[1], 0.488603 * y);\n      target.addScale(coeff[2], 0.488603 * z);\n      target.addScale(coeff[3], 0.488603 * x); // band 2\n\n      target.addScale(coeff[4], 1.092548 * (x * y));\n      target.addScale(coeff[5], 1.092548 * (y * z));\n      target.addScale(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n      target.addScale(coeff[7], 1.092548 * (x * z));\n      target.addScale(coeff[8], 0.546274 * (x * x - y * y));\n      return target;\n    },\n    // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n    // target is a Vector3\n    // https://graphics.stanford.edu/papers/envmap/envmap.pdf\n    getIrradianceAt: function (normal, target) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z;\n      var coeff = this.coefficients; // band 0\n\n      target.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n      // band 1\n\n      target.addScale(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n      target.addScale(coeff[2], 2.0 * 0.511664 * z);\n      target.addScale(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n      target.addScale(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n      target.addScale(coeff[5], 2.0 * 0.429043 * y * z);\n      target.addScale(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n      target.addScale(coeff[7], 2.0 * 0.429043 * x * z);\n      target.addScale(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n      return target;\n    },\n    add: function (sh) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].add(sh.coefficients[i]);\n      }\n\n      return this;\n    },\n    scale: function (s) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].multiplyScalar(s);\n      }\n\n      return this;\n    },\n    lerp: function (sh, alpha) {\n      for (var i = 0; i < 9; i++) {\n        this.coefficients[i].lerp(sh.coefficients[i], alpha);\n      }\n\n      return this;\n    },\n    equals: function (sh) {\n      for (var i = 0; i < 9; i++) {\n        if (!this.coefficients[i].equals(sh.coefficients[i])) {\n          return false;\n        }\n      }\n\n      return true;\n    },\n    copy: function (sh) {\n      return this.set(sh.coefficients);\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    fromArray: function (array, offset) {\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].fromArray(array, offset + i * 3);\n      }\n\n      return this;\n    },\n    toArray: function (array, offset) {\n      if (array === undefined) {\n        array = [];\n      }\n\n      if (offset === undefined) {\n        offset = 0;\n      }\n\n      var coefficients = this.coefficients;\n\n      for (var i = 0; i < 9; i++) {\n        coefficients[i].toArray(array, offset + i * 3);\n      }\n\n      return array;\n    }\n  });\n  Object.assign(SphericalHarmonics3, {\n    // evaluate the basis functions\n    // shBasis is an Array[ 9 ]\n    getBasisAt: function (normal, shBasis) {\n      // normal is assumed to be unit length\n      var x = normal.x,\n          y = normal.y,\n          z = normal.z; // band 0\n\n      shBasis[0] = 0.282095; // band 1\n\n      shBasis[1] = 0.488603 * y;\n      shBasis[2] = 0.488603 * z;\n      shBasis[3] = 0.488603 * x; // band 2\n\n      shBasis[4] = 1.092548 * x * y;\n      shBasis[5] = 1.092548 * y * z;\n      shBasis[6] = 0.315392 * (3 * z * z - 1);\n      shBasis[7] = 1.092548 * x * z;\n      shBasis[8] = 0.546274 * (x * x - y * y);\n    }\n  });\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * A LightProbe is a source of indirect-diffuse light\n   */\n\n  function LightProbe(sh, intensity) {\n    Light.call(this, undefined, intensity);\n    this.sh = sh !== undefined ? sh : new SphericalHarmonics3();\n  }\n\n  LightProbe.prototype = Object.assign(Object.create(Light.prototype), {\n    constructor: LightProbe,\n    isLightProbe: true,\n    copy: function (source) {\n      Light.prototype.copy.call(this, source);\n      this.sh.copy(source.sh);\n      this.intensity = source.intensity;\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = Light.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n      return data;\n    }\n  });\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function HemisphereLightProbe(skyColor, groundColor, intensity) {\n    LightProbe.call(this, undefined, intensity);\n    var color1 = new Color().set(skyColor);\n    var color2 = new Color().set(groundColor);\n    var sky = new Vector3(color1.r, color1.g, color1.b);\n    var ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n    var c0 = Math.sqrt(Math.PI);\n    var c1 = c0 * Math.sqrt(0.75);\n    this.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n    this.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n  }\n\n  HemisphereLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n    constructor: HemisphereLightProbe,\n    isHemisphereLightProbe: true,\n    copy: function (source) {\n      // modifying colors not currently supported\n      LightProbe.prototype.copy.call(this, source);\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n      return data;\n    }\n  });\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  function AmbientLightProbe(color, intensity) {\n    LightProbe.call(this, undefined, intensity);\n    var color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n    this.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n  }\n\n  AmbientLightProbe.prototype = Object.assign(Object.create(LightProbe.prototype), {\n    constructor: AmbientLightProbe,\n    isAmbientLightProbe: true,\n    copy: function (source) {\n      // modifying color not currently supported\n      LightProbe.prototype.copy.call(this, source);\n      return this;\n    },\n    toJSON: function (meta) {\n      var data = LightProbe.prototype.toJSON.call(this, meta); // data.sh = this.sh.toArray(); // todo\n\n      return data;\n    }\n  });\n\n  var _eyeRight = new Matrix4();\n\n  var _eyeLeft = new Matrix4();\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function StereoCamera() {\n    this.type = 'StereoCamera';\n    this.aspect = 1;\n    this.eyeSep = 0.064;\n    this.cameraL = new PerspectiveCamera();\n    this.cameraL.layers.enable(1);\n    this.cameraL.matrixAutoUpdate = false;\n    this.cameraR = new PerspectiveCamera();\n    this.cameraR.layers.enable(2);\n    this.cameraR.matrixAutoUpdate = false;\n    this._cache = {\n      focus: null,\n      fov: null,\n      aspect: null,\n      near: null,\n      far: null,\n      zoom: null,\n      eyeSep: null\n    };\n  }\n\n  Object.assign(StereoCamera.prototype, {\n    update: function (camera) {\n      var cache = this._cache;\n      var needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n      if (needsUpdate) {\n        cache.focus = camera.focus;\n        cache.fov = camera.fov;\n        cache.aspect = camera.aspect * this.aspect;\n        cache.near = camera.near;\n        cache.far = camera.far;\n        cache.zoom = camera.zoom;\n        cache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n        // http://paulbourke.net/stereographics/stereorender/\n\n        var projectionMatrix = camera.projectionMatrix.clone();\n        var eyeSepHalf = cache.eyeSep / 2;\n        var eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n        var ymax = cache.near * Math.tan(_Math.DEG2RAD * cache.fov * 0.5) / cache.zoom;\n        var xmin, xmax; // translate xOffset\n\n        _eyeLeft.elements[12] = -eyeSepHalf;\n        _eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n        xmin = -ymax * cache.aspect + eyeSepOnProjection;\n        xmax = ymax * cache.aspect + eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n        xmin = -ymax * cache.aspect - eyeSepOnProjection;\n        xmax = ymax * cache.aspect - eyeSepOnProjection;\n        projectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n        projectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n        this.cameraR.projectionMatrix.copy(projectionMatrix);\n      }\n\n      this.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n      this.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function Clock(autoStart) {\n    this.autoStart = autoStart !== undefined ? autoStart : true;\n    this.startTime = 0;\n    this.oldTime = 0;\n    this.elapsedTime = 0;\n    this.running = false;\n  }\n\n  Object.assign(Clock.prototype, {\n    start: function () {\n      this.startTime = (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\n      this.oldTime = this.startTime;\n      this.elapsedTime = 0;\n      this.running = true;\n    },\n    stop: function () {\n      this.getElapsedTime();\n      this.running = false;\n      this.autoStart = false;\n    },\n    getElapsedTime: function () {\n      this.getDelta();\n      return this.elapsedTime;\n    },\n    getDelta: function () {\n      var diff = 0;\n\n      if (this.autoStart && !this.running) {\n        this.start();\n        return 0;\n      }\n\n      if (this.running) {\n        var newTime = (typeof performance === 'undefined' ? Date : performance).now();\n        diff = (newTime - this.oldTime) / 1000;\n        this.oldTime = newTime;\n        this.elapsedTime += diff;\n      }\n\n      return diff;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _position$2 = new Vector3();\n\n  var _quaternion$3 = new Quaternion();\n\n  var _scale$1 = new Vector3();\n\n  var _orientation = new Vector3();\n\n  function AudioListener() {\n    Object3D.call(this);\n    this.type = 'AudioListener';\n    this.context = AudioContext.getContext();\n    this.gain = this.context.createGain();\n    this.gain.connect(this.context.destination);\n    this.filter = null;\n    this.timeDelta = 0; // private\n\n    this._clock = new Clock();\n  }\n\n  AudioListener.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: AudioListener,\n    getInput: function () {\n      return this.gain;\n    },\n    removeFilter: function () {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n        this.gain.connect(this.context.destination);\n        this.filter = null;\n      }\n\n      return this;\n    },\n    getFilter: function () {\n      return this.filter;\n    },\n    setFilter: function (value) {\n      if (this.filter !== null) {\n        this.gain.disconnect(this.filter);\n        this.filter.disconnect(this.context.destination);\n      } else {\n        this.gain.disconnect(this.context.destination);\n      }\n\n      this.filter = value;\n      this.gain.connect(this.filter);\n      this.filter.connect(this.context.destination);\n      return this;\n    },\n    getMasterVolume: function () {\n      return this.gain.gain.value;\n    },\n    setMasterVolume: function (value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    },\n    updateMatrixWorld: function (force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n      var listener = this.context.listener;\n      var up = this.up;\n      this.timeDelta = this._clock.getDelta();\n      this.matrixWorld.decompose(_position$2, _quaternion$3, _scale$1);\n\n      _orientation.set(0, 0, -1).applyQuaternion(_quaternion$3);\n\n      if (listener.positionX) {\n        // code path for Chrome (see #14393)\n        var endTime = this.context.currentTime + this.timeDelta;\n        listener.positionX.linearRampToValueAtTime(_position$2.x, endTime);\n        listener.positionY.linearRampToValueAtTime(_position$2.y, endTime);\n        listener.positionZ.linearRampToValueAtTime(_position$2.z, endTime);\n        listener.forwardX.linearRampToValueAtTime(_orientation.x, endTime);\n        listener.forwardY.linearRampToValueAtTime(_orientation.y, endTime);\n        listener.forwardZ.linearRampToValueAtTime(_orientation.z, endTime);\n        listener.upX.linearRampToValueAtTime(up.x, endTime);\n        listener.upY.linearRampToValueAtTime(up.y, endTime);\n        listener.upZ.linearRampToValueAtTime(up.z, endTime);\n      } else {\n        listener.setPosition(_position$2.x, _position$2.y, _position$2.z);\n        listener.setOrientation(_orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Reece Aaron Lecrivain / http://reecenotes.com/\n   */\n\n  function Audio(listener) {\n    Object3D.call(this);\n    this.type = 'Audio';\n    this.listener = listener;\n    this.context = listener.context;\n    this.gain = this.context.createGain();\n    this.gain.connect(listener.getInput());\n    this.autoplay = false;\n    this.buffer = null;\n    this.detune = 0;\n    this.loop = false;\n    this.loopStart = 0;\n    this.loopEnd = 0;\n    this.offset = 0;\n    this.duration = undefined;\n    this.playbackRate = 1;\n    this.isPlaying = false;\n    this.hasPlaybackControl = true;\n    this.sourceType = 'empty';\n    this._startedAt = 0;\n    this._pausedAt = 0;\n    this.filters = [];\n  }\n\n  Audio.prototype = Object.assign(Object.create(Object3D.prototype), {\n    constructor: Audio,\n    getOutput: function () {\n      return this.gain;\n    },\n    setNodeSource: function (audioNode) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'audioNode';\n      this.source = audioNode;\n      this.connect();\n      return this;\n    },\n    setMediaElementSource: function (mediaElement) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaNode';\n      this.source = this.context.createMediaElementSource(mediaElement);\n      this.connect();\n      return this;\n    },\n    setMediaStreamSource: function (mediaStream) {\n      this.hasPlaybackControl = false;\n      this.sourceType = 'mediaStreamNode';\n      this.source = this.context.createMediaStreamSource(mediaStream);\n      this.connect();\n      return this;\n    },\n    setBuffer: function (audioBuffer) {\n      this.buffer = audioBuffer;\n      this.sourceType = 'buffer';\n\n      if (this.autoplay) {\n        this.play();\n      }\n\n      return this;\n    },\n    play: function (delay) {\n      if (delay === undefined) {\n        delay = 0;\n      }\n\n      if (this.isPlaying === true) {\n        console.warn('THREE.Audio: Audio is already playing.');\n        return;\n      }\n\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._startedAt = this.context.currentTime + delay;\n      var source = this.context.createBufferSource();\n      source.buffer = this.buffer;\n      source.loop = this.loop;\n      source.loopStart = this.loopStart;\n      source.loopEnd = this.loopEnd;\n      source.onended = this.onEnded.bind(this);\n      source.start(this._startedAt, this._pausedAt + this.offset, this.duration);\n      this.isPlaying = true;\n      this.source = source;\n      this.setDetune(this.detune);\n      this.setPlaybackRate(this.playbackRate);\n      return this.connect();\n    },\n    pause: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      if (this.isPlaying === true) {\n        this._pausedAt = (this.context.currentTime - this._startedAt) * this.playbackRate;\n        this.source.stop();\n        this.source.onended = null;\n        this.isPlaying = false;\n      }\n\n      return this;\n    },\n    stop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this._pausedAt = 0;\n      this.source.stop();\n      this.source.onended = null;\n      this.isPlaying = false;\n      return this;\n    },\n    connect: function () {\n      if (this.filters.length > 0) {\n        this.source.connect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].connect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].connect(this.getOutput());\n      } else {\n        this.source.connect(this.getOutput());\n      }\n\n      return this;\n    },\n    disconnect: function () {\n      if (this.filters.length > 0) {\n        this.source.disconnect(this.filters[0]);\n\n        for (var i = 1, l = this.filters.length; i < l; i++) {\n          this.filters[i - 1].disconnect(this.filters[i]);\n        }\n\n        this.filters[this.filters.length - 1].disconnect(this.getOutput());\n      } else {\n        this.source.disconnect(this.getOutput());\n      }\n\n      return this;\n    },\n    getFilters: function () {\n      return this.filters;\n    },\n    setFilters: function (value) {\n      if (!value) {\n        value = [];\n      }\n\n      if (this.isPlaying === true) {\n        this.disconnect();\n        this.filters = value;\n        this.connect();\n      } else {\n        this.filters = value;\n      }\n\n      return this;\n    },\n    setDetune: function (value) {\n      this.detune = value;\n\n      if (this.source.detune === undefined) {\n        return;\n      } // only set detune when available\n\n\n      if (this.isPlaying === true) {\n        this.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    },\n    getDetune: function () {\n      return this.detune;\n    },\n    getFilter: function () {\n      return this.getFilters()[0];\n    },\n    setFilter: function (filter) {\n      return this.setFilters(filter ? [filter] : []);\n    },\n    setPlaybackRate: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.playbackRate = value;\n\n      if (this.isPlaying === true) {\n        this.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n      }\n\n      return this;\n    },\n    getPlaybackRate: function () {\n      return this.playbackRate;\n    },\n    onEnded: function () {\n      this.isPlaying = false;\n    },\n    getLoop: function () {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return false;\n      }\n\n      return this.loop;\n    },\n    setLoop: function (value) {\n      if (this.hasPlaybackControl === false) {\n        console.warn('THREE.Audio: this Audio has no playback control.');\n        return;\n      }\n\n      this.loop = value;\n\n      if (this.isPlaying === true) {\n        this.source.loop = this.loop;\n      }\n\n      return this;\n    },\n    setLoopStart: function (value) {\n      this.loopStart = value;\n      return this;\n    },\n    setLoopEnd: function (value) {\n      this.loopEnd = value;\n      return this;\n    },\n    getVolume: function () {\n      return this.gain.gain.value;\n    },\n    setVolume: function (value) {\n      this.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  var _position$3 = new Vector3();\n\n  var _quaternion$4 = new Quaternion();\n\n  var _scale$2 = new Vector3();\n\n  var _orientation$1 = new Vector3();\n\n  function PositionalAudio(listener) {\n    Audio.call(this, listener);\n    this.panner = this.context.createPanner();\n    this.panner.panningModel = 'HRTF';\n    this.panner.connect(this.gain);\n  }\n\n  PositionalAudio.prototype = Object.assign(Object.create(Audio.prototype), {\n    constructor: PositionalAudio,\n    getOutput: function () {\n      return this.panner;\n    },\n    getRefDistance: function () {\n      return this.panner.refDistance;\n    },\n    setRefDistance: function (value) {\n      this.panner.refDistance = value;\n      return this;\n    },\n    getRolloffFactor: function () {\n      return this.panner.rolloffFactor;\n    },\n    setRolloffFactor: function (value) {\n      this.panner.rolloffFactor = value;\n      return this;\n    },\n    getDistanceModel: function () {\n      return this.panner.distanceModel;\n    },\n    setDistanceModel: function (value) {\n      this.panner.distanceModel = value;\n      return this;\n    },\n    getMaxDistance: function () {\n      return this.panner.maxDistance;\n    },\n    setMaxDistance: function (value) {\n      this.panner.maxDistance = value;\n      return this;\n    },\n    setDirectionalCone: function (coneInnerAngle, coneOuterAngle, coneOuterGain) {\n      this.panner.coneInnerAngle = coneInnerAngle;\n      this.panner.coneOuterAngle = coneOuterAngle;\n      this.panner.coneOuterGain = coneOuterGain;\n      return this;\n    },\n    updateMatrixWorld: function (force) {\n      Object3D.prototype.updateMatrixWorld.call(this, force);\n\n      if (this.hasPlaybackControl === true && this.isPlaying === false) {\n        return;\n      }\n\n      this.matrixWorld.decompose(_position$3, _quaternion$4, _scale$2);\n\n      _orientation$1.set(0, 0, 1).applyQuaternion(_quaternion$4);\n\n      var panner = this.panner;\n\n      if (panner.positionX) {\n        // code path for Chrome and Firefox (see #14393)\n        var endTime = this.context.currentTime + this.listener.timeDelta;\n        panner.positionX.linearRampToValueAtTime(_position$3.x, endTime);\n        panner.positionY.linearRampToValueAtTime(_position$3.y, endTime);\n        panner.positionZ.linearRampToValueAtTime(_position$3.z, endTime);\n        panner.orientationX.linearRampToValueAtTime(_orientation$1.x, endTime);\n        panner.orientationY.linearRampToValueAtTime(_orientation$1.y, endTime);\n        panner.orientationZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n      } else {\n        panner.setPosition(_position$3.x, _position$3.y, _position$3.z);\n        panner.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function AudioAnalyser(audio, fftSize) {\n    this.analyser = audio.context.createAnalyser();\n    this.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n    this.data = new Uint8Array(this.analyser.frequencyBinCount);\n    audio.getOutput().connect(this.analyser);\n  }\n\n  Object.assign(AudioAnalyser.prototype, {\n    getFrequencyData: function () {\n      this.analyser.getByteFrequencyData(this.data);\n      return this.data;\n    },\n    getAverageFrequency: function () {\n      var value = 0,\n          data = this.getFrequencyData();\n\n      for (var i = 0; i < data.length; i++) {\n        value += data[i];\n      }\n\n      return value / data.length;\n    }\n  });\n  /**\n   *\n   * Buffered scene graph property that allows weighted accumulation.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function PropertyMixer(binding, typeName, valueSize) {\n    this.binding = binding;\n    this.valueSize = valueSize;\n    var bufferType = Float64Array,\n        mixFunction;\n\n    switch (typeName) {\n      case 'quaternion':\n        mixFunction = this._slerp;\n        break;\n\n      case 'string':\n      case 'bool':\n        bufferType = Array;\n        mixFunction = this._select;\n        break;\n\n      default:\n        mixFunction = this._lerp;\n    }\n\n    this.buffer = new bufferType(valueSize * 4); // layout: [ incoming | accu0 | accu1 | orig ]\n    //\n    // interpolators can use .buffer as their .result\n    // the data then goes to 'incoming'\n    //\n    // 'accu0' and 'accu1' are used frame-interleaved for\n    // the cumulative result and are compared to detect\n    // changes\n    //\n    // 'orig' stores the original state of the property\n\n    this._mixBufferRegion = mixFunction;\n    this.cumulativeWeight = 0;\n    this.useCount = 0;\n    this.referenceCount = 0;\n  }\n\n  Object.assign(PropertyMixer.prototype, {\n    // accumulate data in the 'incoming' region into 'accu<i>'\n    accumulate: function (accuIndex, weight) {\n      // note: happily accumulating nothing when weight = 0, the caller knows\n      // the weight and shouldn't have made the call in the first place\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          offset = accuIndex * stride + stride,\n          currentWeight = this.cumulativeWeight;\n\n      if (currentWeight === 0) {\n        // accuN := incoming * weight\n        for (var i = 0; i !== stride; ++i) {\n          buffer[offset + i] = buffer[i];\n        }\n\n        currentWeight = weight;\n      } else {\n        // accuN := accuN + incoming * weight\n        currentWeight += weight;\n        var mix = weight / currentWeight;\n\n        this._mixBufferRegion(buffer, offset, 0, mix, stride);\n      }\n\n      this.cumulativeWeight = currentWeight;\n    },\n    // apply the state of 'accu<i>' to the binding when accus differ\n    apply: function (accuIndex) {\n      var stride = this.valueSize,\n          buffer = this.buffer,\n          offset = accuIndex * stride + stride,\n          weight = this.cumulativeWeight,\n          binding = this.binding;\n      this.cumulativeWeight = 0;\n\n      if (weight < 1) {\n        // accuN := accuN + original * ( 1 - cumulativeWeight )\n        var originalValueOffset = stride * 3;\n\n        this._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n      }\n\n      for (var i = stride, e = stride + stride; i !== e; ++i) {\n        if (buffer[i] !== buffer[i + stride]) {\n          // value has changed -> update scene graph\n          binding.setValue(buffer, offset);\n          break;\n        }\n      }\n    },\n    // remember the state of the bound property and copy it to both accus\n    saveOriginalState: function () {\n      var binding = this.binding;\n      var buffer = this.buffer,\n          stride = this.valueSize,\n          originalValueOffset = stride * 3;\n      binding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n      for (var i = stride, e = originalValueOffset; i !== e; ++i) {\n        buffer[i] = buffer[originalValueOffset + i % stride];\n      }\n\n      this.cumulativeWeight = 0;\n    },\n    // apply the state previously taken via 'saveOriginalState' to the binding\n    restoreOriginalState: function () {\n      var originalValueOffset = this.valueSize * 3;\n      this.binding.setValue(this.buffer, originalValueOffset);\n    },\n    // mix functions\n    _select: function (buffer, dstOffset, srcOffset, t, stride) {\n      if (t >= 0.5) {\n        for (var i = 0; i !== stride; ++i) {\n          buffer[dstOffset + i] = buffer[srcOffset + i];\n        }\n      }\n    },\n    _slerp: function (buffer, dstOffset, srcOffset, t) {\n      Quaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n    },\n    _lerp: function (buffer, dstOffset, srcOffset, t, stride) {\n      var s = 1 - t;\n\n      for (var i = 0; i !== stride; ++i) {\n        var j = dstOffset + i;\n        buffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n      }\n    }\n  });\n  /**\n   *\n   * A reference to a real property in the scene graph.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n  // Characters [].:/ are reserved for track binding syntax.\n\n  var _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n  var _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n  // only latin characters, and the unicode \\p{L} is not yet supported. So\n  // instead, we exclude reserved characters and match everything else.\n\n\n  var _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n  var _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n  // be matched to parse the rest of the track name.\n\n\n  var _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n  var _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n  // characters. Accessor may contain any character except closing bracket.\n\n\n  var _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n  // contain any non-bracket characters.\n\n\n  var _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n  var _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n  var _supportedObjectNames = ['material', 'materials', 'bones'];\n\n  function Composite(targetGroup, path, optionalParsedPath) {\n    var parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n    this._targetGroup = targetGroup;\n    this._bindings = targetGroup.subscribe_(path, parsedPath);\n  }\n\n  Object.assign(Composite.prototype, {\n    getValue: function (array, offset) {\n      this.bind(); // bind all binding\n\n      var firstValidIndex = this._targetGroup.nCachedObjects_,\n          binding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n      if (binding !== undefined) {\n        binding.getValue(array, offset);\n      }\n    },\n    setValue: function (array, offset) {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].setValue(array, offset);\n      }\n    },\n    bind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].bind();\n      }\n    },\n    unbind: function () {\n      var bindings = this._bindings;\n\n      for (var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n        bindings[i].unbind();\n      }\n    }\n  });\n\n  function PropertyBinding(rootNode, path, parsedPath) {\n    this.path = path;\n    this.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n    this.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n    this.rootNode = rootNode;\n  }\n\n  Object.assign(PropertyBinding, {\n    Composite: Composite,\n    create: function (root, path, parsedPath) {\n      if (!(root && root.isAnimationObjectGroup)) {\n        return new PropertyBinding(root, path, parsedPath);\n      } else {\n        return new PropertyBinding.Composite(root, path, parsedPath);\n      }\n    },\n\n    /**\n     * Replaces spaces with underscores and removes unsupported characters from\n     * node names, to ensure compatibility with parseTrackName().\n     *\n     * @param {string} name Node name to be sanitized.\n     * @return {string}\n     */\n    sanitizeNodeName: function (name) {\n      return name.replace(/\\s/g, '_').replace(_reservedRe, '');\n    },\n    parseTrackName: function (trackName) {\n      var matches = _trackRe.exec(trackName);\n\n      if (!matches) {\n        throw new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n      }\n\n      var results = {\n        // directoryName: matches[ 1 ], // (tschw) currently unused\n        nodeName: matches[2],\n        objectName: matches[3],\n        objectIndex: matches[4],\n        propertyName: matches[5],\n        // required\n        propertyIndex: matches[6]\n      };\n      var lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n      if (lastDot !== undefined && lastDot !== -1) {\n        var objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against a whitelist. Otherwise, there\n        // is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n        // 'bar' could be the objectName, or part of a nodeName (which can\n        // include '.' characters).\n\n        if (_supportedObjectNames.indexOf(objectName) !== -1) {\n          results.nodeName = results.nodeName.substring(0, lastDot);\n          results.objectName = objectName;\n        }\n      }\n\n      if (results.propertyName === null || results.propertyName.length === 0) {\n        throw new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n      }\n\n      return results;\n    },\n    findNode: function (root, nodeName) {\n      if (!nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n        return root;\n      } // search into skeleton bones.\n\n\n      if (root.skeleton) {\n        var bone = root.skeleton.getBoneByName(nodeName);\n\n        if (bone !== undefined) {\n          return bone;\n        }\n      } // search into node subtree.\n\n\n      if (root.children) {\n        var searchNodeSubtree = function (children) {\n          for (var i = 0; i < children.length; i++) {\n            var childNode = children[i];\n\n            if (childNode.name === nodeName || childNode.uuid === nodeName) {\n              return childNode;\n            }\n\n            var result = searchNodeSubtree(childNode.children);\n\n            if (result) {\n              return result;\n            }\n          }\n\n          return null;\n        };\n\n        var subTreeNode = searchNodeSubtree(root.children);\n\n        if (subTreeNode) {\n          return subTreeNode;\n        }\n      }\n\n      return null;\n    }\n  });\n  Object.assign(PropertyBinding.prototype, {\n    // prototype, continued\n    // these are used to \"bind\" a nonexistent property\n    _getValue_unavailable: function () {},\n    _setValue_unavailable: function () {},\n    BindingType: {\n      Direct: 0,\n      EntireArray: 1,\n      ArrayElement: 2,\n      HasFromToArray: 3\n    },\n    Versioning: {\n      None: 0,\n      NeedsUpdate: 1,\n      MatrixWorldNeedsUpdate: 2\n    },\n    GetterByBindingType: [function getValue_direct(buffer, offset) {\n      buffer[offset] = this.node[this.propertyName];\n    }, function getValue_array(buffer, offset) {\n      var source = this.resolvedProperty;\n\n      for (var i = 0, n = source.length; i !== n; ++i) {\n        buffer[offset++] = source[i];\n      }\n    }, function getValue_arrayElement(buffer, offset) {\n      buffer[offset] = this.resolvedProperty[this.propertyIndex];\n    }, function getValue_toArray(buffer, offset) {\n      this.resolvedProperty.toArray(buffer, offset);\n    }],\n    SetterByBindingTypeAndVersioning: [[// Direct\n    function setValue_direct(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n    }, function setValue_direct_setNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.targetObject[this.propertyName] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// EntireArray\n    function setValue_array(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n    }, function setValue_array_setNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.needsUpdate = true;\n    }, function setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n      var dest = this.resolvedProperty;\n\n      for (var i = 0, n = dest.length; i !== n; ++i) {\n        dest[i] = buffer[offset++];\n      }\n\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// ArrayElement\n    function setValue_arrayElement(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n    }, function setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.needsUpdate = true;\n    }, function setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty[this.propertyIndex] = buffer[offset];\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }], [// HasToFromArray\n    function setValue_fromArray(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n    }, function setValue_fromArray_setNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.needsUpdate = true;\n    }, function setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n      this.resolvedProperty.fromArray(buffer, offset);\n      this.targetObject.matrixWorldNeedsUpdate = true;\n    }]],\n    getValue: function getValue_unbound(targetArray, offset) {\n      this.bind();\n      this.getValue(targetArray, offset); // Note: This class uses a State pattern on a per-method basis:\n      // 'bind' sets 'this.getValue' / 'setValue' and shadows the\n      // prototype version of these methods with one that represents\n      // the bound state. When the property is not found, the methods\n      // become no-ops.\n    },\n    setValue: function getValue_unbound(sourceArray, offset) {\n      this.bind();\n      this.setValue(sourceArray, offset);\n    },\n    // create getter / setter pair for a property in the scene graph\n    bind: function () {\n      var targetObject = this.node,\n          parsedPath = this.parsedPath,\n          objectName = parsedPath.objectName,\n          propertyName = parsedPath.propertyName,\n          propertyIndex = parsedPath.propertyIndex;\n\n      if (!targetObject) {\n        targetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n        this.node = targetObject;\n      } // set fail state so we can just 'return' on error\n\n\n      this.getValue = this._getValue_unavailable;\n      this.setValue = this._setValue_unavailable; // ensure there is a value node\n\n      if (!targetObject) {\n        console.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n        return;\n      }\n\n      if (objectName) {\n        var objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n        switch (objectName) {\n          case 'materials':\n            if (!targetObject.material) {\n              console.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n              return;\n            }\n\n            if (!targetObject.material.materials) {\n              console.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n              return;\n            }\n\n            targetObject = targetObject.material.materials;\n            break;\n\n          case 'bones':\n            if (!targetObject.skeleton) {\n              console.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n              return;\n            } // potential future optimization: skip this if propertyIndex is already an integer\n            // and convert the integer string to a true integer.\n\n\n            targetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n            for (var i = 0; i < targetObject.length; i++) {\n              if (targetObject[i].name === objectIndex) {\n                objectIndex = i;\n                break;\n              }\n            }\n\n            break;\n\n          default:\n            if (targetObject[objectName] === undefined) {\n              console.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n              return;\n            }\n\n            targetObject = targetObject[objectName];\n        }\n\n        if (objectIndex !== undefined) {\n          if (targetObject[objectIndex] === undefined) {\n            console.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n            return;\n          }\n\n          targetObject = targetObject[objectIndex];\n        }\n      } // resolve property\n\n\n      var nodeProperty = targetObject[propertyName];\n\n      if (nodeProperty === undefined) {\n        var nodeName = parsedPath.nodeName;\n        console.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n        return;\n      } // determine versioning scheme\n\n\n      var versioning = this.Versioning.None;\n      this.targetObject = targetObject;\n\n      if (targetObject.needsUpdate !== undefined) {\n        // material\n        versioning = this.Versioning.NeedsUpdate;\n      } else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n        // node transform\n        versioning = this.Versioning.MatrixWorldNeedsUpdate;\n      } // determine how the property gets bound\n\n\n      var bindingType = this.BindingType.Direct;\n\n      if (propertyIndex !== undefined) {\n        // access a sub element of the property array (only primitives are supported right now)\n        if (propertyName === \"morphTargetInfluences\") {\n          // potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n          // support resolving morphTarget names into indices.\n          if (!targetObject.geometry) {\n            console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n            return;\n          }\n\n          if (targetObject.geometry.isBufferGeometry) {\n            if (!targetObject.geometry.morphAttributes) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphAttributes.position.length; i++) {\n              if (targetObject.geometry.morphAttributes.position[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          } else {\n            if (!targetObject.geometry.morphTargets) {\n              console.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this);\n              return;\n            }\n\n            for (var i = 0; i < this.node.geometry.morphTargets.length; i++) {\n              if (targetObject.geometry.morphTargets[i].name === propertyIndex) {\n                propertyIndex = i;\n                break;\n              }\n            }\n          }\n        }\n\n        bindingType = this.BindingType.ArrayElement;\n        this.resolvedProperty = nodeProperty;\n        this.propertyIndex = propertyIndex;\n      } else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n        // must use copy for Object3D.Euler/Quaternion\n        bindingType = this.BindingType.HasFromToArray;\n        this.resolvedProperty = nodeProperty;\n      } else if (Array.isArray(nodeProperty)) {\n        bindingType = this.BindingType.EntireArray;\n        this.resolvedProperty = nodeProperty;\n      } else {\n        this.propertyName = propertyName;\n      } // select getter / setter\n\n\n      this.getValue = this.GetterByBindingType[bindingType];\n      this.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n    },\n    unbind: function () {\n      this.node = null; // back to the prototype version of getValue / setValue\n      // note: avoiding to mutate the shape of 'this' via 'delete'\n\n      this.getValue = this._getValue_unbound;\n      this.setValue = this._setValue_unbound;\n    }\n  }); //!\\ DECLARE ALIAS AFTER assign prototype !\n\n  Object.assign(PropertyBinding.prototype, {\n    // initial state of these methods that calls 'bind'\n    _getValue_unbound: PropertyBinding.prototype.getValue,\n    _setValue_unbound: PropertyBinding.prototype.setValue\n  });\n  /**\n   *\n   * A group of objects that receives a shared animation state.\n   *\n   * Usage:\n   *\n   *  - Add objects you would otherwise pass as 'root' to the\n   *    constructor or the .clipAction method of AnimationMixer.\n   *\n   *  - Instead pass this object as 'root'.\n   *\n   *  - You can also add and remove objects later when the mixer\n   *    is running.\n   *\n   * Note:\n   *\n   *    Objects of this class appear as one object to the mixer,\n   *    so cache control of the individual objects must be done\n   *    on the group.\n   *\n   * Limitation:\n   *\n   *  - The animated properties must be compatible among the\n   *    all objects in the group.\n   *\n   *  - A single property can either be controlled through a\n   *    target group or directly, but not both.\n   *\n   * @author tschw\n   */\n\n  function AnimationObjectGroup() {\n    this.uuid = _Math.generateUUID(); // cached objects followed by the active ones\n\n    this._objects = Array.prototype.slice.call(arguments);\n    this.nCachedObjects_ = 0; // threshold\n    // note: read by PropertyBinding.Composite\n\n    var indices = {};\n    this._indicesByUUID = indices; // for bookkeeping\n\n    for (var i = 0, n = arguments.length; i !== n; ++i) {\n      indices[arguments[i].uuid] = i;\n    }\n\n    this._paths = []; // inside: string\n\n    this._parsedPaths = []; // inside: { we don't care, here }\n\n    this._bindings = []; // inside: Array< PropertyBinding >\n\n    this._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n    var scope = this;\n    this.stats = {\n      objects: {\n        get total() {\n          return scope._objects.length;\n        },\n\n        get inUse() {\n          return this.total - scope.nCachedObjects_;\n        }\n\n      },\n\n      get bindingsPerObject() {\n        return scope._bindings.length;\n      }\n\n    };\n  }\n\n  Object.assign(AnimationObjectGroup.prototype, {\n    isAnimationObjectGroup: true,\n    add: function () {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          bindings = this._bindings,\n          nBindings = bindings.length,\n          knownObject = undefined;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index === undefined) {\n          // unknown object -> add it to the ACTIVE region\n          index = nObjects++;\n          indicesByUUID[uuid] = index;\n          objects.push(object); // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            bindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n          }\n        } else if (index < nCachedObjects) {\n          knownObject = objects[index]; // move existing object to the ACTIVE region\n\n          var firstActiveIndex = --nCachedObjects,\n              lastCachedObject = objects[firstActiveIndex];\n          indicesByUUID[lastCachedObject.uuid] = index;\n          objects[index] = lastCachedObject;\n          indicesByUUID[uuid] = firstActiveIndex;\n          objects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                lastCached = bindingsForPath[firstActiveIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = lastCached;\n\n            if (binding === undefined) {\n              // since we do not bother to create new bindings\n              // for objects that are cached, the binding may\n              // or may not exist\n              binding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n            }\n\n            bindingsForPath[firstActiveIndex] = binding;\n          }\n        } else if (objects[index] !== knownObject) {\n          console.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n        } // else the object is already where we want it to be\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    remove: function () {\n      var objects = this._objects,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined && index >= nCachedObjects) {\n          // move existing object into the CACHED region\n          var lastCachedIndex = nCachedObjects++,\n              firstActiveObject = objects[lastCachedIndex];\n          indicesByUUID[firstActiveObject.uuid] = index;\n          objects[index] = firstActiveObject;\n          indicesByUUID[uuid] = lastCachedIndex;\n          objects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n          for (var j = 0, m = nBindings; j !== m; ++j) {\n            var bindingsForPath = bindings[j],\n                firstActive = bindingsForPath[lastCachedIndex],\n                binding = bindingsForPath[index];\n            bindingsForPath[index] = firstActive;\n            bindingsForPath[lastCachedIndex] = binding;\n          }\n        }\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // remove & forget\n    uncache: function () {\n      var objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          indicesByUUID = this._indicesByUUID,\n          bindings = this._bindings,\n          nBindings = bindings.length;\n\n      for (var i = 0, n = arguments.length; i !== n; ++i) {\n        var object = arguments[i],\n            uuid = object.uuid,\n            index = indicesByUUID[uuid];\n\n        if (index !== undefined) {\n          delete indicesByUUID[uuid];\n\n          if (index < nCachedObjects) {\n            // object is cached, shrink the CACHED region\n            var firstActiveIndex = --nCachedObjects,\n                lastCachedObject = objects[firstActiveIndex],\n                lastIndex = --nObjects,\n                lastObject = objects[lastIndex]; // last cached object takes this object's place\n\n            indicesByUUID[lastCachedObject.uuid] = index;\n            objects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n            indicesByUUID[lastObject.uuid] = firstActiveIndex;\n            objects[firstActiveIndex] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j],\n                  lastCached = bindingsForPath[firstActiveIndex],\n                  last = bindingsForPath[lastIndex];\n              bindingsForPath[index] = lastCached;\n              bindingsForPath[firstActiveIndex] = last;\n              bindingsForPath.pop();\n            }\n          } else {\n            // object is active, just swap with the last and pop\n            var lastIndex = --nObjects,\n                lastObject = objects[lastIndex];\n            indicesByUUID[lastObject.uuid] = index;\n            objects[index] = lastObject;\n            objects.pop(); // accounting is done, now do the same for all bindings\n\n            for (var j = 0, m = nBindings; j !== m; ++j) {\n              var bindingsForPath = bindings[j];\n              bindingsForPath[index] = bindingsForPath[lastIndex];\n              bindingsForPath.pop();\n            }\n          } // cached or active\n\n        } // if object is known\n\n      } // for arguments\n\n\n      this.nCachedObjects_ = nCachedObjects;\n    },\n    // Internal interface used by befriended PropertyBinding.Composite:\n    subscribe_: function (path, parsedPath) {\n      // returns an array of bindings for the given path that is changed\n      // according to the contained objects in the group\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path],\n          bindings = this._bindings;\n\n      if (index !== undefined) {\n        return bindings[index];\n      }\n\n      var paths = this._paths,\n          parsedPaths = this._parsedPaths,\n          objects = this._objects,\n          nObjects = objects.length,\n          nCachedObjects = this.nCachedObjects_,\n          bindingsForPath = new Array(nObjects);\n      index = bindings.length;\n      indicesByPath[path] = index;\n      paths.push(path);\n      parsedPaths.push(parsedPath);\n      bindings.push(bindingsForPath);\n\n      for (var i = nCachedObjects, n = objects.length; i !== n; ++i) {\n        var object = objects[i];\n        bindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n      }\n\n      return bindingsForPath;\n    },\n    unsubscribe_: function (path) {\n      // tells the group to forget about a property path and no longer\n      // update the array previously obtained with 'subscribe_'\n      var indicesByPath = this._bindingsIndicesByPath,\n          index = indicesByPath[path];\n\n      if (index !== undefined) {\n        var paths = this._paths,\n            parsedPaths = this._parsedPaths,\n            bindings = this._bindings,\n            lastBindingsIndex = bindings.length - 1,\n            lastBindings = bindings[lastBindingsIndex],\n            lastBindingsPath = path[lastBindingsIndex];\n        indicesByPath[lastBindingsPath] = index;\n        bindings[index] = lastBindings;\n        bindings.pop();\n        parsedPaths[index] = parsedPaths[lastBindingsIndex];\n        parsedPaths.pop();\n        paths[index] = paths[lastBindingsIndex];\n        paths.pop();\n      }\n    }\n  });\n  /**\n   *\n   * Action provided by AnimationMixer for scheduling clip playback on specific\n   * objects.\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   *\n   */\n\n  function AnimationAction(mixer, clip, localRoot) {\n    this._mixer = mixer;\n    this._clip = clip;\n    this._localRoot = localRoot || null;\n    var tracks = clip.tracks,\n        nTracks = tracks.length,\n        interpolants = new Array(nTracks);\n    var interpolantSettings = {\n      endingStart: ZeroCurvatureEnding,\n      endingEnd: ZeroCurvatureEnding\n    };\n\n    for (var i = 0; i !== nTracks; ++i) {\n      var interpolant = tracks[i].createInterpolant(null);\n      interpolants[i] = interpolant;\n      interpolant.settings = interpolantSettings;\n    }\n\n    this._interpolantSettings = interpolantSettings;\n    this._interpolants = interpolants; // bound by the mixer\n    // inside: PropertyMixer (managed by the mixer)\n\n    this._propertyBindings = new Array(nTracks);\n    this._cacheIndex = null; // for the memory manager\n\n    this._byClipCacheIndex = null; // for the memory manager\n\n    this._timeScaleInterpolant = null;\n    this._weightInterpolant = null;\n    this.loop = LoopRepeat;\n    this._loopCount = -1; // global mixer time when the action is to be started\n    // it's set back to 'null' upon start of the action\n\n    this._startTime = null; // scaled local time of the action\n    // gets clamped or wrapped to 0..clip.duration according to loop\n\n    this.time = 0;\n    this.timeScale = 1;\n    this._effectiveTimeScale = 1;\n    this.weight = 1;\n    this._effectiveWeight = 1;\n    this.repetitions = Infinity; // no. of repetitions when looping\n\n    this.paused = false; // true -> zero effective time scale\n\n    this.enabled = true; // false -> zero effective weight\n\n    this.clampWhenFinished = false; // keep feeding the last frame?\n\n    this.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n    this.zeroSlopeAtEnd = true; // clips for start, loop and end\n  }\n\n  Object.assign(AnimationAction.prototype, {\n    // State & Scheduling\n    play: function () {\n      this._mixer._activateAction(this);\n\n      return this;\n    },\n    stop: function () {\n      this._mixer._deactivateAction(this);\n\n      return this.reset();\n    },\n    reset: function () {\n      this.paused = false;\n      this.enabled = true;\n      this.time = 0; // restart clip\n\n      this._loopCount = -1; // forget previous loops\n\n      this._startTime = null; // forget scheduling\n\n      return this.stopFading().stopWarping();\n    },\n    isRunning: function () {\n      return this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n    },\n    // return true when play has been called\n    isScheduled: function () {\n      return this._mixer._isActiveAction(this);\n    },\n    startAt: function (time) {\n      this._startTime = time;\n      return this;\n    },\n    setLoop: function (mode, repetitions) {\n      this.loop = mode;\n      this.repetitions = repetitions;\n      return this;\n    },\n    // Weight\n    // set the weight stopping any scheduled fading\n    // although .enabled = false yields an effective weight of zero, this\n    // method does *not* change .enabled, because it would be confusing\n    setEffectiveWeight: function (weight) {\n      this.weight = weight; // note: same logic as when updated at runtime\n\n      this._effectiveWeight = this.enabled ? weight : 0;\n      return this.stopFading();\n    },\n    // return the weight considering fading and .enabled\n    getEffectiveWeight: function () {\n      return this._effectiveWeight;\n    },\n    fadeIn: function (duration) {\n      return this._scheduleFading(duration, 0, 1);\n    },\n    fadeOut: function (duration) {\n      return this._scheduleFading(duration, 1, 0);\n    },\n    crossFadeFrom: function (fadeOutAction, duration, warp) {\n      fadeOutAction.fadeOut(duration);\n      this.fadeIn(duration);\n\n      if (warp) {\n        var fadeInDuration = this._clip.duration,\n            fadeOutDuration = fadeOutAction._clip.duration,\n            startEndRatio = fadeOutDuration / fadeInDuration,\n            endStartRatio = fadeInDuration / fadeOutDuration;\n        fadeOutAction.warp(1.0, startEndRatio, duration);\n        this.warp(endStartRatio, 1.0, duration);\n      }\n\n      return this;\n    },\n    crossFadeTo: function (fadeInAction, duration, warp) {\n      return fadeInAction.crossFadeFrom(this, duration, warp);\n    },\n    stopFading: function () {\n      var weightInterpolant = this._weightInterpolant;\n\n      if (weightInterpolant !== null) {\n        this._weightInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(weightInterpolant);\n      }\n\n      return this;\n    },\n    // Time Scale Control\n    // set the time scale stopping any scheduled warping\n    // although .paused = true yields an effective time scale of zero, this\n    // method does *not* change .paused, because it would be confusing\n    setEffectiveTimeScale: function (timeScale) {\n      this.timeScale = timeScale;\n      this._effectiveTimeScale = this.paused ? 0 : timeScale;\n      return this.stopWarping();\n    },\n    // return the time scale considering warping and .paused\n    getEffectiveTimeScale: function () {\n      return this._effectiveTimeScale;\n    },\n    setDuration: function (duration) {\n      this.timeScale = this._clip.duration / duration;\n      return this.stopWarping();\n    },\n    syncWith: function (action) {\n      this.time = action.time;\n      this.timeScale = action.timeScale;\n      return this.stopWarping();\n    },\n    halt: function (duration) {\n      return this.warp(this._effectiveTimeScale, 0, duration);\n    },\n    warp: function (startTimeScale, endTimeScale, duration) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._timeScaleInterpolant,\n          timeScale = this.timeScale;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._timeScaleInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      times[1] = now + duration;\n      values[0] = startTimeScale / timeScale;\n      values[1] = endTimeScale / timeScale;\n      return this;\n    },\n    stopWarping: function () {\n      var timeScaleInterpolant = this._timeScaleInterpolant;\n\n      if (timeScaleInterpolant !== null) {\n        this._timeScaleInterpolant = null;\n\n        this._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n      }\n\n      return this;\n    },\n    // Object Accessors\n    getMixer: function () {\n      return this._mixer;\n    },\n    getClip: function () {\n      return this._clip;\n    },\n    getRoot: function () {\n      return this._localRoot || this._mixer._root;\n    },\n    // Interna\n    _update: function (time, deltaTime, timeDirection, accuIndex) {\n      // called by the mixer\n      if (!this.enabled) {\n        // call ._updateWeight() to update ._effectiveWeight\n        this._updateWeight(time);\n\n        return;\n      }\n\n      var startTime = this._startTime;\n\n      if (startTime !== null) {\n        // check for scheduled start of action\n        var timeRunning = (time - startTime) * timeDirection;\n\n        if (timeRunning < 0 || timeDirection === 0) {\n          return; // yet to come / don't decide when delta = 0\n        } // start\n\n\n        this._startTime = null; // unschedule\n\n        deltaTime = timeDirection * timeRunning;\n      } // apply time scale and advance time\n\n\n      deltaTime *= this._updateTimeScale(time);\n\n      var clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n      // an effective weight of 0\n\n\n      var weight = this._updateWeight(time);\n\n      if (weight > 0) {\n        var interpolants = this._interpolants;\n        var propertyMixers = this._propertyBindings;\n\n        for (var j = 0, m = interpolants.length; j !== m; ++j) {\n          interpolants[j].evaluate(clipTime);\n          propertyMixers[j].accumulate(accuIndex, weight);\n        }\n      }\n    },\n    _updateWeight: function (time) {\n      var weight = 0;\n\n      if (this.enabled) {\n        weight = this.weight;\n        var interpolant = this._weightInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          weight *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopFading();\n\n            if (interpolantValue === 0) {\n              // faded out, disable\n              this.enabled = false;\n            }\n          }\n        }\n      }\n\n      this._effectiveWeight = weight;\n      return weight;\n    },\n    _updateTimeScale: function (time) {\n      var timeScale = 0;\n\n      if (!this.paused) {\n        timeScale = this.timeScale;\n        var interpolant = this._timeScaleInterpolant;\n\n        if (interpolant !== null) {\n          var interpolantValue = interpolant.evaluate(time)[0];\n          timeScale *= interpolantValue;\n\n          if (time > interpolant.parameterPositions[1]) {\n            this.stopWarping();\n\n            if (timeScale === 0) {\n              // motion has halted, pause\n              this.paused = true;\n            } else {\n              // warp done - apply final time scale\n              this.timeScale = timeScale;\n            }\n          }\n        }\n      }\n\n      this._effectiveTimeScale = timeScale;\n      return timeScale;\n    },\n    _updateTime: function (deltaTime) {\n      var time = this.time + deltaTime;\n      var duration = this._clip.duration;\n      var loop = this.loop;\n      var loopCount = this._loopCount;\n      var pingPong = loop === LoopPingPong;\n\n      if (deltaTime === 0) {\n        if (loopCount === -1) {\n          return time;\n        }\n\n        return pingPong && (loopCount & 1) === 1 ? duration - time : time;\n      }\n\n      if (loop === LoopOnce) {\n        if (loopCount === -1) {\n          // just started\n          this._loopCount = 0;\n\n          this._setEndings(true, true, false);\n        }\n\n        handle_stop: {\n          if (time >= duration) {\n            time = duration;\n          } else if (time < 0) {\n            time = 0;\n          } else {\n            this.time = time;\n            break handle_stop;\n          }\n\n          if (this.clampWhenFinished) {\n            this.paused = true;\n          } else {\n            this.enabled = false;\n          }\n\n          this.time = time;\n\n          this._mixer.dispatchEvent({\n            type: 'finished',\n            action: this,\n            direction: deltaTime < 0 ? -1 : 1\n          });\n        }\n      } else {\n        // repetitive Repeat or PingPong\n        if (loopCount === -1) {\n          // just started\n          if (deltaTime >= 0) {\n            loopCount = 0;\n\n            this._setEndings(true, this.repetitions === 0, pingPong);\n          } else {\n            // when looping in reverse direction, the initial\n            // transition through zero counts as a repetition,\n            // so leave loopCount at -1\n            this._setEndings(this.repetitions === 0, true, pingPong);\n          }\n        }\n\n        if (time >= duration || time < 0) {\n          // wrap around\n          var loopDelta = Math.floor(time / duration); // signed\n\n          time -= duration * loopDelta;\n          loopCount += Math.abs(loopDelta);\n          var pending = this.repetitions - loopCount;\n\n          if (pending <= 0) {\n            // have to stop (switch state, clamp time, fire event)\n            if (this.clampWhenFinished) {\n              this.paused = true;\n            } else {\n              this.enabled = false;\n            }\n\n            time = deltaTime > 0 ? duration : 0;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'finished',\n              action: this,\n              direction: deltaTime > 0 ? 1 : -1\n            });\n          } else {\n            // keep running\n            if (pending === 1) {\n              // entering the last round\n              var atStart = deltaTime < 0;\n\n              this._setEndings(atStart, !atStart, pingPong);\n            } else {\n              this._setEndings(false, false, pingPong);\n            }\n\n            this._loopCount = loopCount;\n            this.time = time;\n\n            this._mixer.dispatchEvent({\n              type: 'loop',\n              action: this,\n              loopDelta: loopDelta\n            });\n          }\n        } else {\n          this.time = time;\n        }\n\n        if (pingPong && (loopCount & 1) === 1) {\n          // invert time for the \"pong round\"\n          return duration - time;\n        }\n      }\n\n      return time;\n    },\n    _setEndings: function (atStart, atEnd, pingPong) {\n      var settings = this._interpolantSettings;\n\n      if (pingPong) {\n        settings.endingStart = ZeroSlopeEnding;\n        settings.endingEnd = ZeroSlopeEnding;\n      } else {\n        // assuming for LoopOnce atStart == atEnd == true\n        if (atStart) {\n          settings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingStart = WrapAroundEnding;\n        }\n\n        if (atEnd) {\n          settings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n        } else {\n          settings.endingEnd = WrapAroundEnding;\n        }\n      }\n    },\n    _scheduleFading: function (duration, weightNow, weightThen) {\n      var mixer = this._mixer,\n          now = mixer.time,\n          interpolant = this._weightInterpolant;\n\n      if (interpolant === null) {\n        interpolant = mixer._lendControlInterpolant();\n        this._weightInterpolant = interpolant;\n      }\n\n      var times = interpolant.parameterPositions,\n          values = interpolant.sampleValues;\n      times[0] = now;\n      values[0] = weightNow;\n      times[1] = now + duration;\n      values[1] = weightThen;\n      return this;\n    }\n  });\n  /**\n   *\n   * Player for AnimationClips.\n   *\n   *\n   * @author Ben Houston / http://clara.io/\n   * @author David Sarno / http://lighthaus.us/\n   * @author tschw\n   */\n\n  function AnimationMixer(root) {\n    this._root = root;\n\n    this._initMemoryManager();\n\n    this._accuIndex = 0;\n    this.time = 0;\n    this.timeScale = 1.0;\n  }\n\n  AnimationMixer.prototype = Object.assign(Object.create(EventDispatcher.prototype), {\n    constructor: AnimationMixer,\n    _bindAction: function (action, prototypeAction) {\n      var root = action._localRoot || this._root,\n          tracks = action._clip.tracks,\n          nTracks = tracks.length,\n          bindings = action._propertyBindings,\n          interpolants = action._interpolants,\n          rootUuid = root.uuid,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingsByName = bindingsByRoot[rootUuid];\n\n      if (bindingsByName === undefined) {\n        bindingsByName = {};\n        bindingsByRoot[rootUuid] = bindingsByName;\n      }\n\n      for (var i = 0; i !== nTracks; ++i) {\n        var track = tracks[i],\n            trackName = track.name,\n            binding = bindingsByName[trackName];\n\n        if (binding !== undefined) {\n          bindings[i] = binding;\n        } else {\n          binding = bindings[i];\n\n          if (binding !== undefined) {\n            // existing binding, make sure the cache knows\n            if (binding._cacheIndex === null) {\n              ++binding.referenceCount;\n\n              this._addInactiveBinding(binding, rootUuid, trackName);\n            }\n\n            continue;\n          }\n\n          var path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n          binding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n          ++binding.referenceCount;\n\n          this._addInactiveBinding(binding, rootUuid, trackName);\n\n          bindings[i] = binding;\n        }\n\n        interpolants[i].resultBuffer = binding.buffer;\n      }\n    },\n    _activateAction: function (action) {\n      if (!this._isActiveAction(action)) {\n        if (action._cacheIndex === null) {\n          // this action has been forgotten by the cache, but the user\n          // appears to be still using it -> rebind\n          var rootUuid = (action._localRoot || this._root).uuid,\n              clipUuid = action._clip.uuid,\n              actionsForClip = this._actionsByClip[clipUuid];\n\n          this._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n          this._addInactiveAction(action, clipUuid, rootUuid);\n        }\n\n        var bindings = action._propertyBindings; // increment reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (binding.useCount++ === 0) {\n            this._lendBinding(binding);\n\n            binding.saveOriginalState();\n          }\n        }\n\n        this._lendAction(action);\n      }\n    },\n    _deactivateAction: function (action) {\n      if (this._isActiveAction(action)) {\n        var bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n        for (var i = 0, n = bindings.length; i !== n; ++i) {\n          var binding = bindings[i];\n\n          if (--binding.useCount === 0) {\n            binding.restoreOriginalState();\n\n            this._takeBackBinding(binding);\n          }\n        }\n\n        this._takeBackAction(action);\n      }\n    },\n    // Memory manager\n    _initMemoryManager: function () {\n      this._actions = []; // 'nActiveActions' followed by inactive ones\n\n      this._nActiveActions = 0;\n      this._actionsByClip = {}; // inside:\n      // {\n      // \tknownActions: Array< AnimationAction > - used as prototypes\n      // \tactionByRoot: AnimationAction - lookup\n      // }\n\n      this._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n      this._nActiveBindings = 0;\n      this._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n      this._controlInterpolants = []; // same game as above\n\n      this._nActiveControlInterpolants = 0;\n      var scope = this;\n      this.stats = {\n        actions: {\n          get total() {\n            return scope._actions.length;\n          },\n\n          get inUse() {\n            return scope._nActiveActions;\n          }\n\n        },\n        bindings: {\n          get total() {\n            return scope._bindings.length;\n          },\n\n          get inUse() {\n            return scope._nActiveBindings;\n          }\n\n        },\n        controlInterpolants: {\n          get total() {\n            return scope._controlInterpolants.length;\n          },\n\n          get inUse() {\n            return scope._nActiveControlInterpolants;\n          }\n\n        }\n      };\n    },\n    // Memory management for AnimationAction objects\n    _isActiveAction: function (action) {\n      var index = action._cacheIndex;\n      return index !== null && index < this._nActiveActions;\n    },\n    _addInactiveAction: function (action, clipUuid, rootUuid) {\n      var actions = this._actions,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip === undefined) {\n        actionsForClip = {\n          knownActions: [action],\n          actionByRoot: {}\n        };\n        action._byClipCacheIndex = 0;\n        actionsByClip[clipUuid] = actionsForClip;\n      } else {\n        var knownActions = actionsForClip.knownActions;\n        action._byClipCacheIndex = knownActions.length;\n        knownActions.push(action);\n      }\n\n      action._cacheIndex = actions.length;\n      actions.push(action);\n      actionsForClip.actionByRoot[rootUuid] = action;\n    },\n    _removeInactiveAction: function (action) {\n      var actions = this._actions,\n          lastInactiveAction = actions[actions.length - 1],\n          cacheIndex = action._cacheIndex;\n      lastInactiveAction._cacheIndex = cacheIndex;\n      actions[cacheIndex] = lastInactiveAction;\n      actions.pop();\n      action._cacheIndex = null;\n      var clipUuid = action._clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid],\n          knownActionsForClip = actionsForClip.knownActions,\n          lastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n          byClipCacheIndex = action._byClipCacheIndex;\n      lastKnownAction._byClipCacheIndex = byClipCacheIndex;\n      knownActionsForClip[byClipCacheIndex] = lastKnownAction;\n      knownActionsForClip.pop();\n      action._byClipCacheIndex = null;\n      var actionByRoot = actionsForClip.actionByRoot,\n          rootUuid = (action._localRoot || this._root).uuid;\n      delete actionByRoot[rootUuid];\n\n      if (knownActionsForClip.length === 0) {\n        delete actionsByClip[clipUuid];\n      }\n\n      this._removeInactiveBindingsForAction(action);\n    },\n    _removeInactiveBindingsForAction: function (action) {\n      var bindings = action._propertyBindings;\n\n      for (var i = 0, n = bindings.length; i !== n; ++i) {\n        var binding = bindings[i];\n\n        if (--binding.referenceCount === 0) {\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    _lendAction: function (action) {\n      // [ active actions |  inactive actions  ]\n      // [  active actions >| inactive actions ]\n      //                 s        a\n      //                  <-swap->\n      //                 a        s\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          lastActiveIndex = this._nActiveActions++,\n          firstInactiveAction = actions[lastActiveIndex];\n      action._cacheIndex = lastActiveIndex;\n      actions[lastActiveIndex] = action;\n      firstInactiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = firstInactiveAction;\n    },\n    _takeBackAction: function (action) {\n      // [  active actions  | inactive actions ]\n      // [ active actions |< inactive actions  ]\n      //        a        s\n      //         <-swap->\n      //        s        a\n      var actions = this._actions,\n          prevIndex = action._cacheIndex,\n          firstInactiveIndex = --this._nActiveActions,\n          lastActiveAction = actions[firstInactiveIndex];\n      action._cacheIndex = firstInactiveIndex;\n      actions[firstInactiveIndex] = action;\n      lastActiveAction._cacheIndex = prevIndex;\n      actions[prevIndex] = lastActiveAction;\n    },\n    // Memory management for PropertyMixer objects\n    _addInactiveBinding: function (binding, rootUuid, trackName) {\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          bindings = this._bindings;\n\n      if (bindingByName === undefined) {\n        bindingByName = {};\n        bindingsByRoot[rootUuid] = bindingByName;\n      }\n\n      bindingByName[trackName] = binding;\n      binding._cacheIndex = bindings.length;\n      bindings.push(binding);\n    },\n    _removeInactiveBinding: function (binding) {\n      var bindings = this._bindings,\n          propBinding = binding.binding,\n          rootUuid = propBinding.rootNode.uuid,\n          trackName = propBinding.path,\n          bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid],\n          lastInactiveBinding = bindings[bindings.length - 1],\n          cacheIndex = binding._cacheIndex;\n      lastInactiveBinding._cacheIndex = cacheIndex;\n      bindings[cacheIndex] = lastInactiveBinding;\n      bindings.pop();\n      delete bindingByName[trackName];\n\n      if (Object.keys(bindingByName).length === 0) {\n        delete bindingsByRoot[rootUuid];\n      }\n    },\n    _lendBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          lastActiveIndex = this._nActiveBindings++,\n          firstInactiveBinding = bindings[lastActiveIndex];\n      binding._cacheIndex = lastActiveIndex;\n      bindings[lastActiveIndex] = binding;\n      firstInactiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = firstInactiveBinding;\n    },\n    _takeBackBinding: function (binding) {\n      var bindings = this._bindings,\n          prevIndex = binding._cacheIndex,\n          firstInactiveIndex = --this._nActiveBindings,\n          lastActiveBinding = bindings[firstInactiveIndex];\n      binding._cacheIndex = firstInactiveIndex;\n      bindings[firstInactiveIndex] = binding;\n      lastActiveBinding._cacheIndex = prevIndex;\n      bindings[prevIndex] = lastActiveBinding;\n    },\n    // Memory management of Interpolants for weight and time scale\n    _lendControlInterpolant: function () {\n      var interpolants = this._controlInterpolants,\n          lastActiveIndex = this._nActiveControlInterpolants++,\n          interpolant = interpolants[lastActiveIndex];\n\n      if (interpolant === undefined) {\n        interpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n        interpolant.__cacheIndex = lastActiveIndex;\n        interpolants[lastActiveIndex] = interpolant;\n      }\n\n      return interpolant;\n    },\n    _takeBackControlInterpolant: function (interpolant) {\n      var interpolants = this._controlInterpolants,\n          prevIndex = interpolant.__cacheIndex,\n          firstInactiveIndex = --this._nActiveControlInterpolants,\n          lastActiveInterpolant = interpolants[firstInactiveIndex];\n      interpolant.__cacheIndex = firstInactiveIndex;\n      interpolants[firstInactiveIndex] = interpolant;\n      lastActiveInterpolant.__cacheIndex = prevIndex;\n      interpolants[prevIndex] = lastActiveInterpolant;\n    },\n    _controlInterpolantsResultBuffer: new Float32Array(1),\n    // return an action for a clip optionally using a custom root target\n    // object (this method allocates a lot of dynamic memory in case a\n    // previously unknown clip/root combination is specified)\n    clipAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject !== null ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid],\n          prototypeAction = null;\n\n      if (actionsForClip !== undefined) {\n        var existingAction = actionsForClip.actionByRoot[rootUuid];\n\n        if (existingAction !== undefined) {\n          return existingAction;\n        } // we know the clip, so we don't have to parse all\n        // the bindings again but can just copy\n\n\n        prototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n        if (clipObject === null) {\n          clipObject = prototypeAction._clip;\n        }\n      } // clip must be known when specified via string\n\n\n      if (clipObject === null) {\n        return null;\n      } // allocate all resources required to run it\n\n\n      var newAction = new AnimationAction(this, clipObject, optionalRoot);\n\n      this._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n      this._addInactiveAction(newAction, clipUuid, rootUuid);\n\n      return newAction;\n    },\n    // get an existing action\n    existingAction: function (clip, optionalRoot) {\n      var root = optionalRoot || this._root,\n          rootUuid = root.uuid,\n          clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n          clipUuid = clipObject ? clipObject.uuid : clip,\n          actionsForClip = this._actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        return actionsForClip.actionByRoot[rootUuid] || null;\n      }\n\n      return null;\n    },\n    // deactivates all previously scheduled actions\n    stopAllAction: function () {\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n      this._nActiveActions = 0;\n      this._nActiveBindings = 0;\n\n      for (var i = 0; i !== nActions; ++i) {\n        actions[i].reset();\n      }\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].useCount = 0;\n      }\n\n      return this;\n    },\n    // advance the time and update apply the animation\n    update: function (deltaTime) {\n      deltaTime *= this.timeScale;\n      var actions = this._actions,\n          nActions = this._nActiveActions,\n          time = this.time += deltaTime,\n          timeDirection = Math.sign(deltaTime),\n          accuIndex = this._accuIndex ^= 1; // run active actions\n\n      for (var i = 0; i !== nActions; ++i) {\n        var action = actions[i];\n\n        action._update(time, deltaTime, timeDirection, accuIndex);\n      } // update scene graph\n\n\n      var bindings = this._bindings,\n          nBindings = this._nActiveBindings;\n\n      for (var i = 0; i !== nBindings; ++i) {\n        bindings[i].apply(accuIndex);\n      }\n\n      return this;\n    },\n    // Allows you to seek to a specific time in an animation.\n    setTime: function (timeInSeconds) {\n      this.time = 0; // Zero out time attribute for AnimationMixer object;\n\n      for (var i = 0; i < this._actions.length; i++) {\n        this._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n      }\n\n      return this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n    },\n    // return this mixer's root target object\n    getRoot: function () {\n      return this._root;\n    },\n    // free all resources specific to a particular clip\n    uncacheClip: function (clip) {\n      var actions = this._actions,\n          clipUuid = clip.uuid,\n          actionsByClip = this._actionsByClip,\n          actionsForClip = actionsByClip[clipUuid];\n\n      if (actionsForClip !== undefined) {\n        // note: just calling _removeInactiveAction would mess up the\n        // iteration state and also require updating the state we can\n        // just throw away\n        var actionsToRemove = actionsForClip.knownActions;\n\n        for (var i = 0, n = actionsToRemove.length; i !== n; ++i) {\n          var action = actionsToRemove[i];\n\n          this._deactivateAction(action);\n\n          var cacheIndex = action._cacheIndex,\n              lastInactiveAction = actions[actions.length - 1];\n          action._cacheIndex = null;\n          action._byClipCacheIndex = null;\n          lastInactiveAction._cacheIndex = cacheIndex;\n          actions[cacheIndex] = lastInactiveAction;\n          actions.pop();\n\n          this._removeInactiveBindingsForAction(action);\n        }\n\n        delete actionsByClip[clipUuid];\n      }\n    },\n    // free all resources specific to a particular root target object\n    uncacheRoot: function (root) {\n      var rootUuid = root.uuid,\n          actionsByClip = this._actionsByClip;\n\n      for (var clipUuid in actionsByClip) {\n        var actionByRoot = actionsByClip[clipUuid].actionByRoot,\n            action = actionByRoot[rootUuid];\n\n        if (action !== undefined) {\n          this._deactivateAction(action);\n\n          this._removeInactiveAction(action);\n        }\n      }\n\n      var bindingsByRoot = this._bindingsByRootAndName,\n          bindingByName = bindingsByRoot[rootUuid];\n\n      if (bindingByName !== undefined) {\n        for (var trackName in bindingByName) {\n          var binding = bindingByName[trackName];\n          binding.restoreOriginalState();\n\n          this._removeInactiveBinding(binding);\n        }\n      }\n    },\n    // remove a targeted clip from the cache\n    uncacheAction: function (clip, optionalRoot) {\n      var action = this.existingAction(clip, optionalRoot);\n\n      if (action !== null) {\n        this._deactivateAction(action);\n\n        this._removeInactiveAction(action);\n      }\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Uniform(value) {\n    if (typeof value === 'string') {\n      console.warn('THREE.Uniform: Type parameter is no longer needed.');\n      value = arguments[1];\n    }\n\n    this.value = value;\n  }\n\n  Uniform.prototype.clone = function () {\n    return new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n  };\n  /**\n   * @author benaadams / https://twitter.com/ben_a_adams\n   */\n\n\n  function InstancedInterleavedBuffer(array, stride, meshPerAttribute) {\n    InterleavedBuffer.call(this, array, stride);\n    this.meshPerAttribute = meshPerAttribute || 1;\n  }\n\n  InstancedInterleavedBuffer.prototype = Object.assign(Object.create(InterleavedBuffer.prototype), {\n    constructor: InstancedInterleavedBuffer,\n    isInstancedInterleavedBuffer: true,\n    copy: function (source) {\n      InterleavedBuffer.prototype.copy.call(this, source);\n      this.meshPerAttribute = source.meshPerAttribute;\n      return this;\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author bhouston / http://clara.io/\n   * @author stephomi / http://stephaneginier.com/\n   */\n\n  function Raycaster(origin, direction, near, far) {\n    this.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n    this.near = near || 0;\n    this.far = far || Infinity;\n    this.camera = null;\n    this.params = {\n      Mesh: {},\n      Line: {},\n      LOD: {},\n      Points: {\n        threshold: 1\n      },\n      Sprite: {}\n    };\n    Object.defineProperties(this.params, {\n      PointCloud: {\n        get: function () {\n          console.warn('THREE.Raycaster: params.PointCloud has been renamed to params.Points.');\n          return this.Points;\n        }\n      }\n    });\n  }\n\n  function ascSort(a, b) {\n    return a.distance - b.distance;\n  }\n\n  function intersectObject(object, raycaster, intersects, recursive) {\n    if (object.visible === false) {\n      return;\n    }\n\n    object.raycast(raycaster, intersects);\n\n    if (recursive === true) {\n      var children = object.children;\n\n      for (var i = 0, l = children.length; i < l; i++) {\n        intersectObject(children[i], raycaster, intersects, true);\n      }\n    }\n  }\n\n  Object.assign(Raycaster.prototype, {\n    linePrecision: 1,\n    set: function (origin, direction) {\n      // direction is assumed to be normalized (for accurate distance calculations)\n      this.ray.set(origin, direction);\n    },\n    setFromCamera: function (coords, camera) {\n      if (camera && camera.isPerspectiveCamera) {\n        this.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n        this.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n        this.camera = camera;\n      } else if (camera && camera.isOrthographicCamera) {\n        this.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n        this.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n        this.camera = camera;\n      } else {\n        console.error('THREE.Raycaster: Unsupported camera type.');\n      }\n    },\n    intersectObject: function (object, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n      intersectObject(object, this, intersects, recursive);\n      intersects.sort(ascSort);\n      return intersects;\n    },\n    intersectObjects: function (objects, recursive, optionalTarget) {\n      var intersects = optionalTarget || [];\n\n      if (Array.isArray(objects) === false) {\n        console.warn('THREE.Raycaster.intersectObjects: objects is not an Array.');\n        return intersects;\n      }\n\n      for (var i = 0, l = objects.length; i < l; i++) {\n        intersectObject(objects[i], this, intersects, recursive);\n      }\n\n      intersects.sort(ascSort);\n      return intersects;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n   *\n   * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n   * The azimuthal angle (theta) is measured from the positive z-axis.\n   */\n\n  function Spherical(radius, phi, theta) {\n    this.radius = radius !== undefined ? radius : 1.0;\n    this.phi = phi !== undefined ? phi : 0; // polar angle\n\n    this.theta = theta !== undefined ? theta : 0; // azimuthal angle\n\n    return this;\n  }\n\n  Object.assign(Spherical.prototype, {\n    set: function (radius, phi, theta) {\n      this.radius = radius;\n      this.phi = phi;\n      this.theta = theta;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.phi = other.phi;\n      this.theta = other.theta;\n      return this;\n    },\n    // restrict phi to be betwee EPS and PI-EPS\n    makeSafe: function () {\n      var EPS = 0.000001;\n      this.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n      return this;\n    },\n    setFromVector3: function (v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function (x, y, z) {\n      this.radius = Math.sqrt(x * x + y * y + z * z);\n\n      if (this.radius === 0) {\n        this.theta = 0;\n        this.phi = 0;\n      } else {\n        this.theta = Math.atan2(x, z);\n        this.phi = Math.acos(_Math.clamp(y / this.radius, -1, 1));\n      }\n\n      return this;\n    }\n  });\n  /**\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n   *\n   */\n\n  function Cylindrical(radius, theta, y) {\n    this.radius = radius !== undefined ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\n    this.theta = theta !== undefined ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n    this.y = y !== undefined ? y : 0; // height above the x-z plane\n\n    return this;\n  }\n\n  Object.assign(Cylindrical.prototype, {\n    set: function (radius, theta, y) {\n      this.radius = radius;\n      this.theta = theta;\n      this.y = y;\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (other) {\n      this.radius = other.radius;\n      this.theta = other.theta;\n      this.y = other.y;\n      return this;\n    },\n    setFromVector3: function (v) {\n      return this.setFromCartesianCoords(v.x, v.y, v.z);\n    },\n    setFromCartesianCoords: function (x, y, z) {\n      this.radius = Math.sqrt(x * x + z * z);\n      this.theta = Math.atan2(x, z);\n      this.y = y;\n      return this;\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  var _vector$6 = new Vector2();\n\n  function Box2(min, max) {\n    this.min = min !== undefined ? min : new Vector2(+Infinity, +Infinity);\n    this.max = max !== undefined ? max : new Vector2(-Infinity, -Infinity);\n  }\n\n  Object.assign(Box2.prototype, {\n    set: function (min, max) {\n      this.min.copy(min);\n      this.max.copy(max);\n      return this;\n    },\n    setFromPoints: function (points) {\n      this.makeEmpty();\n\n      for (var i = 0, il = points.length; i < il; i++) {\n        this.expandByPoint(points[i]);\n      }\n\n      return this;\n    },\n    setFromCenterAndSize: function (center, size) {\n      var halfSize = _vector$6.copy(size).multiplyScalar(0.5);\n\n      this.min.copy(center).sub(halfSize);\n      this.max.copy(center).add(halfSize);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (box) {\n      this.min.copy(box.min);\n      this.max.copy(box.max);\n      return this;\n    },\n    makeEmpty: function () {\n      this.min.x = this.min.y = +Infinity;\n      this.max.x = this.max.y = -Infinity;\n      return this;\n    },\n    isEmpty: function () {\n      // this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n      return this.max.x < this.min.x || this.max.y < this.min.y;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getCenter() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n    },\n    getSize: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getSize() target is now required');\n        target = new Vector2();\n      }\n\n      return this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n    },\n    expandByPoint: function (point) {\n      this.min.min(point);\n      this.max.max(point);\n      return this;\n    },\n    expandByVector: function (vector) {\n      this.min.sub(vector);\n      this.max.add(vector);\n      return this;\n    },\n    expandByScalar: function (scalar) {\n      this.min.addScalar(-scalar);\n      this.max.addScalar(scalar);\n      return this;\n    },\n    containsPoint: function (point) {\n      return point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n    },\n    containsBox: function (box) {\n      return this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n    },\n    getParameter: function (point, target) {\n      // This can potentially have a divide by zero if the box\n      // has a size dimension of 0.\n      if (target === undefined) {\n        console.warn('THREE.Box2: .getParameter() target is now required');\n        target = new Vector2();\n      }\n\n      return target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n    },\n    intersectsBox: function (box) {\n      // using 4 splitting planes to rule out intersections\n      return box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n    },\n    clampPoint: function (point, target) {\n      if (target === undefined) {\n        console.warn('THREE.Box2: .clampPoint() target is now required');\n        target = new Vector2();\n      }\n\n      return target.copy(point).clamp(this.min, this.max);\n    },\n    distanceToPoint: function (point) {\n      var clampedPoint = _vector$6.copy(point).clamp(this.min, this.max);\n\n      return clampedPoint.sub(point).length();\n    },\n    intersect: function (box) {\n      this.min.max(box.min);\n      this.max.min(box.max);\n      return this;\n    },\n    union: function (box) {\n      this.min.min(box.min);\n      this.max.max(box.max);\n      return this;\n    },\n    translate: function (offset) {\n      this.min.add(offset);\n      this.max.add(offset);\n      return this;\n    },\n    equals: function (box) {\n      return box.min.equals(this.min) && box.max.equals(this.max);\n    }\n  });\n  /**\n   * @author bhouston / http://clara.io\n   */\n\n  var _startP = new Vector3();\n\n  var _startEnd = new Vector3();\n\n  function Line3(start, end) {\n    this.start = start !== undefined ? start : new Vector3();\n    this.end = end !== undefined ? end : new Vector3();\n  }\n\n  Object.assign(Line3.prototype, {\n    set: function (start, end) {\n      this.start.copy(start);\n      this.end.copy(end);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    },\n    copy: function (line) {\n      this.start.copy(line.start);\n      this.end.copy(line.end);\n      return this;\n    },\n    getCenter: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .getCenter() target is now required');\n        target = new Vector3();\n      }\n\n      return target.addVectors(this.start, this.end).multiplyScalar(0.5);\n    },\n    delta: function (target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .delta() target is now required');\n        target = new Vector3();\n      }\n\n      return target.subVectors(this.end, this.start);\n    },\n    distanceSq: function () {\n      return this.start.distanceToSquared(this.end);\n    },\n    distance: function () {\n      return this.start.distanceTo(this.end);\n    },\n    at: function (t, target) {\n      if (target === undefined) {\n        console.warn('THREE.Line3: .at() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    closestPointToPointParameter: function (point, clampToLine) {\n      _startP.subVectors(point, this.start);\n\n      _startEnd.subVectors(this.end, this.start);\n\n      var startEnd2 = _startEnd.dot(_startEnd);\n\n      var startEnd_startP = _startEnd.dot(_startP);\n\n      var t = startEnd_startP / startEnd2;\n\n      if (clampToLine) {\n        t = _Math.clamp(t, 0, 1);\n      }\n\n      return t;\n    },\n    closestPointToPoint: function (point, clampToLine, target) {\n      var t = this.closestPointToPointParameter(point, clampToLine);\n\n      if (target === undefined) {\n        console.warn('THREE.Line3: .closestPointToPoint() target is now required');\n        target = new Vector3();\n      }\n\n      return this.delta(target).multiplyScalar(t).add(this.start);\n    },\n    applyMatrix4: function (matrix) {\n      this.start.applyMatrix4(matrix);\n      this.end.applyMatrix4(matrix);\n      return this;\n    },\n    equals: function (line) {\n      return line.start.equals(this.start) && line.end.equals(this.end);\n    }\n  });\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   */\n\n  function ImmediateRenderObject(material) {\n    Object3D.call(this);\n    this.material = material;\n\n    this.render = function ()\n    /* renderCallback */\n    {};\n  }\n\n  ImmediateRenderObject.prototype = Object.create(Object3D.prototype);\n  ImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n  ImmediateRenderObject.prototype.isImmediateRenderObject = true;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n  var _v1$5 = new Vector3();\n\n  var _v2$3 = new Vector3();\n\n  var _normalMatrix$1 = new Matrix3();\n\n  var _keys = ['a', 'b', 'c'];\n\n  function VertexNormalsHelper(object, size, hex, linewidth) {\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xff0000;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length * 3;\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      nNormals = objGeometry.attributes.normal.count;\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  VertexNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  VertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n  VertexNormalsHelper.prototype.update = function () {\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix$1.getNormalMatrix(this.object.matrixWorld);\n\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      var vertices = objGeometry.vertices;\n      var faces = objGeometry.faces;\n      var idx = 0;\n\n      for (var i = 0, l = faces.length; i < l; i++) {\n        var face = faces[i];\n\n        for (var j = 0, jl = face.vertexNormals.length; j < jl; j++) {\n          var vertex = vertices[face[_keys[j]]];\n          var normal = face.vertexNormals[j];\n\n          _v1$5.copy(vertex).applyMatrix4(matrixWorld);\n\n          _v2$3.copy(normal).applyMatrix3(_normalMatrix$1).normalize().multiplyScalar(this.size).add(_v1$5);\n\n          position.setXYZ(idx, _v1$5.x, _v1$5.y, _v1$5.z);\n          idx = idx + 1;\n          position.setXYZ(idx, _v2$3.x, _v2$3.y, _v2$3.z);\n          idx = idx + 1;\n        }\n      }\n    } else if (objGeometry && objGeometry.isBufferGeometry) {\n      var objPos = objGeometry.attributes.position;\n      var objNorm = objGeometry.attributes.normal;\n      var idx = 0; // for simplicity, ignore index and drawcalls, and render every normal\n\n      for (var j = 0, jl = objPos.count; j < jl; j++) {\n        _v1$5.set(objPos.getX(j), objPos.getY(j), objPos.getZ(j)).applyMatrix4(matrixWorld);\n\n        _v2$3.set(objNorm.getX(j), objNorm.getY(j), objNorm.getZ(j));\n\n        _v2$3.applyMatrix3(_normalMatrix$1).normalize().multiplyScalar(this.size).add(_v1$5);\n\n        position.setXYZ(idx, _v1$5.x, _v1$5.y, _v1$5.z);\n        idx = idx + 1;\n        position.setXYZ(idx, _v2$3.x, _v2$3.y, _v2$3.z);\n        idx = idx + 1;\n      }\n    }\n\n    position.needsUpdate = true;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  var _vector$7 = new Vector3();\n\n  function SpotLightHelper(light, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new BufferGeometry();\n    var positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n    for (var i = 0, j = 1, l = 32; i < l; i++, j++) {\n      var p1 = i / l * Math.PI * 2;\n      var p2 = j / l * Math.PI * 2;\n      positions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.cone = new LineSegments(geometry, material);\n    this.add(this.cone);\n    this.update();\n  }\n\n  SpotLightHelper.prototype = Object.create(Object3D.prototype);\n  SpotLightHelper.prototype.constructor = SpotLightHelper;\n\n  SpotLightHelper.prototype.dispose = function () {\n    this.cone.geometry.dispose();\n    this.cone.material.dispose();\n  };\n\n  SpotLightHelper.prototype.update = function () {\n    this.light.updateMatrixWorld();\n    var coneLength = this.light.distance ? this.light.distance : 1000;\n    var coneWidth = coneLength * Math.tan(this.light.angle);\n    this.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n    _vector$7.setFromMatrixPosition(this.light.target.matrixWorld);\n\n    this.cone.lookAt(_vector$7);\n\n    if (this.color !== undefined) {\n      this.cone.material.color.set(this.color);\n    } else {\n      this.cone.material.color.copy(this.light.color);\n    }\n  };\n  /**\n   * @author Sean Griffin / http://twitter.com/sgrif\n   * @author Michael Guerrero / http://realitymeltdown.com\n   * @author mrdoob / http://mrdoob.com/\n   * @author ikerr / http://verold.com\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  var _vector$8 = new Vector3();\n\n  var _boneMatrix = new Matrix4();\n\n  var _matrixWorldInv = new Matrix4();\n\n  function getBoneList(object) {\n    var boneList = [];\n\n    if (object && object.isBone) {\n      boneList.push(object);\n    }\n\n    for (var i = 0; i < object.children.length; i++) {\n      boneList.push.apply(boneList, getBoneList(object.children[i]));\n    }\n\n    return boneList;\n  }\n\n  function SkeletonHelper(object) {\n    var bones = getBoneList(object);\n    var geometry = new BufferGeometry();\n    var vertices = [];\n    var colors = [];\n    var color1 = new Color(0, 0, 1);\n    var color2 = new Color(0, 1, 0);\n\n    for (var i = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        vertices.push(0, 0, 0);\n        vertices.push(0, 0, 0);\n        colors.push(color1.r, color1.g, color1.b);\n        colors.push(color2.r, color2.g, color2.b);\n      }\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors,\n      depthTest: false,\n      depthWrite: false,\n      transparent: true\n    });\n    LineSegments.call(this, geometry, material);\n    this.root = object;\n    this.bones = bones;\n    this.matrix = object.matrixWorld;\n    this.matrixAutoUpdate = false;\n  }\n\n  SkeletonHelper.prototype = Object.create(LineSegments.prototype);\n  SkeletonHelper.prototype.constructor = SkeletonHelper;\n\n  SkeletonHelper.prototype.updateMatrixWorld = function (force) {\n    var bones = this.bones;\n    var geometry = this.geometry;\n    var position = geometry.getAttribute('position');\n\n    _matrixWorldInv.getInverse(this.root.matrixWorld);\n\n    for (var i = 0, j = 0; i < bones.length; i++) {\n      var bone = bones[i];\n\n      if (bone.parent && bone.parent.isBone) {\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n        _vector$8.setFromMatrixPosition(_boneMatrix);\n\n        position.setXYZ(j, _vector$8.x, _vector$8.y, _vector$8.z);\n\n        _boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n        _vector$8.setFromMatrixPosition(_boneMatrix);\n\n        position.setXYZ(j + 1, _vector$8.x, _vector$8.y, _vector$8.z);\n        j += 2;\n      }\n    }\n\n    geometry.getAttribute('position').needsUpdate = true;\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function PointLightHelper(light, sphereSize, color) {\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.color = color;\n    var geometry = new SphereBufferGeometry(sphereSize, 4, 2);\n    var material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n    Mesh.call(this, geometry, material);\n    this.matrix = this.light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.update();\n    /*\n    var distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n    var distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n    \tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n    this.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n    \tvar d = light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    \tthis.add( this.lightDistance );\n    */\n  }\n\n  PointLightHelper.prototype = Object.create(Mesh.prototype);\n  PointLightHelper.prototype.constructor = PointLightHelper;\n\n  PointLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  PointLightHelper.prototype.update = function () {\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color);\n    }\n    /*\n    var d = this.light.distance;\n    \tif ( d === 0.0 ) {\n    \t\tthis.lightDistance.visible = false;\n    \t} else {\n    \t\tthis.lightDistance.visible = true;\n    \tthis.lightDistance.scale.set( d, d, d );\n    \t}\n    */\n\n  };\n  /**\n   * @author abelnation / http://github.com/abelnation\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author WestLangley / http://github.com/WestLangley\n   *\n   *  This helper must be added as a child of the light\n   */\n\n\n  function RectAreaLightHelper(light, color) {\n    this.type = 'RectAreaLightHelper';\n    this.light = light;\n    this.color = color; // optional hardwired color for the helper\n\n    var positions = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, -1, 0, 1, 1, 0];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    Line.call(this, geometry, material); //\n\n    var positions2 = [1, 1, 0, -1, 1, 0, -1, -1, 0, 1, 1, 0, -1, -1, 0, 1, -1, 0];\n    var geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      side: BackSide,\n      fog: false\n    })));\n    this.update();\n  }\n\n  RectAreaLightHelper.prototype = Object.create(Line.prototype);\n  RectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n  RectAreaLightHelper.prototype.update = function () {\n    this.scale.set(0.5 * this.light.width, 0.5 * this.light.height, 1);\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n      this.children[0].material.color.set(this.color);\n    } else {\n      this.material.color.copy(this.light.color).multiplyScalar(this.light.intensity); // prevent hue shift\n\n      var c = this.material.color;\n      var max = Math.max(c.r, c.g, c.b);\n\n      if (max > 1) {\n        c.multiplyScalar(1 / max);\n      }\n\n      this.children[0].material.color.copy(this.material.color);\n    }\n  };\n\n  RectAreaLightHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   */\n\n\n  var _vector$9 = new Vector3();\n\n  var _color1 = new Color();\n\n  var _color2 = new Color();\n\n  function HemisphereLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n    var geometry = new OctahedronBufferGeometry(size);\n    geometry.rotateY(Math.PI * 0.5);\n    this.material = new MeshBasicMaterial({\n      wireframe: true,\n      fog: false\n    });\n\n    if (this.color === undefined) {\n      this.material.vertexColors = VertexColors;\n    }\n\n    var position = geometry.getAttribute('position');\n    var colors = new Float32Array(position.count * 3);\n    geometry.setAttribute('color', new BufferAttribute(colors, 3));\n    this.add(new Mesh(geometry, this.material));\n    this.update();\n  }\n\n  HemisphereLightHelper.prototype = Object.create(Object3D.prototype);\n  HemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n  HemisphereLightHelper.prototype.dispose = function () {\n    this.children[0].geometry.dispose();\n    this.children[0].material.dispose();\n  };\n\n  HemisphereLightHelper.prototype.update = function () {\n    var mesh = this.children[0];\n\n    if (this.color !== undefined) {\n      this.material.color.set(this.color);\n    } else {\n      var colors = mesh.geometry.getAttribute('color');\n\n      _color1.copy(this.light.color);\n\n      _color2.copy(this.light.groundColor);\n\n      for (var i = 0, l = colors.count; i < l; i++) {\n        var color = i < l / 2 ? _color1 : _color2;\n        colors.setXYZ(i, color.r, color.g, color.b);\n      }\n\n      colors.needsUpdate = true;\n    }\n\n    mesh.lookAt(_vector$9.setFromMatrixPosition(this.light.matrixWorld).negate());\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function LightProbeHelper(lightProbe, size) {\n    this.lightProbe = lightProbe;\n    this.size = size;\n    var defines = {};\n    defines['GAMMA_OUTPUT'] = \"\"; // material\n\n    var material = new ShaderMaterial({\n      defines: defines,\n      uniforms: {\n        sh: {\n          value: this.lightProbe.sh.coefficients\n        },\n        // by reference\n        intensity: {\n          value: this.lightProbe.intensity\n        }\n      },\n      vertexShader: ['varying vec3 vNormal;', 'void main() {', '\tvNormal = normalize( normalMatrix * normal );', '\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );', '}'].join('\\n'),\n      fragmentShader: ['#define RECIPROCAL_PI 0.318309886', 'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {', '\t// matrix is assumed to be orthogonal', '\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );', '}', 'vec3 linearToOutput( in vec3 a ) {', '\t#ifdef GAMMA_OUTPUT', '\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );', '\t#else', '\t\treturn a;', '\t#endif', '}', '// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf', 'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {', '\t// normal is assumed to have unit length', '\tfloat x = normal.x, y = normal.y, z = normal.z;', '\t// band 0', '\tvec3 result = shCoefficients[ 0 ] * 0.886227;', '\t// band 1', '\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;', '\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;', '\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;', '\t// band 2', '\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;', '\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;', '\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );', '\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;', '\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );', '\treturn result;', '}', 'uniform vec3 sh[ 9 ]; // sh coefficients', 'uniform float intensity; // light probe intensity', 'varying vec3 vNormal;', 'void main() {', '\tvec3 normal = normalize( vNormal );', '\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );', '\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );', '\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;', '\toutgoingLight = linearToOutput( outgoingLight );', '\tgl_FragColor = vec4( outgoingLight, 1.0 );', '}'].join('\\n')\n    });\n    var geometry = new SphereBufferGeometry(1, 32, 16);\n    Mesh.call(this, geometry, material);\n    this.onBeforeRender();\n  }\n\n  LightProbeHelper.prototype = Object.create(Mesh.prototype);\n  LightProbeHelper.prototype.constructor = LightProbeHelper;\n\n  LightProbeHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material.dispose();\n  };\n\n  LightProbeHelper.prototype.onBeforeRender = function () {\n    this.position.copy(this.lightProbe.position);\n    this.scale.set(1, 1, 1).multiplyScalar(this.size);\n    this.material.uniforms.intensity.value = this.lightProbe.intensity;\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function GridHelper(size, divisions, color1, color2) {\n    size = size || 10;\n    divisions = divisions || 10;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var center = divisions / 2;\n    var step = size / divisions;\n    var halfSize = size / 2;\n    var vertices = [],\n        colors = [];\n\n    for (var i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n      vertices.push(-halfSize, 0, k, halfSize, 0, k);\n      vertices.push(k, 0, -halfSize, k, 0, halfSize);\n      var color = i === center ? color1 : color2;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n      color.toArray(colors, j);\n      j += 3;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  GridHelper.prototype = Object.assign(Object.create(LineSegments.prototype), {\n    constructor: GridHelper,\n    copy: function (source) {\n      LineSegments.prototype.copy.call(this, source);\n      this.geometry.copy(source.geometry);\n      this.material.copy(source.material);\n      return this;\n    },\n    clone: function () {\n      return new this.constructor().copy(this);\n    }\n  });\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   * @author Hectate / http://www.github.com/Hectate\n   */\n\n  function PolarGridHelper(radius, radials, circles, divisions, color1, color2) {\n    radius = radius || 10;\n    radials = radials || 16;\n    circles = circles || 8;\n    divisions = divisions || 64;\n    color1 = new Color(color1 !== undefined ? color1 : 0x444444);\n    color2 = new Color(color2 !== undefined ? color2 : 0x888888);\n    var vertices = [];\n    var colors = [];\n    var x, z;\n    var v, i, j, r, color; // create the radials\n\n    for (i = 0; i <= radials; i++) {\n      v = i / radials * (Math.PI * 2);\n      x = Math.sin(v) * radius;\n      z = Math.cos(v) * radius;\n      vertices.push(0, 0, 0);\n      vertices.push(x, 0, z);\n      color = i & 1 ? color1 : color2;\n      colors.push(color.r, color.g, color.b);\n      colors.push(color.r, color.g, color.b);\n    } // create the circles\n\n\n    for (i = 0; i <= circles; i++) {\n      color = i & 1 ? color1 : color2;\n      r = radius - radius / circles * i;\n\n      for (j = 0; j < divisions; j++) {\n        // first vertex\n        v = j / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b); // second vertex\n\n        v = (j + 1) / divisions * (Math.PI * 2);\n        x = Math.sin(v) * r;\n        z = Math.cos(v) * r;\n        vertices.push(x, 0, z);\n        colors.push(color.r, color.g, color.b);\n      }\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  PolarGridHelper.prototype = Object.create(LineSegments.prototype);\n  PolarGridHelper.prototype.constructor = PolarGridHelper;\n  /**\n   * @author Mugen87 / http://github.com/Mugen87\n   */\n\n  function PositionalAudioHelper(audio, range, divisionsInnerAngle, divisionsOuterAngle) {\n    this.audio = audio;\n    this.range = range || 1;\n    this.divisionsInnerAngle = divisionsInnerAngle || 16;\n    this.divisionsOuterAngle = divisionsOuterAngle || 2;\n    var geometry = new BufferGeometry();\n    var divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n    var positions = new Float32Array((divisions * 3 + 3) * 3);\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    var materialInnerAngle = new LineBasicMaterial({\n      color: 0x00ff00\n    });\n    var materialOuterAngle = new LineBasicMaterial({\n      color: 0xffff00\n    });\n    Line.call(this, geometry, [materialOuterAngle, materialInnerAngle]);\n    this.update();\n  }\n\n  PositionalAudioHelper.prototype = Object.create(Line.prototype);\n  PositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\n  PositionalAudioHelper.prototype.update = function () {\n    var audio = this.audio;\n    var range = this.range;\n    var divisionsInnerAngle = this.divisionsInnerAngle;\n    var divisionsOuterAngle = this.divisionsOuterAngle;\n\n    var coneInnerAngle = _Math.degToRad(audio.panner.coneInnerAngle);\n\n    var coneOuterAngle = _Math.degToRad(audio.panner.coneOuterAngle);\n\n    var halfConeInnerAngle = coneInnerAngle / 2;\n    var halfConeOuterAngle = coneOuterAngle / 2;\n    var start = 0;\n    var count = 0;\n    var i, stride;\n    var geometry = this.geometry;\n    var positionAttribute = geometry.attributes.position;\n    geometry.clearGroups(); //\n\n    function generateSegment(from, to, divisions, materialIndex) {\n      var step = (to - from) / divisions;\n      positionAttribute.setXYZ(start, 0, 0, 0);\n      count++;\n\n      for (i = from; i < to; i += step) {\n        stride = start + count;\n        positionAttribute.setXYZ(stride, Math.sin(i) * range, 0, Math.cos(i) * range);\n        positionAttribute.setXYZ(stride + 1, Math.sin(Math.min(i + step, to)) * range, 0, Math.cos(Math.min(i + step, to)) * range);\n        positionAttribute.setXYZ(stride + 2, 0, 0, 0);\n        count += 3;\n      }\n\n      geometry.addGroup(start, count, materialIndex);\n      start += count;\n      count = 0;\n    } //\n\n\n    generateSegment(-halfConeOuterAngle, -halfConeInnerAngle, divisionsOuterAngle, 0);\n    generateSegment(-halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1);\n    generateSegment(halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0); //\n\n    positionAttribute.needsUpdate = true;\n\n    if (coneInnerAngle === coneOuterAngle) {\n      this.material[0].visible = false;\n    }\n  };\n\n  PositionalAudioHelper.prototype.dispose = function () {\n    this.geometry.dispose();\n    this.material[0].dispose();\n    this.material[1].dispose();\n  };\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  var _v1$6 = new Vector3();\n\n  var _v2$4 = new Vector3();\n\n  var _normalMatrix$2 = new Matrix3();\n\n  function FaceNormalsHelper(object, size, hex, linewidth) {\n    // FaceNormalsHelper only supports THREE.Geometry\n    this.object = object;\n    this.size = size !== undefined ? size : 1;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var width = linewidth !== undefined ? linewidth : 1; //\n\n    var nNormals = 0;\n    var objGeometry = this.object.geometry;\n\n    if (objGeometry && objGeometry.isGeometry) {\n      nNormals = objGeometry.faces.length;\n    } else {\n      console.warn('THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.');\n    } //\n\n\n    var geometry = new BufferGeometry();\n    var positions = new Float32BufferAttribute(nNormals * 2 * 3, 3);\n    geometry.setAttribute('position', positions);\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color,\n      linewidth: width\n    })); //\n\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  FaceNormalsHelper.prototype = Object.create(LineSegments.prototype);\n  FaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n  FaceNormalsHelper.prototype.update = function () {\n    this.object.updateMatrixWorld(true);\n\n    _normalMatrix$2.getNormalMatrix(this.object.matrixWorld);\n\n    var matrixWorld = this.object.matrixWorld;\n    var position = this.geometry.attributes.position; //\n\n    var objGeometry = this.object.geometry;\n    var vertices = objGeometry.vertices;\n    var faces = objGeometry.faces;\n    var idx = 0;\n\n    for (var i = 0, l = faces.length; i < l; i++) {\n      var face = faces[i];\n      var normal = face.normal;\n\n      _v1$6.copy(vertices[face.a]).add(vertices[face.b]).add(vertices[face.c]).divideScalar(3).applyMatrix4(matrixWorld);\n\n      _v2$4.copy(normal).applyMatrix3(_normalMatrix$2).normalize().multiplyScalar(this.size).add(_v1$6);\n\n      position.setXYZ(idx, _v1$6.x, _v1$6.y, _v1$6.z);\n      idx = idx + 1;\n      position.setXYZ(idx, _v2$4.x, _v2$4.y, _v2$4.z);\n      idx = idx + 1;\n    }\n\n    position.needsUpdate = true;\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author mrdoob / http://mrdoob.com/\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  var _v1$7 = new Vector3();\n\n  var _v2$5 = new Vector3();\n\n  var _v3$1 = new Vector3();\n\n  function DirectionalLightHelper(light, size, color) {\n    Object3D.call(this);\n    this.light = light;\n    this.light.updateMatrixWorld();\n    this.matrix = light.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.color = color;\n\n    if (size === undefined) {\n      size = 1;\n    }\n\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n    var material = new LineBasicMaterial({\n      fog: false\n    });\n    this.lightPlane = new Line(geometry, material);\n    this.add(this.lightPlane);\n    geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n    this.targetLine = new Line(geometry, material);\n    this.add(this.targetLine);\n    this.update();\n  }\n\n  DirectionalLightHelper.prototype = Object.create(Object3D.prototype);\n  DirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n  DirectionalLightHelper.prototype.dispose = function () {\n    this.lightPlane.geometry.dispose();\n    this.lightPlane.material.dispose();\n    this.targetLine.geometry.dispose();\n    this.targetLine.material.dispose();\n  };\n\n  DirectionalLightHelper.prototype.update = function () {\n    _v1$7.setFromMatrixPosition(this.light.matrixWorld);\n\n    _v2$5.setFromMatrixPosition(this.light.target.matrixWorld);\n\n    _v3$1.subVectors(_v2$5, _v1$7);\n\n    this.lightPlane.lookAt(_v2$5);\n\n    if (this.color !== undefined) {\n      this.lightPlane.material.color.set(this.color);\n      this.targetLine.material.color.set(this.color);\n    } else {\n      this.lightPlane.material.color.copy(this.light.color);\n      this.targetLine.material.color.copy(this.light.color);\n    }\n\n    this.targetLine.lookAt(_v2$5);\n    this.targetLine.scale.z = _v3$1.length();\n  };\n  /**\n   * @author alteredq / http://alteredqualia.com/\n   * @author Mugen87 / https://github.com/Mugen87\n   *\n   *\t- shows frustum, line of sight and up of the camera\n   *\t- suitable for fast updates\n   * \t- based on frustum visualization in lightgl.js shadowmap example\n   *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n   */\n\n\n  var _vector$a = new Vector3();\n\n  var _camera = new Camera();\n\n  function CameraHelper(camera) {\n    var geometry = new BufferGeometry();\n    var material = new LineBasicMaterial({\n      color: 0xffffff,\n      vertexColors: FaceColors\n    });\n    var vertices = [];\n    var colors = [];\n    var pointMap = {}; // colors\n\n    var colorFrustum = new Color(0xffaa00);\n    var colorCone = new Color(0xff0000);\n    var colorUp = new Color(0x00aaff);\n    var colorTarget = new Color(0xffffff);\n    var colorCross = new Color(0x333333); // near\n\n    addLine('n1', 'n2', colorFrustum);\n    addLine('n2', 'n4', colorFrustum);\n    addLine('n4', 'n3', colorFrustum);\n    addLine('n3', 'n1', colorFrustum); // far\n\n    addLine('f1', 'f2', colorFrustum);\n    addLine('f2', 'f4', colorFrustum);\n    addLine('f4', 'f3', colorFrustum);\n    addLine('f3', 'f1', colorFrustum); // sides\n\n    addLine('n1', 'f1', colorFrustum);\n    addLine('n2', 'f2', colorFrustum);\n    addLine('n3', 'f3', colorFrustum);\n    addLine('n4', 'f4', colorFrustum); // cone\n\n    addLine('p', 'n1', colorCone);\n    addLine('p', 'n2', colorCone);\n    addLine('p', 'n3', colorCone);\n    addLine('p', 'n4', colorCone); // up\n\n    addLine('u1', 'u2', colorUp);\n    addLine('u2', 'u3', colorUp);\n    addLine('u3', 'u1', colorUp); // target\n\n    addLine('c', 't', colorTarget);\n    addLine('p', 'c', colorCross); // cross\n\n    addLine('cn1', 'cn2', colorCross);\n    addLine('cn3', 'cn4', colorCross);\n    addLine('cf1', 'cf2', colorCross);\n    addLine('cf3', 'cf4', colorCross);\n\n    function addLine(a, b, color) {\n      addPoint(a, color);\n      addPoint(b, color);\n    }\n\n    function addPoint(id, color) {\n      vertices.push(0, 0, 0);\n      colors.push(color.r, color.g, color.b);\n\n      if (pointMap[id] === undefined) {\n        pointMap[id] = [];\n      }\n\n      pointMap[id].push(vertices.length / 3 - 1);\n    }\n\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    LineSegments.call(this, geometry, material);\n    this.camera = camera;\n\n    if (this.camera.updateProjectionMatrix) {\n      this.camera.updateProjectionMatrix();\n    }\n\n    this.matrix = camera.matrixWorld;\n    this.matrixAutoUpdate = false;\n    this.pointMap = pointMap;\n    this.update();\n  }\n\n  CameraHelper.prototype = Object.create(LineSegments.prototype);\n  CameraHelper.prototype.constructor = CameraHelper;\n\n  CameraHelper.prototype.update = function () {\n    var geometry = this.geometry;\n    var pointMap = this.pointMap;\n    var w = 1,\n        h = 1; // we need just camera projection matrix inverse\n    // world matrix must be identity\n\n    _camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n    setPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n    setPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n    setPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n    setPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n    setPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n    setPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n    setPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n    setPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n    setPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n    setPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n    setPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n    setPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n    setPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n    setPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n    setPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n    setPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n    setPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n    setPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n    setPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n    setPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n    setPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n    geometry.getAttribute('position').needsUpdate = true;\n  };\n\n  function setPoint(point, pointMap, geometry, camera, x, y, z) {\n    _vector$a.set(x, y, z).unproject(camera);\n\n    var points = pointMap[point];\n\n    if (points !== undefined) {\n      var position = geometry.getAttribute('position');\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        position.setXYZ(points[i], _vector$a.x, _vector$a.y, _vector$a.z);\n      }\n    }\n  }\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   * @author Mugen87 / http://github.com/Mugen87\n   */\n\n\n  var _box$3 = new Box3();\n\n  function BoxHelper(object, color) {\n    this.object = object;\n\n    if (color === undefined) {\n      color = 0xffff00;\n    }\n\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = new Float32Array(8 * 3);\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.matrixAutoUpdate = false;\n    this.update();\n  }\n\n  BoxHelper.prototype = Object.create(LineSegments.prototype);\n  BoxHelper.prototype.constructor = BoxHelper;\n\n  BoxHelper.prototype.update = function (object) {\n    if (object !== undefined) {\n      console.warn('THREE.BoxHelper: .update() has no longer arguments.');\n    }\n\n    if (this.object !== undefined) {\n      _box$3.setFromObject(this.object);\n    }\n\n    if (_box$3.isEmpty()) {\n      return;\n    }\n\n    var min = _box$3.min;\n    var max = _box$3.max;\n    /*\n      5____4\n    1/___0/|\n    | 6__|_7\n    2/___3/\n    \t0: max.x, max.y, max.z\n    1: min.x, max.y, max.z\n    2: min.x, min.y, max.z\n    3: max.x, min.y, max.z\n    4: max.x, max.y, min.z\n    5: min.x, max.y, min.z\n    6: min.x, min.y, min.z\n    7: max.x, min.y, min.z\n    */\n\n    var position = this.geometry.attributes.position;\n    var array = position.array;\n    array[0] = max.x;\n    array[1] = max.y;\n    array[2] = max.z;\n    array[3] = min.x;\n    array[4] = max.y;\n    array[5] = max.z;\n    array[6] = min.x;\n    array[7] = min.y;\n    array[8] = max.z;\n    array[9] = max.x;\n    array[10] = min.y;\n    array[11] = max.z;\n    array[12] = max.x;\n    array[13] = max.y;\n    array[14] = min.z;\n    array[15] = min.x;\n    array[16] = max.y;\n    array[17] = min.z;\n    array[18] = min.x;\n    array[19] = min.y;\n    array[20] = min.z;\n    array[21] = max.x;\n    array[22] = min.y;\n    array[23] = min.z;\n    position.needsUpdate = true;\n    this.geometry.computeBoundingSphere();\n  };\n\n  BoxHelper.prototype.setFromObject = function (object) {\n    this.object = object;\n    this.update();\n    return this;\n  };\n\n  BoxHelper.prototype.copy = function (source) {\n    LineSegments.prototype.copy.call(this, source);\n    this.object = source.object;\n    return this;\n  };\n\n  BoxHelper.prototype.clone = function () {\n    return new this.constructor().copy(this);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function Box3Helper(box, color) {\n    this.type = 'Box3Helper';\n    this.box = box;\n    color = color || 0xffff00;\n    var indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n    var positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n    var geometry = new BufferGeometry();\n    geometry.setIndex(new BufferAttribute(indices, 1));\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    LineSegments.call(this, geometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.geometry.computeBoundingSphere();\n  }\n\n  Box3Helper.prototype = Object.create(LineSegments.prototype);\n  Box3Helper.prototype.constructor = Box3Helper;\n\n  Box3Helper.prototype.updateMatrixWorld = function (force) {\n    var box = this.box;\n\n    if (box.isEmpty()) {\n      return;\n    }\n\n    box.getCenter(this.position);\n    box.getSize(this.scale);\n    this.scale.multiplyScalar(0.5);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   */\n\n\n  function PlaneHelper(plane, size, hex) {\n    this.type = 'PlaneHelper';\n    this.plane = plane;\n    this.size = size === undefined ? 1 : size;\n    var color = hex !== undefined ? hex : 0xffff00;\n    var positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n    geometry.computeBoundingSphere();\n    Line.call(this, geometry, new LineBasicMaterial({\n      color: color\n    })); //\n\n    var positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n    var geometry2 = new BufferGeometry();\n    geometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n    geometry2.computeBoundingSphere();\n    this.add(new Mesh(geometry2, new MeshBasicMaterial({\n      color: color,\n      opacity: 0.2,\n      transparent: true,\n      depthWrite: false\n    })));\n  }\n\n  PlaneHelper.prototype = Object.create(Line.prototype);\n  PlaneHelper.prototype.constructor = PlaneHelper;\n\n  PlaneHelper.prototype.updateMatrixWorld = function (force) {\n    var scale = -this.plane.constant;\n\n    if (Math.abs(scale) < 1e-8) {\n      scale = 1e-8;\n    } // sign does not matter\n\n\n    this.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n    this.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n    this.lookAt(this.plane.normal);\n    Object3D.prototype.updateMatrixWorld.call(this, force);\n  };\n  /**\n   * @author WestLangley / http://github.com/WestLangley\n   * @author zz85 / http://github.com/zz85\n   * @author bhouston / http://clara.io\n   *\n   * Creates an arrow for visualizing directions\n   *\n   * Parameters:\n   *  dir - Vector3\n   *  origin - Vector3\n   *  length - Number\n   *  color - color in hex value\n   *  headLength - Number\n   *  headWidth - Number\n   */\n\n\n  var _axis = new Vector3();\n\n  var _lineGeometry, _coneGeometry;\n\n  function ArrowHelper(dir, origin, length, color, headLength, headWidth) {\n    // dir is assumed to be normalized\n    Object3D.call(this);\n\n    if (dir === undefined) {\n      dir = new Vector3(0, 0, 1);\n    }\n\n    if (origin === undefined) {\n      origin = new Vector3(0, 0, 0);\n    }\n\n    if (length === undefined) {\n      length = 1;\n    }\n\n    if (color === undefined) {\n      color = 0xffff00;\n    }\n\n    if (headLength === undefined) {\n      headLength = 0.2 * length;\n    }\n\n    if (headWidth === undefined) {\n      headWidth = 0.2 * headLength;\n    }\n\n    if (_lineGeometry === undefined) {\n      _lineGeometry = new BufferGeometry();\n\n      _lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n      _coneGeometry = new CylinderBufferGeometry(0, 0.5, 1, 5, 1);\n\n      _coneGeometry.translate(0, -0.5, 0);\n    }\n\n    this.position.copy(origin);\n    this.line = new Line(_lineGeometry, new LineBasicMaterial({\n      color: color\n    }));\n    this.line.matrixAutoUpdate = false;\n    this.add(this.line);\n    this.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n      color: color\n    }));\n    this.cone.matrixAutoUpdate = false;\n    this.add(this.cone);\n    this.setDirection(dir);\n    this.setLength(length, headLength, headWidth);\n  }\n\n  ArrowHelper.prototype = Object.create(Object3D.prototype);\n  ArrowHelper.prototype.constructor = ArrowHelper;\n\n  ArrowHelper.prototype.setDirection = function (dir) {\n    // dir is assumed to be normalized\n    if (dir.y > 0.99999) {\n      this.quaternion.set(0, 0, 0, 1);\n    } else if (dir.y < -0.99999) {\n      this.quaternion.set(1, 0, 0, 0);\n    } else {\n      _axis.set(dir.z, 0, -dir.x).normalize();\n\n      var radians = Math.acos(dir.y);\n      this.quaternion.setFromAxisAngle(_axis, radians);\n    }\n  };\n\n  ArrowHelper.prototype.setLength = function (length, headLength, headWidth) {\n    if (headLength === undefined) {\n      headLength = 0.2 * length;\n    }\n\n    if (headWidth === undefined) {\n      headWidth = 0.2 * headLength;\n    }\n\n    this.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n    this.line.updateMatrix();\n    this.cone.scale.set(headWidth, headLength, headWidth);\n    this.cone.position.y = length;\n    this.cone.updateMatrix();\n  };\n\n  ArrowHelper.prototype.setColor = function (color) {\n    this.line.material.color.set(color);\n    this.cone.material.color.set(color);\n  };\n\n  ArrowHelper.prototype.copy = function (source) {\n    Object3D.prototype.copy.call(this, source, false);\n    this.line.copy(source.line);\n    this.cone.copy(source.cone);\n    return this;\n  };\n\n  ArrowHelper.prototype.clone = function () {\n    return new this.constructor().copy(this);\n  };\n  /**\n   * @author sroucheray / http://sroucheray.org/\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n\n  function AxesHelper(size) {\n    size = size || 1;\n    var vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n    var colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n    var geometry = new BufferGeometry();\n    geometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n    geometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n    var material = new LineBasicMaterial({\n      vertexColors: VertexColors\n    });\n    LineSegments.call(this, geometry, material);\n  }\n\n  AxesHelper.prototype = Object.create(LineSegments.prototype);\n  AxesHelper.prototype.constructor = AxesHelper;\n  /**\n   * @author mrdoob / http://mrdoob.com/\n   */\n\n  function Face4(a, b, c, d, normal, color, materialIndex) {\n    console.warn('THREE.Face4 has been removed. A THREE.Face3 will be created instead.');\n    return new Face3(a, b, c, normal, color, materialIndex);\n  }\n\n  var LineStrip = 0;\n  var LinePieces = 1;\n\n  function MeshFaceMaterial(materials) {\n    console.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n    return materials;\n  }\n\n  function MultiMaterial(materials) {\n    if (materials === undefined) {\n      materials = [];\n    }\n\n    console.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n    materials.isMultiMaterial = true;\n    materials.materials = materials;\n\n    materials.clone = function () {\n      return materials.slice();\n    };\n\n    return materials;\n  }\n\n  function PointCloud(geometry, material) {\n    console.warn('THREE.PointCloud has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function Particle(material) {\n    console.warn('THREE.Particle has been renamed to THREE.Sprite.');\n    return new Sprite(material);\n  }\n\n  function ParticleSystem(geometry, material) {\n    console.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n    return new Points(geometry, material);\n  }\n\n  function PointCloudMaterial(parameters) {\n    console.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleBasicMaterial(parameters) {\n    console.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function ParticleSystemMaterial(parameters) {\n    console.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n    return new PointsMaterial(parameters);\n  }\n\n  function Vertex(x, y, z) {\n    console.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n    return new Vector3(x, y, z);\n  } //\n\n\n  function DynamicBufferAttribute(array, itemSize) {\n    console.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.');\n    return new BufferAttribute(array, itemSize).setDynamic(true);\n  }\n\n  function Int8Attribute(array, itemSize) {\n    console.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n    return new Int8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8Attribute(array, itemSize) {\n    console.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n    return new Uint8BufferAttribute(array, itemSize);\n  }\n\n  function Uint8ClampedAttribute(array, itemSize) {\n    console.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n    return new Uint8ClampedBufferAttribute(array, itemSize);\n  }\n\n  function Int16Attribute(array, itemSize) {\n    console.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n    return new Int16BufferAttribute(array, itemSize);\n  }\n\n  function Uint16Attribute(array, itemSize) {\n    console.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n    return new Uint16BufferAttribute(array, itemSize);\n  }\n\n  function Int32Attribute(array, itemSize) {\n    console.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n    return new Int32BufferAttribute(array, itemSize);\n  }\n\n  function Uint32Attribute(array, itemSize) {\n    console.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n    return new Uint32BufferAttribute(array, itemSize);\n  }\n\n  function Float32Attribute(array, itemSize) {\n    console.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n    return new Float32BufferAttribute(array, itemSize);\n  }\n\n  function Float64Attribute(array, itemSize) {\n    console.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n    return new Float64BufferAttribute(array, itemSize);\n  } //\n\n\n  Curve.create = function (construct, getPoint) {\n    console.log('THREE.Curve.create() has been deprecated');\n    construct.prototype = Object.create(Curve.prototype);\n    construct.prototype.constructor = construct;\n    construct.prototype.getPoint = getPoint;\n    return construct;\n  }; //\n\n\n  Object.assign(CurvePath.prototype, {\n    createPointsGeometry: function (divisions) {\n      console.warn('THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from path points (for Line or Points objects)\n\n      var pts = this.getPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createSpacedPointsGeometry: function (divisions) {\n      console.warn('THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.'); // generate geometry from equidistant sampling along the path\n\n      var pts = this.getSpacedPoints(divisions);\n      return this.createGeometry(pts);\n    },\n    createGeometry: function (points) {\n      console.warn('THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.');\n      var geometry = new Geometry();\n\n      for (var i = 0, l = points.length; i < l; i++) {\n        var point = points[i];\n        geometry.vertices.push(new Vector3(point.x, point.y, point.z || 0));\n      }\n\n      return geometry;\n    }\n  }); //\n\n  Object.assign(Path.prototype, {\n    fromPoints: function (points) {\n      console.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n      return this.setFromPoints(points);\n    }\n  }); //\n\n  function ClosedSplineCurve3(points) {\n    console.warn('THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n    this.closed = true;\n  }\n\n  ClosedSplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function SplineCurve3(points) {\n    console.warn('THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  SplineCurve3.prototype = Object.create(CatmullRomCurve3.prototype); //\n\n  function Spline(points) {\n    console.warn('THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.');\n    CatmullRomCurve3.call(this, points);\n    this.type = 'catmullrom';\n  }\n\n  Spline.prototype = Object.create(CatmullRomCurve3.prototype);\n  Object.assign(Spline.prototype, {\n    initFromArray: function ()\n    /* a */\n    {\n      console.error('THREE.Spline: .initFromArray() has been removed.');\n    },\n    getControlPointsArray: function ()\n    /* optionalTarget */\n    {\n      console.error('THREE.Spline: .getControlPointsArray() has been removed.');\n    },\n    reparametrizeByArcLength: function ()\n    /* samplingCoef */\n    {\n      console.error('THREE.Spline: .reparametrizeByArcLength() has been removed.');\n    }\n  }); //\n\n  function AxisHelper(size) {\n    console.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n    return new AxesHelper(size);\n  }\n\n  function BoundingBoxHelper(object, color) {\n    console.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n    return new BoxHelper(object, color);\n  }\n\n  function EdgesHelper(object, hex) {\n    console.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n    return new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  }\n\n  GridHelper.prototype.setColors = function () {\n    console.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n  };\n\n  SkeletonHelper.prototype.update = function () {\n    console.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n  };\n\n  function WireframeHelper(object, hex) {\n    console.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n    return new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n      color: hex !== undefined ? hex : 0xffffff\n    }));\n  } //\n\n\n  Object.assign(Loader.prototype, {\n    extractUrlBase: function (url) {\n      console.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n      return LoaderUtils.extractUrlBase(url);\n    }\n  });\n  Loader.Handlers = {\n    add: function ()\n    /* regex, loader */\n    {\n      console.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n    },\n    get: function ()\n    /* file */\n    {\n      console.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n    }\n  };\n\n  function XHRLoader(manager) {\n    console.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n    return new FileLoader(manager);\n  }\n\n  function BinaryTextureLoader(manager) {\n    console.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n    return new DataTextureLoader(manager);\n  }\n\n  Object.assign(ObjectLoader.prototype, {\n    setTexturePath: function (value) {\n      console.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n      return this.setResourcePath(value);\n    }\n  }); //\n\n  Object.assign(Box2.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box2: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n  Object.assign(Box3.prototype, {\n    center: function (optionalTarget) {\n      console.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n      return this.getCenter(optionalTarget);\n    },\n    empty: function () {\n      console.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n      return this.isEmpty();\n    },\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    },\n    size: function (optionalTarget) {\n      console.warn('THREE.Box3: .size() has been renamed to .getSize().');\n      return this.getSize(optionalTarget);\n    }\n  });\n\n  Line3.prototype.center = function (optionalTarget) {\n    console.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n    return this.getCenter(optionalTarget);\n  };\n\n  Object.assign(_Math, {\n    random16: function () {\n      console.warn('THREE.Math: .random16() has been deprecated. Use Math.random() instead.');\n      return Math.random();\n    },\n    nearestPowerOfTwo: function (value) {\n      console.warn('THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().');\n      return _Math.floorPowerOfTwo(value);\n    },\n    nextPowerOfTwo: function (value) {\n      console.warn('THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().');\n      return _Math.ceilPowerOfTwo(value);\n    }\n  });\n  Object.assign(Matrix3.prototype, {\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n      return vector.applyMatrix3(this);\n    },\n    multiplyVector3Array: function ()\n    /* a */\n    {\n      console.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n    },\n    applyToBuffer: function (buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function ()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n    }\n  });\n  Object.assign(Matrix4.prototype, {\n    extractPosition: function (m) {\n      console.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n      return this.copyPosition(m);\n    },\n    flattenToArrayOffset: function (array, offset) {\n      console.warn(\"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\");\n      return this.toArray(array, offset);\n    },\n    getPosition: function () {\n      console.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n      return new Vector3().setFromMatrixColumn(this, 3);\n    },\n    setRotationFromQuaternion: function (q) {\n      console.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n      return this.makeRotationFromQuaternion(q);\n    },\n    multiplyToArray: function () {\n      console.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n    },\n    multiplyVector3: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector4: function (vector) {\n      console.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    multiplyVector3Array: function ()\n    /* a */\n    {\n      console.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n    },\n    rotateAxis: function (v) {\n      console.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n      v.transformDirection(this);\n    },\n    crossVector: function (vector) {\n      console.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n      return vector.applyMatrix4(this);\n    },\n    translate: function () {\n      console.error('THREE.Matrix4: .translate() has been removed.');\n    },\n    rotateX: function () {\n      console.error('THREE.Matrix4: .rotateX() has been removed.');\n    },\n    rotateY: function () {\n      console.error('THREE.Matrix4: .rotateY() has been removed.');\n    },\n    rotateZ: function () {\n      console.error('THREE.Matrix4: .rotateZ() has been removed.');\n    },\n    rotateByAxis: function () {\n      console.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n    },\n    applyToBuffer: function (buffer\n    /*, offset, length */\n    ) {\n      console.warn('THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.');\n      return this.applyToBufferAttribute(buffer);\n    },\n    applyToVector3Array: function ()\n    /* array, offset, length */\n    {\n      console.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n    },\n    makeFrustum: function (left, right, bottom, top, near, far) {\n      console.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n      return this.makePerspective(left, right, top, bottom, near, far);\n    }\n  });\n\n  Plane.prototype.isIntersectionLine = function (line) {\n    console.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n    return this.intersectsLine(line);\n  };\n\n  Quaternion.prototype.multiplyVector3 = function (vector) {\n    console.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n    return vector.applyQuaternion(this);\n  };\n\n  Object.assign(Ray.prototype, {\n    isIntersectionBox: function (box) {\n      console.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n      return this.intersectsBox(box);\n    },\n    isIntersectionPlane: function (plane) {\n      console.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n      return this.intersectsPlane(plane);\n    },\n    isIntersectionSphere: function (sphere) {\n      console.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n      return this.intersectsSphere(sphere);\n    }\n  });\n  Object.assign(Triangle.prototype, {\n    area: function () {\n      console.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n      return this.getArea();\n    },\n    barycoordFromPoint: function (point, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return this.getBarycoord(point, target);\n    },\n    midpoint: function (target) {\n      console.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n      return this.getMidpoint(target);\n    },\n    normal: function (target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return this.getNormal(target);\n    },\n    plane: function (target) {\n      console.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n      return this.getPlane(target);\n    }\n  });\n  Object.assign(Triangle, {\n    barycoordFromPoint: function (point, a, b, c, target) {\n      console.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n      return Triangle.getBarycoord(point, a, b, c, target);\n    },\n    normal: function (a, b, c, target) {\n      console.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n      return Triangle.getNormal(a, b, c, target);\n    }\n  });\n  Object.assign(Shape.prototype, {\n    extractAllPoints: function (divisions) {\n      console.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n      return this.extractPoints(divisions);\n    },\n    extrude: function (options) {\n      console.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n      return new ExtrudeGeometry(this, options);\n    },\n    makeGeometry: function (options) {\n      console.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n      return new ShapeGeometry(this, options);\n    }\n  });\n  Object.assign(Vector2.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function (v) {\n      console.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector3.prototype, {\n    setEulerFromRotationMatrix: function () {\n      console.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n    },\n    setEulerFromQuaternion: function () {\n      console.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n    },\n    getPositionFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n      return this.setFromMatrixPosition(m);\n    },\n    getScaleFromMatrix: function (m) {\n      console.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n      return this.setFromMatrixScale(m);\n    },\n    getColumnFromMatrix: function (index, matrix) {\n      console.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n      return this.setFromMatrixColumn(matrix, index);\n    },\n    applyProjection: function (m) {\n      console.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n      return this.applyMatrix4(m);\n    },\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    distanceToManhattan: function (v) {\n      console.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n      return this.manhattanDistanceTo(v);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  });\n  Object.assign(Vector4.prototype, {\n    fromAttribute: function (attribute, index, offset) {\n      console.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n      return this.fromBufferAttribute(attribute, index, offset);\n    },\n    lengthManhattan: function () {\n      console.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n      return this.manhattanLength();\n    }\n  }); //\n\n  Object.assign(Geometry.prototype, {\n    computeTangents: function () {\n      console.error('THREE.Geometry: .computeTangents() has been removed.');\n    },\n    computeLineDistances: function () {\n      console.error('THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.');\n    }\n  });\n  Object.assign(Object3D.prototype, {\n    getChildByName: function (name) {\n      console.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n      return this.getObjectByName(name);\n    },\n    renderDepth: function () {\n      console.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n    },\n    translate: function (distance, axis) {\n      console.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n      return this.translateOnAxis(axis, distance);\n    },\n    getWorldRotation: function () {\n      console.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n    }\n  });\n  Object.defineProperties(Object3D.prototype, {\n    eulerOrder: {\n      get: function () {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        return this.rotation.order;\n      },\n      set: function (value) {\n        console.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n        this.rotation.order = value;\n      }\n    },\n    useQuaternion: {\n      get: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      },\n      set: function () {\n        console.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n      }\n    }\n  });\n  Object.defineProperties(LOD.prototype, {\n    objects: {\n      get: function () {\n        console.warn('THREE.LOD: .objects has been renamed to .levels.');\n        return this.levels;\n      }\n    }\n  });\n  Object.defineProperty(Skeleton.prototype, 'useVertexTexture', {\n    get: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    },\n    set: function () {\n      console.warn('THREE.Skeleton: useVertexTexture has been removed.');\n    }\n  });\n\n  SkinnedMesh.prototype.initBones = function () {\n    console.error('THREE.SkinnedMesh: initBones() has been removed.');\n  };\n\n  Object.defineProperty(Curve.prototype, '__arcLengthDivisions', {\n    get: function () {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      return this.arcLengthDivisions;\n    },\n    set: function (value) {\n      console.warn('THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.');\n      this.arcLengthDivisions = value;\n    }\n  }); //\n\n  PerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n    console.warn(\"THREE.PerspectiveCamera.setLens is deprecated. \" + \"Use .setFocalLength and .filmGauge for a photographic setup.\");\n\n    if (filmGauge !== undefined) {\n      this.filmGauge = filmGauge;\n    }\n\n    this.setFocalLength(focalLength);\n  }; //\n\n\n  Object.defineProperties(Light.prototype, {\n    onlyShadow: {\n      set: function () {\n        console.warn('THREE.Light: .onlyShadow has been removed.');\n      }\n    },\n    shadowCameraFov: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n        this.shadow.camera.fov = value;\n      }\n    },\n    shadowCameraLeft: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n        this.shadow.camera.left = value;\n      }\n    },\n    shadowCameraRight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n        this.shadow.camera.right = value;\n      }\n    },\n    shadowCameraTop: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n        this.shadow.camera.top = value;\n      }\n    },\n    shadowCameraBottom: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n        this.shadow.camera.bottom = value;\n      }\n    },\n    shadowCameraNear: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n        this.shadow.camera.near = value;\n      }\n    },\n    shadowCameraFar: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n        this.shadow.camera.far = value;\n      }\n    },\n    shadowCameraVisible: {\n      set: function () {\n        console.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n      }\n    },\n    shadowBias: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n        this.shadow.bias = value;\n      }\n    },\n    shadowDarkness: {\n      set: function () {\n        console.warn('THREE.Light: .shadowDarkness has been removed.');\n      }\n    },\n    shadowMapWidth: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n        this.shadow.mapSize.width = value;\n      }\n    },\n    shadowMapHeight: {\n      set: function (value) {\n        console.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n        this.shadow.mapSize.height = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(BufferAttribute.prototype, {\n    length: {\n      get: function () {\n        console.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n        return this.array.length;\n      }\n    },\n    dynamic: {\n      get: function () {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        return this.usage === DynamicDrawUsage;\n      },\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n        this.setUsage(DynamicDrawUsage);\n      }\n    }\n  });\n  Object.assign(BufferAttribute.prototype, {\n    setDynamic: function (value) {\n      console.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n      this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n      return this;\n    },\n    copyIndicesArray: function ()\n    /* indices */\n    {\n      console.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n    },\n    setArray: function ()\n    /* array */\n    {\n      console.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n    }\n  });\n  Object.assign(BufferGeometry.prototype, {\n    addIndex: function (index) {\n      console.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n      this.setIndex(index);\n    },\n    addAttribute: function (name, attribute) {\n      console.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n      if (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n        console.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n        return this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n      }\n\n      if (name === 'index') {\n        console.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n        this.setIndex(attribute);\n        return this;\n      }\n\n      return this.setAttribute(name, attribute);\n    },\n    addDrawCall: function (start, count, indexOffset) {\n      if (indexOffset !== undefined) {\n        console.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n      }\n\n      console.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n      this.addGroup(start, count);\n    },\n    clearDrawCalls: function () {\n      console.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n      this.clearGroups();\n    },\n    computeTangents: function () {\n      console.warn('THREE.BufferGeometry: .computeTangents() has been removed.');\n    },\n    computeOffsets: function () {\n      console.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n    },\n    removeAttribute: function (name) {\n      console.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n      return this.deleteAttribute(name);\n    }\n  });\n  Object.defineProperties(BufferGeometry.prototype, {\n    drawcalls: {\n      get: function () {\n        console.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n        return this.groups;\n      }\n    },\n    offsets: {\n      get: function () {\n        console.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n        return this.groups;\n      }\n    }\n  });\n  Object.defineProperties(InterleavedBuffer.prototype, {\n    dynamic: {\n      get: function () {\n        console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n        return this.usage === DynamicDrawUsage;\n      },\n      set: function (value) {\n        console.warn('THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.');\n        this.setUsage(value);\n      }\n    }\n  });\n  Object.assign(InterleavedBuffer.prototype, {\n    setDynamic: function (value) {\n      console.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n      this.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n      return this;\n    },\n    setArray: function ()\n    /* array */\n    {\n      console.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n    }\n  }); //\n\n  Object.assign(ExtrudeBufferGeometry.prototype, {\n    getArrays: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .getArrays() has been removed.');\n    },\n    addShapeList: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.');\n    },\n    addShape: function () {\n      console.error('THREE.ExtrudeBufferGeometry: .addShape() has been removed.');\n    }\n  }); //\n\n  Object.defineProperties(Uniform.prototype, {\n    dynamic: {\n      set: function () {\n        console.warn('THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.');\n      }\n    },\n    onUpdate: {\n      value: function () {\n        console.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n        return this;\n      }\n    }\n  }); //\n\n  Object.defineProperties(Material.prototype, {\n    wrapAround: {\n      get: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      },\n      set: function () {\n        console.warn('THREE.Material: .wrapAround has been removed.');\n      }\n    },\n    overdraw: {\n      get: function () {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      },\n      set: function () {\n        console.warn('THREE.Material: .overdraw has been removed.');\n      }\n    },\n    wrapRGB: {\n      get: function () {\n        console.warn('THREE.Material: .wrapRGB has been removed.');\n        return new Color();\n      }\n    },\n    shading: {\n      get: function () {\n        console.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n      },\n      set: function (value) {\n        console.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n        this.flatShading = value === FlatShading;\n      }\n    },\n    stencilMask: {\n      get: function () {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        return this.stencilFuncMask;\n      },\n      set: function (value) {\n        console.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n        this.stencilFuncMask = value;\n      }\n    }\n  });\n  Object.defineProperties(MeshPhongMaterial.prototype, {\n    metal: {\n      get: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.');\n        return false;\n      },\n      set: function () {\n        console.warn('THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead');\n      }\n    }\n  });\n  Object.defineProperties(ShaderMaterial.prototype, {\n    derivatives: {\n      get: function () {\n        console.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        return this.extensions.derivatives;\n      },\n      set: function (value) {\n        console.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n        this.extensions.derivatives = value;\n      }\n    }\n  }); //\n\n  Object.assign(WebGLRenderer.prototype, {\n    clearTarget: function (renderTarget, color, depth, stencil) {\n      console.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n      this.setRenderTarget(renderTarget);\n      this.clear(color, depth, stencil);\n    },\n    animate: function (callback) {\n      console.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n      this.setAnimationLoop(callback);\n    },\n    getCurrentRenderTarget: function () {\n      console.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n      return this.getRenderTarget();\n    },\n    getMaxAnisotropy: function () {\n      console.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n      return this.capabilities.getMaxAnisotropy();\n    },\n    getPrecision: function () {\n      console.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n      return this.capabilities.precision;\n    },\n    resetGLState: function () {\n      console.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n      return this.state.reset();\n    },\n    supportsFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n      return this.extensions.get('OES_texture_float');\n    },\n    supportsHalfFloatTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n      return this.extensions.get('OES_texture_half_float');\n    },\n    supportsStandardDerivatives: function () {\n      console.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n      return this.extensions.get('OES_standard_derivatives');\n    },\n    supportsCompressedTextureS3TC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_s3tc');\n    },\n    supportsCompressedTexturePVRTC: function () {\n      console.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n      return this.extensions.get('WEBGL_compressed_texture_pvrtc');\n    },\n    supportsBlendMinMax: function () {\n      console.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n      return this.extensions.get('EXT_blend_minmax');\n    },\n    supportsVertexTextures: function () {\n      console.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n      return this.capabilities.vertexTextures;\n    },\n    supportsInstancedArrays: function () {\n      console.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n      return this.extensions.get('ANGLE_instanced_arrays');\n    },\n    enableScissorTest: function (boolean) {\n      console.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n      this.setScissorTest(boolean);\n    },\n    initMaterial: function () {\n      console.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n    },\n    addPrePlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n    },\n    addPostPlugin: function () {\n      console.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n    },\n    updateShadowMap: function () {\n      console.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n    },\n    setFaceCulling: function () {\n      console.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n    },\n    allocTextureUnit: function () {\n      console.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n    },\n    setTexture: function () {\n      console.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n    },\n    setTexture2D: function () {\n      console.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n    },\n    setTextureCube: function () {\n      console.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n    },\n    getActiveMipMapLevel: function () {\n      console.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n      return this.getActiveMipmapLevel();\n    }\n  });\n  Object.defineProperties(WebGLRenderer.prototype, {\n    shadowMapEnabled: {\n      get: function () {\n        return this.shadowMap.enabled;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n        this.shadowMap.enabled = value;\n      }\n    },\n    shadowMapType: {\n      get: function () {\n        return this.shadowMap.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n        this.shadowMap.type = value;\n      }\n    },\n    shadowMapCullFace: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    context: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n        return this.getContext();\n      }\n    }\n  });\n  Object.defineProperties(WebGLShadowMap.prototype, {\n    cullFace: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function ()\n      /* cullFace */\n      {\n        console.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderReverseSided: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n      }\n    },\n    renderSingleSided: {\n      get: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n        return undefined;\n      },\n      set: function () {\n        console.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebGLRenderTargetCube.prototype, {\n    activeCubeFace: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().');\n      }\n    },\n    activeMipMapLevel: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().');\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebGLRenderTarget.prototype, {\n    wrapS: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        return this.texture.wrapS;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n        this.texture.wrapS = value;\n      }\n    },\n    wrapT: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        return this.texture.wrapT;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n        this.texture.wrapT = value;\n      }\n    },\n    magFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        return this.texture.magFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n        this.texture.magFilter = value;\n      }\n    },\n    minFilter: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        return this.texture.minFilter;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n        this.texture.minFilter = value;\n      }\n    },\n    anisotropy: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        return this.texture.anisotropy;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n        this.texture.anisotropy = value;\n      }\n    },\n    offset: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        return this.texture.offset;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n        this.texture.offset = value;\n      }\n    },\n    repeat: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        return this.texture.repeat;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n        this.texture.repeat = value;\n      }\n    },\n    format: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        return this.texture.format;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n        this.texture.format = value;\n      }\n    },\n    type: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        return this.texture.type;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n        this.texture.type = value;\n      }\n    },\n    generateMipmaps: {\n      get: function () {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        return this.texture.generateMipmaps;\n      },\n      set: function (value) {\n        console.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n        this.texture.generateMipmaps = value;\n      }\n    }\n  }); //\n\n  Object.defineProperties(WebVRManager.prototype, {\n    standing: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .standing has been removed.');\n      }\n    },\n    userHeight: {\n      set: function ()\n      /* value */\n      {\n        console.warn('THREE.WebVRManager: .userHeight has been removed.');\n      }\n    }\n  }); //\n\n  Object.defineProperties(Audio.prototype, {\n    load: {\n      value: function (file) {\n        console.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n        var scope = this;\n        var audioLoader = new AudioLoader();\n        audioLoader.load(file, function (buffer) {\n          scope.setBuffer(buffer);\n        });\n        return this;\n      }\n    },\n    startTime: {\n      set: function () {\n        console.warn('THREE.Audio: .startTime is now .play( delay ).');\n      }\n    }\n  });\n\n  AudioAnalyser.prototype.getData = function () {\n    console.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n    return this.getFrequencyData();\n  }; //\n\n\n  CubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n    console.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n    return this.update(renderer, scene);\n  }; //\n\n\n  var GeometryUtils = {\n    merge: function (geometry1, geometry2, materialIndexOffset) {\n      console.warn('THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.');\n      var matrix;\n\n      if (geometry2.isMesh) {\n        geometry2.matrixAutoUpdate && geometry2.updateMatrix();\n        matrix = geometry2.matrix;\n        geometry2 = geometry2.geometry;\n      }\n\n      geometry1.merge(geometry2, matrix, materialIndexOffset);\n    },\n    center: function (geometry) {\n      console.warn('THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.');\n      return geometry.center();\n    }\n  };\n  ImageUtils.crossOrigin = undefined;\n\n  ImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n    var loader = new TextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(url, onLoad, undefined, onError);\n\n    if (mapping) {\n      texture.mapping = mapping;\n    }\n\n    return texture;\n  };\n\n  ImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n    console.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n    var loader = new CubeTextureLoader();\n    loader.setCrossOrigin(this.crossOrigin);\n    var texture = loader.load(urls, onLoad, undefined, onError);\n\n    if (mapping) {\n      texture.mapping = mapping;\n    }\n\n    return texture;\n  };\n\n  ImageUtils.loadCompressedTexture = function () {\n    console.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n  };\n\n  ImageUtils.loadCompressedTextureCube = function () {\n    console.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n  }; //\n\n\n  function CanvasRenderer() {\n    console.error('THREE.CanvasRenderer has been removed');\n  } //\n\n\n  function JSONLoader() {\n    console.error('THREE.JSONLoader has been removed.');\n  } //\n\n\n  var SceneUtils = {\n    createMultiMaterialObject: function ()\n    /* geometry, materials */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    detach: function ()\n    /* child, parent, scene */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    },\n    attach: function ()\n    /* child, scene, parent */\n    {\n      console.error('THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js');\n    }\n  }; //\n\n  function LensFlare() {\n    console.error('THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js');\n  }\n\n  if (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n    /* eslint-disable no-undef */\n    __THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n      detail: {\n        revision: REVISION\n      }\n    }));\n    /* eslint-enable no-undef */\n\n  }\n\n  exports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n  exports.AddEquation = AddEquation;\n  exports.AddOperation = AddOperation;\n  exports.AdditiveBlending = AdditiveBlending;\n  exports.AlphaFormat = AlphaFormat;\n  exports.AlwaysDepth = AlwaysDepth;\n  exports.AlwaysStencilFunc = AlwaysStencilFunc;\n  exports.AmbientLight = AmbientLight;\n  exports.AmbientLightProbe = AmbientLightProbe;\n  exports.AnimationClip = AnimationClip;\n  exports.AnimationLoader = AnimationLoader;\n  exports.AnimationMixer = AnimationMixer;\n  exports.AnimationObjectGroup = AnimationObjectGroup;\n  exports.AnimationUtils = AnimationUtils;\n  exports.ArcCurve = ArcCurve;\n  exports.ArrayCamera = ArrayCamera;\n  exports.ArrowHelper = ArrowHelper;\n  exports.Audio = Audio;\n  exports.AudioAnalyser = AudioAnalyser;\n  exports.AudioContext = AudioContext;\n  exports.AudioListener = AudioListener;\n  exports.AudioLoader = AudioLoader;\n  exports.AxesHelper = AxesHelper;\n  exports.AxisHelper = AxisHelper;\n  exports.BackSide = BackSide;\n  exports.BasicDepthPacking = BasicDepthPacking;\n  exports.BasicShadowMap = BasicShadowMap;\n  exports.BinaryTextureLoader = BinaryTextureLoader;\n  exports.Bone = Bone;\n  exports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n  exports.BoundingBoxHelper = BoundingBoxHelper;\n  exports.Box2 = Box2;\n  exports.Box3 = Box3;\n  exports.Box3Helper = Box3Helper;\n  exports.BoxBufferGeometry = BoxBufferGeometry;\n  exports.BoxGeometry = BoxGeometry;\n  exports.BoxHelper = BoxHelper;\n  exports.BufferAttribute = BufferAttribute;\n  exports.BufferGeometry = BufferGeometry;\n  exports.BufferGeometryLoader = BufferGeometryLoader;\n  exports.ByteType = ByteType;\n  exports.Cache = Cache;\n  exports.Camera = Camera;\n  exports.CameraHelper = CameraHelper;\n  exports.CanvasRenderer = CanvasRenderer;\n  exports.CanvasTexture = CanvasTexture;\n  exports.CatmullRomCurve3 = CatmullRomCurve3;\n  exports.CineonToneMapping = CineonToneMapping;\n  exports.CircleBufferGeometry = CircleBufferGeometry;\n  exports.CircleGeometry = CircleGeometry;\n  exports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n  exports.Clock = Clock;\n  exports.ClosedSplineCurve3 = ClosedSplineCurve3;\n  exports.Color = Color;\n  exports.ColorKeyframeTrack = ColorKeyframeTrack;\n  exports.CompressedTexture = CompressedTexture;\n  exports.CompressedTextureLoader = CompressedTextureLoader;\n  exports.ConeBufferGeometry = ConeBufferGeometry;\n  exports.ConeGeometry = ConeGeometry;\n  exports.CubeCamera = CubeCamera;\n  exports.CubeGeometry = BoxGeometry;\n  exports.CubeReflectionMapping = CubeReflectionMapping;\n  exports.CubeRefractionMapping = CubeRefractionMapping;\n  exports.CubeTexture = CubeTexture;\n  exports.CubeTextureLoader = CubeTextureLoader;\n  exports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n  exports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n  exports.CubicBezierCurve = CubicBezierCurve;\n  exports.CubicBezierCurve3 = CubicBezierCurve3;\n  exports.CubicInterpolant = CubicInterpolant;\n  exports.CullFaceBack = CullFaceBack;\n  exports.CullFaceFront = CullFaceFront;\n  exports.CullFaceFrontBack = CullFaceFrontBack;\n  exports.CullFaceNone = CullFaceNone;\n  exports.Curve = Curve;\n  exports.CurvePath = CurvePath;\n  exports.CustomBlending = CustomBlending;\n  exports.CylinderBufferGeometry = CylinderBufferGeometry;\n  exports.CylinderGeometry = CylinderGeometry;\n  exports.Cylindrical = Cylindrical;\n  exports.DataTexture = DataTexture;\n  exports.DataTexture2DArray = DataTexture2DArray;\n  exports.DataTexture3D = DataTexture3D;\n  exports.DataTextureLoader = DataTextureLoader;\n  exports.DecrementStencilOp = DecrementStencilOp;\n  exports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n  exports.DefaultLoadingManager = DefaultLoadingManager;\n  exports.DepthFormat = DepthFormat;\n  exports.DepthStencilFormat = DepthStencilFormat;\n  exports.DepthTexture = DepthTexture;\n  exports.DirectionalLight = DirectionalLight;\n  exports.DirectionalLightHelper = DirectionalLightHelper;\n  exports.DirectionalLightShadow = DirectionalLightShadow;\n  exports.DiscreteInterpolant = DiscreteInterpolant;\n  exports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n  exports.DodecahedronGeometry = DodecahedronGeometry;\n  exports.DoubleSide = DoubleSide;\n  exports.DstAlphaFactor = DstAlphaFactor;\n  exports.DstColorFactor = DstColorFactor;\n  exports.DynamicBufferAttribute = DynamicBufferAttribute;\n  exports.DynamicCopyUsage = DynamicCopyUsage;\n  exports.DynamicDrawUsage = DynamicDrawUsage;\n  exports.DynamicReadUsage = DynamicReadUsage;\n  exports.EdgesGeometry = EdgesGeometry;\n  exports.EdgesHelper = EdgesHelper;\n  exports.EllipseCurve = EllipseCurve;\n  exports.EqualDepth = EqualDepth;\n  exports.EqualStencilFunc = EqualStencilFunc;\n  exports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n  exports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n  exports.Euler = Euler;\n  exports.EventDispatcher = EventDispatcher;\n  exports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n  exports.ExtrudeGeometry = ExtrudeGeometry;\n  exports.Face3 = Face3;\n  exports.Face4 = Face4;\n  exports.FaceColors = FaceColors;\n  exports.FaceNormalsHelper = FaceNormalsHelper;\n  exports.FileLoader = FileLoader;\n  exports.FlatShading = FlatShading;\n  exports.Float32Attribute = Float32Attribute;\n  exports.Float32BufferAttribute = Float32BufferAttribute;\n  exports.Float64Attribute = Float64Attribute;\n  exports.Float64BufferAttribute = Float64BufferAttribute;\n  exports.FloatType = FloatType;\n  exports.Fog = Fog;\n  exports.FogExp2 = FogExp2;\n  exports.Font = Font;\n  exports.FontLoader = FontLoader;\n  exports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n  exports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n  exports.FrontSide = FrontSide;\n  exports.Frustum = Frustum;\n  exports.GammaEncoding = GammaEncoding;\n  exports.Geometry = Geometry;\n  exports.GeometryUtils = GeometryUtils;\n  exports.GreaterDepth = GreaterDepth;\n  exports.GreaterEqualDepth = GreaterEqualDepth;\n  exports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n  exports.GreaterStencilFunc = GreaterStencilFunc;\n  exports.GridHelper = GridHelper;\n  exports.Group = Group;\n  exports.HalfFloatType = HalfFloatType;\n  exports.HemisphereLight = HemisphereLight;\n  exports.HemisphereLightHelper = HemisphereLightHelper;\n  exports.HemisphereLightProbe = HemisphereLightProbe;\n  exports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n  exports.IcosahedronGeometry = IcosahedronGeometry;\n  exports.ImageBitmapLoader = ImageBitmapLoader;\n  exports.ImageLoader = ImageLoader;\n  exports.ImageUtils = ImageUtils;\n  exports.ImmediateRenderObject = ImmediateRenderObject;\n  exports.IncrementStencilOp = IncrementStencilOp;\n  exports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n  exports.InstancedBufferAttribute = InstancedBufferAttribute;\n  exports.InstancedBufferGeometry = InstancedBufferGeometry;\n  exports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n  exports.InstancedMesh = InstancedMesh;\n  exports.Int16Attribute = Int16Attribute;\n  exports.Int16BufferAttribute = Int16BufferAttribute;\n  exports.Int32Attribute = Int32Attribute;\n  exports.Int32BufferAttribute = Int32BufferAttribute;\n  exports.Int8Attribute = Int8Attribute;\n  exports.Int8BufferAttribute = Int8BufferAttribute;\n  exports.IntType = IntType;\n  exports.InterleavedBuffer = InterleavedBuffer;\n  exports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n  exports.Interpolant = Interpolant;\n  exports.InterpolateDiscrete = InterpolateDiscrete;\n  exports.InterpolateLinear = InterpolateLinear;\n  exports.InterpolateSmooth = InterpolateSmooth;\n  exports.InvertStencilOp = InvertStencilOp;\n  exports.JSONLoader = JSONLoader;\n  exports.KeepStencilOp = KeepStencilOp;\n  exports.KeyframeTrack = KeyframeTrack;\n  exports.LOD = LOD;\n  exports.LatheBufferGeometry = LatheBufferGeometry;\n  exports.LatheGeometry = LatheGeometry;\n  exports.Layers = Layers;\n  exports.LensFlare = LensFlare;\n  exports.LessDepth = LessDepth;\n  exports.LessEqualDepth = LessEqualDepth;\n  exports.LessEqualStencilFunc = LessEqualStencilFunc;\n  exports.LessStencilFunc = LessStencilFunc;\n  exports.Light = Light;\n  exports.LightProbe = LightProbe;\n  exports.LightProbeHelper = LightProbeHelper;\n  exports.LightShadow = LightShadow;\n  exports.Line = Line;\n  exports.Line3 = Line3;\n  exports.LineBasicMaterial = LineBasicMaterial;\n  exports.LineCurve = LineCurve;\n  exports.LineCurve3 = LineCurve3;\n  exports.LineDashedMaterial = LineDashedMaterial;\n  exports.LineLoop = LineLoop;\n  exports.LinePieces = LinePieces;\n  exports.LineSegments = LineSegments;\n  exports.LineStrip = LineStrip;\n  exports.LinearEncoding = LinearEncoding;\n  exports.LinearFilter = LinearFilter;\n  exports.LinearInterpolant = LinearInterpolant;\n  exports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n  exports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n  exports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n  exports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n  exports.LinearToneMapping = LinearToneMapping;\n  exports.Loader = Loader;\n  exports.LoaderUtils = LoaderUtils;\n  exports.LoadingManager = LoadingManager;\n  exports.LogLuvEncoding = LogLuvEncoding;\n  exports.LoopOnce = LoopOnce;\n  exports.LoopPingPong = LoopPingPong;\n  exports.LoopRepeat = LoopRepeat;\n  exports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n  exports.LuminanceFormat = LuminanceFormat;\n  exports.MOUSE = MOUSE;\n  exports.Material = Material;\n  exports.MaterialLoader = MaterialLoader;\n  exports.Math = _Math;\n  exports.Matrix3 = Matrix3;\n  exports.Matrix4 = Matrix4;\n  exports.MaxEquation = MaxEquation;\n  exports.Mesh = Mesh;\n  exports.MeshBasicMaterial = MeshBasicMaterial;\n  exports.MeshDepthMaterial = MeshDepthMaterial;\n  exports.MeshDistanceMaterial = MeshDistanceMaterial;\n  exports.MeshFaceMaterial = MeshFaceMaterial;\n  exports.MeshLambertMaterial = MeshLambertMaterial;\n  exports.MeshMatcapMaterial = MeshMatcapMaterial;\n  exports.MeshNormalMaterial = MeshNormalMaterial;\n  exports.MeshPhongMaterial = MeshPhongMaterial;\n  exports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n  exports.MeshStandardMaterial = MeshStandardMaterial;\n  exports.MeshToonMaterial = MeshToonMaterial;\n  exports.MinEquation = MinEquation;\n  exports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n  exports.MixOperation = MixOperation;\n  exports.MultiMaterial = MultiMaterial;\n  exports.MultiplyBlending = MultiplyBlending;\n  exports.MultiplyOperation = MultiplyOperation;\n  exports.NearestFilter = NearestFilter;\n  exports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n  exports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n  exports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n  exports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n  exports.NeverDepth = NeverDepth;\n  exports.NeverStencilFunc = NeverStencilFunc;\n  exports.NoBlending = NoBlending;\n  exports.NoColors = NoColors;\n  exports.NoToneMapping = NoToneMapping;\n  exports.NormalBlending = NormalBlending;\n  exports.NotEqualDepth = NotEqualDepth;\n  exports.NotEqualStencilFunc = NotEqualStencilFunc;\n  exports.NumberKeyframeTrack = NumberKeyframeTrack;\n  exports.Object3D = Object3D;\n  exports.ObjectLoader = ObjectLoader;\n  exports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n  exports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n  exports.OctahedronGeometry = OctahedronGeometry;\n  exports.OneFactor = OneFactor;\n  exports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n  exports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n  exports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n  exports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n  exports.OrthographicCamera = OrthographicCamera;\n  exports.PCFShadowMap = PCFShadowMap;\n  exports.PCFSoftShadowMap = PCFSoftShadowMap;\n  exports.ParametricBufferGeometry = ParametricBufferGeometry;\n  exports.ParametricGeometry = ParametricGeometry;\n  exports.Particle = Particle;\n  exports.ParticleBasicMaterial = ParticleBasicMaterial;\n  exports.ParticleSystem = ParticleSystem;\n  exports.ParticleSystemMaterial = ParticleSystemMaterial;\n  exports.Path = Path;\n  exports.PerspectiveCamera = PerspectiveCamera;\n  exports.Plane = Plane;\n  exports.PlaneBufferGeometry = PlaneBufferGeometry;\n  exports.PlaneGeometry = PlaneGeometry;\n  exports.PlaneHelper = PlaneHelper;\n  exports.PointCloud = PointCloud;\n  exports.PointCloudMaterial = PointCloudMaterial;\n  exports.PointLight = PointLight;\n  exports.PointLightHelper = PointLightHelper;\n  exports.Points = Points;\n  exports.PointsMaterial = PointsMaterial;\n  exports.PolarGridHelper = PolarGridHelper;\n  exports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n  exports.PolyhedronGeometry = PolyhedronGeometry;\n  exports.PositionalAudio = PositionalAudio;\n  exports.PositionalAudioHelper = PositionalAudioHelper;\n  exports.PropertyBinding = PropertyBinding;\n  exports.PropertyMixer = PropertyMixer;\n  exports.QuadraticBezierCurve = QuadraticBezierCurve;\n  exports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n  exports.Quaternion = Quaternion;\n  exports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n  exports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n  exports.REVISION = REVISION;\n  exports.RGBADepthPacking = RGBADepthPacking;\n  exports.RGBAFormat = RGBAFormat;\n  exports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n  exports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n  exports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n  exports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n  exports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n  exports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n  exports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n  exports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n  exports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n  exports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n  exports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n  exports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n  exports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n  exports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n  exports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n  exports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n  exports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n  exports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n  exports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n  exports.RGBDEncoding = RGBDEncoding;\n  exports.RGBEEncoding = RGBEEncoding;\n  exports.RGBEFormat = RGBEFormat;\n  exports.RGBFormat = RGBFormat;\n  exports.RGBM16Encoding = RGBM16Encoding;\n  exports.RGBM7Encoding = RGBM7Encoding;\n  exports.RGB_ETC1_Format = RGB_ETC1_Format;\n  exports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n  exports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n  exports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n  exports.RawShaderMaterial = RawShaderMaterial;\n  exports.Ray = Ray;\n  exports.Raycaster = Raycaster;\n  exports.RectAreaLight = RectAreaLight;\n  exports.RectAreaLightHelper = RectAreaLightHelper;\n  exports.RedFormat = RedFormat;\n  exports.ReinhardToneMapping = ReinhardToneMapping;\n  exports.RepeatWrapping = RepeatWrapping;\n  exports.ReplaceStencilOp = ReplaceStencilOp;\n  exports.ReverseSubtractEquation = ReverseSubtractEquation;\n  exports.RingBufferGeometry = RingBufferGeometry;\n  exports.RingGeometry = RingGeometry;\n  exports.Scene = Scene;\n  exports.SceneUtils = SceneUtils;\n  exports.ShaderChunk = ShaderChunk;\n  exports.ShaderLib = ShaderLib;\n  exports.ShaderMaterial = ShaderMaterial;\n  exports.ShadowMaterial = ShadowMaterial;\n  exports.Shape = Shape;\n  exports.ShapeBufferGeometry = ShapeBufferGeometry;\n  exports.ShapeGeometry = ShapeGeometry;\n  exports.ShapePath = ShapePath;\n  exports.ShapeUtils = ShapeUtils;\n  exports.ShortType = ShortType;\n  exports.Skeleton = Skeleton;\n  exports.SkeletonHelper = SkeletonHelper;\n  exports.SkinnedMesh = SkinnedMesh;\n  exports.SmoothShading = SmoothShading;\n  exports.Sphere = Sphere;\n  exports.SphereBufferGeometry = SphereBufferGeometry;\n  exports.SphereGeometry = SphereGeometry;\n  exports.Spherical = Spherical;\n  exports.SphericalHarmonics3 = SphericalHarmonics3;\n  exports.SphericalReflectionMapping = SphericalReflectionMapping;\n  exports.Spline = Spline;\n  exports.SplineCurve = SplineCurve;\n  exports.SplineCurve3 = SplineCurve3;\n  exports.SpotLight = SpotLight;\n  exports.SpotLightHelper = SpotLightHelper;\n  exports.SpotLightShadow = SpotLightShadow;\n  exports.Sprite = Sprite;\n  exports.SpriteMaterial = SpriteMaterial;\n  exports.SrcAlphaFactor = SrcAlphaFactor;\n  exports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n  exports.SrcColorFactor = SrcColorFactor;\n  exports.StaticCopyUsage = StaticCopyUsage;\n  exports.StaticDrawUsage = StaticDrawUsage;\n  exports.StaticReadUsage = StaticReadUsage;\n  exports.StereoCamera = StereoCamera;\n  exports.StreamCopyUsage = StreamCopyUsage;\n  exports.StreamDrawUsage = StreamDrawUsage;\n  exports.StreamReadUsage = StreamReadUsage;\n  exports.StringKeyframeTrack = StringKeyframeTrack;\n  exports.SubtractEquation = SubtractEquation;\n  exports.SubtractiveBlending = SubtractiveBlending;\n  exports.TOUCH = TOUCH;\n  exports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n  exports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n  exports.TetrahedronGeometry = TetrahedronGeometry;\n  exports.TextBufferGeometry = TextBufferGeometry;\n  exports.TextGeometry = TextGeometry;\n  exports.Texture = Texture;\n  exports.TextureLoader = TextureLoader;\n  exports.TorusBufferGeometry = TorusBufferGeometry;\n  exports.TorusGeometry = TorusGeometry;\n  exports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n  exports.TorusKnotGeometry = TorusKnotGeometry;\n  exports.Triangle = Triangle;\n  exports.TriangleFanDrawMode = TriangleFanDrawMode;\n  exports.TriangleStripDrawMode = TriangleStripDrawMode;\n  exports.TrianglesDrawMode = TrianglesDrawMode;\n  exports.TubeBufferGeometry = TubeBufferGeometry;\n  exports.TubeGeometry = TubeGeometry;\n  exports.UVMapping = UVMapping;\n  exports.Uint16Attribute = Uint16Attribute;\n  exports.Uint16BufferAttribute = Uint16BufferAttribute;\n  exports.Uint32Attribute = Uint32Attribute;\n  exports.Uint32BufferAttribute = Uint32BufferAttribute;\n  exports.Uint8Attribute = Uint8Attribute;\n  exports.Uint8BufferAttribute = Uint8BufferAttribute;\n  exports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n  exports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n  exports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n  exports.Uniform = Uniform;\n  exports.UniformsLib = UniformsLib;\n  exports.UniformsUtils = UniformsUtils;\n  exports.UnsignedByteType = UnsignedByteType;\n  exports.UnsignedInt248Type = UnsignedInt248Type;\n  exports.UnsignedIntType = UnsignedIntType;\n  exports.UnsignedShort4444Type = UnsignedShort4444Type;\n  exports.UnsignedShort5551Type = UnsignedShort5551Type;\n  exports.UnsignedShort565Type = UnsignedShort565Type;\n  exports.UnsignedShortType = UnsignedShortType;\n  exports.VSMShadowMap = VSMShadowMap;\n  exports.Vector2 = Vector2;\n  exports.Vector3 = Vector3;\n  exports.Vector4 = Vector4;\n  exports.VectorKeyframeTrack = VectorKeyframeTrack;\n  exports.Vertex = Vertex;\n  exports.VertexColors = VertexColors;\n  exports.VertexNormalsHelper = VertexNormalsHelper;\n  exports.VideoTexture = VideoTexture;\n  exports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n  exports.WebGLRenderTarget = WebGLRenderTarget;\n  exports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n  exports.WebGLRenderer = WebGLRenderer;\n  exports.WebGLUtils = WebGLUtils;\n  exports.WireframeGeometry = WireframeGeometry;\n  exports.WireframeHelper = WireframeHelper;\n  exports.WrapAroundEnding = WrapAroundEnding;\n  exports.XHRLoader = XHRLoader;\n  exports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n  exports.ZeroFactor = ZeroFactor;\n  exports.ZeroSlopeEnding = ZeroSlopeEnding;\n  exports.ZeroStencilOp = ZeroStencilOp;\n  exports.sRGBEncoding = sRGBEncoding;\n  Object.defineProperty(exports, '__esModule', {\n    value: true\n  });\n});","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApps/three.js"],"names":["global","factory","exports","module","define","amd","self","THREE","Number","EPSILON","undefined","Math","pow","isInteger","value","isFinite","floor","sign","x","Function","prototype","Object","defineProperty","get","toString","match","assign","target","TypeError","output","index","arguments","length","source","nextKey","hasOwnProperty","call","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","FrontFaceDirectionCW","FrontFaceDirectionCCW","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoColors","FaceColors","VertexColors","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","Uncharted2ToneMapping","CineonToneMapping","ACESFilmicToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","SphericalReflectionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","EventDispatcher","addEventListener","type","listener","_listeners","listeners","indexOf","push","hasEventListener","removeEventListener","listenerArray","splice","dispatchEvent","event","array","slice","i","l","_lut","_Math","DEG2RAD","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","min","max","euclideanModulo","n","m","mapLinear","a1","a2","b1","b2","lerp","y","t","smoothstep","smootherstep","randInt","low","high","randFloat","randFloatSpread","range","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","ceil","log","LN2","floorPowerOfTwo","Vector2","defineProperties","set","isVector2","setScalar","scalar","setX","setY","setComponent","Error","getComponent","clone","constructor","copy","v","add","w","console","warn","addVectors","addScalar","s","a","b","addScaledVector","sub","subVectors","subScalar","multiply","multiplyScalar","divide","divideScalar","applyMatrix3","e","elements","clampScalar","minVal","maxVal","clampLength","round","roundToZero","negate","dot","cross","lengthSq","sqrt","manhattanLength","abs","normalize","angle","atan2","distanceTo","distanceToSquared","dx","dy","manhattanDistanceTo","setLength","alpha","lerpVectors","v1","v2","equals","fromArray","offset","toArray","fromBufferAttribute","attribute","getX","getY","rotateAround","center","c","cos","sin","Quaternion","z","_x","_y","_z","_w","slerp","qa","qb","qm","slerpFlat","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","f","_onChangeCallback","isQuaternion","quaternion","setFromEuler","euler","update","isEuler","order","c1","c2","c3","s1","s2","s3","setFromAxisAngle","axis","halfAngle","setFromRotationMatrix","te","m11","m12","m13","m21","m22","m23","m31","m32","m33","trace","setFromUnitVectors","vFrom","vTo","EPS","r","angleTo","q","acos","rotateTowards","step","inverse","conjugate","p","multiplyQuaternions","premultiply","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","_onChange","callback","_vector","Vector3","_quaternion","isVector3","setZ","multiplyVectors","applyEuler","error","applyQuaternion","applyAxisAngle","applyMatrix4","qx","qy","qz","qw","ix","iy","iz","iw","project","camera","matrixWorldInverse","projectionMatrix","unproject","projectionMatrixInverse","matrixWorld","transformDirection","crossVectors","ax","ay","az","bx","by","bz","projectOnVector","projectOnPlane","planeNormal","reflect","normal","denominator","theta","dz","setFromSpherical","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindrical","setFromCylindricalCoords","setFromMatrixPosition","setFromMatrixScale","sx","setFromMatrixColumn","sy","sz","getZ","_vector$1","Matrix3","isMatrix3","n11","n12","n13","n21","n22","n23","n31","n32","n33","identity","me","setFromMatrix4","applyToBufferAttribute","count","setXYZ","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","determinant","d","g","h","getInverse","matrix","throwOnDegenerate","isMatrix4","t11","t12","t13","det","msg","detInv","transpose","tmp","getNormalMatrix","matrix4","transposeIntoArray","setUvTransform","tx","ty","rotation","cx","cy","scale","rotate","translate","_canvas","ImageUtils","getDataURL","image","canvas","HTMLCanvasElement","src","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","mapping","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","name","DEFAULT_IMAGE","mipmaps","DEFAULT_MAPPING","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","create","isTexture","updateMatrix","toJSON","meta","isRootObject","textures","metadata","generator","wrap","images","url","Array","isArray","dispose","transformUv","uv","Vector4","isVector4","setW","setAxisAngleFromQuaternion","setAxisAngleFromRotationMatrix","epsilon","epsilon2","xx","yy","zz","xy","xz","yz","getW","WebGLRenderTarget","options","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","isWebGLRenderTarget","setSize","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","_v1","_m1","Matrix4","_zero","_one","n14","n24","n34","n41","n42","n43","n44","copyPosition","extractBasis","xAxis","yAxis","zAxis","makeBasis","extractRotation","scaleX","scaleY","scaleZ","makeRotationFromEuler","af","bf","ce","cf","de","df","ac","ad","bc","bd","makeRotationFromQuaternion","compose","lookAt","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","setPosition","t14","getMaxScaleOnAxis","scaleXSq","scaleYSq","scaleZSq","makeTranslation","makeRotationX","makeRotationY","makeRotationZ","makeRotationAxis","makeScale","makeShear","position","x2","y2","z2","wx","wy","wz","decompose","invSX","invSY","invSZ","makePerspective","left","right","top","bottom","near","far","makeOrthographic","_matrix","_quaternion$1","Euler","_order","DefaultOrder","RotationOrders","asin","setFromQuaternion","setFromVector3","reorder","newOrder","toVector3","optionalResult","Layers","mask","channel","enable","enableAll","toggle","disable","disableAll","test","layers","_object3DId","_v1$1","_q1","_m1$1","_target","_position","_scale","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","children","DefaultUp","onRotationChange","onQuaternionChange","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","userData","isObject3D","onBeforeRender","onAfterRender","applyMatrix","setRotationFromAxisAngle","setRotationFromEuler","setRotationFromMatrix","setRotationFromQuaternion","rotateOnAxis","rotateOnWorldAxis","rotateX","rotateY","rotateZ","translateOnAxis","distance","translateX","translateY","translateZ","localToWorld","vector","worldToLocal","updateWorldMatrix","isCamera","isLight","object","remove","attach","getObjectById","id","getObjectByProperty","getObjectByName","child","getWorldPosition","updateMatrixWorld","getWorldQuaternion","getWorldScale","getWorldDirection","raycast","traverse","traverseVisible","traverseAncestors","force","updateParents","updateChildren","geometries","materials","shapes","JSON","stringify","isMesh","drawMode","isInstancedMesh","instanceMatrix","serialize","library","element","isLine","isPoints","geometry","parameters","shape","material","uuids","extractFromCache","cache","values","key","data","recursive","parse","Scene","background","fog","overrideMaterial","autoUpdate","__THREE_DEVTOOLS__","CustomEvent","detail","isScene","_points","_vector$2","_box","Box3","_v0","_v1$2","_v2","_f0","_f1","_f2","_center","_extents","_triangleNormal","_testAxis","Infinity","isBox3","setFromArray","minX","minY","minZ","maxX","maxY","maxZ","setFromBufferAttribute","setFromPoints","points","makeEmpty","il","expandByPoint","setFromCenterAndSize","size","halfSize","setFromObject","expandByObject","box","isEmpty","getCenter","getSize","point","expandByVector","expandByScalar","boundingBox","computeBoundingBox","containsPoint","containsBox","getParameter","intersectsBox","intersectsSphere","sphere","clampPoint","intersectsPlane","plane","constant","intersectsTriangle","triangle","axes","satForAxes","distanceToPoint","clampedPoint","getBoundingSphere","intersect","union","v0","extents","j","p0","p1","p2","_box$1","Sphere","optionalCenter","maxRadiusSq","empty","radiusSum","deltaLengthSq","getBoundingBox","_vector$3","_segCenter","_segDir","_diff","_edge1","_edge2","_normal","Ray","origin","direction","ray","at","recast","closestPointToPoint","directionDistance","distanceSqToPoint","distanceSqToSegment","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","intersectSphere","tca","radius2","thc","t0","t1","distanceToPlane","intersectPlane","distToPoint","intersectBox","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectTriangle","backfaceCulling","DdN","DdQxE2","DdE1xQ","QdN","_vector1","_vector2","_normalMatrix","Plane","isPlane","setComponents","setFromNormalAndCoplanarPoint","setFromCoplanarPoints","inverseNormalLength","distanceToSphere","projectPoint","intersectLine","line","delta","start","intersectsLine","startSign","endSign","end","coplanarPoint","optionalNormalMatrix","referencePoint","_v0$1","_v1$3","_v2$1","_v3","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","getNormal","targetLengthSq","getBarycoord","dot00","dot01","dot02","dot11","dot12","denom","invDenom","u","getUV","p3","uv1","uv2","uv3","isFrontFacing","setFromPointsAndIndices","i0","i1","i2","getArea","getMidpoint","getPlane","d4","vc","d5","d6","vb","va","_colorKeywords","_hslA","_hslB","Color","setRGB","hue2rgb","SRGBToLinear","LinearToSRGB","isColor","setHex","setStyle","hex","setHSL","style","handleAlpha","string","parseFloat","exec","color","components","parseInt","charAt","setColorName","copyGammaToLinear","gammaFactor","copyLinearToGamma","safeInverse","convertGammaToLinear","convertLinearToGamma","copySRGBToLinear","copyLinearToSRGB","convertSRGBToLinear","convertLinearToSRGB","getHex","getHexString","getHSL","hue","saturation","lightness","getStyle","offsetHSL","addColors","color1","color2","lerpHSL","NAMES","Face3","materialIndex","vertexNormals","vertexColors","materialId","Material","blending","side","flatShading","vertexTangents","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","premultipliedAlpha","toneMapped","needsUpdate","isMaterial","onBeforeCompile","setValues","newValue","currentValue","isRoot","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","reflectivity","refractionRatio","combine","envMapIntensity","gradientMap","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","skinning","srcPlanes","dstPlanes","MeshBasicMaterial","lightMapIntensity","isMeshBasicMaterial","BufferAttribute","itemSize","normalized","usage","updateRange","isBufferAttribute","onUploadCallback","setUsage","copyAt","index1","index2","copyArray","copyColorsArray","colors","copyVector2sArray","vectors","copyVector3sArray","copyVector4sArray","setXY","setXYZW","onUpload","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","DirectGeometry","vertices","normals","uvs","uvs2","groups","skinWeights","skinIndices","boundingSphere","verticesNeedUpdate","normalsNeedUpdate","colorsNeedUpdate","uvsNeedUpdate","groupsNeedUpdate","computeGroups","group","faces","face","fromGeometry","faceVertexUvs","hasFaceVertexUv","hasFaceVertexUv2","morphTargetsLength","morphTargetsPosition","morphNormalsLength","morphTargetsNormal","hasSkinIndices","hasSkinWeights","vertexUvs","morphTarget","morphNormal","arrayMax","_bufferGeometryId","_m1$2","_obj","_offset","_box$2","_boxMorphTargets","_vector$4","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","drawRange","isBufferGeometry","getIndex","setIndex","getAttribute","setAttribute","deleteAttribute","addGroup","clearGroups","setDrawRange","tangent","computeBoundingSphere","positions","lineDistances","isGeometry","updateFromObject","direct","__directGeometry","elementsNeedUpdate","lineDistancesNeedUpdate","lineDistance","fromDirectGeometry","morphAttributesPosition","morphAttribute","isNaN","jl","computeFaceNormals","computeVertexNormals","vA","vB","vC","pA","pB","pC","cb","ab","indices","normalizeNormals","merge","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","toNonIndexed","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","keys","attributeData","hasMorphAttributes","attributeArray","_inverseMatrix","_ray","_sphere","_vA","_vB","_vC","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA","_uvB","_uvC","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","setDrawMode","morphTargetInfluences","morphTargetDictionary","ml","String","raycaster","intersects","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","fvA","fvB","fvC","isMultiMaterial","fl","faceMaterial","checkIntersection","uvs_f","morphInfluences","influence","_geometryId","_m1$3","_obj$1","_offset$1","Geometry","vertex","fromBufferGeometry","scope","addFace","areaWeighted","vl","computeFlatVertexNormals","computeMorphNormals","__originalFaceNormal","__originalVertexNormals","tmpGeo","faceNormals","dstNormalsFace","dstNormalsVertex","faceNormal","materialIndexOffset","vertexOffset","vertices1","vertices2","faces1","faces2","colors1","colors2","vertexCopy","faceCopy","faceVertexNormals","faceVertexColors","faceVertexUvs2","uvsCopy","k","kl","mergeMesh","mesh","mergeVertices","verticesMap","unique","changes","precisionPoints","faceIndicesToRemove","idx","diff","sortFacesByMaterialIndex","_id","materialIndexSort","sort","uvs1","newUvs1","newUvs2","normalsHash","colorsHash","uvsHash","hasMaterial","hasFaceUv","hasFaceNormal","hasFaceVertexNormal","hasFaceColor","hasFaceVertexColor","faceType","setBit","getUvIndex","getNormalIndex","getColorIndex","enabled","hash","srcVertexNormal","destVertexNormal","BoxGeometry","depth","widthSegments","heightSegments","depthSegments","BoxBufferGeometry","__proto__","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","isShaderMaterial","uniform","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","isPerspectiveCamera","setFocalLength","focalLength","vExtentSlope","getFilmHeight","atan","getFocalLength","tan","getEffectiveFOV","getFilmWidth","setViewOffset","fullWidth","fullHeight","offsetX","offsetY","clearViewOffset","skew","CubeCamera","cubeResolution","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderTarget","WebGLRenderTargetCube","renderer","scene","currentRenderTarget","getRenderTarget","setRenderTarget","render","clear","stencil","isWebGLRenderTargetCube","fromEquirectangularTexture","shader","tEquirect","join","DataTexture","isDataTexture","_sphere$1","_vector$5","Frustum","p4","p5","planes","frustum","setFromMatrix","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","intersectsObject","intersectsSprite","sprite","negRadius","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_normalmap_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","shadow","shadowBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotShadowMap","spotShadowMatrix","pointLights","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ShaderLib","basic","lambert","phong","standard","dashed","totalSize","t2D","cube","tCube","tFlip","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","physical","transparency","WebGLAnimation","isAnimating","animationLoop","onAnimationFrame","time","frame","requestAnimationFrame","stop","setAnimationLoop","setContext","WebGLAttributes","gl","buffers","WeakMap","createBuffer","bufferType","buffer","bindBuffer","bufferData","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","isInterleavedBufferAttribute","deleteBuffer","delete","PlaneGeometry","PlaneBufferGeometry","width_half","height_half","segment_width","segment_height","WebGLBackground","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","renderList","forceClear","vr","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","isCubeTexture","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBufferRenderer","info","capabilities","isWebGL2","mode","setMode","drawArrays","renderInstances","primcount","extension","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","maxVertexTextures","maxTextureSize","maxCubemapSize","maxAttributes","maxVertexUniforms","maxVaryings","maxFragmentUniforms","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","fromCache","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","buffergeometry","memory","_bufferGeometry","geometryAttributes","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","reset","programs","autoReset","absNumericalSort","WebGLMorphtargets","influencesList","program","objectInfluences","influences","morphInfluencesSum","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateList","CubeTexture","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueT1","unit","uniform1i","safeSetTexture2D","setValueT2DArray1","setTexture2DArray","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueV1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","getSingularSetter","setValueV1fArray","uniform1fv","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","getEncodingComponents","getShaderErrors","status","getShaderParameter","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMapping","toneMappingName","generateExtensions","rendererExtensions","chunks","envMapCubeUV","tangentSpaceNormalMap","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","loopPattern","unrollLoops","loopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","numMultiviewViews","isRawShaderMaterial","instancing","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","uvsVertexOnly","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","outputEncoding","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","depthPacking","isGLSL3ShaderMaterial","versionRegex","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","vertexErrors","fragmentErrors","getError","diagnostics","prefix","deleteShader","cachedUniforms","cachedAttributes","getAttributes","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","allocateBones","skeleton","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","gammaOverrideLinear","getParameters","shadows","nClipPlanes","nClipIntersection","shaderID","isSkinnedMesh","isWebGLMultiviewRenderTarget","numViews","gammaOutput","gammaInput","isFogExp2","maxMorphTargets","maxMorphNormals","directional","spot","rectArea","hemi","shadowMap","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","defaultProgram","getNextRenderItem","renderItem","WebGLRenderLists","lists","onSceneDispose","cameras","list","UniformsCache","light","halfWidth","halfHeight","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","vector3","matrix42","setup","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","bias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","WebGLRenderStates","renderStates","renderState","has","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizonal","HORIZONAL_PASS","fullScreenTri","fullScreenMesh","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","useSkinning","useInstancing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","depthMask","setFunc","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","maxVertexAttributes","newAttributes","enabledAttributes","attributeDivisors","enabledCapabilities","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","lineWidthAvailable","glVersion","currentTextureSlot","currentBoundTextures","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","texImage2D","emptyTextures","setFlipSided","setCullFace","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","useProgram","equationToGL","MIN_EXT","MAX_EXT","factorToGL","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","frontFace","cullFace","setLineWidth","lineWidth","factor","activeTexture","webglSlot","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","HTMLImageElement","ImageBitmap","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","LOG2E","getInternalFormat","glFormat","glType","internalFormat","filterFallback","onTextureDispose","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglColorTexture","__webglDepthStencilTexture","__webglViewFramebuffers","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","setTextureCube","initTexture","pixelStorei","isCompressed","isCompressedTexture","cubeImage","convert","glInternalFormat","setTextureParameters","mipmap","mipmapImage","setTextureCubeDynamic","wrappingToGL","filterToGL","textureType","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","isDepthTexture","setupFrameBufferTexture","framebuffer","attachment","textureTarget","bindFramebuffer","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultiview","createFramebuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","ext","colorTexture","framebufferTextureMultiviewOVR","depthStencilTexture","viewFramebuffers","framebufferTextureLayer","updateRenderTargetMipmap","updateMultisampleRenderTarget","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","HALF_FLOAT_OES","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","UNSIGNED_INT_24_8_WEBGL","WebGLMultiviewRenderTarget","setNumViews","WebGLMultiview","DEFAULT_NUMVIEWS","mat3","mat4","cameraArray","renderSize","available","maxNumViews","isAvailable","getContextAttributes","antialias","MAX_VIEWS_OVR","getCameraArray","isArrayCamera","updateCameraProjectionMatricesUniform","updateCameraViewMatricesUniform","updateObjectMatricesUniforms","isMultiviewCompatible","resizeRenderTarget","getDrawingBufferSize","attachCamera","detachCamera","flush","srcRenderTarget","srcFramebuffers","viewWidth","viewHeight","Group","isGroup","ArrayCamera","cameraLPos","cameraRPos","setProjectionFromUnion","cameraL","cameraR","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","near2","far2","left2","right2","top2","bottom2","WebVRManager","renderWidth","renderHeight","device","frameData","poseTarget","controllers","standingMatrix","standingMatrixInverse","framebufferScaleFactor","referenceSpaceType","window","VRFrameData","onVRDisplayPresentChange","tempQuaternion","tempPosition","cameraVR","isPresenting","currentSize","currentPixelRatio","eyeParameters","getEyeParameters","getPixelRatio","setDrawingBufferSize","animation","triggers","findGamepad","gamepads","navigator","getGamepads","gamepad","startsWith","hand","updateControllers","controller","pose","hasPosition","orientation","buttonId","buttons","pressed","updateViewportFromBounds","bounds","getController","getDevice","setDevice","setFramebufferScaleFactor","setReferenceSpaceType","setPoseTarget","getCamera","userHeight","depthNear","depthFar","getFrameData","stageParameters","sittingToStandingTransform","poseObject","leftViewMatrix","rightViewMatrix","leftProjectionMatrix","rightProjectionMatrix","getLayers","layer","leftBounds","rightBounds","getStandingMatrix","submitFrame","setFrameOfReferenceType","WebXRManager","referenceSpace","sortedInputSources","onSessionEvent","inputSource","onSessionEnd","setFramebuffer","onRequestReferenceSpace","setSession","updateRenderState","baseLayer","XRWebGLLayer","requestReferenceSpace","then","updateInputSources","findInputSource","inputSources","handedness","updateCamera","onAnimationFrameCallback","getViewerPose","views","transform","inputPose","getPose","targetRaySpace","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","domElement","sortObjects","toneMappingExposure","toneMappingWhitePoint","_this","_isContextLost","_framebuffer","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentFramebuffer","_currentMaterialId","_currentGeometryProgram","_currentCamera","_currentArrayCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_scissor","_scissorTest","_clipping","_clippingEnabled","_localClippingEnabled","_projScreenMatrix","_vector3","getTargetPixelRatio","contextAttributes","xrCompatible","onContextLost","onContextRestore","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","multiview","forceContextLoss","loseContext","forceContextRestore","restoreContext","setPixelRatio","updateStyle","setViewport","pixelRatio","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","bits","preventDefault","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReference","programInfo","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","programAttributes","positionArray","vertexAttribPointer","normalArray","uvArray","colorArray","setProgram","updateBuffers","rangeFactor","setupVertexAttributes","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","isInstancedBufferGeometry","maxInstancedCount","materialDefaultAttributeValues","programAttribute","geometryAttribute","stride","isInstancedInterleavedBuffer","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","compile","initMaterial","projectObject","opaqueObjects","transparentObjects","renderObjects","isLOD","isImmediateRenderObject","camera2","materialProperties","lightsStateVersion","programCacheKey","programChange","numSupportedMorphTargets","numSupportedMorphNormals","needsLights","materialNeedsLights","progUniforms","uniformsList","useCache","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","isMeshPhongMaterial","isMeshStandardMaterial","uCamPos","cameraPosition","isMeshLambertMaterial","isOrthographicCamera","boneTexture","boneMatrices","boneTextureSize","markUniformsLightsNeedsUpdate","refreshUniformsFog","refreshUniformsCommon","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","ltc_1","LTC_1","ltc_2","LTC_2","uvScaleMap","isFog","density","readRenderTargetPixels","activeCubeFaceIndex","restore","textureFormat","checkFramebufferStatus","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","FogExp2","Fog","InterleavedBuffer","isInterleavedBuffer","InterleavedBufferAttribute","interleavedBuffer","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA$1","_vB$1","_vC$1","_uvA$1","_uvB$1","_uvC$1","Sprite","float32Array","transformVertex","vertexPosition","mvPosition","_v1$4","_v2$2","LOD","levels","addLevel","getObjectForDistance","SkinnedMesh","bindMode","bindMatrix","bindMatrixInverse","bind","calculateInverses","normalizeSkinWeights","skinWeight","_offsetMatrix","_identityMatrix","Skeleton","boneInverses","bone","isBone","getBoneByName","Bone","InstancedMesh","setMatrixAt","linecap","linejoin","_start","_end","_inverseMatrix$1","_ray$1","_sphere$2","Line","computeLineDistances","positionAttribute","linePrecision","localPrecision","localPrecisionSq","vStart","vEnd","interSegment","interRay","distSq","nbVertices","_start$1","_end$1","LineSegments","LineLoop","_inverseMatrix$2","_ray$2","_sphere$3","_position$1","Points","threshold","params","localThreshold","localThresholdSq","testPoint","rayPointDistanceSq","intersectPoint","distanceToRay","VideoTexture","video","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","WireframeGeometry","o","ol","edge","edges","edge1","edge2","ParametricGeometry","func","slices","stacks","ParametricBufferGeometry","pu","pv","sliceCount","PolyhedronGeometry","PolyhedronBufferGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","uvA","uvB","uvC","azi","correctUV","TetrahedronGeometry","TetrahedronBufferGeometry","OctahedronGeometry","OctahedronBufferGeometry","IcosahedronGeometry","IcosahedronBufferGeometry","DodecahedronGeometry","DodecahedronBufferGeometry","TubeGeometry","tubularSegments","radialSegments","closed","taper","bufferGeometry","TubeBufferGeometry","tangents","binormals","frames","computeFrenetFrames","P","generateBufferData","generateSegment","generateIndices","getPointAt","N","B","TorusKnotGeometry","tube","heightScale","TorusKnotBufferGeometry","P1","P2","T","calculatePositionOnCurve","cu","su","quOverP","cs","TorusGeometry","arc","TorusBufferGeometry","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","inside","Node","an","bp","sum","ShapeUtils","contour","isClockWise","pts","triangulateShape","holes","removeDupEndPts","addContour","holeIndex","forEach","ExtrudeGeometry","ExtrudeBufferGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","ahole","hl","shapePoints","extractPoints","reverse","concat","scalePt2","pt","vec","bs","vert","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","TextGeometry","text","TextBufferGeometry","font","isFont","generateShapes","SphereGeometry","phiStart","phiLength","thetaStart","thetaLength","SphereBufferGeometry","thetaEnd","grid","verticesRow","uOffset","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","RingBufferGeometry","segment","radiusStep","thetaSegmentLevel","LatheGeometry","segments","LatheBufferGeometry","base","inverseSegments","n1","n2","ShapeGeometry","ShapeBufferGeometry","toJSON$1","shapeHole","indexOffset","shapeVertices","shapeHoles","EdgesGeometry","thresholdAngle","thresholdDot","sourceVertices","face1","face2","CylinderGeometry","radiusTop","radiusBottom","openEnded","CylinderBufferGeometry","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","ConeBufferGeometry","CircleGeometry","CircleBufferGeometry","Geometries","freeze","RawShaderMaterial","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","shift","resetDuration","Interpolant","parameterPositions","sampleValues","sampleSize","resultBuffer","_cachedIndex","evaluate","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","settings","DefaultSettings_","getSettings_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","halfDt","o1","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","trackType","json","getInterpolation","ValueTypeName","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","factoryMethod","createInterpolant","timeOffset","timeScale","startTime","endTime","nKeys","validate","valid","prevTime","currTime","optimize","smoothInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","getTrackTypeForValueTypeName","typeName","toLowerCase","parseKeyframeTrack","jsonTracks","frameTime","clipTracks","CreateFromMorphTargetSequence","morphTargetSequence","noLoop","numMorphTargets","findByName","objectOrClipArray","clipArray","animations","CreateClipsFromMorphTargetSequences","animationToMorphTargets","pattern","parts","animationMorphTargets","clips","parseAnimation","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","resourcePath","load","setCrossOrigin","setPath","setResourcePath","loading","FileLoader","cached","setTimeout","dataUriRegex","dataUriRegexResult","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","request","XMLHttpRequest","open","callbacks","withCredentials","overrideMimeType","header","requestHeader","setRequestHeader","send","setResponseType","setWithCredentials","setMimeType","AnimationLoader","CompressedTextureLoader","loadTexture","texDatas","loaded","mipmapCount","isCubemap","DataTextureLoader","texData","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","getPoint","optionalTarget","getUtoTmapping","getPoints","divisions","getLength","lengths","getLengths","cacheArcLengths","current","updateArcLengths","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","getTangent","t2","pt1","pt2","getTangentAt","mat","MAX_VALUE","tz","fromJSON","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","isEllipseCurve","twoPi","deltaAngle","samePoints","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","isCatmullRomCurve3","intPoint","weight","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","closePath","startPoint","endPoint","curveLengths","getCurveLengths","lens","cacheLengths","sums","Path","currentPoint","moveTo","lineTo","quadraticCurveTo","aCPx","aCPy","bezierCurveTo","aCP1x","aCP1y","aCP2x","aCP2y","splineThru","npts","absarc","absellipse","ellipse","firstPoint","lastPoint","Shape","getPointsHoles","holesPts","Light","HemisphereLight","LightShadow","_frameExtents","_viewportCount","_viewports","_lightPositionWorld","_lookTarget","shadowMatrix","projScreenMatrix","lookTarget","lightPositionWorld","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","zoomW","zoomH","scaleW","scaleH","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","MaterialLoader","getTexture","shading","setTextures","LoaderUtils","decodeText","TextDecoder","decode","fromCharCode","escape","extractUrlBase","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","typedArray","TYPED_ARRAYS","bufferAttributeConstr","bufferAttribute","drawcalls","offsets","ObjectLoader","parseShape","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseAnimations","bufferGeometryLoader","details","geometryShapes","geometryLoader","LegacyJSONLoader","loadImage","currentUrl","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","ImageBitmapLoader","createImageBitmap","fetch","setOptions","res","blob","imageBitmap","catch","ShapePath","subPaths","currentPath","toShapes","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","SphericalHarmonics3","isSphericalHarmonics3","zero","getAt","coeff","addScale","getIrradianceAt","getBasisAt","shBasis","LightProbe","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","performance","Date","now","getElapsedTime","getDelta","newTime","_position$2","_quaternion$3","_scale$1","_orientation","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","getInput","removeFilter","disconnect","getFilter","setFilter","getMasterVolume","setMasterVolume","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setOrientation","Audio","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_pausedAt","filters","getOutput","setNodeSource","audioNode","setMediaElementSource","mediaElement","createMediaElementSource","setMediaStreamSource","mediaStream","createMediaStreamSource","setBuffer","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","pause","getFilters","setFilters","getDetune","getPlaybackRate","getLoop","setLoop","setLoopStart","setLoopEnd","getVolume","setVolume","_position$3","_quaternion$4","_scale$2","_orientation$1","PositionalAudio","panner","createPanner","panningModel","getRefDistance","refDistance","setRefDistance","getRolloffFactor","rolloffFactor","setRolloffFactor","getDistanceModel","distanceModel","setDistanceModel","getMaxDistance","maxDistance","setMaxDistance","setDirectionalCone","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getFrequencyData","getByteFrequencyData","getAverageFrequency","PropertyMixer","binding","mixFunction","_slerp","_select","_lerp","_mixBufferRegion","cumulativeWeight","useCount","referenceCount","accumulate","accuIndex","currentWeight","mix","originalValueOffset","saveOriginalState","getValue","restoreOriginalState","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","root","isAnimationObjectGroup","sanitizeNodeName","matches","results","objectName","objectIndex","propertyIndex","lastDot","searchNodeSubtree","childNode","subTreeNode","_getValue_unavailable","_setValue_unavailable","BindingType","Direct","EntireArray","ArrayElement","HasFromToArray","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","GetterByBindingType","getValue_direct","getValue_array","resolvedProperty","getValue_arrayElement","getValue_toArray","SetterByBindingTypeAndVersioning","setValue_direct","targetObject","setValue_direct_setNeedsUpdate","setValue_direct_setMatrixWorldNeedsUpdate","setValue_array","dest","setValue_array_setNeedsUpdate","setValue_array_setMatrixWorldNeedsUpdate","setValue_arrayElement","setValue_arrayElement_setNeedsUpdate","setValue_arrayElement_setMatrixWorldNeedsUpdate","setValue_fromArray","setValue_fromArray_setNeedsUpdate","setValue_fromArray_setMatrixWorldNeedsUpdate","getValue_unbound","targetArray","sourceArray","nodeProperty","versioning","bindingType","_getValue_unbound","_setValue_unbound","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","nObjects","nCachedObjects","indicesByUUID","parsedPaths","nBindings","knownObject","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","uncache","lastObject","indicesByPath","unsubscribe_","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","interpolant","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","isRunning","_isActiveAction","isScheduled","startAt","setEffectiveWeight","getEffectiveWeight","fadeIn","_scheduleFading","fadeOut","crossFadeFrom","fadeOutAction","warp","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","crossFadeTo","fadeInAction","weightInterpolant","_takeBackControlInterpolant","setEffectiveTimeScale","getEffectiveTimeScale","setDuration","syncWith","halt","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","getMixer","getClip","getRoot","_root","_update","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","_bindAction","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","clipUuid","actionsForClip","_actionsByClip","knownActions","_addInactiveAction","_lendBinding","_lendAction","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","_removeInactiveAction","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","clipAction","optionalRoot","clipObject","existingAction","newAction","stopAllAction","nActions","setTime","timeInSeconds","uncacheClip","actionsToRemove","uncacheRoot","uncacheAction","Uniform","InstancedInterleavedBuffer","Raycaster","PointCloud","ascSort","intersectObject","setFromCamera","coords","intersectObjects","Spherical","other","makeSafe","setFromCartesianCoords","Cylindrical","_vector$6","Box2","_startP","_startEnd","Line3","distanceSq","closestPointToPointParameter","clampToLine","startEnd2","startEnd_startP","ImmediateRenderObject","_v1$5","_v2$3","_normalMatrix$1","_keys","VertexNormalsHelper","nNormals","objGeometry","objPos","objNorm","_vector$7","SpotLightHelper","cone","coneLength","coneWidth","_vector$8","_boneMatrix","_matrixWorldInv","getBoneList","boneList","SkeletonHelper","PointLightHelper","sphereSize","RectAreaLightHelper","positions2","_vector$9","_color1","_color2","HemisphereLightHelper","LightProbeHelper","GridHelper","PolarGridHelper","radials","circles","PositionalAudioHelper","divisionsInnerAngle","divisionsOuterAngle","materialInnerAngle","materialOuterAngle","halfConeInnerAngle","halfConeOuterAngle","_v1$6","_v2$4","_normalMatrix$2","FaceNormalsHelper","_v1$7","_v2$5","_v3$1","DirectionalLightHelper","lightPlane","targetLine","_vector$a","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box$3","BoxHelper","Box3Helper","PlaneHelper","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setColor","AxesHelper","Face4","LineStrip","LinePieces","MeshFaceMaterial","MultiMaterial","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","setDynamic","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","createPointsGeometry","createGeometry","createSpacedPointsGeometry","fromPoints","ClosedSplineCurve3","SplineCurve3","Spline","initFromArray","getControlPointsArray","reparametrizeByArcLength","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","setTexturePath","isIntersectionBox","isIntersectionSphere","random16","nearestPowerOfTwo","nextPowerOfTwo","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBuffer","applyToVector3Array","extractPosition","getPosition","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateByAxis","makeFrustum","isIntersectionLine","isIntersectionPlane","barycoordFromPoint","midpoint","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","computeTangents","getChildByName","renderDepth","getWorldRotation","eulerOrder","useQuaternion","initBones","setLens","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","metal","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","renderReverseSided","renderSingleSided","activeMipMapLevel","standing","audioLoader","getData","updateCubeMap","GeometryUtils","geometry1","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","LensFlare","revision","CubeGeometry"],"mappings":"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","sourcesContent":["(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = global || self, factory(global.THREE = {}));\n}(this, function (exports) { 'use strict';\n\n\t// Polyfills\n\n\tif ( Number.EPSILON === undefined ) {\n\n\t\tNumber.EPSILON = Math.pow( 2, - 52 );\n\n\t}\n\n\tif ( Number.isInteger === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n\n\t\tNumber.isInteger = function ( value ) {\n\n\t\t\treturn typeof value === 'number' && isFinite( value ) && Math.floor( value ) === value;\n\n\t\t};\n\n\t}\n\n\t//\n\n\tif ( Math.sign === undefined ) {\n\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Math/sign\n\n\t\tMath.sign = function ( x ) {\n\n\t\t\treturn ( x < 0 ) ? - 1 : ( x > 0 ) ? 1 : + x;\n\n\t\t};\n\n\t}\n\n\tif ( 'name' in Function.prototype === false ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function/name\n\n\t\tObject.defineProperty( Function.prototype, 'name', {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.toString().match( /^\\s*function\\s*([^\\(\\s]*)/ )[ 1 ];\n\n\t\t\t}\n\n\t\t} );\n\n\t}\n\n\tif ( Object.assign === undefined ) {\n\n\t\t// Missing in IE\n\t\t// https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/assign\n\n\t\tObject.assign = function ( target ) {\n\n\t\t\tif ( target === undefined || target === null ) {\n\n\t\t\t\tthrow new TypeError( 'Cannot convert undefined or null to object' );\n\n\t\t\t}\n\n\t\t\tvar output = Object( target );\n\n\t\t\tfor ( var index = 1; index < arguments.length; index ++ ) {\n\n\t\t\t\tvar source = arguments[ index ];\n\n\t\t\t\tif ( source !== undefined && source !== null ) {\n\n\t\t\t\t\tfor ( var nextKey in source ) {\n\n\t\t\t\t\t\tif ( Object.prototype.hasOwnProperty.call( source, nextKey ) ) {\n\n\t\t\t\t\t\t\toutput[ nextKey ] = source[ nextKey ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t};\n\n\t}\n\n\tvar REVISION = '111dev';\n\tvar MOUSE = { LEFT: 0, MIDDLE: 1, RIGHT: 2, ROTATE: 0, DOLLY: 1, PAN: 2 };\n\tvar TOUCH = { ROTATE: 0, PAN: 1, DOLLY_PAN: 2, DOLLY_ROTATE: 3 };\n\tvar CullFaceNone = 0;\n\tvar CullFaceBack = 1;\n\tvar CullFaceFront = 2;\n\tvar CullFaceFrontBack = 3;\n\tvar FrontFaceDirectionCW = 0;\n\tvar FrontFaceDirectionCCW = 1;\n\tvar BasicShadowMap = 0;\n\tvar PCFShadowMap = 1;\n\tvar PCFSoftShadowMap = 2;\n\tvar VSMShadowMap = 3;\n\tvar FrontSide = 0;\n\tvar BackSide = 1;\n\tvar DoubleSide = 2;\n\tvar FlatShading = 1;\n\tvar SmoothShading = 2;\n\tvar NoColors = 0;\n\tvar FaceColors = 1;\n\tvar VertexColors = 2;\n\tvar NoBlending = 0;\n\tvar NormalBlending = 1;\n\tvar AdditiveBlending = 2;\n\tvar SubtractiveBlending = 3;\n\tvar MultiplyBlending = 4;\n\tvar CustomBlending = 5;\n\tvar AddEquation = 100;\n\tvar SubtractEquation = 101;\n\tvar ReverseSubtractEquation = 102;\n\tvar MinEquation = 103;\n\tvar MaxEquation = 104;\n\tvar ZeroFactor = 200;\n\tvar OneFactor = 201;\n\tvar SrcColorFactor = 202;\n\tvar OneMinusSrcColorFactor = 203;\n\tvar SrcAlphaFactor = 204;\n\tvar OneMinusSrcAlphaFactor = 205;\n\tvar DstAlphaFactor = 206;\n\tvar OneMinusDstAlphaFactor = 207;\n\tvar DstColorFactor = 208;\n\tvar OneMinusDstColorFactor = 209;\n\tvar SrcAlphaSaturateFactor = 210;\n\tvar NeverDepth = 0;\n\tvar AlwaysDepth = 1;\n\tvar LessDepth = 2;\n\tvar LessEqualDepth = 3;\n\tvar EqualDepth = 4;\n\tvar GreaterEqualDepth = 5;\n\tvar GreaterDepth = 6;\n\tvar NotEqualDepth = 7;\n\tvar MultiplyOperation = 0;\n\tvar MixOperation = 1;\n\tvar AddOperation = 2;\n\tvar NoToneMapping = 0;\n\tvar LinearToneMapping = 1;\n\tvar ReinhardToneMapping = 2;\n\tvar Uncharted2ToneMapping = 3;\n\tvar CineonToneMapping = 4;\n\tvar ACESFilmicToneMapping = 5;\n\n\tvar UVMapping = 300;\n\tvar CubeReflectionMapping = 301;\n\tvar CubeRefractionMapping = 302;\n\tvar EquirectangularReflectionMapping = 303;\n\tvar EquirectangularRefractionMapping = 304;\n\tvar SphericalReflectionMapping = 305;\n\tvar CubeUVReflectionMapping = 306;\n\tvar CubeUVRefractionMapping = 307;\n\tvar RepeatWrapping = 1000;\n\tvar ClampToEdgeWrapping = 1001;\n\tvar MirroredRepeatWrapping = 1002;\n\tvar NearestFilter = 1003;\n\tvar NearestMipmapNearestFilter = 1004;\n\tvar NearestMipMapNearestFilter = 1004;\n\tvar NearestMipmapLinearFilter = 1005;\n\tvar NearestMipMapLinearFilter = 1005;\n\tvar LinearFilter = 1006;\n\tvar LinearMipmapNearestFilter = 1007;\n\tvar LinearMipMapNearestFilter = 1007;\n\tvar LinearMipmapLinearFilter = 1008;\n\tvar LinearMipMapLinearFilter = 1008;\n\tvar UnsignedByteType = 1009;\n\tvar ByteType = 1010;\n\tvar ShortType = 1011;\n\tvar UnsignedShortType = 1012;\n\tvar IntType = 1013;\n\tvar UnsignedIntType = 1014;\n\tvar FloatType = 1015;\n\tvar HalfFloatType = 1016;\n\tvar UnsignedShort4444Type = 1017;\n\tvar UnsignedShort5551Type = 1018;\n\tvar UnsignedShort565Type = 1019;\n\tvar UnsignedInt248Type = 1020;\n\tvar AlphaFormat = 1021;\n\tvar RGBFormat = 1022;\n\tvar RGBAFormat = 1023;\n\tvar LuminanceFormat = 1024;\n\tvar LuminanceAlphaFormat = 1025;\n\tvar RGBEFormat = RGBAFormat;\n\tvar DepthFormat = 1026;\n\tvar DepthStencilFormat = 1027;\n\tvar RedFormat = 1028;\n\tvar RGB_S3TC_DXT1_Format = 33776;\n\tvar RGBA_S3TC_DXT1_Format = 33777;\n\tvar RGBA_S3TC_DXT3_Format = 33778;\n\tvar RGBA_S3TC_DXT5_Format = 33779;\n\tvar RGB_PVRTC_4BPPV1_Format = 35840;\n\tvar RGB_PVRTC_2BPPV1_Format = 35841;\n\tvar RGBA_PVRTC_4BPPV1_Format = 35842;\n\tvar RGBA_PVRTC_2BPPV1_Format = 35843;\n\tvar RGB_ETC1_Format = 36196;\n\tvar RGBA_ASTC_4x4_Format = 37808;\n\tvar RGBA_ASTC_5x4_Format = 37809;\n\tvar RGBA_ASTC_5x5_Format = 37810;\n\tvar RGBA_ASTC_6x5_Format = 37811;\n\tvar RGBA_ASTC_6x6_Format = 37812;\n\tvar RGBA_ASTC_8x5_Format = 37813;\n\tvar RGBA_ASTC_8x6_Format = 37814;\n\tvar RGBA_ASTC_8x8_Format = 37815;\n\tvar RGBA_ASTC_10x5_Format = 37816;\n\tvar RGBA_ASTC_10x6_Format = 37817;\n\tvar RGBA_ASTC_10x8_Format = 37818;\n\tvar RGBA_ASTC_10x10_Format = 37819;\n\tvar RGBA_ASTC_12x10_Format = 37820;\n\tvar RGBA_ASTC_12x12_Format = 37821;\n\tvar LoopOnce = 2200;\n\tvar LoopRepeat = 2201;\n\tvar LoopPingPong = 2202;\n\tvar InterpolateDiscrete = 2300;\n\tvar InterpolateLinear = 2301;\n\tvar InterpolateSmooth = 2302;\n\tvar ZeroCurvatureEnding = 2400;\n\tvar ZeroSlopeEnding = 2401;\n\tvar WrapAroundEnding = 2402;\n\tvar TrianglesDrawMode = 0;\n\tvar TriangleStripDrawMode = 1;\n\tvar TriangleFanDrawMode = 2;\n\tvar LinearEncoding = 3000;\n\tvar sRGBEncoding = 3001;\n\tvar GammaEncoding = 3007;\n\tvar RGBEEncoding = 3002;\n\tvar LogLuvEncoding = 3003;\n\tvar RGBM7Encoding = 3004;\n\tvar RGBM16Encoding = 3005;\n\tvar RGBDEncoding = 3006;\n\tvar BasicDepthPacking = 3200;\n\tvar RGBADepthPacking = 3201;\n\tvar TangentSpaceNormalMap = 0;\n\tvar ObjectSpaceNormalMap = 1;\n\n\tvar ZeroStencilOp = 0;\n\tvar KeepStencilOp = 7680;\n\tvar ReplaceStencilOp = 7681;\n\tvar IncrementStencilOp = 7682;\n\tvar DecrementStencilOp = 7683;\n\tvar IncrementWrapStencilOp = 34055;\n\tvar DecrementWrapStencilOp = 34056;\n\tvar InvertStencilOp = 5386;\n\n\tvar NeverStencilFunc = 512;\n\tvar LessStencilFunc = 513;\n\tvar EqualStencilFunc = 514;\n\tvar LessEqualStencilFunc = 515;\n\tvar GreaterStencilFunc = 516;\n\tvar NotEqualStencilFunc = 517;\n\tvar GreaterEqualStencilFunc = 518;\n\tvar AlwaysStencilFunc = 519;\n\n\tvar StaticDrawUsage = 35044;\n\tvar DynamicDrawUsage = 35048;\n\tvar StreamDrawUsage = 35040;\n\tvar StaticReadUsage = 35045;\n\tvar DynamicReadUsage = 35049;\n\tvar StreamReadUsage = 35041;\n\tvar StaticCopyUsage = 35046;\n\tvar DynamicCopyUsage = 35050;\n\tvar StreamCopyUsage = 35042;\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\n\tfunction EventDispatcher() {}\n\n\tObject.assign( EventDispatcher.prototype, {\n\n\t\taddEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { this._listeners = {}; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\tif ( listeners[ type ] === undefined ) {\n\n\t\t\t\tlisteners[ type ] = [];\n\n\t\t\t}\n\n\t\t\tif ( listeners[ type ].indexOf( listener ) === - 1 ) {\n\n\t\t\t\tlisteners[ type ].push( listener );\n\n\t\t\t}\n\n\t\t},\n\n\t\thasEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return false; }\n\n\t\t\tvar listeners = this._listeners;\n\n\t\t\treturn listeners[ type ] !== undefined && listeners[ type ].indexOf( listener ) !== - 1;\n\n\t\t},\n\n\t\tremoveEventListener: function ( type, listener ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tvar index = listenerArray.indexOf( listener );\n\n\t\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\t\tlistenerArray.splice( index, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tdispatchEvent: function ( event ) {\n\n\t\t\tif ( this._listeners === undefined ) { return; }\n\n\t\t\tvar listeners = this._listeners;\n\t\t\tvar listenerArray = listeners[ event.type ];\n\n\t\t\tif ( listenerArray !== undefined ) {\n\n\t\t\t\tevent.target = this;\n\n\t\t\t\tvar array = listenerArray.slice( 0 );\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray[ i ].call( this, event );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _lut = [];\n\n\tfor ( var i = 0; i < 256; i ++ ) {\n\n\t\t_lut[ i ] = ( i < 16 ? '0' : '' ) + ( i ).toString( 16 );\n\n\t}\n\n\tvar _Math = {\n\n\t\tDEG2RAD: Math.PI / 180,\n\t\tRAD2DEG: 180 / Math.PI,\n\n\t\tgenerateUUID: function () {\n\n\t\t\t// http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\t\t\tvar d0 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d1 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d2 = Math.random() * 0xffffffff | 0;\n\t\t\tvar d3 = Math.random() * 0xffffffff | 0;\n\t\t\tvar uuid = _lut[ d0 & 0xff ] + _lut[ d0 >> 8 & 0xff ] + _lut[ d0 >> 16 & 0xff ] + _lut[ d0 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d1 & 0xff ] + _lut[ d1 >> 8 & 0xff ] + '-' + _lut[ d1 >> 16 & 0x0f | 0x40 ] + _lut[ d1 >> 24 & 0xff ] + '-' +\n\t\t\t\t_lut[ d2 & 0x3f | 0x80 ] + _lut[ d2 >> 8 & 0xff ] + '-' + _lut[ d2 >> 16 & 0xff ] + _lut[ d2 >> 24 & 0xff ] +\n\t\t\t\t_lut[ d3 & 0xff ] + _lut[ d3 >> 8 & 0xff ] + _lut[ d3 >> 16 & 0xff ] + _lut[ d3 >> 24 & 0xff ];\n\n\t\t\t// .toUpperCase() here flattens concatenated strings to save heap memory space.\n\t\t\treturn uuid.toUpperCase();\n\n\t\t},\n\n\t\tclamp: function ( value, min, max ) {\n\n\t\t\treturn Math.max( min, Math.min( max, value ) );\n\n\t\t},\n\n\t\t// compute euclidian modulo of m % n\n\t\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\t\teuclideanModulo: function ( n, m ) {\n\n\t\t\treturn ( ( n % m ) + m ) % m;\n\n\t\t},\n\n\t\t// Linear mapping from range <a1, a2> to range <b1, b2>\n\n\t\tmapLinear: function ( x, a1, a2, b1, b2 ) {\n\n\t\t\treturn b1 + ( x - a1 ) * ( b2 - b1 ) / ( a2 - a1 );\n\n\t\t},\n\n\t\t// https://en.wikipedia.org/wiki/Linear_interpolation\n\n\t\tlerp: function ( x, y, t ) {\n\n\t\t\treturn ( 1 - t ) * x + t * y;\n\n\t\t},\n\n\t\t// http://en.wikipedia.org/wiki/Smoothstep\n\n\t\tsmoothstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * ( 3 - 2 * x );\n\n\t\t},\n\n\t\tsmootherstep: function ( x, min, max ) {\n\n\t\t\tif ( x <= min ) { return 0; }\n\t\t\tif ( x >= max ) { return 1; }\n\n\t\t\tx = ( x - min ) / ( max - min );\n\n\t\t\treturn x * x * x * ( x * ( x * 6 - 15 ) + 10 );\n\n\t\t},\n\n\t\t// Random integer from <low, high> interval\n\n\t\trandInt: function ( low, high ) {\n\n\t\t\treturn low + Math.floor( Math.random() * ( high - low + 1 ) );\n\n\t\t},\n\n\t\t// Random float from <low, high> interval\n\n\t\trandFloat: function ( low, high ) {\n\n\t\t\treturn low + Math.random() * ( high - low );\n\n\t\t},\n\n\t\t// Random float from <-range/2, range/2> interval\n\n\t\trandFloatSpread: function ( range ) {\n\n\t\t\treturn range * ( 0.5 - Math.random() );\n\n\t\t},\n\n\t\tdegToRad: function ( degrees ) {\n\n\t\t\treturn degrees * _Math.DEG2RAD;\n\n\t\t},\n\n\t\tradToDeg: function ( radians ) {\n\n\t\t\treturn radians * _Math.RAD2DEG;\n\n\t\t},\n\n\t\tisPowerOfTwo: function ( value ) {\n\n\t\t\treturn ( value & ( value - 1 ) ) === 0 && value !== 0;\n\n\t\t},\n\n\t\tceilPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.ceil( Math.log( value ) / Math.LN2 ) );\n\n\t\t},\n\n\t\tfloorPowerOfTwo: function ( value ) {\n\n\t\t\treturn Math.pow( 2, Math.floor( Math.log( value ) / Math.LN2 ) );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author egraether / http://egraether.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tfunction Vector2( x, y ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\n\t}\n\n\tObject.defineProperties( Vector2.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.x = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.y = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tisVector2: true,\n\n\t\tset: function ( x, y ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v ) {\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ];\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y;\n\n\t\t},\n\n\t\tcross: function ( v ) {\n\n\t\t\treturn this.x * v.y - this.y * v.x;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tangle: function () {\n\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\n\t\t\tvar angle = Math.atan2( this.y, this.x );\n\n\t\t\tif ( angle < 0 ) { angle += 2 * Math.PI; }\n\n\t\t\treturn angle;\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector2: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateAround: function ( center, angle ) {\n\n\t\t\tvar c = Math.cos( angle ), s = Math.sin( angle );\n\n\t\t\tvar x = this.x - center.x;\n\t\t\tvar y = this.y - center.y;\n\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Quaternion( x, y, z, w ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.assign( Quaternion, {\n\n\t\tslerp: function ( qa, qb, qm, t ) {\n\n\t\t\treturn qm.copy( qa ).slerp( qb, t );\n\n\t\t},\n\n\t\tslerpFlat: function ( dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t ) {\n\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\n\t\t\tvar x0 = src0[ srcOffset0 + 0 ],\n\t\t\t\ty0 = src0[ srcOffset0 + 1 ],\n\t\t\t\tz0 = src0[ srcOffset0 + 2 ],\n\t\t\t\tw0 = src0[ srcOffset0 + 3 ],\n\n\t\t\t\tx1 = src1[ srcOffset1 + 0 ],\n\t\t\t\ty1 = src1[ srcOffset1 + 1 ],\n\t\t\t\tz1 = src1[ srcOffset1 + 2 ],\n\t\t\t\tw1 = src1[ srcOffset1 + 3 ];\n\n\t\t\tif ( w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1 ) {\n\n\t\t\t\tvar s = 1 - t,\n\n\t\t\t\t\tcos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\n\t\t\t\t\tdir = ( cos >= 0 ? 1 : - 1 ),\n\t\t\t\t\tsqrSin = 1 - cos * cos;\n\n\t\t\t\t// Skip the Slerp for tiny steps to avoid numeric problems:\n\t\t\t\tif ( sqrSin > Number.EPSILON ) {\n\n\t\t\t\t\tvar sin = Math.sqrt( sqrSin ),\n\t\t\t\t\t\tlen = Math.atan2( sin, cos * dir );\n\n\t\t\t\t\ts = Math.sin( s * len ) / sin;\n\t\t\t\t\tt = Math.sin( t * len ) / sin;\n\n\t\t\t\t}\n\n\t\t\t\tvar tDir = t * dir;\n\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir;\n\n\t\t\t\t// Normalize in case we just did a lerp:\n\t\t\t\tif ( s === 1 - t ) {\n\n\t\t\t\t\tvar f = 1 / Math.sqrt( x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0 );\n\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tdst[ dstOffset ] = x0;\n\t\t\tdst[ dstOffset + 1 ] = y0;\n\t\t\tdst[ dstOffset + 2 ] = z0;\n\t\t\tdst[ dstOffset + 3 ] = w0;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Quaternion.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tw: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._w = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Quaternion.prototype, {\n\n\t\tisQuaternion: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._w );\n\n\t\t},\n\n\t\tcopy: function ( quaternion ) {\n\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromEuler: function ( euler, update ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tthrow new Error( 'THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar x = euler._x, y = euler._y, z = euler._z, order = euler.order;\n\n\t\t\t// http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tvar cos = Math.cos;\n\t\t\tvar sin = Math.sin;\n\n\t\t\tvar c1 = cos( x / 2 );\n\t\t\tvar c2 = cos( y / 2 );\n\t\t\tvar c3 = cos( z / 2 );\n\n\t\t\tvar s1 = sin( x / 2 );\n\t\t\tvar s2 = sin( y / 2 );\n\t\t\tvar s3 = sin( z / 2 );\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\n\t\t\t}\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tvar halfAngle = angle / 2, s = Math.sin( halfAngle );\n\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos( halfAngle );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ],\n\n\t\t\t\ttrace = m11 + m22 + m33,\n\t\t\t\ts;\n\n\t\t\tif ( trace > 0 ) {\n\n\t\t\t\ts = 0.5 / Math.sqrt( trace + 1.0 );\n\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = ( m32 - m23 ) * s;\n\t\t\t\tthis._y = ( m13 - m31 ) * s;\n\t\t\t\tthis._z = ( m21 - m12 ) * s;\n\n\t\t\t} else if ( m11 > m22 && m11 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m11 - m22 - m33 );\n\n\t\t\t\tthis._w = ( m32 - m23 ) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = ( m12 + m21 ) / s;\n\t\t\t\tthis._z = ( m13 + m31 ) / s;\n\n\t\t\t} else if ( m22 > m33 ) {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m22 - m11 - m33 );\n\n\t\t\t\tthis._w = ( m13 - m31 ) / s;\n\t\t\t\tthis._x = ( m12 + m21 ) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = ( m23 + m32 ) / s;\n\n\t\t\t} else {\n\n\t\t\t\ts = 2.0 * Math.sqrt( 1.0 + m33 - m11 - m22 );\n\n\t\t\t\tthis._w = ( m21 - m12 ) / s;\n\t\t\t\tthis._x = ( m13 + m31 ) / s;\n\t\t\t\tthis._y = ( m23 + m32 ) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromUnitVectors: function ( vFrom, vTo ) {\n\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\n\t\t\tvar EPS = 0.000001;\n\n\t\t\tvar r = vFrom.dot( vTo ) + 1;\n\n\t\t\tif ( r < EPS ) {\n\n\t\t\t\tr = 0;\n\n\t\t\t\tif ( Math.abs( vFrom.x ) > Math.abs( vFrom.z ) ) {\n\n\t\t\t\t\tthis._x = - vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = - vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tangleTo: function ( q ) {\n\n\t\t\treturn 2 * Math.acos( Math.abs( _Math.clamp( this.dot( q ), - 1, 1 ) ) );\n\n\t\t},\n\n\t\trotateTowards: function ( q, step ) {\n\n\t\t\tvar angle = this.angleTo( q );\n\n\t\t\tif ( angle === 0 ) { return this; }\n\n\t\t\tvar t = Math.min( 1, step / angle );\n\n\t\t\tthis.slerp( q, t );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tinverse: function () {\n\n\t\t\t// quaternion is assumed to have unit length\n\n\t\t\treturn this.conjugate();\n\n\t\t},\n\n\t\tconjugate: function () {\n\n\t\t\tthis._x *= - 1;\n\t\t\tthis._y *= - 1;\n\t\t\tthis._z *= - 1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tvar l = this.length();\n\n\t\t\tif ( l === 0 ) {\n\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\n\t\t\t} else {\n\n\t\t\t\tl = 1 / l;\n\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( q, p ) {\n\n\t\t\tif ( p !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.' );\n\t\t\t\treturn this.multiplyQuaternions( q, p );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions( this, q );\n\n\t\t},\n\n\t\tpremultiply: function ( q ) {\n\n\t\t\treturn this.multiplyQuaternions( q, this );\n\n\t\t},\n\n\t\tmultiplyQuaternions: function ( a, b ) {\n\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\n\t\t\tvar qax = a._x, qay = a._y, qaz = a._z, qaw = a._w;\n\t\t\tvar qbx = b._x, qby = b._y, qbz = b._z, qbw = b._w;\n\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tslerp: function ( qb, t ) {\n\n\t\t\tif ( t === 0 ) { return this; }\n\t\t\tif ( t === 1 ) { return this.copy( qb ); }\n\n\t\t\tvar x = this._x, y = this._y, z = this._z, w = this._w;\n\n\t\t\t// http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tvar cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif ( cosHalfTheta < 0 ) {\n\n\t\t\t\tthis._w = - qb._w;\n\t\t\t\tthis._x = - qb._x;\n\t\t\t\tthis._y = - qb._y;\n\t\t\t\tthis._z = - qb._z;\n\n\t\t\t\tcosHalfTheta = - cosHalfTheta;\n\n\t\t\t} else {\n\n\t\t\t\tthis.copy( qb );\n\n\t\t\t}\n\n\t\t\tif ( cosHalfTheta >= 1.0 ) {\n\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif ( sqrSinHalfTheta <= Number.EPSILON ) {\n\n\t\t\t\tvar s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\n\t\t\t\tthis.normalize();\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar sinHalfTheta = Math.sqrt( sqrSinHalfTheta );\n\t\t\tvar halfTheta = Math.atan2( sinHalfTheta, cosHalfTheta );\n\t\t\tvar ratioA = Math.sin( ( 1 - t ) * halfTheta ) / sinHalfTheta,\n\t\t\t\tratioB = Math.sin( t * halfTheta ) / sinHalfTheta;\n\n\t\t\tthis._w = ( w * ratioA + this._w * ratioB );\n\t\t\tthis._x = ( x * ratioA + this._x * ratioB );\n\t\t\tthis._y = ( y * ratioA + this._y * ratioB );\n\t\t\tthis._z = ( z * ratioA + this._z * ratioB );\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( quaternion ) {\n\n\t\t\treturn ( quaternion._x === this._x ) && ( quaternion._y === this._y ) && ( quaternion._z === this._z ) && ( quaternion._w === this._w );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis._x = array[ offset ];\n\t\t\tthis._y = array[ offset + 1 ];\n\t\t\tthis._z = array[ offset + 2 ];\n\t\t\tthis._w = array[ offset + 3 ];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector = new Vector3();\n\tvar _quaternion = new Quaternion();\n\n\tfunction Vector3( x, y, z ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\n\t}\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tisVector3: true,\n\n\t\tset: function ( x, y, z ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.' );\n\t\t\t\treturn this.multiplyVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromEuler( euler ) );\n\n\t\t},\n\n\t\tapplyAxisAngle: function ( axis, angle ) {\n\n\t\t\treturn this.applyQuaternion( _quaternion.setFromAxisAngle( axis, angle ) );\n\n\t\t},\n\n\t\tapplyMatrix3: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 3 ] * y + e[ 6 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 4 ] * y + e[ 7 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 5 ] * y + e[ 8 ] * z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tvar w = 1 / ( e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] );\n\n\t\t\tthis.x = ( e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] ) * w;\n\t\t\tthis.y = ( e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] ) * w;\n\t\t\tthis.z = ( e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] ) * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar qx = q.x, qy = q.y, qz = q.z, qw = q.w;\n\n\t\t\t// calculate quat * vector\n\n\t\t\tvar ix = qw * x + qy * z - qz * y;\n\t\t\tvar iy = qw * y + qz * x - qx * z;\n\t\t\tvar iz = qw * z + qx * y - qy * x;\n\t\t\tvar iw = - qx * x - qy * y - qz * z;\n\n\t\t\t// calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * - qx + iy * - qz - iz * - qy;\n\t\t\tthis.y = iy * qw + iw * - qy + iz * - qx - ix * - qz;\n\t\t\tthis.z = iz * qw + iw * - qz + ix * - qy - iy * - qx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.matrixWorldInverse ).applyMatrix4( camera.projectionMatrix );\n\n\t\t},\n\n\t\tunproject: function ( camera ) {\n\n\t\t\treturn this.applyMatrix4( camera.projectionMatrixInverse ).applyMatrix4( camera.matrixWorld );\n\n\t\t},\n\n\t\ttransformDirection: function ( m ) {\n\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\n\t\t\tvar x = this.x, y = this.y, z = this.z;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z;\n\n\t\t\treturn this.normalize();\n\n\t\t},\n\n\t\tdivide: function ( v ) {\n\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\n\t\t},\n\n\t\t// TODO lengthSquared?\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tcross: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.' );\n\t\t\t\treturn this.crossVectors( v, w );\n\n\t\t\t}\n\n\t\t\treturn this.crossVectors( this, v );\n\n\t\t},\n\n\t\tcrossVectors: function ( a, b ) {\n\n\t\t\tvar ax = a.x, ay = a.y, az = a.z;\n\t\t\tvar bx = b.x, by = b.y, bz = b.z;\n\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tprojectOnVector: function ( v ) {\n\n\t\t\t// v cannot be the zero v\n\n\t\t\tvar scalar = v.dot( this ) / v.lengthSq();\n\n\t\t\treturn this.copy( v ).multiplyScalar( scalar );\n\n\t\t},\n\n\t\tprojectOnPlane: function ( planeNormal ) {\n\n\t\t\t_vector.copy( this ).projectOnVector( planeNormal );\n\n\t\t\treturn this.sub( _vector );\n\n\t\t},\n\n\t\treflect: function ( normal ) {\n\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\n\t\t\treturn this.sub( _vector.copy( normal ).multiplyScalar( 2 * this.dot( normal ) ) );\n\n\t\t},\n\n\t\tangleTo: function ( v ) {\n\n\t\t\tvar denominator = Math.sqrt( this.lengthSq() * v.lengthSq() );\n\n\t\t\tif ( denominator === 0 ) { console.error( 'THREE.Vector3: angleTo() can\\'t handle zero length vectors.' ); }\n\n\t\t\tvar theta = this.dot( v ) / denominator;\n\n\t\t\t// clamp, to handle numerical problems\n\n\t\t\treturn Math.acos( _Math.clamp( theta, - 1, 1 ) );\n\n\t\t},\n\n\t\tdistanceTo: function ( v ) {\n\n\t\t\treturn Math.sqrt( this.distanceToSquared( v ) );\n\n\t\t},\n\n\t\tdistanceToSquared: function ( v ) {\n\n\t\t\tvar dx = this.x - v.x, dy = this.y - v.y, dz = this.z - v.z;\n\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\n\t\t},\n\n\t\tmanhattanDistanceTo: function ( v ) {\n\n\t\t\treturn Math.abs( this.x - v.x ) + Math.abs( this.y - v.y ) + Math.abs( this.z - v.z );\n\n\t\t},\n\n\t\tsetFromSpherical: function ( s ) {\n\n\t\t\treturn this.setFromSphericalCoords( s.radius, s.phi, s.theta );\n\n\t\t},\n\n\t\tsetFromSphericalCoords: function ( radius, phi, theta ) {\n\n\t\t\tvar sinPhiRadius = Math.sin( phi ) * radius;\n\n\t\t\tthis.x = sinPhiRadius * Math.sin( theta );\n\t\t\tthis.y = Math.cos( phi ) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCylindrical: function ( c ) {\n\n\t\t\treturn this.setFromCylindricalCoords( c.radius, c.theta, c.y );\n\n\t\t},\n\n\t\tsetFromCylindricalCoords: function ( radius, theta, y ) {\n\n\t\t\tthis.x = radius * Math.sin( theta );\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos( theta );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixPosition: function ( m ) {\n\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 12 ];\n\t\t\tthis.y = e[ 13 ];\n\t\t\tthis.z = e[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixScale: function ( m ) {\n\n\t\t\tvar sx = this.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar sy = this.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar sz = this.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrixColumn: function ( m, index ) {\n\n\t\t\treturn this.fromArray( m.elements, index * 4 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector3: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t * @author tschw\n\t */\n\n\tvar _vector$1 = new Vector3();\n\n\tfunction Matrix3() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0,\n\t\t\t0, 1, 0,\n\t\t\t0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tisMatrix3: true,\n\n\t\tset: function ( n11, n12, n13, n21, n22, n23, n31, n32, n33 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 1 ] = n21; te[ 2 ] = n31;\n\t\t\tte[ 3 ] = n12; te[ 4 ] = n22; te[ 5 ] = n32;\n\t\t\tte[ 6 ] = n13; te[ 7 ] = n23; te[ 8 ] = n33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0,\n\t\t\t\t0, 1, 0,\n\t\t\t\t0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ];\n\t\t\tte[ 3 ] = me[ 3 ]; te[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ];\n\t\t\tte[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ]; te[ 8 ] = me[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix4: function ( m ) {\n\n\t\t\tvar me = m.elements;\n\n\t\t\tthis.set(\n\n\t\t\t\tme[ 0 ], me[ 4 ], me[ 8 ],\n\t\t\t\tme[ 1 ], me[ 5 ], me[ 9 ],\n\t\t\t\tme[ 2 ], me[ 6 ], me[ 10 ]\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t_vector$1.x = attribute.getX( i );\n\t\t\t\t_vector$1.y = attribute.getY( i );\n\t\t\t\t_vector$1.z = attribute.getZ( i );\n\n\t\t\t\t_vector$1.applyMatrix3( this );\n\n\t\t\t\tattribute.setXYZ( i, _vector$1.x, _vector$1.y, _vector$1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t},\n\n\t\tmultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 3 ], a13 = ae[ 6 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 4 ], a23 = ae[ 7 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 5 ], a33 = ae[ 8 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 3 ], b13 = be[ 6 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 4 ], b23 = be[ 7 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 5 ], b33 = be[ 8 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[ 3 ] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[ 6 ] = a11 * b13 + a12 * b23 + a13 * b33;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[ 4 ] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[ 7 ] = a21 * b13 + a22 * b23 + a23 * b33;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[ 5 ] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[ 8 ] = a31 * b13 + a32 * b23 + a33 * b33;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 3 ] *= s; te[ 6 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 4 ] *= s; te[ 7 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 5 ] *= s; te[ 8 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a = te[ 0 ], b = te[ 1 ], c = te[ 2 ],\n\t\t\t\td = te[ 3 ], e = te[ 4 ], f = te[ 5 ],\n\t\t\t\tg = te[ 6 ], h = te[ 7 ], i = te[ 8 ];\n\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\n\t\t},\n\n\t\tgetInverse: function ( matrix, throwOnDegenerate ) {\n\n\t\t\tif ( matrix && matrix.isMatrix4 ) {\n\n\t\t\t\tconsole.error( \"THREE.Matrix3: .getInverse() no longer takes a Matrix4 argument.\" );\n\n\t\t\t}\n\n\t\t\tvar me = matrix.elements,\n\t\t\t\tte = this.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ],\n\t\t\t\tn12 = me[ 3 ], n22 = me[ 4 ], n32 = me[ 5 ],\n\t\t\t\tn13 = me[ 6 ], n23 = me[ 7 ], n33 = me[ 8 ],\n\n\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\n\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix3: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n31 * n23 - n33 * n21 ) * detInv;\n\t\t\tte[ 2 ] = ( n32 * n21 - n31 * n22 ) * detInv;\n\n\t\t\tte[ 3 ] = t12 * detInv;\n\t\t\tte[ 4 ] = ( n33 * n11 - n31 * n13 ) * detInv;\n\t\t\tte[ 5 ] = ( n31 * n12 - n32 * n11 ) * detInv;\n\n\t\t\tte[ 6 ] = t13 * detInv;\n\t\t\tte[ 7 ] = ( n21 * n13 - n23 * n11 ) * detInv;\n\t\t\tte[ 8 ] = ( n22 * n11 - n21 * n12 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar tmp, m = this.elements;\n\n\t\t\ttmp = m[ 1 ]; m[ 1 ] = m[ 3 ]; m[ 3 ] = tmp;\n\t\t\ttmp = m[ 2 ]; m[ 2 ] = m[ 6 ]; m[ 6 ] = tmp;\n\t\t\ttmp = m[ 5 ]; m[ 5 ] = m[ 7 ]; m[ 7 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetNormalMatrix: function ( matrix4 ) {\n\n\t\t\treturn this.setFromMatrix4( matrix4 ).getInverse( this ).transpose();\n\n\t\t},\n\n\t\ttransposeIntoArray: function ( r ) {\n\n\t\t\tvar m = this.elements;\n\n\t\t\tr[ 0 ] = m[ 0 ];\n\t\t\tr[ 1 ] = m[ 3 ];\n\t\t\tr[ 2 ] = m[ 6 ];\n\t\t\tr[ 3 ] = m[ 1 ];\n\t\t\tr[ 4 ] = m[ 4 ];\n\t\t\tr[ 5 ] = m[ 7 ];\n\t\t\tr[ 6 ] = m[ 2 ];\n\t\t\tr[ 7 ] = m[ 5 ];\n\t\t\tr[ 8 ] = m[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetUvTransform: function ( tx, ty, sx, sy, rotation, cx, cy ) {\n\n\t\t\tvar c = Math.cos( rotation );\n\t\t\tvar s = Math.sin( rotation );\n\n\t\t\tthis.set(\n\t\t\t\tsx * c, sx * s, - sx * ( c * cx + s * cy ) + cx + tx,\n\t\t\t\t- sy * s, sy * c, - sy * ( - s * cx + c * cy ) + cy + ty,\n\t\t\t\t0, 0, 1\n\t\t\t);\n\n\t\t},\n\n\t\tscale: function ( sx, sy ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= sx; te[ 3 ] *= sx; te[ 6 ] *= sx;\n\t\t\tte[ 1 ] *= sy; te[ 4 ] *= sy; te[ 7 ] *= sy;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotate: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta );\n\t\t\tvar s = Math.sin( theta );\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = te[ 0 ], a12 = te[ 3 ], a13 = te[ 6 ];\n\t\t\tvar a21 = te[ 1 ], a22 = te[ 4 ], a23 = te[ 7 ];\n\n\t\t\tte[ 0 ] = c * a11 + s * a21;\n\t\t\tte[ 3 ] = c * a12 + s * a22;\n\t\t\tte[ 6 ] = c * a13 + s * a23;\n\n\t\t\tte[ 1 ] = - s * a11 + c * a21;\n\t\t\tte[ 4 ] = - s * a12 + c * a22;\n\t\t\tte[ 7 ] = - s * a13 + c * a23;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( tx, ty ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] += tx * te[ 2 ]; te[ 3 ] += tx * te[ 5 ]; te[ 6 ] += tx * te[ 8 ];\n\t\t\tte[ 1 ] += ty * te[ 2 ]; te[ 4 ] += ty * te[ 5 ]; te[ 7 ] += ty * te[ 8 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar _canvas;\n\n\tvar ImageUtils = {\n\n\t\tgetDataURL: function ( image ) {\n\n\t\t\tvar canvas;\n\n\t\t\tif ( typeof HTMLCanvasElement == 'undefined' ) {\n\n\t\t\t\treturn image.src;\n\n\t\t\t} else if ( image instanceof HTMLCanvasElement ) {\n\n\t\t\t\tcanvas = image;\n\n\t\t\t} else {\n\n\t\t\t\tif ( _canvas === undefined ) { _canvas = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ); }\n\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tvar context = _canvas.getContext( '2d' );\n\n\t\t\t\tif ( image instanceof ImageData ) {\n\n\t\t\t\t\tcontext.putImageData( image, 0, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontext.drawImage( image, 0, 0, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\n\t\t\t}\n\n\t\t\tif ( canvas.width > 2048 || canvas.height > 2048 ) {\n\n\t\t\t\treturn canvas.toDataURL( 'image/jpeg', 0.6 );\n\n\t\t\t} else {\n\n\t\t\t\treturn canvas.toDataURL( 'image/png' );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t */\n\n\tvar textureId = 0;\n\n\tfunction Texture( image, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\tObject.defineProperty( this, 'id', { value: textureId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\n\t\tthis.image = image !== undefined ? image : Texture.DEFAULT_IMAGE;\n\t\tthis.mipmaps = [];\n\n\t\tthis.mapping = mapping !== undefined ? mapping : Texture.DEFAULT_MAPPING;\n\n\t\tthis.wrapS = wrapS !== undefined ? wrapS : ClampToEdgeWrapping;\n\t\tthis.wrapT = wrapT !== undefined ? wrapT : ClampToEdgeWrapping;\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearMipmapLinearFilter;\n\n\t\tthis.anisotropy = anisotropy !== undefined ? anisotropy : 1;\n\n\t\tthis.format = format !== undefined ? format : RGBAFormat;\n\t\tthis.type = type !== undefined ? type : UnsignedByteType;\n\n\t\tthis.offset = new Vector2( 0, 0 );\n\t\tthis.repeat = new Vector2( 1, 1 );\n\t\tthis.center = new Vector2( 0, 0 );\n\t\tthis.rotation = 0;\n\n\t\tthis.matrixAutoUpdate = true;\n\t\tthis.matrix = new Matrix3();\n\n\t\tthis.generateMipmaps = true;\n\t\tthis.premultiplyAlpha = false;\n\t\tthis.flipY = true;\n\t\tthis.unpackAlignment = 4;\t// valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\n\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t//\n\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\t\tthis.encoding = encoding !== undefined ? encoding : LinearEncoding;\n\n\t\tthis.version = 0;\n\t\tthis.onUpdate = null;\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\n\tTexture.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Texture,\n\n\t\tisTexture: true,\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.setUvTransform( this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice( 0 );\n\n\t\t\tthis.mapping = source.mapping;\n\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\n\t\t\tthis.anisotropy = source.anisotropy;\n\n\t\t\tthis.format = source.format;\n\t\t\tthis.type = source.type;\n\n\t\t\tthis.offset.copy( source.offset );\n\t\t\tthis.repeat.copy( source.repeat );\n\t\t\tthis.center.copy( source.center );\n\t\t\tthis.rotation = source.rotation;\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy( source.matrix );\n\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( ! isRootObject && meta.textures[ this.uuid ] !== undefined ) {\n\n\t\t\t\treturn meta.textures[ this.uuid ];\n\n\t\t\t}\n\n\t\t\tvar output = {\n\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\n\t\t\t\tmapping: this.mapping,\n\n\t\t\t\trepeat: [ this.repeat.x, this.repeat.y ],\n\t\t\t\toffset: [ this.offset.x, this.offset.y ],\n\t\t\t\tcenter: [ this.center.x, this.center.y ],\n\t\t\t\trotation: this.rotation,\n\n\t\t\t\twrap: [ this.wrapS, this.wrapT ],\n\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\n\t\t\t\tflipY: this.flipY,\n\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\n\t\t\t};\n\n\t\t\tif ( this.image !== undefined ) {\n\n\t\t\t\t// TODO: Move to THREE.Image\n\n\t\t\t\tvar image = this.image;\n\n\t\t\t\tif ( image.uuid === undefined ) {\n\n\t\t\t\t\timage.uuid = _Math.generateUUID(); // UGH\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! isRootObject && meta.images[ image.uuid ] === undefined ) {\n\n\t\t\t\t\tvar url;\n\n\t\t\t\t\tif ( Array.isArray( image ) ) {\n\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor ( var i = 0, l = image.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\turl.push( ImageUtils.getDataURL( image[ i ] ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// process single image\n\n\t\t\t\t\t\turl = ImageUtils.getDataURL( image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[ image.uuid ] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\n\t\t\t}\n\n\t\t\tif ( ! isRootObject ) {\n\n\t\t\t\tmeta.textures[ this.uuid ] = output;\n\n\t\t\t}\n\n\t\t\treturn output;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t},\n\n\t\ttransformUv: function ( uv ) {\n\n\t\t\tif ( this.mapping !== UVMapping ) { return uv; }\n\n\t\t\tuv.applyMatrix3( this.matrix );\n\n\t\t\tif ( uv.x < 0 || uv.x > 1 ) {\n\n\t\t\t\tswitch ( this.wrapS ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.x ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.x = Math.ceil( uv.x ) - uv.x;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor( uv.x );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( uv.y < 0 || uv.y > 1 ) {\n\n\t\t\t\tswitch ( this.wrapT ) {\n\n\t\t\t\t\tcase RepeatWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\n\t\t\t\t\t\tif ( Math.abs( Math.floor( uv.y ) % 2 ) === 1 ) {\n\n\t\t\t\t\t\t\tuv.y = Math.ceil( uv.y ) - uv.y;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor( uv.y );\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.flipY ) {\n\n\t\t\t\tuv.y = 1 - uv.y;\n\n\t\t\t}\n\n\t\t\treturn uv;\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Texture.prototype, \"needsUpdate\", {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author egraether / http://egraether.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Vector4( x, y, z, w ) {\n\n\t\tthis.x = x || 0;\n\t\tthis.y = y || 0;\n\t\tthis.z = z || 0;\n\t\tthis.w = ( w !== undefined ) ? w : 1;\n\n\t}\n\n\tObject.defineProperties( Vector4.prototype, {\n\n\t\t\"width\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.z = value;\n\n\t\t\t}\n\n\t\t},\n\n\t\t\"height\": {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.w;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis.w = value;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tisVector4: true,\n\n\t\tset: function ( x, y, z, w ) {\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetX: function ( x ) {\n\n\t\t\tthis.x = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( y ) {\n\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( z ) {\n\n\t\t\tthis.z = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( w ) {\n\n\t\t\tthis.w = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponent: function ( index, value ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: this.x = value; break;\n\t\t\t\tcase 1: this.y = value; break;\n\t\t\t\tcase 2: this.z = value; break;\n\t\t\t\tcase 3: this.w = value; break;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetComponent: function ( index ) {\n\n\t\t\tswitch ( index ) {\n\n\t\t\t\tcase 0: return this.x;\n\t\t\t\tcase 1: return this.y;\n\t\t\t\tcase 2: return this.z;\n\t\t\t\tcase 3: return this.w;\n\t\t\t\tdefault: throw new Error( 'index is out of range: ' + index );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.x, this.y, this.z, this.w );\n\n\t\t},\n\n\t\tcopy: function ( v ) {\n\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = ( v.w !== undefined ) ? v.w : 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.' );\n\t\t\t\treturn this.addVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScaledVector: function ( v, s ) {\n\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( v, w ) {\n\n\t\t\tif ( w !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.' );\n\t\t\t\treturn this.subVectors( v, w );\n\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubScalar: function ( s ) {\n\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsubVectors: function ( a, b ) {\n\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( scalar ) {\n\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( m ) {\n\n\t\t\tvar x = this.x, y = this.y, z = this.z, w = this.w;\n\t\t\tvar e = m.elements;\n\n\t\t\tthis.x = e[ 0 ] * x + e[ 4 ] * y + e[ 8 ] * z + e[ 12 ] * w;\n\t\t\tthis.y = e[ 1 ] * x + e[ 5 ] * y + e[ 9 ] * z + e[ 13 ] * w;\n\t\t\tthis.z = e[ 2 ] * x + e[ 6 ] * y + e[ 10 ] * z + e[ 14 ] * w;\n\t\t\tthis.w = e[ 3 ] * x + e[ 7 ] * y + e[ 11 ] * z + e[ 15 ] * w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdivideScalar: function ( scalar ) {\n\n\t\t\treturn this.multiplyScalar( 1 / scalar );\n\n\t\t},\n\n\t\tsetAxisAngleFromQuaternion: function ( q ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\n\t\t\t// q is assumed to be normalized\n\n\t\t\tthis.w = 2 * Math.acos( q.w );\n\n\t\t\tvar s = Math.sqrt( 1 - q.w * q.w );\n\n\t\t\tif ( s < 0.0001 ) {\n\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetAxisAngleFromRotationMatrix: function ( m ) {\n\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar angle, x, y, z,\t\t// variables for result\n\t\t\t\tepsilon = 0.01,\t\t// margin to allow for rounding errors\n\t\t\t\tepsilon2 = 0.1,\t\t// margin to distinguish between 0 and 180 degrees\n\n\t\t\t\tte = m.elements,\n\n\t\t\t\tm11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ],\n\t\t\t\tm21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ],\n\t\t\t\tm31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\tif ( ( Math.abs( m12 - m21 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m13 - m31 ) < epsilon ) &&\n\t\t\t     ( Math.abs( m23 - m32 ) < epsilon ) ) {\n\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\n\t\t\t\tif ( ( Math.abs( m12 + m21 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m13 + m31 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m23 + m32 ) < epsilon2 ) &&\n\t\t\t\t     ( Math.abs( m11 + m22 + m33 - 3 ) < epsilon2 ) ) {\n\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\n\t\t\t\t\tthis.set( 1, 0, 0, 0 );\n\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\n\t\t\t\t}\n\n\t\t\t\t// otherwise this singularity is angle = 180\n\n\t\t\t\tangle = Math.PI;\n\n\t\t\t\tvar xx = ( m11 + 1 ) / 2;\n\t\t\t\tvar yy = ( m22 + 1 ) / 2;\n\t\t\t\tvar zz = ( m33 + 1 ) / 2;\n\t\t\t\tvar xy = ( m12 + m21 ) / 4;\n\t\t\t\tvar xz = ( m13 + m31 ) / 4;\n\t\t\t\tvar yz = ( m23 + m32 ) / 4;\n\n\t\t\t\tif ( ( xx > yy ) && ( xx > zz ) ) {\n\n\t\t\t\t\t// m11 is the largest diagonal term\n\n\t\t\t\t\tif ( xx < epsilon ) {\n\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tx = Math.sqrt( xx );\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( yy > zz ) {\n\n\t\t\t\t\t// m22 is the largest diagonal term\n\n\t\t\t\t\tif ( yy < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ty = Math.sqrt( yy );\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\n\t\t\t\t\tif ( zz < epsilon ) {\n\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tz = Math.sqrt( zz );\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.set( x, y, z, angle );\n\n\t\t\t\treturn this; // return 180 deg rotation\n\n\t\t\t}\n\n\t\t\t// as we have reached here there are no singularities so we can handle normally\n\n\t\t\tvar s = Math.sqrt( ( m32 - m23 ) * ( m32 - m23 ) +\n\t\t\t                   ( m13 - m31 ) * ( m13 - m31 ) +\n\t\t\t                   ( m21 - m12 ) * ( m21 - m12 ) ); // used to normalize\n\n\t\t\tif ( Math.abs( s ) < 0.001 ) { s = 1; }\n\n\t\t\t// prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = ( m32 - m23 ) / s;\n\t\t\tthis.y = ( m13 - m31 ) / s;\n\t\t\tthis.z = ( m21 - m12 ) / s;\n\t\t\tthis.w = Math.acos( ( m11 + m22 + m33 - 1 ) / 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmin: function ( v ) {\n\n\t\t\tthis.x = Math.min( this.x, v.x );\n\t\t\tthis.y = Math.min( this.y, v.y );\n\t\t\tthis.z = Math.min( this.z, v.z );\n\t\t\tthis.w = Math.min( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmax: function ( v ) {\n\n\t\t\tthis.x = Math.max( this.x, v.x );\n\t\t\tthis.y = Math.max( this.y, v.y );\n\t\t\tthis.z = Math.max( this.z, v.z );\n\t\t\tthis.w = Math.max( this.w, v.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclamp: function ( min, max ) {\n\n\t\t\t// assumes min < max, componentwise\n\n\t\t\tthis.x = Math.max( min.x, Math.min( max.x, this.x ) );\n\t\t\tthis.y = Math.max( min.y, Math.min( max.y, this.y ) );\n\t\t\tthis.z = Math.max( min.z, Math.min( max.z, this.z ) );\n\t\t\tthis.w = Math.max( min.w, Math.min( max.w, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampScalar: function ( minVal, maxVal ) {\n\n\t\t\tthis.x = Math.max( minVal, Math.min( maxVal, this.x ) );\n\t\t\tthis.y = Math.max( minVal, Math.min( maxVal, this.y ) );\n\t\t\tthis.z = Math.max( minVal, Math.min( maxVal, this.z ) );\n\t\t\tthis.w = Math.max( minVal, Math.min( maxVal, this.w ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclampLength: function ( min, max ) {\n\n\t\t\tvar length = this.length();\n\n\t\t\treturn this.divideScalar( length || 1 ).multiplyScalar( Math.max( min, Math.min( max, length ) ) );\n\n\t\t},\n\n\t\tfloor: function () {\n\n\t\t\tthis.x = Math.floor( this.x );\n\t\t\tthis.y = Math.floor( this.y );\n\t\t\tthis.z = Math.floor( this.z );\n\t\t\tthis.w = Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tceil: function () {\n\n\t\t\tthis.x = Math.ceil( this.x );\n\t\t\tthis.y = Math.ceil( this.y );\n\t\t\tthis.z = Math.ceil( this.z );\n\t\t\tthis.w = Math.ceil( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tround: function () {\n\n\t\t\tthis.x = Math.round( this.x );\n\t\t\tthis.y = Math.round( this.y );\n\t\t\tthis.z = Math.round( this.z );\n\t\t\tthis.w = Math.round( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\troundToZero: function () {\n\n\t\t\tthis.x = ( this.x < 0 ) ? Math.ceil( this.x ) : Math.floor( this.x );\n\t\t\tthis.y = ( this.y < 0 ) ? Math.ceil( this.y ) : Math.floor( this.y );\n\t\t\tthis.z = ( this.z < 0 ) ? Math.ceil( this.z ) : Math.floor( this.z );\n\t\t\tthis.w = ( this.w < 0 ) ? Math.ceil( this.w ) : Math.floor( this.w );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.x = - this.x;\n\t\t\tthis.y = - this.y;\n\t\t\tthis.z = - this.z;\n\t\t\tthis.w = - this.w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdot: function ( v ) {\n\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\n\t\t},\n\n\t\tlengthSq: function () {\n\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\n\t\t},\n\n\t\tlength: function () {\n\n\t\t\treturn Math.sqrt( this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w );\n\n\t\t},\n\n\t\tmanhattanLength: function () {\n\n\t\t\treturn Math.abs( this.x ) + Math.abs( this.y ) + Math.abs( this.z ) + Math.abs( this.w );\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\treturn this.divideScalar( this.length() || 1 );\n\n\t\t},\n\n\t\tsetLength: function ( length ) {\n\n\t\t\treturn this.normalize().multiplyScalar( length );\n\n\t\t},\n\n\t\tlerp: function ( v, alpha ) {\n\n\t\t\tthis.x += ( v.x - this.x ) * alpha;\n\t\t\tthis.y += ( v.y - this.y ) * alpha;\n\t\t\tthis.z += ( v.z - this.z ) * alpha;\n\t\t\tthis.w += ( v.w - this.w ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpVectors: function ( v1, v2, alpha ) {\n\n\t\t\treturn this.subVectors( v2, v1 ).multiplyScalar( alpha ).add( v1 );\n\n\t\t},\n\n\t\tequals: function ( v ) {\n\n\t\t\treturn ( ( v.x === this.x ) && ( v.y === this.y ) && ( v.z === this.z ) && ( v.w === this.w ) );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.x = array[ offset ];\n\t\t\tthis.y = array[ offset + 1 ];\n\t\t\tthis.z = array[ offset + 2 ];\n\t\t\tthis.w = array[ offset + 3 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.x;\n\t\t\tarray[ offset + 1 ] = this.y;\n\t\t\tarray[ offset + 2 ] = this.z;\n\t\t\tarray[ offset + 3 ] = this.w;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\tfromBufferAttribute: function ( attribute, index, offset ) {\n\n\t\t\tif ( offset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Vector4: offset has been removed from .fromBufferAttribute().' );\n\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX( index );\n\t\t\tthis.y = attribute.getY( index );\n\t\t\tthis.z = attribute.getZ( index );\n\t\t\tthis.w = attribute.getW( index );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author szimek / https://github.com/szimek/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Marius Kintel / https://github.com/kintel\n\t */\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\tfunction WebGLRenderTarget( width, height, options ) {\n\n\t\tthis.width = width;\n\t\tthis.height = height;\n\n\t\tthis.scissor = new Vector4( 0, 0, width, height );\n\t\tthis.scissorTest = false;\n\n\t\tthis.viewport = new Vector4( 0, 0, width, height );\n\n\t\toptions = options || {};\n\n\t\tthis.texture = new Texture( undefined, undefined, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding );\n\n\t\tthis.texture.image = {};\n\t\tthis.texture.image.width = width;\n\t\tthis.texture.image.height = height;\n\n\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\n\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : true;\n\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\n\t}\n\n\tWebGLRenderTarget.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: WebGLRenderTarget,\n\n\t\tisWebGLRenderTarget: true,\n\n\t\tsetSize: function ( width, height ) {\n\n\t\t\tif ( this.width !== width || this.height !== height ) {\n\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\tthis.viewport.set( 0, 0, width, height );\n\t\t\tthis.scissor.set( 0, 0, width, height );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\tthis.viewport.copy( source.viewport );\n\n\t\t\tthis.texture = source.texture.clone();\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author Matt DesLauriers / @mattdesl\n\t */\n\n\tfunction WebGLMultisampleRenderTarget( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.samples = 4;\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultisampleRenderTarget,\n\n\t\tisWebGLMultisampleRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.samples = source.samples;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tvar _v1 = new Vector3();\n\tvar _m1 = new Matrix4();\n\tvar _zero = new Vector3( 0, 0, 0 );\n\tvar _one = new Vector3( 1, 1, 1 );\n\tvar _x = new Vector3();\n\tvar _y = new Vector3();\n\tvar _z = new Vector3();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author philogb / http://blog.thejit.org/\n\t * @author jordi_ros / http://plattsoft.com\n\t * @author D1plo1d / http://github.com/D1plo1d\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author timknip / http://www.floorplanner.com/\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Matrix4() {\n\n\t\tthis.elements = [\n\n\t\t\t1, 0, 0, 0,\n\t\t\t0, 1, 0, 0,\n\t\t\t0, 0, 1, 0,\n\t\t\t0, 0, 0, 1\n\n\t\t];\n\n\t\tif ( arguments.length > 0 ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.' );\n\n\t\t}\n\n\t}\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\tisMatrix4: true,\n\n\t\tset: function ( n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44 ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] = n11; te[ 4 ] = n12; te[ 8 ] = n13; te[ 12 ] = n14;\n\t\t\tte[ 1 ] = n21; te[ 5 ] = n22; te[ 9 ] = n23; te[ 13 ] = n24;\n\t\t\tte[ 2 ] = n31; te[ 6 ] = n32; te[ 10 ] = n33; te[ 14 ] = n34;\n\t\t\tte[ 3 ] = n41; te[ 7 ] = n42; te[ 11 ] = n43; te[ 15 ] = n44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tidentity: function () {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, 1, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Matrix4().fromArray( this.elements );\n\n\t\t},\n\n\t\tcopy: function ( m ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tte[ 0 ] = me[ 0 ]; te[ 1 ] = me[ 1 ]; te[ 2 ] = me[ 2 ]; te[ 3 ] = me[ 3 ];\n\t\t\tte[ 4 ] = me[ 4 ]; te[ 5 ] = me[ 5 ]; te[ 6 ] = me[ 6 ]; te[ 7 ] = me[ 7 ];\n\t\t\tte[ 8 ] = me[ 8 ]; te[ 9 ] = me[ 9 ]; te[ 10 ] = me[ 10 ]; te[ 11 ] = me[ 11 ];\n\t\t\tte[ 12 ] = me[ 12 ]; te[ 13 ] = me[ 13 ]; te[ 14 ] = me[ 14 ]; te[ 15 ] = me[ 15 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyPosition: function ( m ) {\n\n\t\t\tvar te = this.elements, me = m.elements;\n\n\t\t\tte[ 12 ] = me[ 12 ];\n\t\t\tte[ 13 ] = me[ 13 ];\n\t\t\tte[ 14 ] = me[ 14 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\txAxis.setFromMatrixColumn( this, 0 );\n\t\t\tyAxis.setFromMatrixColumn( this, 1 );\n\t\t\tzAxis.setFromMatrixColumn( this, 2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeBasis: function ( xAxis, yAxis, zAxis ) {\n\n\t\t\tthis.set(\n\t\t\t\txAxis.x, yAxis.x, zAxis.x, 0,\n\t\t\t\txAxis.y, yAxis.y, zAxis.y, 0,\n\t\t\t\txAxis.z, yAxis.z, zAxis.z, 0,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\textractRotation: function ( m ) {\n\n\t\t\t// this method does not support reflection matrices\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = m.elements;\n\n\t\t\tvar scaleX = 1 / _v1.setFromMatrixColumn( m, 0 ).length();\n\t\t\tvar scaleY = 1 / _v1.setFromMatrixColumn( m, 1 ).length();\n\t\t\tvar scaleZ = 1 / _v1.setFromMatrixColumn( m, 2 ).length();\n\n\t\t\tte[ 0 ] = me[ 0 ] * scaleX;\n\t\t\tte[ 1 ] = me[ 1 ] * scaleX;\n\t\t\tte[ 2 ] = me[ 2 ] * scaleX;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = me[ 4 ] * scaleY;\n\t\t\tte[ 5 ] = me[ 5 ] * scaleY;\n\t\t\tte[ 6 ] = me[ 6 ] * scaleY;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = me[ 8 ] * scaleZ;\n\t\t\tte[ 9 ] = me[ 9 ] * scaleZ;\n\t\t\tte[ 10 ] = me[ 10 ] * scaleZ;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromEuler: function ( euler ) {\n\n\t\t\tif ( ! ( euler && euler.isEuler ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = euler.x, y = euler.y, z = euler.z;\n\t\t\tvar a = Math.cos( x ), b = Math.sin( x );\n\t\t\tvar c = Math.cos( y ), d = Math.sin( y );\n\t\t\tvar e = Math.cos( z ), f = Math.sin( z );\n\n\t\t\tif ( euler.order === 'XYZ' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - c * f;\n\t\t\t\tte[ 8 ] = d;\n\n\t\t\t\tte[ 1 ] = af + be * d;\n\t\t\t\tte[ 5 ] = ae - bf * d;\n\t\t\t\tte[ 9 ] = - b * c;\n\n\t\t\t\tte[ 2 ] = bf - ae * d;\n\t\t\t\tte[ 6 ] = be + af * d;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YXZ' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce + df * b;\n\t\t\t\tte[ 4 ] = de * b - cf;\n\t\t\t\tte[ 8 ] = a * d;\n\n\t\t\t\tte[ 1 ] = a * f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b;\n\n\t\t\t\tte[ 2 ] = cf * b - de;\n\t\t\t\tte[ 6 ] = df + ce * b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZXY' ) {\n\n\t\t\t\tvar ce = c * e, cf = c * f, de = d * e, df = d * f;\n\n\t\t\t\tte[ 0 ] = ce - df * b;\n\t\t\t\tte[ 4 ] = - a * f;\n\t\t\t\tte[ 8 ] = de + cf * b;\n\n\t\t\t\tte[ 1 ] = cf + de * b;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = df - ce * b;\n\n\t\t\t\tte[ 2 ] = - a * d;\n\t\t\t\tte[ 6 ] = b;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'ZYX' ) {\n\n\t\t\t\tvar ae = a * e, af = a * f, be = b * e, bf = b * f;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = be * d - af;\n\t\t\t\tte[ 8 ] = ae * d + bf;\n\n\t\t\t\tte[ 1 ] = c * f;\n\t\t\t\tte[ 5 ] = bf * d + ae;\n\t\t\t\tte[ 9 ] = af * d - be;\n\n\t\t\t\tte[ 2 ] = - d;\n\t\t\t\tte[ 6 ] = b * c;\n\t\t\t\tte[ 10 ] = a * c;\n\n\t\t\t} else if ( euler.order === 'YZX' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = bd - ac * f;\n\t\t\t\tte[ 8 ] = bc * f + ad;\n\n\t\t\t\tte[ 1 ] = f;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = - b * e;\n\n\t\t\t\tte[ 2 ] = - d * e;\n\t\t\t\tte[ 6 ] = ad * f + bc;\n\t\t\t\tte[ 10 ] = ac - bd * f;\n\n\t\t\t} else if ( euler.order === 'XZY' ) {\n\n\t\t\t\tvar ac = a * c, ad = a * d, bc = b * c, bd = b * d;\n\n\t\t\t\tte[ 0 ] = c * e;\n\t\t\t\tte[ 4 ] = - f;\n\t\t\t\tte[ 8 ] = d * e;\n\n\t\t\t\tte[ 1 ] = ac * f + bd;\n\t\t\t\tte[ 5 ] = a * e;\n\t\t\t\tte[ 9 ] = ad * f - bc;\n\n\t\t\t\tte[ 2 ] = bc * f - ad;\n\t\t\t\tte[ 6 ] = b * e;\n\t\t\t\tte[ 10 ] = bd * f + ac;\n\n\t\t\t}\n\n\t\t\t// bottom row\n\t\t\tte[ 3 ] = 0;\n\t\t\tte[ 7 ] = 0;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\t// last column\n\t\t\tte[ 12 ] = 0;\n\t\t\tte[ 13 ] = 0;\n\t\t\tte[ 14 ] = 0;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationFromQuaternion: function ( q ) {\n\n\t\t\treturn this.compose( _zero, q, _one );\n\n\t\t},\n\n\t\tlookAt: function ( eye, target, up ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\t_z.subVectors( eye, target );\n\n\t\t\tif ( _z.lengthSq() === 0 ) {\n\n\t\t\t\t// eye and target are in the same position\n\n\t\t\t\t_z.z = 1;\n\n\t\t\t}\n\n\t\t\t_z.normalize();\n\t\t\t_x.crossVectors( up, _z );\n\n\t\t\tif ( _x.lengthSq() === 0 ) {\n\n\t\t\t\t// up and z are parallel\n\n\t\t\t\tif ( Math.abs( up.z ) === 1 ) {\n\n\t\t\t\t\t_z.x += 0.0001;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_z.z += 0.0001;\n\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\t\t\t\t_x.crossVectors( up, _z );\n\n\t\t\t}\n\n\t\t\t_x.normalize();\n\t\t\t_y.crossVectors( _z, _x );\n\n\t\t\tte[ 0 ] = _x.x; te[ 4 ] = _y.x; te[ 8 ] = _z.x;\n\t\t\tte[ 1 ] = _x.y; te[ 5 ] = _y.y; te[ 9 ] = _z.y;\n\t\t\tte[ 2 ] = _x.z; te[ 6 ] = _y.z; te[ 10 ] = _z.z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( m, n ) {\n\n\t\t\tif ( n !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.' );\n\t\t\t\treturn this.multiplyMatrices( m, n );\n\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices( this, m );\n\n\t\t},\n\n\t\tpremultiply: function ( m ) {\n\n\t\t\treturn this.multiplyMatrices( m, this );\n\n\t\t},\n\n\t\tmultiplyMatrices: function ( a, b ) {\n\n\t\t\tvar ae = a.elements;\n\t\t\tvar be = b.elements;\n\t\t\tvar te = this.elements;\n\n\t\t\tvar a11 = ae[ 0 ], a12 = ae[ 4 ], a13 = ae[ 8 ], a14 = ae[ 12 ];\n\t\t\tvar a21 = ae[ 1 ], a22 = ae[ 5 ], a23 = ae[ 9 ], a24 = ae[ 13 ];\n\t\t\tvar a31 = ae[ 2 ], a32 = ae[ 6 ], a33 = ae[ 10 ], a34 = ae[ 14 ];\n\t\t\tvar a41 = ae[ 3 ], a42 = ae[ 7 ], a43 = ae[ 11 ], a44 = ae[ 15 ];\n\n\t\t\tvar b11 = be[ 0 ], b12 = be[ 4 ], b13 = be[ 8 ], b14 = be[ 12 ];\n\t\t\tvar b21 = be[ 1 ], b22 = be[ 5 ], b23 = be[ 9 ], b24 = be[ 13 ];\n\t\t\tvar b31 = be[ 2 ], b32 = be[ 6 ], b33 = be[ 10 ], b34 = be[ 14 ];\n\t\t\tvar b41 = be[ 3 ], b42 = be[ 7 ], b43 = be[ 11 ], b44 = be[ 15 ];\n\n\t\t\tte[ 0 ] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[ 4 ] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[ 8 ] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[ 12 ] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\n\t\t\tte[ 1 ] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[ 5 ] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[ 9 ] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[ 13 ] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\n\t\t\tte[ 2 ] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[ 6 ] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[ 10 ] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[ 14 ] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\n\t\t\tte[ 3 ] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[ 7 ] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[ 11 ] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[ 15 ] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tte[ 0 ] *= s; te[ 4 ] *= s; te[ 8 ] *= s; te[ 12 ] *= s;\n\t\t\tte[ 1 ] *= s; te[ 5 ] *= s; te[ 9 ] *= s; te[ 13 ] *= s;\n\t\t\tte[ 2 ] *= s; te[ 6 ] *= s; te[ 10 ] *= s; te[ 14 ] *= s;\n\t\t\tte[ 3 ] *= s; te[ 7 ] *= s; te[ 11 ] *= s; te[ 15 ] *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyToBufferAttribute: function ( attribute ) {\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\t_v1.x = attribute.getX( i );\n\t\t\t\t_v1.y = attribute.getY( i );\n\t\t\t\t_v1.z = attribute.getZ( i );\n\n\t\t\t\t_v1.applyMatrix4( this );\n\n\t\t\t\tattribute.setXYZ( i, _v1.x, _v1.y, _v1.z );\n\n\t\t\t}\n\n\t\t\treturn attribute;\n\n\t\t},\n\n\t\tdeterminant: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar n11 = te[ 0 ], n12 = te[ 4 ], n13 = te[ 8 ], n14 = te[ 12 ];\n\t\t\tvar n21 = te[ 1 ], n22 = te[ 5 ], n23 = te[ 9 ], n24 = te[ 13 ];\n\t\t\tvar n31 = te[ 2 ], n32 = te[ 6 ], n33 = te[ 10 ], n34 = te[ 14 ];\n\t\t\tvar n41 = te[ 3 ], n42 = te[ 7 ], n43 = te[ 11 ], n44 = te[ 15 ];\n\n\t\t\t//TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn (\n\t\t\t\tn41 * (\n\t\t\t\t\t+ n14 * n23 * n32\n\t\t\t\t\t - n13 * n24 * n32\n\t\t\t\t\t - n14 * n22 * n33\n\t\t\t\t\t + n12 * n24 * n33\n\t\t\t\t\t + n13 * n22 * n34\n\t\t\t\t\t - n12 * n23 * n34\n\t\t\t\t) +\n\t\t\t\tn42 * (\n\t\t\t\t\t+ n11 * n23 * n34\n\t\t\t\t\t - n11 * n24 * n33\n\t\t\t\t\t + n14 * n21 * n33\n\t\t\t\t\t - n13 * n21 * n34\n\t\t\t\t\t + n13 * n24 * n31\n\t\t\t\t\t - n14 * n23 * n31\n\t\t\t\t) +\n\t\t\t\tn43 * (\n\t\t\t\t\t+ n11 * n24 * n32\n\t\t\t\t\t - n11 * n22 * n34\n\t\t\t\t\t - n14 * n21 * n32\n\t\t\t\t\t + n12 * n21 * n34\n\t\t\t\t\t + n14 * n22 * n31\n\t\t\t\t\t - n12 * n24 * n31\n\t\t\t\t) +\n\t\t\t\tn44 * (\n\t\t\t\t\t- n13 * n22 * n31\n\t\t\t\t\t - n11 * n23 * n32\n\t\t\t\t\t + n11 * n22 * n33\n\t\t\t\t\t + n13 * n21 * n32\n\t\t\t\t\t - n12 * n21 * n33\n\t\t\t\t\t + n12 * n23 * n31\n\t\t\t\t)\n\n\t\t\t);\n\n\t\t},\n\n\t\ttranspose: function () {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar tmp;\n\n\t\t\ttmp = te[ 1 ]; te[ 1 ] = te[ 4 ]; te[ 4 ] = tmp;\n\t\t\ttmp = te[ 2 ]; te[ 2 ] = te[ 8 ]; te[ 8 ] = tmp;\n\t\t\ttmp = te[ 6 ]; te[ 6 ] = te[ 9 ]; te[ 9 ] = tmp;\n\n\t\t\ttmp = te[ 3 ]; te[ 3 ] = te[ 12 ]; te[ 12 ] = tmp;\n\t\t\ttmp = te[ 7 ]; te[ 7 ] = te[ 13 ]; te[ 13 ] = tmp;\n\t\t\ttmp = te[ 11 ]; te[ 11 ] = te[ 14 ]; te[ 14 ] = tmp;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPosition: function ( x, y, z ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\tte[ 12 ] = x.x;\n\t\t\t\tte[ 13 ] = x.y;\n\t\t\t\tte[ 14 ] = x.z;\n\n\t\t\t} else {\n\n\t\t\t\tte[ 12 ] = x;\n\t\t\t\tte[ 13 ] = y;\n\t\t\t\tte[ 14 ] = z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInverse: function ( m, throwOnDegenerate ) {\n\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tvar te = this.elements,\n\t\t\t\tme = m.elements,\n\n\t\t\t\tn11 = me[ 0 ], n21 = me[ 1 ], n31 = me[ 2 ], n41 = me[ 3 ],\n\t\t\t\tn12 = me[ 4 ], n22 = me[ 5 ], n32 = me[ 6 ], n42 = me[ 7 ],\n\t\t\t\tn13 = me[ 8 ], n23 = me[ 9 ], n33 = me[ 10 ], n43 = me[ 11 ],\n\t\t\t\tn14 = me[ 12 ], n24 = me[ 13 ], n34 = me[ 14 ], n44 = me[ 15 ],\n\n\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\n\t\t\tvar det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\n\t\t\tif ( det === 0 ) {\n\n\t\t\t\tvar msg = \"THREE.Matrix4: .getInverse() can't invert matrix, determinant is 0\";\n\n\t\t\t\tif ( throwOnDegenerate === true ) {\n\n\t\t\t\t\tthrow new Error( msg );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( msg );\n\n\t\t\t\t}\n\n\t\t\t\treturn this.identity();\n\n\t\t\t}\n\n\t\t\tvar detInv = 1 / det;\n\n\t\t\tte[ 0 ] = t11 * detInv;\n\t\t\tte[ 1 ] = ( n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44 ) * detInv;\n\t\t\tte[ 2 ] = ( n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44 ) * detInv;\n\t\t\tte[ 3 ] = ( n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 4 ] = t12 * detInv;\n\t\t\tte[ 5 ] = ( n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44 ) * detInv;\n\t\t\tte[ 6 ] = ( n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44 ) * detInv;\n\t\t\tte[ 7 ] = ( n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43 ) * detInv;\n\n\t\t\tte[ 8 ] = t13 * detInv;\n\t\t\tte[ 9 ] = ( n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44 ) * detInv;\n\t\t\tte[ 10 ] = ( n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44 ) * detInv;\n\t\t\tte[ 11 ] = ( n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43 ) * detInv;\n\n\t\t\tte[ 12 ] = t14 * detInv;\n\t\t\tte[ 13 ] = ( n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34 ) * detInv;\n\t\t\tte[ 14 ] = ( n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34 ) * detInv;\n\t\t\tte[ 15 ] = ( n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33 ) * detInv;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( v ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = v.x, y = v.y, z = v.z;\n\n\t\t\tte[ 0 ] *= x; te[ 4 ] *= y; te[ 8 ] *= z;\n\t\t\tte[ 1 ] *= x; te[ 5 ] *= y; te[ 9 ] *= z;\n\t\t\tte[ 2 ] *= x; te[ 6 ] *= y; te[ 10 ] *= z;\n\t\t\tte[ 3 ] *= x; te[ 7 ] *= y; te[ 11 ] *= z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxScaleOnAxis: function () {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar scaleXSq = te[ 0 ] * te[ 0 ] + te[ 1 ] * te[ 1 ] + te[ 2 ] * te[ 2 ];\n\t\t\tvar scaleYSq = te[ 4 ] * te[ 4 ] + te[ 5 ] * te[ 5 ] + te[ 6 ] * te[ 6 ];\n\t\t\tvar scaleZSq = te[ 8 ] * te[ 8 ] + te[ 9 ] * te[ 9 ] + te[ 10 ] * te[ 10 ];\n\n\t\t\treturn Math.sqrt( Math.max( scaleXSq, scaleYSq, scaleZSq ) );\n\n\t\t},\n\n\t\tmakeTranslation: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, x,\n\t\t\t\t0, 1, 0, y,\n\t\t\t\t0, 0, 1, z,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationX: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t1, 0, 0, 0,\n\t\t\t\t0, c, - s, 0,\n\t\t\t\t0, s, c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationY: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\t c, 0, s, 0,\n\t\t\t\t 0, 1, 0, 0,\n\t\t\t\t- s, 0, c, 0,\n\t\t\t\t 0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationZ: function ( theta ) {\n\n\t\t\tvar c = Math.cos( theta ), s = Math.sin( theta );\n\n\t\t\tthis.set(\n\n\t\t\t\tc, - s, 0, 0,\n\t\t\t\ts, c, 0, 0,\n\t\t\t\t0, 0, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeRotationAxis: function ( axis, angle ) {\n\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\n\t\t\tvar c = Math.cos( angle );\n\t\t\tvar s = Math.sin( angle );\n\t\t\tvar t = 1 - c;\n\t\t\tvar x = axis.x, y = axis.y, z = axis.z;\n\t\t\tvar tx = t * x, ty = t * y;\n\n\t\t\tthis.set(\n\n\t\t\t\ttx * x + c, tx * y - s * z, tx * z + s * y, 0,\n\t\t\t\ttx * y + s * z, ty * y + c, ty * z - s * x, 0,\n\t\t\t\ttx * z - s * y, ty * z + s * x, t * z * z + c, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\t return this;\n\n\t\t},\n\n\t\tmakeScale: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\tx, 0, 0, 0,\n\t\t\t\t0, y, 0, 0,\n\t\t\t\t0, 0, z, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeShear: function ( x, y, z ) {\n\n\t\t\tthis.set(\n\n\t\t\t\t1, y, z, 0,\n\t\t\t\tx, 1, z, 0,\n\t\t\t\tx, y, 1, 0,\n\t\t\t\t0, 0, 0, 1\n\n\t\t\t);\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar x = quaternion._x, y = quaternion._y, z = quaternion._z, w = quaternion._w;\n\t\t\tvar x2 = x + x,\ty2 = y + y, z2 = z + z;\n\t\t\tvar xx = x * x2, xy = x * y2, xz = x * z2;\n\t\t\tvar yy = y * y2, yz = y * z2, zz = z * z2;\n\t\t\tvar wx = w * x2, wy = w * y2, wz = w * z2;\n\n\t\t\tvar sx = scale.x, sy = scale.y, sz = scale.z;\n\n\t\t\tte[ 0 ] = ( 1 - ( yy + zz ) ) * sx;\n\t\t\tte[ 1 ] = ( xy + wz ) * sx;\n\t\t\tte[ 2 ] = ( xz - wy ) * sx;\n\t\t\tte[ 3 ] = 0;\n\n\t\t\tte[ 4 ] = ( xy - wz ) * sy;\n\t\t\tte[ 5 ] = ( 1 - ( xx + zz ) ) * sy;\n\t\t\tte[ 6 ] = ( yz + wx ) * sy;\n\t\t\tte[ 7 ] = 0;\n\n\t\t\tte[ 8 ] = ( xz + wy ) * sz;\n\t\t\tte[ 9 ] = ( yz - wx ) * sz;\n\t\t\tte[ 10 ] = ( 1 - ( xx + yy ) ) * sz;\n\t\t\tte[ 11 ] = 0;\n\n\t\t\tte[ 12 ] = position.x;\n\t\t\tte[ 13 ] = position.y;\n\t\t\tte[ 14 ] = position.z;\n\t\t\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdecompose: function ( position, quaternion, scale ) {\n\n\t\t\tvar te = this.elements;\n\n\t\t\tvar sx = _v1.set( te[ 0 ], te[ 1 ], te[ 2 ] ).length();\n\t\t\tvar sy = _v1.set( te[ 4 ], te[ 5 ], te[ 6 ] ).length();\n\t\t\tvar sz = _v1.set( te[ 8 ], te[ 9 ], te[ 10 ] ).length();\n\n\t\t\t// if determine is negative, we need to invert one scale\n\t\t\tvar det = this.determinant();\n\t\t\tif ( det < 0 ) { sx = - sx; }\n\n\t\t\tposition.x = te[ 12 ];\n\t\t\tposition.y = te[ 13 ];\n\t\t\tposition.z = te[ 14 ];\n\n\t\t\t// scale the rotation part\n\t\t\t_m1.copy( this );\n\n\t\t\tvar invSX = 1 / sx;\n\t\t\tvar invSY = 1 / sy;\n\t\t\tvar invSZ = 1 / sz;\n\n\t\t\t_m1.elements[ 0 ] *= invSX;\n\t\t\t_m1.elements[ 1 ] *= invSX;\n\t\t\t_m1.elements[ 2 ] *= invSX;\n\n\t\t\t_m1.elements[ 4 ] *= invSY;\n\t\t\t_m1.elements[ 5 ] *= invSY;\n\t\t\t_m1.elements[ 6 ] *= invSY;\n\n\t\t\t_m1.elements[ 8 ] *= invSZ;\n\t\t\t_m1.elements[ 9 ] *= invSZ;\n\t\t\t_m1.elements[ 10 ] *= invSZ;\n\n\t\t\tquaternion.setFromRotationMatrix( _m1 );\n\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakePerspective: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tif ( far === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.' );\n\n\t\t\t}\n\n\t\t\tvar te = this.elements;\n\t\t\tvar x = 2 * near / ( right - left );\n\t\t\tvar y = 2 * near / ( top - bottom );\n\n\t\t\tvar a = ( right + left ) / ( right - left );\n\t\t\tvar b = ( top + bottom ) / ( top - bottom );\n\t\t\tvar c = - ( far + near ) / ( far - near );\n\t\t\tvar d = - 2 * far * near / ( far - near );\n\n\t\t\tte[ 0 ] = x;\tte[ 4 ] = 0;\tte[ 8 ] = a;\tte[ 12 ] = 0;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = y;\tte[ 9 ] = b;\tte[ 13 ] = 0;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = c;\tte[ 14 ] = d;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = - 1;\tte[ 15 ] = 0;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeOrthographic: function ( left, right, top, bottom, near, far ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar w = 1.0 / ( right - left );\n\t\t\tvar h = 1.0 / ( top - bottom );\n\t\t\tvar p = 1.0 / ( far - near );\n\n\t\t\tvar x = ( right + left ) * w;\n\t\t\tvar y = ( top + bottom ) * h;\n\t\t\tvar z = ( far + near ) * p;\n\n\t\t\tte[ 0 ] = 2 * w;\tte[ 4 ] = 0;\tte[ 8 ] = 0;\tte[ 12 ] = - x;\n\t\t\tte[ 1 ] = 0;\tte[ 5 ] = 2 * h;\tte[ 9 ] = 0;\tte[ 13 ] = - y;\n\t\t\tte[ 2 ] = 0;\tte[ 6 ] = 0;\tte[ 10 ] = - 2 * p;\tte[ 14 ] = - z;\n\t\t\tte[ 3 ] = 0;\tte[ 7 ] = 0;\tte[ 11 ] = 0;\tte[ 15 ] = 1;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( matrix ) {\n\n\t\t\tvar te = this.elements;\n\t\t\tvar me = matrix.elements;\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tif ( te[ i ] !== me[ i ] ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tfor ( var i = 0; i < 16; i ++ ) {\n\n\t\t\t\tthis.elements[ i ] = array[ i + offset ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar te = this.elements;\n\n\t\t\tarray[ offset ] = te[ 0 ];\n\t\t\tarray[ offset + 1 ] = te[ 1 ];\n\t\t\tarray[ offset + 2 ] = te[ 2 ];\n\t\t\tarray[ offset + 3 ] = te[ 3 ];\n\n\t\t\tarray[ offset + 4 ] = te[ 4 ];\n\t\t\tarray[ offset + 5 ] = te[ 5 ];\n\t\t\tarray[ offset + 6 ] = te[ 6 ];\n\t\t\tarray[ offset + 7 ] = te[ 7 ];\n\n\t\t\tarray[ offset + 8 ] = te[ 8 ];\n\t\t\tarray[ offset + 9 ] = te[ 9 ];\n\t\t\tarray[ offset + 10 ] = te[ 10 ];\n\t\t\tarray[ offset + 11 ] = te[ 11 ];\n\n\t\t\tarray[ offset + 12 ] = te[ 12 ];\n\t\t\tarray[ offset + 13 ] = te[ 13 ];\n\t\t\tarray[ offset + 14 ] = te[ 14 ];\n\t\t\tarray[ offset + 15 ] = te[ 15 ];\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _matrix = new Matrix4();\n\tvar _quaternion$1 = new Quaternion();\n\n\tfunction Euler( x, y, z, order ) {\n\n\t\tthis._x = x || 0;\n\t\tthis._y = y || 0;\n\t\tthis._z = z || 0;\n\t\tthis._order = order || Euler.DefaultOrder;\n\n\t}\n\n\tEuler.RotationOrders = [ 'XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX' ];\n\n\tEuler.DefaultOrder = 'XYZ';\n\n\tObject.defineProperties( Euler.prototype, {\n\n\t\tx: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._x;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._x = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\ty: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._y;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._y = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\tz: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._z;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._z = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t},\n\n\t\torder: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this._order;\n\n\t\t\t},\n\n\t\t\tset: function ( value ) {\n\n\t\t\t\tthis._order = value;\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Euler.prototype, {\n\n\t\tisEuler: true,\n\n\t\tset: function ( x, y, z, order ) {\n\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this._x, this._y, this._z, this._order );\n\n\t\t},\n\n\t\tcopy: function ( euler ) {\n\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromRotationMatrix: function ( m, order, update ) {\n\n\t\t\tvar clamp = _Math.clamp;\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tvar te = m.elements;\n\t\t\tvar m11 = te[ 0 ], m12 = te[ 4 ], m13 = te[ 8 ];\n\t\t\tvar m21 = te[ 1 ], m22 = te[ 5 ], m23 = te[ 9 ];\n\t\t\tvar m31 = te[ 2 ], m32 = te[ 6 ], m33 = te[ 10 ];\n\n\t\t\torder = order || this._order;\n\n\t\t\tif ( order === 'XYZ' ) {\n\n\t\t\t\tthis._y = Math.asin( clamp( m13, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m13 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YXZ' ) {\n\n\t\t\t\tthis._x = Math.asin( - clamp( m23, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m23 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\t\t\t\t\tthis._z = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZXY' ) {\n\n\t\t\t\tthis._x = Math.asin( clamp( m32, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m32 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._y = Math.atan2( - m31, m33 );\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._y = 0;\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'ZYX' ) {\n\n\t\t\t\tthis._y = Math.asin( - clamp( m31, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m31 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m33 );\n\t\t\t\t\tthis._z = Math.atan2( m21, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._z = Math.atan2( - m12, m22 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'YZX' ) {\n\n\t\t\t\tthis._z = Math.asin( clamp( m21, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m21 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m22 );\n\t\t\t\t\tthis._y = Math.atan2( - m31, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = Math.atan2( m13, m33 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( order === 'XZY' ) {\n\n\t\t\t\tthis._z = Math.asin( - clamp( m12, - 1, 1 ) );\n\n\t\t\t\tif ( Math.abs( m12 ) < 0.9999999 ) {\n\n\t\t\t\t\tthis._x = Math.atan2( m32, m22 );\n\t\t\t\t\tthis._y = Math.atan2( m13, m11 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis._x = Math.atan2( - m23, m33 );\n\t\t\t\t\tthis._y = 0;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Euler: .setFromRotationMatrix() given unsupported order: ' + order );\n\n\t\t\t}\n\n\t\t\tthis._order = order;\n\n\t\t\tif ( update !== false ) { this._onChangeCallback(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromQuaternion: function ( q, order, update ) {\n\n\t\t\t_matrix.makeRotationFromQuaternion( q );\n\n\t\t\treturn this.setFromRotationMatrix( _matrix, order, update );\n\n\t\t},\n\n\t\tsetFromVector3: function ( v, order ) {\n\n\t\t\treturn this.set( v.x, v.y, v.z, order || this._order );\n\n\t\t},\n\n\t\treorder: function ( newOrder ) {\n\n\t\t\t// WARNING: this discards revolution information -bhouston\n\n\t\t\t_quaternion$1.setFromEuler( this );\n\n\t\t\treturn this.setFromQuaternion( _quaternion$1, newOrder );\n\n\t\t},\n\n\t\tequals: function ( euler ) {\n\n\t\t\treturn ( euler._x === this._x ) && ( euler._y === this._y ) && ( euler._z === this._z ) && ( euler._order === this._order );\n\n\t\t},\n\n\t\tfromArray: function ( array ) {\n\n\t\t\tthis._x = array[ 0 ];\n\t\t\tthis._y = array[ 1 ];\n\t\t\tthis._z = array[ 2 ];\n\t\t\tif ( array[ 3 ] !== undefined ) { this._order = array[ 3 ]; }\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this._x;\n\t\t\tarray[ offset + 1 ] = this._y;\n\t\t\tarray[ offset + 2 ] = this._z;\n\t\t\tarray[ offset + 3 ] = this._order;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoVector3: function ( optionalResult ) {\n\n\t\t\tif ( optionalResult ) {\n\n\t\t\t\treturn optionalResult.set( this._x, this._y, this._z );\n\n\t\t\t} else {\n\n\t\t\t\treturn new Vector3( this._x, this._y, this._z );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_onChange: function ( callback ) {\n\n\t\t\tthis._onChangeCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t_onChangeCallback: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Layers() {\n\n\t\tthis.mask = 1 | 0;\n\n\t}\n\n\tObject.assign( Layers.prototype, {\n\n\t\tset: function ( channel ) {\n\n\t\t\tthis.mask = 1 << channel | 0;\n\n\t\t},\n\n\t\tenable: function ( channel ) {\n\n\t\t\tthis.mask |= 1 << channel | 0;\n\n\t\t},\n\n\t\tenableAll: function () {\n\n\t\t\tthis.mask = 0xffffffff | 0;\n\n\t\t},\n\n\t\ttoggle: function ( channel ) {\n\n\t\t\tthis.mask ^= 1 << channel | 0;\n\n\t\t},\n\n\t\tdisable: function ( channel ) {\n\n\t\t\tthis.mask &= ~ ( 1 << channel | 0 );\n\n\t\t},\n\n\t\tdisableAll: function () {\n\n\t\t\tthis.mask = 0;\n\n\t\t},\n\n\t\ttest: function ( layers ) {\n\n\t\t\treturn ( this.mask & layers.mask ) !== 0;\n\n\t\t}\n\n\t} );\n\n\tvar _object3DId = 0;\n\n\tvar _v1$1 = new Vector3();\n\tvar _q1 = new Quaternion();\n\tvar _m1$1 = new Matrix4();\n\tvar _target = new Vector3();\n\n\tvar _position = new Vector3();\n\tvar _scale = new Vector3();\n\tvar _quaternion$2 = new Quaternion();\n\n\tvar _xAxis = new Vector3( 1, 0, 0 );\n\tvar _yAxis = new Vector3( 0, 1, 0 );\n\tvar _zAxis = new Vector3( 0, 0, 1 );\n\n\tvar _addedEvent = { type: 'added' };\n\tvar _removedEvent = { type: 'removed' };\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author elephantatwork / www.elephantatwork.ch\n\t */\n\n\tfunction Object3D() {\n\n\t\tObject.defineProperty( this, 'id', { value: _object3DId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Object3D';\n\n\t\tthis.parent = null;\n\t\tthis.children = [];\n\n\t\tthis.up = Object3D.DefaultUp.clone();\n\n\t\tvar position = new Vector3();\n\t\tvar rotation = new Euler();\n\t\tvar quaternion = new Quaternion();\n\t\tvar scale = new Vector3( 1, 1, 1 );\n\n\t\tfunction onRotationChange() {\n\n\t\t\tquaternion.setFromEuler( rotation, false );\n\n\t\t}\n\n\t\tfunction onQuaternionChange() {\n\n\t\t\trotation.setFromQuaternion( quaternion, undefined, false );\n\n\t\t}\n\n\t\trotation._onChange( onRotationChange );\n\t\tquaternion._onChange( onQuaternionChange );\n\n\t\tObject.defineProperties( this, {\n\t\t\tposition: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: position\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: rotation\n\t\t\t},\n\t\t\tquaternion: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: quaternion\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tconfigurable: true,\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: scale\n\t\t\t},\n\t\t\tmodelViewMatrix: {\n\t\t\t\tvalue: new Matrix4()\n\t\t\t},\n\t\t\tnormalMatrix: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t} );\n\n\t\tthis.matrix = new Matrix4();\n\t\tthis.matrixWorld = new Matrix4();\n\n\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\tthis.layers = new Layers();\n\t\tthis.visible = true;\n\n\t\tthis.castShadow = false;\n\t\tthis.receiveShadow = false;\n\n\t\tthis.frustumCulled = true;\n\t\tthis.renderOrder = 0;\n\n\t\tthis.userData = {};\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3( 0, 1, 0 );\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\n\tObject3D.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Object3D,\n\n\t\tisObject3D: true,\n\n\t\tonBeforeRender: function () {},\n\t\tonAfterRender: function () {},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tthis.matrix.premultiply( matrix );\n\n\t\t\tthis.matrix.decompose( this.position, this.quaternion, this.scale );\n\n\t\t},\n\n\t\tapplyQuaternion: function ( q ) {\n\n\t\t\tthis.quaternion.premultiply( q );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRotationFromAxisAngle: function ( axis, angle ) {\n\n\t\t\t// assumes axis is normalized\n\n\t\t\tthis.quaternion.setFromAxisAngle( axis, angle );\n\n\t\t},\n\n\t\tsetRotationFromEuler: function ( euler ) {\n\n\t\t\tthis.quaternion.setFromEuler( euler, true );\n\n\t\t},\n\n\t\tsetRotationFromMatrix: function ( m ) {\n\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\n\t\t\tthis.quaternion.setFromRotationMatrix( m );\n\n\t\t},\n\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\t// assumes q is normalized\n\n\t\t\tthis.quaternion.copy( q );\n\n\t\t},\n\n\t\trotateOnAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.multiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateOnWorldAxis: function ( axis, angle ) {\n\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\n\t\t\t_q1.setFromAxisAngle( axis, angle );\n\n\t\t\tthis.quaternion.premultiply( _q1 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _xAxis, angle );\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _yAxis, angle );\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\treturn this.rotateOnAxis( _zAxis, angle );\n\n\t\t},\n\n\t\ttranslateOnAxis: function ( axis, distance ) {\n\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\n\t\t\t_v1$1.copy( axis ).applyQuaternion( this.quaternion );\n\n\t\t\tthis.position.add( _v1$1.multiplyScalar( distance ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslateX: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _xAxis, distance );\n\n\t\t},\n\n\t\ttranslateY: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _yAxis, distance );\n\n\t\t},\n\n\t\ttranslateZ: function ( distance ) {\n\n\t\t\treturn this.translateOnAxis( _zAxis, distance );\n\n\t\t},\n\n\t\tlocalToWorld: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( this.matrixWorld );\n\n\t\t},\n\n\t\tworldToLocal: function ( vector ) {\n\n\t\t\treturn vector.applyMatrix4( _m1$1.getInverse( this.matrixWorld ) );\n\n\t\t},\n\n\t\tlookAt: function ( x, y, z ) {\n\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\n\t\t\tif ( x.isVector3 ) {\n\n\t\t\t\t_target.copy( x );\n\n\t\t\t} else {\n\n\t\t\t\t_target.set( x, y, z );\n\n\t\t\t}\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_position.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\tif ( this.isCamera || this.isLight ) {\n\n\t\t\t\t_m1$1.lookAt( _position, _target, this.up );\n\n\t\t\t} else {\n\n\t\t\t\t_m1$1.lookAt( _target, _position, this.up );\n\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix( _m1$1 );\n\n\t\t\tif ( parent ) {\n\n\t\t\t\t_m1$1.extractRotation( parent.matrixWorld );\n\t\t\t\t_q1.setFromRotationMatrix( _m1$1 );\n\t\t\t\tthis.quaternion.premultiply( _q1.inverse() );\n\n\t\t\t}\n\n\t\t},\n\n\t\tadd: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.add( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( object === this ) {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object can't be added as a child of itself.\", object );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tif ( ( object && object.isObject3D ) ) {\n\n\t\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\t\tobject.parent.remove( object );\n\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push( object );\n\n\t\t\t\tobject.dispatchEvent( _addedEvent );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( \"THREE.Object3D.add: object not an instance of THREE.Object3D.\", object );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tremove: function ( object ) {\n\n\t\t\tif ( arguments.length > 1 ) {\n\n\t\t\t\tfor ( var i = 0; i < arguments.length; i ++ ) {\n\n\t\t\t\t\tthis.remove( arguments[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar index = this.children.indexOf( object );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice( index, 1 );\n\n\t\t\t\tobject.dispatchEvent( _removedEvent );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tattach: function ( object ) {\n\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\n\t\t\tthis.updateWorldMatrix( true, false );\n\n\t\t\t_m1$1.getInverse( this.matrixWorld );\n\n\t\t\tif ( object.parent !== null ) {\n\n\t\t\t\tobject.parent.updateWorldMatrix( true, false );\n\n\t\t\t\t_m1$1.multiply( object.parent.matrixWorld );\n\n\t\t\t}\n\n\t\t\tobject.applyMatrix( _m1$1 );\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectById: function ( id ) {\n\n\t\t\treturn this.getObjectByProperty( 'id', id );\n\n\t\t},\n\n\t\tgetObjectByName: function ( name ) {\n\n\t\t\treturn this.getObjectByProperty( 'name', name );\n\n\t\t},\n\n\t\tgetObjectByProperty: function ( name, value ) {\n\n\t\t\tif ( this[ name ] === value ) { return this; }\n\n\t\t\tfor ( var i = 0, l = this.children.length; i < l; i ++ ) {\n\n\t\t\t\tvar child = this.children[ i ];\n\t\t\t\tvar object = child.getObjectByProperty( name, value );\n\n\t\t\t\tif ( object !== undefined ) {\n\n\t\t\t\t\treturn object;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t},\n\n\t\tgetWorldPosition: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldPosition() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\treturn target.setFromMatrixPosition( this.matrixWorld );\n\n\t\t},\n\n\t\tgetWorldQuaternion: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldQuaternion() target is now required' );\n\t\t\t\ttarget = new Quaternion();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, target, _scale );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldScale: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldScale() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tthis.matrixWorld.decompose( _position, _quaternion$2, target );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( e[ 8 ], e[ 9 ], e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\traycast: function () {},\n\n\t\ttraverse: function ( callback ) {\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverse( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseVisible: function ( callback ) {\n\n\t\t\tif ( this.visible === false ) { return; }\n\n\t\t\tcallback( this );\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].traverseVisible( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttraverseAncestors: function ( callback ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tcallback( parent );\n\n\t\t\t\tparent.traverseAncestors( callback );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrix: function () {\n\n\t\t\tthis.matrix.compose( this.position, this.quaternion, this.scale );\n\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.matrixWorldNeedsUpdate || force ) {\n\n\t\t\t\tif ( this.parent === null ) {\n\n\t\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\n\t\t\t\tforce = true;\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tvar children = this.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tchildren[ i ].updateMatrixWorld( force );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateWorldMatrix: function ( updateParents, updateChildren ) {\n\n\t\t\tvar parent = this.parent;\n\n\t\t\tif ( updateParents === true && parent !== null ) {\n\n\t\t\t\tparent.updateWorldMatrix( true, false );\n\n\t\t\t}\n\n\t\t\tif ( this.matrixAutoUpdate ) { this.updateMatrix(); }\n\n\t\t\tif ( this.parent === null ) {\n\n\t\t\t\tthis.matrixWorld.copy( this.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tthis.matrixWorld.multiplyMatrices( this.parent.matrixWorld, this.matrix );\n\n\t\t\t}\n\n\t\t\t// update children\n\n\t\t\tif ( updateChildren === true ) {\n\n\t\t\t\tvar children = this.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateWorldMatrix( false, true );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tvar isRootObject = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tvar output = {};\n\n\t\t\t// meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {}\n\t\t\t\t};\n\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\t// standard Object3D serialization\n\n\t\t\tvar object = {};\n\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { object.name = this.name; }\n\t\t\tif ( this.castShadow === true ) { object.castShadow = true; }\n\t\t\tif ( this.receiveShadow === true ) { object.receiveShadow = true; }\n\t\t\tif ( this.visible === false ) { object.visible = false; }\n\t\t\tif ( this.frustumCulled === false ) { object.frustumCulled = false; }\n\t\t\tif ( this.renderOrder !== 0 ) { object.renderOrder = this.renderOrder; }\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { object.userData = this.userData; }\n\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\n\t\t\tif ( this.matrixAutoUpdate === false ) { object.matrixAutoUpdate = false; }\n\n\t\t\t// object specific properties\n\n\t\t\tif ( this.isMesh && this.drawMode !== TrianglesDrawMode ) { object.drawMode = this.drawMode; }\n\n\t\t\tif ( this.isInstancedMesh ) {\n\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfunction serialize( library, element ) {\n\n\t\t\t\tif ( library[ element.uuid ] === undefined ) {\n\n\t\t\t\t\tlibrary[ element.uuid ] = element.toJSON( meta );\n\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.isMesh || this.isLine || this.isPoints ) {\n\n\t\t\t\tobject.geometry = serialize( meta.geometries, this.geometry );\n\n\t\t\t\tvar parameters = this.geometry.parameters;\n\n\t\t\t\tif ( parameters !== undefined && parameters.shapes !== undefined ) {\n\n\t\t\t\t\tvar shapes = parameters.shapes;\n\n\t\t\t\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\t\t\t\tserialize( meta.shapes, shape );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tserialize( meta.shapes, shapes );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.material !== undefined ) {\n\n\t\t\t\tif ( Array.isArray( this.material ) ) {\n\n\t\t\t\t\tvar uuids = [];\n\n\t\t\t\t\tfor ( var i = 0, l = this.material.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tuuids.push( serialize( meta.materials, this.material[ i ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tobject.material = serialize( meta.materials, this.material );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.children.length > 0 ) {\n\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor ( var i = 0; i < this.children.length; i ++ ) {\n\n\t\t\t\t\tobject.children.push( this.children[ i ].toJSON( meta ).object );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( isRootObject ) {\n\n\t\t\t\tvar geometries = extractFromCache( meta.geometries );\n\t\t\t\tvar materials = extractFromCache( meta.materials );\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\t\t\t\tvar shapes = extractFromCache( meta.shapes );\n\n\t\t\t\tif ( geometries.length > 0 ) { output.geometries = geometries; }\n\t\t\t\tif ( materials.length > 0 ) { output.materials = materials; }\n\t\t\t\tif ( textures.length > 0 ) { output.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { output.images = images; }\n\t\t\t\tif ( shapes.length > 0 ) { output.shapes = shapes; }\n\n\t\t\t}\n\n\t\t\toutput.object = object;\n\n\t\t\treturn output;\n\n\t\t\t// extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function ( recursive ) {\n\n\t\t\treturn new this.constructor().copy( this, recursive );\n\n\t\t},\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tif ( recursive === undefined ) { recursive = true; }\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.up.copy( source.up );\n\n\t\t\tthis.position.copy( source.position );\n\t\t\tthis.quaternion.copy( source.quaternion );\n\t\t\tthis.scale.copy( source.scale );\n\n\t\t\tthis.matrix.copy( source.matrix );\n\t\t\tthis.matrixWorld.copy( source.matrixWorld );\n\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\tif ( recursive === true ) {\n\n\t\t\t\tfor ( var i = 0; i < source.children.length; i ++ ) {\n\n\t\t\t\t\tvar child = source.children[ i ];\n\t\t\t\t\tthis.add( child.clone() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Scene() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Scene';\n\n\t\tthis.background = null;\n\t\tthis.fog = null;\n\t\tthis.overrideMaterial = null;\n\n\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\tScene.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Scene,\n\n\t\tisScene: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tif ( source.background !== null ) { this.background = source.background.clone(); }\n\t\t\tif ( source.fog !== null ) { this.fog = source.fog.clone(); }\n\t\t\tif ( source.overrideMaterial !== null ) { this.overrideMaterial = source.overrideMaterial.clone(); }\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.background !== null ) { data.object.background = this.background.toJSON( meta ); }\n\t\t\tif ( this.fog !== null ) { data.object.fog = this.fog.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\tvar _points = [\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3(),\n\t\tnew Vector3()\n\t];\n\n\tvar _vector$2 = new Vector3();\n\n\tvar _box = new Box3();\n\n\t// triangle centered vertices\n\n\tvar _v0 = new Vector3();\n\tvar _v1$2 = new Vector3();\n\tvar _v2 = new Vector3();\n\n\t// triangle edge vectors\n\n\tvar _f0 = new Vector3();\n\tvar _f1 = new Vector3();\n\tvar _f2 = new Vector3();\n\n\tvar _center = new Vector3();\n\tvar _extents = new Vector3();\n\tvar _triangleNormal = new Vector3();\n\tvar _testAxis = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector3( + Infinity, + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector3( - Infinity, - Infinity, - Infinity );\n\n\t}\n\n\n\tObject.assign( Box3.prototype, {\n\n\t\tisBox3: true,\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromArray: function ( array ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\tvar x = array[ i ];\n\t\t\t\tvar y = array[ i + 1 ];\n\t\t\t\tvar z = array[ i + 2 ];\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromBufferAttribute: function ( attribute ) {\n\n\t\t\tvar minX = + Infinity;\n\t\t\tvar minY = + Infinity;\n\t\t\tvar minZ = + Infinity;\n\n\t\t\tvar maxX = - Infinity;\n\t\t\tvar maxY = - Infinity;\n\t\t\tvar maxZ = - Infinity;\n\n\t\t\tfor ( var i = 0, l = attribute.count; i < l; i ++ ) {\n\n\t\t\t\tvar x = attribute.getX( i );\n\t\t\t\tvar y = attribute.getY( i );\n\t\t\t\tvar z = attribute.getZ( i );\n\n\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\tif ( z < minZ ) { minZ = z; }\n\n\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\tif ( y > maxY ) { maxY = y; }\n\t\t\t\tif ( z > maxZ ) { maxZ = z; }\n\n\t\t\t}\n\n\t\t\tthis.min.set( minX, minY, minZ );\n\t\t\tthis.max.set( maxX, maxY, maxZ );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$2.copy( size ).multiplyScalar( 0.5 );\n\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\treturn this.expandByObject( object );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = this.min.z = + Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y ) || ( this.max.z < this.min.z );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByObject: function ( object ) {\n\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\n\t\t\tobject.updateWorldMatrix( false, false );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry !== undefined ) {\n\n\t\t\t\tif ( geometry.boundingBox === null ) {\n\n\t\t\t\t\tgeometry.computeBoundingBox();\n\n\t\t\t\t}\n\n\t\t\t\t_box.copy( geometry.boundingBox );\n\t\t\t\t_box.applyMatrix4( object.matrixWorld );\n\n\t\t\t\tthis.expandByPoint( _box.min );\n\t\t\t\tthis.expandByPoint( _box.max );\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tthis.expandByObject( children[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ||\n\t\t\t\tpoint.z < this.min.z || point.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y &&\n\t\t\t\tthis.min.z <= box.min.z && box.max.z <= this.max.z;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y ),\n\t\t\t\t( point.z - this.min.z ) / ( this.max.z - this.min.z )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ||\n\t\t\t\tbox.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint( sphere.center, _vector$2 );\n\n\t\t\t// If that point is inside the sphere, the AABB and sphere intersect.\n\t\t\treturn _vector$2.distanceToSquared( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\n\t\t\tvar min, max;\n\n\t\t\tif ( plane.normal.x > 0 ) {\n\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\n\t\t\t} else {\n\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.y > 0 ) {\n\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\n\t\t\t}\n\n\t\t\tif ( plane.normal.z > 0 ) {\n\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\n\t\t\t} else {\n\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\n\t\t\t}\n\n\t\t\treturn ( min <= - plane.constant && max >= - plane.constant );\n\n\t\t},\n\n\t\tintersectsTriangle: function ( triangle ) {\n\n\t\t\tif ( this.isEmpty() ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// compute box center and extents\n\t\t\tthis.getCenter( _center );\n\t\t\t_extents.subVectors( this.max, _center );\n\n\t\t\t// translate triangle to aabb origin\n\t\t\t_v0.subVectors( triangle.a, _center );\n\t\t\t_v1$2.subVectors( triangle.b, _center );\n\t\t\t_v2.subVectors( triangle.c, _center );\n\n\t\t\t// compute edge vectors for triangle\n\t\t\t_f0.subVectors( _v1$2, _v0 );\n\t\t\t_f1.subVectors( _v2, _v1$2 );\n\t\t\t_f2.subVectors( _v0, _v2 );\n\n\t\t\t// test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\t\t\tvar axes = [\n\t\t\t\t0, - _f0.z, _f0.y, 0, - _f1.z, _f1.y, 0, - _f2.z, _f2.y,\n\t\t\t\t_f0.z, 0, - _f0.x, _f1.z, 0, - _f1.x, _f2.z, 0, - _f2.x,\n\t\t\t\t- _f0.y, _f0.x, 0, - _f1.y, _f1.x, 0, - _f2.y, _f2.x, 0\n\t\t\t];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// test 3 face normals from the aabb\n\t\t\taxes = [ 1, 0, 0, 0, 1, 0, 0, 0, 1 ];\n\t\t\tif ( ! satForAxes( axes, _v0, _v1$2, _v2, _extents ) ) {\n\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\t// finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\t\t\t_triangleNormal.crossVectors( _f0, _f1 );\n\t\t\taxes = [ _triangleNormal.x, _triangleNormal.y, _triangleNormal.z ];\n\n\t\t\treturn satForAxes( axes, _v0, _v1$2, _v2, _extents );\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box3: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$2.copy( point ).clamp( this.min, this.max );\n\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tgetBoundingSphere: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Box3: .getBoundingSphere() target is now required' );\n\t\t\t\t//target = new Sphere(); // removed to avoid cyclic dependency\n\n\t\t\t}\n\n\t\t\tthis.getCenter( target.center );\n\n\t\t\ttarget.radius = this.getSize( _vector$2 ).length() * 0.5;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\t// ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\t\t\tif ( this.isEmpty() ) { this.makeEmpty(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif ( this.isEmpty() ) { return this; }\n\n\t\t\t// NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\t\t\t_points[ 0 ].set( this.min.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 000\n\t\t\t_points[ 1 ].set( this.min.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 001\n\t\t\t_points[ 2 ].set( this.min.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 010\n\t\t\t_points[ 3 ].set( this.min.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 011\n\t\t\t_points[ 4 ].set( this.max.x, this.min.y, this.min.z ).applyMatrix4( matrix ); // 100\n\t\t\t_points[ 5 ].set( this.max.x, this.min.y, this.max.z ).applyMatrix4( matrix ); // 101\n\t\t\t_points[ 6 ].set( this.max.x, this.max.y, this.min.z ).applyMatrix4( matrix ); // 110\n\t\t\t_points[ 7 ].set( this.max.x, this.max.y, this.max.z ).applyMatrix4( matrix ); // 111\n\n\t\t\tthis.setFromPoints( _points );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\tfunction satForAxes( axes, v0, v1, v2, extents ) {\n\n\t\tvar i, j;\n\n\t\tfor ( i = 0, j = axes.length - 3; i <= j; i += 3 ) {\n\n\t\t\t_testAxis.fromArray( axes, i );\n\t\t\t// project the aabb onto the seperating axis\n\t\t\tvar r = extents.x * Math.abs( _testAxis.x ) + extents.y * Math.abs( _testAxis.y ) + extents.z * Math.abs( _testAxis.z );\n\t\t\t// project all 3 vertices of the triangle onto the seperating axis\n\t\t\tvar p0 = v0.dot( _testAxis );\n\t\t\tvar p1 = v1.dot( _testAxis );\n\t\t\tvar p2 = v2.dot( _testAxis );\n\t\t\t// actual test, basically see if either of the most extreme of the triangle points intersects r\n\t\t\tif ( Math.max( - Math.max( p0, p1, p2 ), Math.min( p0, p1, p2 ) ) > r ) {\n\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tvar _box$1 = new Box3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Sphere( center, radius ) {\n\n\t\tthis.center = ( center !== undefined ) ? center : new Vector3();\n\t\tthis.radius = ( radius !== undefined ) ? radius : 0;\n\n\t}\n\n\tObject.assign( Sphere.prototype, {\n\n\t\tset: function ( center, radius ) {\n\n\t\t\tthis.center.copy( center );\n\t\t\tthis.radius = radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points, optionalCenter ) {\n\n\t\t\tvar center = this.center;\n\n\t\t\tif ( optionalCenter !== undefined ) {\n\n\t\t\t\tcenter.copy( optionalCenter );\n\n\t\t\t} else {\n\n\t\t\t\t_box$1.setFromPoints( points ).getCenter( center );\n\n\t\t\t}\n\n\t\t\tvar maxRadiusSq = 0;\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( points[ i ] ) );\n\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( sphere ) {\n\n\t\t\tthis.center.copy( sphere.center );\n\t\t\tthis.radius = sphere.radius;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tempty: function () {\n\n\t\t\treturn ( this.radius <= 0 );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceToSquared( this.center ) <= ( this.radius * this.radius ) );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn ( point.distanceTo( this.center ) - this.radius );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar radiusSum = this.radius + sphere.radius;\n\n\t\t\treturn sphere.center.distanceToSquared( this.center ) <= ( radiusSum * radiusSum );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsSphere( this );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\treturn Math.abs( plane.distanceToPoint( this.center ) ) <= this.radius;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tvar deltaLengthSq = this.center.distanceToSquared( point );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.copy( point );\n\n\t\t\tif ( deltaLengthSq > ( this.radius * this.radius ) ) {\n\n\t\t\t\ttarget.sub( this.center ).normalize();\n\t\t\t\ttarget.multiplyScalar( this.radius ).add( this.center );\n\n\t\t\t}\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetBoundingBox: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Sphere: .getBoundingBox() target is now required' );\n\t\t\t\ttarget = new Box3();\n\n\t\t\t}\n\n\t\t\ttarget.set( this.center, this.center );\n\t\t\ttarget.expandByScalar( this.radius );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.center.applyMatrix4( matrix );\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.center.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sphere ) {\n\n\t\t\treturn sphere.center.equals( this.center ) && ( sphere.radius === this.radius );\n\n\t\t}\n\n\t} );\n\n\tvar _vector$3 = new Vector3();\n\tvar _segCenter = new Vector3();\n\tvar _segDir = new Vector3();\n\tvar _diff = new Vector3();\n\n\tvar _edge1 = new Vector3();\n\tvar _edge2 = new Vector3();\n\tvar _normal = new Vector3();\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tfunction Ray( origin, direction ) {\n\n\t\tthis.origin = ( origin !== undefined ) ? origin : new Vector3();\n\t\tthis.direction = ( direction !== undefined ) ? direction : new Vector3();\n\n\t}\n\n\tObject.assign( Ray.prototype, {\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\tthis.origin.copy( origin );\n\t\t\tthis.direction.copy( direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( ray ) {\n\n\t\t\tthis.origin.copy( ray.origin );\n\t\t\tthis.direction.copy( ray.direction );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( t ).add( this.origin );\n\n\t\t},\n\n\t\tlookAt: function ( v ) {\n\n\t\t\tthis.direction.copy( v ).sub( this.origin ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trecast: function ( t ) {\n\n\t\t\tthis.origin.copy( this.at( t, _vector$3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Ray: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( point, this.origin );\n\n\t\t\tvar directionDistance = target.dot( this.direction );\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn target.copy( this.origin );\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn Math.sqrt( this.distanceSqToPoint( point ) );\n\n\t\t},\n\n\t\tdistanceSqToPoint: function ( point ) {\n\n\t\t\tvar directionDistance = _vector$3.subVectors( point, this.origin ).dot( this.direction );\n\n\t\t\t// point behind the ray\n\n\t\t\tif ( directionDistance < 0 ) {\n\n\t\t\t\treturn this.origin.distanceToSquared( point );\n\n\t\t\t}\n\n\t\t\t_vector$3.copy( this.direction ).multiplyScalar( directionDistance ).add( this.origin );\n\n\t\t\treturn _vector$3.distanceToSquared( point );\n\n\t\t},\n\n\t\tdistanceSqToSegment: function ( v0, v1, optionalPointOnRay, optionalPointOnSegment ) {\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\n\t\t\t_segCenter.copy( v0 ).add( v1 ).multiplyScalar( 0.5 );\n\t\t\t_segDir.copy( v1 ).sub( v0 ).normalize();\n\t\t\t_diff.copy( this.origin ).sub( _segCenter );\n\n\t\t\tvar segExtent = v0.distanceTo( v1 ) * 0.5;\n\t\t\tvar a01 = - this.direction.dot( _segDir );\n\t\t\tvar b0 = _diff.dot( this.direction );\n\t\t\tvar b1 = - _diff.dot( _segDir );\n\t\t\tvar c = _diff.lengthSq();\n\t\t\tvar det = Math.abs( 1 - a01 * a01 );\n\t\t\tvar s0, s1, sqrDist, extDet;\n\n\t\t\tif ( det > 0 ) {\n\n\t\t\t\t// The ray and segment are not parallel.\n\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif ( s0 >= 0 ) {\n\n\t\t\t\t\tif ( s1 >= - extDet ) {\n\n\t\t\t\t\t\tif ( s1 <= extDet ) {\n\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\n\t\t\t\t\t\t\tvar invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * ( s0 + a01 * s1 + 2 * b0 ) + s1 * ( a01 * s0 + s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// region 1\n\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 5\n\n\t\t\t\t\t\ts1 = - segExtent;\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( s1 <= - extDet ) {\n\n\t\t\t\t\t\t// region 4\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( - a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? - segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else if ( s1 <= extDet ) {\n\n\t\t\t\t\t\t// region 3\n\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// region 2\n\n\t\t\t\t\t\ts0 = Math.max( 0, - ( a01 * segExtent + b0 ) );\n\t\t\t\t\t\ts1 = ( s0 > 0 ) ? segExtent : Math.min( Math.max( - segExtent, - b1 ), segExtent );\n\t\t\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Ray and segment are parallel.\n\n\t\t\t\ts1 = ( a01 > 0 ) ? - segExtent : segExtent;\n\t\t\t\ts0 = Math.max( 0, - ( a01 * s1 + b0 ) );\n\t\t\t\tsqrDist = - s0 * s0 + s1 * ( s1 + 2 * b1 ) + c;\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnRay ) {\n\n\t\t\t\toptionalPointOnRay.copy( this.direction ).multiplyScalar( s0 ).add( this.origin );\n\n\t\t\t}\n\n\t\t\tif ( optionalPointOnSegment ) {\n\n\t\t\t\toptionalPointOnSegment.copy( _segDir ).multiplyScalar( s1 ).add( _segCenter );\n\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\n\t\t},\n\n\t\tintersectSphere: function ( sphere, target ) {\n\n\t\t\t_vector$3.subVectors( sphere.center, this.origin );\n\t\t\tvar tca = _vector$3.dot( this.direction );\n\t\t\tvar d2 = _vector$3.dot( _vector$3 ) - tca * tca;\n\t\t\tvar radius2 = sphere.radius * sphere.radius;\n\n\t\t\tif ( d2 > radius2 ) { return null; }\n\n\t\t\tvar thc = Math.sqrt( radius2 - d2 );\n\n\t\t\t// t0 = first intersect point - entrance on front of sphere\n\t\t\tvar t0 = tca - thc;\n\n\t\t\t// t1 = second intersect point - exit point on back of sphere\n\t\t\tvar t1 = tca + thc;\n\n\t\t\t// test to see if both t0 and t1 are behind the ray - if so, return null\n\t\t\tif ( t0 < 0 && t1 < 0 ) { return null; }\n\n\t\t\t// test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\t\t\tif ( t0 < 0 ) { return this.at( t1, target ); }\n\n\t\t\t// else t0 is in front of the ray, so return the first collision point scaled by t0\n\t\t\treturn this.at( t0, target );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceSqToPoint( sphere.center ) <= ( sphere.radius * sphere.radius );\n\n\t\t},\n\n\t\tdistanceToPlane: function ( plane ) {\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( plane.distanceToPoint( this.origin ) === 0 ) {\n\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\t// Null is preferable to undefined since undefined means.... it is undefined\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar t = - ( this.origin.dot( plane.normal ) + plane.constant ) / denominator;\n\n\t\t\t// Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\n\t\t},\n\n\t\tintersectPlane: function ( plane, target ) {\n\n\t\t\tvar t = this.distanceToPlane( plane );\n\n\t\t\tif ( t === null ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\treturn this.at( t, target );\n\n\t\t},\n\n\t\tintersectsPlane: function ( plane ) {\n\n\t\t\t// check if the ray lies on the plane first\n\n\t\t\tvar distToPoint = plane.distanceToPoint( this.origin );\n\n\t\t\tif ( distToPoint === 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\tvar denominator = plane.normal.dot( this.direction );\n\n\t\t\tif ( denominator * distToPoint < 0 ) {\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\t// ray origin is behind the plane (and is pointing behind it)\n\n\t\t\treturn false;\n\n\t\t},\n\n\t\tintersectBox: function ( box, target ) {\n\n\t\t\tvar tmin, tmax, tymin, tymax, tzmin, tzmax;\n\n\t\t\tvar invdirx = 1 / this.direction.x,\n\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\tinvdirz = 1 / this.direction.z;\n\n\t\t\tvar origin = this.origin;\n\n\t\t\tif ( invdirx >= 0 ) {\n\n\t\t\t\ttmin = ( box.min.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.max.x - origin.x ) * invdirx;\n\n\t\t\t} else {\n\n\t\t\t\ttmin = ( box.max.x - origin.x ) * invdirx;\n\t\t\t\ttmax = ( box.min.x - origin.x ) * invdirx;\n\n\t\t\t}\n\n\t\t\tif ( invdiry >= 0 ) {\n\n\t\t\t\ttymin = ( box.min.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.max.y - origin.y ) * invdiry;\n\n\t\t\t} else {\n\n\t\t\t\ttymin = ( box.max.y - origin.y ) * invdiry;\n\t\t\t\ttymax = ( box.min.y - origin.y ) * invdiry;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tymax ) || ( tymin > tmax ) ) { return null; }\n\n\t\t\t// These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif ( tymin > tmin || tmin !== tmin ) { tmin = tymin; }\n\n\t\t\tif ( tymax < tmax || tmax !== tmax ) { tmax = tymax; }\n\n\t\t\tif ( invdirz >= 0 ) {\n\n\t\t\t\ttzmin = ( box.min.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.max.z - origin.z ) * invdirz;\n\n\t\t\t} else {\n\n\t\t\t\ttzmin = ( box.max.z - origin.z ) * invdirz;\n\t\t\t\ttzmax = ( box.min.z - origin.z ) * invdirz;\n\n\t\t\t}\n\n\t\t\tif ( ( tmin > tzmax ) || ( tzmin > tmax ) ) { return null; }\n\n\t\t\tif ( tzmin > tmin || tmin !== tmin ) { tmin = tzmin; }\n\n\t\t\tif ( tzmax < tmax || tmax !== tmax ) { tmax = tzmax; }\n\n\t\t\t//return point closest to the ray (positive side)\n\n\t\t\tif ( tmax < 0 ) { return null; }\n\n\t\t\treturn this.at( tmin >= 0 ? tmin : tmax, target );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn this.intersectBox( box, _vector$3 ) !== null;\n\n\t\t},\n\n\t\tintersectTriangle: function ( a, b, c, backfaceCulling, target ) {\n\n\t\t\t// Compute the offset origin, edges, and normal.\n\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\n\t\t\t_edge1.subVectors( b, a );\n\t\t\t_edge2.subVectors( c, a );\n\t\t\t_normal.crossVectors( _edge1, _edge2 );\n\n\t\t\t// Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//   |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//   |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//   |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\t\t\tvar DdN = this.direction.dot( _normal );\n\t\t\tvar sign;\n\n\t\t\tif ( DdN > 0 ) {\n\n\t\t\t\tif ( backfaceCulling ) { return null; }\n\t\t\t\tsign = 1;\n\n\t\t\t} else if ( DdN < 0 ) {\n\n\t\t\t\tsign = - 1;\n\t\t\t\tDdN = - DdN;\n\n\t\t\t} else {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t_diff.subVectors( this.origin, a );\n\t\t\tvar DdQxE2 = sign * this.direction.dot( _edge2.crossVectors( _diff, _edge2 ) );\n\n\t\t\t// b1 < 0, no intersection\n\t\t\tif ( DdQxE2 < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar DdE1xQ = sign * this.direction.dot( _edge1.cross( _diff ) );\n\n\t\t\t// b2 < 0, no intersection\n\t\t\tif ( DdE1xQ < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// b1+b2 > 1, no intersection\n\t\t\tif ( DdQxE2 + DdE1xQ > DdN ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Line intersects triangle, check if ray does.\n\t\t\tvar QdN = - sign * _diff.dot( _normal );\n\n\t\t\t// t < 0, no intersection\n\t\t\tif ( QdN < 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\t// Ray intersects triangle.\n\t\t\treturn this.at( QdN / DdN, target );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix4 ) {\n\n\t\t\tthis.origin.applyMatrix4( matrix4 );\n\t\t\tthis.direction.transformDirection( matrix4 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( ray ) {\n\n\t\t\treturn ray.origin.equals( this.origin ) && ray.direction.equals( this.direction );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector1 = new Vector3();\n\tvar _vector2 = new Vector3();\n\tvar _normalMatrix = new Matrix3();\n\n\tfunction Plane( normal, constant ) {\n\n\t\t// normal is assumed to be normalized\n\n\t\tthis.normal = ( normal !== undefined ) ? normal : new Vector3( 1, 0, 0 );\n\t\tthis.constant = ( constant !== undefined ) ? constant : 0;\n\n\t}\n\n\tObject.assign( Plane.prototype, {\n\n\t\tisPlane: true,\n\n\t\tset: function ( normal, constant ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetComponents: function ( x, y, z, w ) {\n\n\t\t\tthis.normal.set( x, y, z );\n\t\t\tthis.constant = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromNormalAndCoplanarPoint: function ( normal, point ) {\n\n\t\t\tthis.normal.copy( normal );\n\t\t\tthis.constant = - point.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCoplanarPoints: function ( a, b, c ) {\n\n\t\t\tvar normal = _vector1.subVectors( c, b ).cross( _vector2.subVectors( a, b ) ).normalize();\n\n\t\t\t// Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\t\t\tthis.setFromNormalAndCoplanarPoint( normal, a );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( plane ) {\n\n\t\t\tthis.normal.copy( plane.normal );\n\t\t\tthis.constant = plane.constant;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\n\t\t\tvar inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar( inverseNormalLength );\n\t\t\tthis.constant *= inverseNormalLength;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnegate: function () {\n\n\t\t\tthis.constant *= - 1;\n\t\t\tthis.normal.negate();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\treturn this.normal.dot( point ) + this.constant;\n\n\t\t},\n\n\t\tdistanceToSphere: function ( sphere ) {\n\n\t\t\treturn this.distanceToPoint( sphere.center ) - sphere.radius;\n\n\t\t},\n\n\t\tprojectPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .projectPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.distanceToPoint( point ) ).add( point );\n\n\t\t},\n\n\t\tintersectLine: function ( line, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .intersectLine() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar direction = line.delta( _vector1 );\n\n\t\t\tvar denominator = this.normal.dot( direction );\n\n\t\t\tif ( denominator === 0 ) {\n\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif ( this.distanceToPoint( line.start ) === 0 ) {\n\n\t\t\t\t\treturn target.copy( line.start );\n\n\t\t\t\t}\n\n\t\t\t\t// Unsure if this is the correct method to handle this case.\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\tvar t = - ( line.start.dot( this.normal ) + this.constant ) / denominator;\n\n\t\t\tif ( t < 0 || t > 1 ) {\n\n\t\t\t\treturn undefined;\n\n\t\t\t}\n\n\t\t\treturn target.copy( direction ).multiplyScalar( t ).add( line.start );\n\n\t\t},\n\n\t\tintersectsLine: function ( line ) {\n\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\n\t\t\tvar startSign = this.distanceToPoint( line.start );\n\t\t\tvar endSign = this.distanceToPoint( line.end );\n\n\t\t\treturn ( startSign < 0 && endSign > 0 ) || ( endSign < 0 && startSign > 0 );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsPlane( this );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\treturn sphere.intersectsPlane( this );\n\n\t\t},\n\n\t\tcoplanarPoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Plane: .coplanarPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.copy( this.normal ).multiplyScalar( - this.constant );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix, optionalNormalMatrix ) {\n\n\t\t\tvar normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix( matrix );\n\n\t\t\tvar referencePoint = this.coplanarPoint( _vector1 ).applyMatrix4( matrix );\n\n\t\t\tvar normal = this.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\tthis.constant = - referencePoint.dot( normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.constant -= offset.dot( this.normal );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( plane ) {\n\n\t\t\treturn plane.normal.equals( this.normal ) && ( plane.constant === this.constant );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v0$1 = new Vector3();\n\tvar _v1$3 = new Vector3();\n\tvar _v2$1 = new Vector3();\n\tvar _v3 = new Vector3();\n\n\tvar _vab = new Vector3();\n\tvar _vac = new Vector3();\n\tvar _vbc = new Vector3();\n\tvar _vap = new Vector3();\n\tvar _vbp = new Vector3();\n\tvar _vcp = new Vector3();\n\n\tfunction Triangle( a, b, c ) {\n\n\t\tthis.a = ( a !== undefined ) ? a : new Vector3();\n\t\tthis.b = ( b !== undefined ) ? b : new Vector3();\n\t\tthis.c = ( c !== undefined ) ? c : new Vector3();\n\n\t}\n\n\tObject.assign( Triangle, {\n\n\t\tgetNormal: function ( a, b, c, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getNormal() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\ttarget.subVectors( c, b );\n\t\t\t_v0$1.subVectors( a, b );\n\t\t\ttarget.cross( _v0$1 );\n\n\t\t\tvar targetLengthSq = target.lengthSq();\n\t\t\tif ( targetLengthSq > 0 ) {\n\n\t\t\t\treturn target.multiplyScalar( 1 / Math.sqrt( targetLengthSq ) );\n\n\t\t\t}\n\n\t\t\treturn target.set( 0, 0, 0 );\n\n\t\t},\n\n\t\t// static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\t\tgetBarycoord: function ( point, a, b, c, target ) {\n\n\t\t\t_v0$1.subVectors( c, a );\n\t\t\t_v1$3.subVectors( b, a );\n\t\t\t_v2$1.subVectors( point, a );\n\n\t\t\tvar dot00 = _v0$1.dot( _v0$1 );\n\t\t\tvar dot01 = _v0$1.dot( _v1$3 );\n\t\t\tvar dot02 = _v0$1.dot( _v2$1 );\n\t\t\tvar dot11 = _v1$3.dot( _v1$3 );\n\t\t\tvar dot12 = _v1$3.dot( _v2$1 );\n\n\t\t\tvar denom = ( dot00 * dot11 - dot01 * dot01 );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getBarycoord() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\t// collinear or singular triangle\n\t\t\tif ( denom === 0 ) {\n\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set( - 2, - 1, - 1 );\n\n\t\t\t}\n\n\t\t\tvar invDenom = 1 / denom;\n\t\t\tvar u = ( dot11 * dot02 - dot01 * dot12 ) * invDenom;\n\t\t\tvar v = ( dot00 * dot12 - dot01 * dot02 ) * invDenom;\n\n\t\t\t// barycentric coordinates must always sum to 1\n\t\t\treturn target.set( 1 - u - v, v, u );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point, a, b, c ) {\n\n\t\t\tTriangle.getBarycoord( point, a, b, c, _v3 );\n\n\t\t\treturn ( _v3.x >= 0 ) && ( _v3.y >= 0 ) && ( ( _v3.x + _v3.y ) <= 1 );\n\n\t\t},\n\n\t\tgetUV: function ( point, p1, p2, p3, uv1, uv2, uv3, target ) {\n\n\t\t\tthis.getBarycoord( point, p1, p2, p3, _v3 );\n\n\t\t\ttarget.set( 0, 0 );\n\t\t\ttarget.addScaledVector( uv1, _v3.x );\n\t\t\ttarget.addScaledVector( uv2, _v3.y );\n\t\t\ttarget.addScaledVector( uv3, _v3.z );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tisFrontFacing: function ( a, b, c, direction ) {\n\n\t\t\t_v0$1.subVectors( c, b );\n\t\t\t_v1$3.subVectors( a, b );\n\n\t\t\t// strictly front facing\n\t\t\treturn ( _v0$1.cross( _v1$3 ).dot( direction ) < 0 ) ? true : false;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tset: function ( a, b, c ) {\n\n\t\t\tthis.a.copy( a );\n\t\t\tthis.b.copy( b );\n\t\t\tthis.c.copy( c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPointsAndIndices: function ( points, i0, i1, i2 ) {\n\n\t\t\tthis.a.copy( points[ i0 ] );\n\t\t\tthis.b.copy( points[ i1 ] );\n\t\t\tthis.c.copy( points[ i2 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( triangle ) {\n\n\t\t\tthis.a.copy( triangle.a );\n\t\t\tthis.b.copy( triangle.b );\n\t\t\tthis.c.copy( triangle.c );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetArea: function () {\n\n\t\t\t_v0$1.subVectors( this.c, this.b );\n\t\t\t_v1$3.subVectors( this.a, this.b );\n\n\t\t\treturn _v0$1.cross( _v1$3 ).length() * 0.5;\n\n\t\t},\n\n\t\tgetMidpoint: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getMidpoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.a, this.b ).add( this.c ).multiplyScalar( 1 / 3 );\n\n\t\t},\n\n\t\tgetNormal: function ( target ) {\n\n\t\t\treturn Triangle.getNormal( this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetPlane: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .getPlane() target is now required' );\n\t\t\t\ttarget = new Plane();\n\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints( this.a, this.b, this.c );\n\n\t\t},\n\n\t\tgetBarycoord: function ( point, target ) {\n\n\t\t\treturn Triangle.getBarycoord( point, this.a, this.b, this.c, target );\n\n\t\t},\n\n\t\tgetUV: function ( point, uv1, uv2, uv3, target ) {\n\n\t\t\treturn Triangle.getUV( point, this.a, this.b, this.c, uv1, uv2, uv3, target );\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn Triangle.containsPoint( point, this.a, this.b, this.c );\n\n\t\t},\n\n\t\tisFrontFacing: function ( direction ) {\n\n\t\t\treturn Triangle.isFrontFacing( this.a, this.b, this.c, direction );\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\treturn box.intersectsTriangle( this );\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( p, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Triangle: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tvar a = this.a, b = this.b, c = this.c;\n\t\t\tvar v, w;\n\n\t\t\t// algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors( b, a );\n\t\t\t_vac.subVectors( c, a );\n\t\t\t_vap.subVectors( p, a );\n\t\t\tvar d1 = _vab.dot( _vap );\n\t\t\tvar d2 = _vac.dot( _vap );\n\t\t\tif ( d1 <= 0 && d2 <= 0 ) {\n\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy( a );\n\n\t\t\t}\n\n\t\t\t_vbp.subVectors( p, b );\n\t\t\tvar d3 = _vab.dot( _vbp );\n\t\t\tvar d4 = _vac.dot( _vbp );\n\t\t\tif ( d3 >= 0 && d4 <= d3 ) {\n\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy( b );\n\n\t\t\t}\n\n\t\t\tvar vc = d1 * d4 - d3 * d2;\n\t\t\tif ( vc <= 0 && d1 >= 0 && d3 <= 0 ) {\n\n\t\t\t\tv = d1 / ( d1 - d3 );\n\t\t\t\t// edge region of AB; barycentric coords (1-v, v, 0)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vab, v );\n\n\t\t\t}\n\n\t\t\t_vcp.subVectors( p, c );\n\t\t\tvar d5 = _vab.dot( _vcp );\n\t\t\tvar d6 = _vac.dot( _vcp );\n\t\t\tif ( d6 >= 0 && d5 <= d6 ) {\n\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy( c );\n\n\t\t\t}\n\n\t\t\tvar vb = d5 * d2 - d1 * d6;\n\t\t\tif ( vb <= 0 && d2 >= 0 && d6 <= 0 ) {\n\n\t\t\t\tw = d2 / ( d2 - d6 );\n\t\t\t\t// edge region of AC; barycentric coords (1-w, 0, w)\n\t\t\t\treturn target.copy( a ).addScaledVector( _vac, w );\n\n\t\t\t}\n\n\t\t\tvar va = d3 * d6 - d5 * d4;\n\t\t\tif ( va <= 0 && ( d4 - d3 ) >= 0 && ( d5 - d6 ) >= 0 ) {\n\n\t\t\t\t_vbc.subVectors( c, b );\n\t\t\t\tw = ( d4 - d3 ) / ( ( d4 - d3 ) + ( d5 - d6 ) );\n\t\t\t\t// edge region of BC; barycentric coords (0, 1-w, w)\n\t\t\t\treturn target.copy( b ).addScaledVector( _vbc, w ); // edge region of BC\n\n\t\t\t}\n\n\t\t\t// face region\n\t\t\tvar denom = 1 / ( va + vb + vc );\n\t\t\t// u = va * denom\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\n\t\t\treturn target.copy( a ).addScaledVector( _vab, v ).addScaledVector( _vac, w );\n\n\t\t},\n\n\t\tequals: function ( triangle ) {\n\n\t\t\treturn triangle.a.equals( this.a ) && triangle.b.equals( this.b ) && triangle.c.equals( this.c );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _colorKeywords = { 'aliceblue': 0xF0F8FF, 'antiquewhite': 0xFAEBD7, 'aqua': 0x00FFFF, 'aquamarine': 0x7FFFD4, 'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC, 'bisque': 0xFFE4C4, 'black': 0x000000, 'blanchedalmond': 0xFFEBCD, 'blue': 0x0000FF, 'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A, 'burlywood': 0xDEB887, 'cadetblue': 0x5F9EA0, 'chartreuse': 0x7FFF00, 'chocolate': 0xD2691E, 'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED, 'cornsilk': 0xFFF8DC, 'crimson': 0xDC143C, 'cyan': 0x00FFFF, 'darkblue': 0x00008B, 'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B, 'darkgray': 0xA9A9A9, 'darkgreen': 0x006400, 'darkgrey': 0xA9A9A9, 'darkkhaki': 0xBDB76B, 'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F, 'darkorange': 0xFF8C00, 'darkorchid': 0x9932CC, 'darkred': 0x8B0000, 'darksalmon': 0xE9967A, 'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B, 'darkslategray': 0x2F4F4F, 'darkslategrey': 0x2F4F4F, 'darkturquoise': 0x00CED1, 'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493, 'deepskyblue': 0x00BFFF, 'dimgray': 0x696969, 'dimgrey': 0x696969, 'dodgerblue': 0x1E90FF, 'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0, 'forestgreen': 0x228B22, 'fuchsia': 0xFF00FF, 'gainsboro': 0xDCDCDC, 'ghostwhite': 0xF8F8FF, 'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520, 'gray': 0x808080, 'green': 0x008000, 'greenyellow': 0xADFF2F, 'grey': 0x808080, 'honeydew': 0xF0FFF0, 'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C, 'indigo': 0x4B0082, 'ivory': 0xFFFFF0, 'khaki': 0xF0E68C, 'lavender': 0xE6E6FA, 'lavenderblush': 0xFFF0F5, 'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD, 'lightblue': 0xADD8E6, 'lightcoral': 0xF08080, 'lightcyan': 0xE0FFFF, 'lightgoldenrodyellow': 0xFAFAD2, 'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90, 'lightgrey': 0xD3D3D3, 'lightpink': 0xFFB6C1, 'lightsalmon': 0xFFA07A, 'lightseagreen': 0x20B2AA, 'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899, 'lightslategrey': 0x778899, 'lightsteelblue': 0xB0C4DE, 'lightyellow': 0xFFFFE0, 'lime': 0x00FF00, 'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6, 'magenta': 0xFF00FF, 'maroon': 0x800000, 'mediumaquamarine': 0x66CDAA, 'mediumblue': 0x0000CD, 'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB, 'mediumseagreen': 0x3CB371, 'mediumslateblue': 0x7B68EE, 'mediumspringgreen': 0x00FA9A, 'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585, 'midnightblue': 0x191970, 'mintcream': 0xF5FFFA, 'mistyrose': 0xFFE4E1, 'moccasin': 0xFFE4B5, 'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080, 'oldlace': 0xFDF5E6, 'olive': 0x808000, 'olivedrab': 0x6B8E23, 'orange': 0xFFA500, 'orangered': 0xFF4500, 'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA, 'palegreen': 0x98FB98, 'paleturquoise': 0xAFEEEE, 'palevioletred': 0xDB7093, 'papayawhip': 0xFFEFD5, 'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F, 'pink': 0xFFC0CB, 'plum': 0xDDA0DD, 'powderblue': 0xB0E0E6, 'purple': 0x800080, 'rebeccapurple': 0x663399, 'red': 0xFF0000, 'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1, 'saddlebrown': 0x8B4513, 'salmon': 0xFA8072, 'sandybrown': 0xF4A460, 'seagreen': 0x2E8B57, 'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D, 'silver': 0xC0C0C0, 'skyblue': 0x87CEEB, 'slateblue': 0x6A5ACD, 'slategray': 0x708090, 'slategrey': 0x708090, 'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F, 'steelblue': 0x4682B4, 'tan': 0xD2B48C, 'teal': 0x008080, 'thistle': 0xD8BFD8, 'tomato': 0xFF6347, 'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE, 'wheat': 0xF5DEB3, 'white': 0xFFFFFF, 'whitesmoke': 0xF5F5F5, 'yellow': 0xFFFF00, 'yellowgreen': 0x9ACD32 };\n\n\tvar _hslA = { h: 0, s: 0, l: 0 };\n\tvar _hslB = { h: 0, s: 0, l: 0 };\n\n\tfunction Color( r, g, b ) {\n\n\t\tif ( g === undefined && b === undefined ) {\n\n\t\t\t// r is THREE.Color, hex or string\n\t\t\treturn this.set( r );\n\n\t\t}\n\n\t\treturn this.setRGB( r, g, b );\n\n\t}\n\n\tfunction hue2rgb( p, q, t ) {\n\n\t\tif ( t < 0 ) { t += 1; }\n\t\tif ( t > 1 ) { t -= 1; }\n\t\tif ( t < 1 / 6 ) { return p + ( q - p ) * 6 * t; }\n\t\tif ( t < 1 / 2 ) { return q; }\n\t\tif ( t < 2 / 3 ) { return p + ( q - p ) * 6 * ( 2 / 3 - t ); }\n\t\treturn p;\n\n\t}\n\n\tfunction SRGBToLinear( c ) {\n\n\t\treturn ( c < 0.04045 ) ? c * 0.0773993808 : Math.pow( c * 0.9478672986 + 0.0521327014, 2.4 );\n\n\t}\n\n\tfunction LinearToSRGB( c ) {\n\n\t\treturn ( c < 0.0031308 ) ? c * 12.92 : 1.055 * ( Math.pow( c, 0.41666 ) ) - 0.055;\n\n\t}\n\n\tObject.assign( Color.prototype, {\n\n\t\tisColor: true,\n\n\t\tr: 1, g: 1, b: 1,\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value && value.isColor ) {\n\n\t\t\t\tthis.copy( value );\n\n\t\t\t} else if ( typeof value === 'number' ) {\n\n\t\t\t\tthis.setHex( value );\n\n\t\t\t} else if ( typeof value === 'string' ) {\n\n\t\t\t\tthis.setStyle( value );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetScalar: function ( scalar ) {\n\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHex: function ( hex ) {\n\n\t\t\thex = Math.floor( hex );\n\n\t\t\tthis.r = ( hex >> 16 & 255 ) / 255;\n\t\t\tthis.g = ( hex >> 8 & 255 ) / 255;\n\t\t\tthis.b = ( hex & 255 ) / 255;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRGB: function ( r, g, b ) {\n\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetHSL: function ( h, s, l ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = _Math.euclideanModulo( h, 1 );\n\t\t\ts = _Math.clamp( s, 0, 1 );\n\t\t\tl = _Math.clamp( l, 0, 1 );\n\n\t\t\tif ( s === 0 ) {\n\n\t\t\t\tthis.r = this.g = this.b = l;\n\n\t\t\t} else {\n\n\t\t\t\tvar p = l <= 0.5 ? l * ( 1 + s ) : l + s - ( l * s );\n\t\t\t\tvar q = ( 2 * l ) - p;\n\n\t\t\t\tthis.r = hue2rgb( q, p, h + 1 / 3 );\n\t\t\t\tthis.g = hue2rgb( q, p, h );\n\t\t\t\tthis.b = hue2rgb( q, p, h - 1 / 3 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetStyle: function ( style ) {\n\n\t\t\tfunction handleAlpha( string ) {\n\n\t\t\t\tif ( string === undefined ) { return; }\n\n\t\t\t\tif ( parseFloat( string ) < 1 ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.Color: Alpha component of ' + style + ' will be ignored.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar m;\n\n\t\t\tif ( m = /^((?:rgb|hsl)a?)\\(\\s*([^\\)]*)\\)/.exec( style ) ) {\n\n\t\t\t\t// rgb / hsl\n\n\t\t\t\tvar color;\n\t\t\t\tvar name = m[ 1 ];\n\t\t\t\tvar components = m[ 2 ];\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 255, parseInt( color[ 1 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min( 255, parseInt( color[ 2 ], 10 ) ) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min( 255, parseInt( color[ 3 ], 10 ) ) / 255;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( color = /^(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min( 100, parseInt( color[ 1 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min( 100, parseInt( color[ 2 ], 10 ) ) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min( 100, parseInt( color[ 3 ], 10 ) ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\n\t\t\t\t\t\tif ( color = /^([0-9]*\\.?[0-9]+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(,\\s*([0-9]*\\.?[0-9]+)\\s*)?$/.exec( components ) ) {\n\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tvar h = parseFloat( color[ 1 ] ) / 360;\n\t\t\t\t\t\t\tvar s = parseInt( color[ 2 ], 10 ) / 100;\n\t\t\t\t\t\t\tvar l = parseInt( color[ 3 ], 10 ) / 100;\n\n\t\t\t\t\t\t\thandleAlpha( color[ 5 ] );\n\n\t\t\t\t\t\t\treturn this.setHSL( h, s, l );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t} else if ( m = /^\\#([A-Fa-f0-9]+)$/.exec( style ) ) {\n\n\t\t\t\t// hex color\n\n\t\t\t\tvar hex = m[ 1 ];\n\t\t\t\tvar size = hex.length;\n\n\t\t\t\tif ( size === 3 ) {\n\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 0 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 1 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 2 ) + hex.charAt( 2 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t} else if ( size === 6 ) {\n\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt( hex.charAt( 0 ) + hex.charAt( 1 ), 16 ) / 255;\n\t\t\t\t\tthis.g = parseInt( hex.charAt( 2 ) + hex.charAt( 3 ), 16 ) / 255;\n\t\t\t\t\tthis.b = parseInt( hex.charAt( 4 ) + hex.charAt( 5 ), 16 ) / 255;\n\n\t\t\t\t\treturn this;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( style && style.length > 0 ) {\n\n\t\t\t\treturn this.setColorName( style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetColorName: function ( style ) {\n\n\t\t\t// color keywords\n\t\t\tvar hex = _colorKeywords[ style ];\n\n\t\t\tif ( hex !== undefined ) {\n\n\t\t\t\t// red\n\t\t\t\tthis.setHex( hex );\n\n\t\t\t} else {\n\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn( 'THREE.Color: Unknown color ' + style );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.r, this.g, this.b );\n\n\t\t},\n\n\t\tcopy: function ( color ) {\n\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyGammaToLinear: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tthis.r = Math.pow( color.r, gammaFactor );\n\t\t\tthis.g = Math.pow( color.g, gammaFactor );\n\t\t\tthis.b = Math.pow( color.b, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToGamma: function ( color, gammaFactor ) {\n\n\t\t\tif ( gammaFactor === undefined ) { gammaFactor = 2.0; }\n\n\t\t\tvar safeInverse = ( gammaFactor > 0 ) ? ( 1.0 / gammaFactor ) : 1.0;\n\n\t\t\tthis.r = Math.pow( color.r, safeInverse );\n\t\t\tthis.g = Math.pow( color.g, safeInverse );\n\t\t\tthis.b = Math.pow( color.b, safeInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertGammaToLinear: function ( gammaFactor ) {\n\n\t\t\tthis.copyGammaToLinear( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToGamma: function ( gammaFactor ) {\n\n\t\t\tthis.copyLinearToGamma( this, gammaFactor );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopySRGBToLinear: function ( color ) {\n\n\t\t\tthis.r = SRGBToLinear( color.r );\n\t\t\tthis.g = SRGBToLinear( color.g );\n\t\t\tthis.b = SRGBToLinear( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyLinearToSRGB: function ( color ) {\n\n\t\t\tthis.r = LinearToSRGB( color.r );\n\t\t\tthis.g = LinearToSRGB( color.g );\n\t\t\tthis.b = LinearToSRGB( color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertSRGBToLinear: function () {\n\n\t\t\tthis.copySRGBToLinear( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconvertLinearToSRGB: function () {\n\n\t\t\tthis.copyLinearToSRGB( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetHex: function () {\n\n\t\t\treturn ( this.r * 255 ) << 16 ^ ( this.g * 255 ) << 8 ^ ( this.b * 255 ) << 0;\n\n\t\t},\n\n\t\tgetHexString: function () {\n\n\t\t\treturn ( '000000' + this.getHex().toString( 16 ) ).slice( - 6 );\n\n\t\t},\n\n\t\tgetHSL: function ( target ) {\n\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Color: .getHSL() target is now required' );\n\t\t\t\ttarget = { h: 0, s: 0, l: 0 };\n\n\t\t\t}\n\n\t\t\tvar r = this.r, g = this.g, b = this.b;\n\n\t\t\tvar max = Math.max( r, g, b );\n\t\t\tvar min = Math.min( r, g, b );\n\n\t\t\tvar hue, saturation;\n\t\t\tvar lightness = ( min + max ) / 2.0;\n\n\t\t\tif ( min === max ) {\n\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\n\t\t\t} else {\n\n\t\t\t\tvar delta = max - min;\n\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / ( max + min ) : delta / ( 2 - max - min );\n\n\t\t\t\tswitch ( max ) {\n\n\t\t\t\t\tcase r: hue = ( g - b ) / delta + ( g < b ? 6 : 0 ); break;\n\t\t\t\t\tcase g: hue = ( b - r ) / delta + 2; break;\n\t\t\t\t\tcase b: hue = ( r - g ) / delta + 4; break;\n\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tgetStyle: function () {\n\n\t\t\treturn 'rgb(' + ( ( this.r * 255 ) | 0 ) + ',' + ( ( this.g * 255 ) | 0 ) + ',' + ( ( this.b * 255 ) | 0 ) + ')';\n\n\t\t},\n\n\t\toffsetHSL: function ( h, s, l ) {\n\n\t\t\tthis.getHSL( _hslA );\n\n\t\t\t_hslA.h += h; _hslA.s += s; _hslA.l += l;\n\n\t\t\tthis.setHSL( _hslA.h, _hslA.s, _hslA.l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tadd: function ( color ) {\n\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddColors: function ( color1, color2 ) {\n\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddScalar: function ( s ) {\n\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsub: function ( color ) {\n\n\t\t\tthis.r = Math.max( 0, this.r - color.r );\n\t\t\tthis.g = Math.max( 0, this.g - color.g );\n\t\t\tthis.b = Math.max( 0, this.b - color.b );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiply: function ( color ) {\n\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmultiplyScalar: function ( s ) {\n\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( color, alpha ) {\n\n\t\t\tthis.r += ( color.r - this.r ) * alpha;\n\t\t\tthis.g += ( color.g - this.g ) * alpha;\n\t\t\tthis.b += ( color.b - this.b ) * alpha;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerpHSL: function ( color, alpha ) {\n\n\t\t\tthis.getHSL( _hslA );\n\t\t\tcolor.getHSL( _hslB );\n\n\t\t\tvar h = _Math.lerp( _hslA.h, _hslB.h, alpha );\n\t\t\tvar s = _Math.lerp( _hslA.s, _hslB.s, alpha );\n\t\t\tvar l = _Math.lerp( _hslA.l, _hslB.l, alpha );\n\n\t\t\tthis.setHSL( h, s, l );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( c ) {\n\n\t\t\treturn ( c.r === this.r ) && ( c.g === this.g ) && ( c.b === this.b );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.r = array[ offset ];\n\t\t\tthis.g = array[ offset + 1 ];\n\t\t\tthis.b = array[ offset + 2 ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tarray[ offset ] = this.r;\n\t\t\tarray[ offset + 1 ] = this.g;\n\t\t\tarray[ offset + 2 ] = this.b;\n\n\t\t\treturn array;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn this.getHex();\n\n\t\t}\n\n\t} );\n\n\tColor.NAMES = _colorKeywords;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Face3( a, b, c, normal, color, materialIndex ) {\n\n\t\tthis.a = a;\n\t\tthis.b = b;\n\t\tthis.c = c;\n\n\t\tthis.normal = ( normal && normal.isVector3 ) ? normal : new Vector3();\n\t\tthis.vertexNormals = Array.isArray( normal ) ? normal : [];\n\n\t\tthis.color = ( color && color.isColor ) ? color : new Color();\n\t\tthis.vertexColors = Array.isArray( color ) ? color : [];\n\n\t\tthis.materialIndex = materialIndex !== undefined ? materialIndex : 0;\n\n\t}\n\n\tObject.assign( Face3.prototype, {\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.a = source.a;\n\t\t\tthis.b = source.b;\n\t\t\tthis.c = source.c;\n\n\t\t\tthis.normal.copy( source.normal );\n\t\t\tthis.color.copy( source.color );\n\n\t\t\tthis.materialIndex = source.materialIndex;\n\n\t\t\tfor ( var i = 0, il = source.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexNormals[ i ] = source.vertexNormals[ i ].clone();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = source.vertexColors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertexColors[ i ] = source.vertexColors[ i ].clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar materialId = 0;\n\n\tfunction Material() {\n\n\t\tObject.defineProperty( this, 'id', { value: materialId ++ } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Material';\n\n\t\tthis.fog = true;\n\n\t\tthis.blending = NormalBlending;\n\t\tthis.side = FrontSide;\n\t\tthis.flatShading = false;\n\t\tthis.vertexTangents = false;\n\t\tthis.vertexColors = NoColors; // THREE.NoColors, THREE.VertexColors, THREE.FaceColors\n\n\t\tthis.opacity = 1;\n\t\tthis.transparent = false;\n\n\t\tthis.blendSrc = SrcAlphaFactor;\n\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\tthis.blendEquation = AddEquation;\n\t\tthis.blendSrcAlpha = null;\n\t\tthis.blendDstAlpha = null;\n\t\tthis.blendEquationAlpha = null;\n\n\t\tthis.depthFunc = LessEqualDepth;\n\t\tthis.depthTest = true;\n\t\tthis.depthWrite = true;\n\n\t\tthis.stencilWriteMask = 0xff;\n\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\tthis.stencilRef = 0;\n\t\tthis.stencilFuncMask = 0xff;\n\t\tthis.stencilFail = KeepStencilOp;\n\t\tthis.stencilZFail = KeepStencilOp;\n\t\tthis.stencilZPass = KeepStencilOp;\n\t\tthis.stencilWrite = false;\n\n\t\tthis.clippingPlanes = null;\n\t\tthis.clipIntersection = false;\n\t\tthis.clipShadows = false;\n\n\t\tthis.shadowSide = null;\n\n\t\tthis.colorWrite = true;\n\n\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\tthis.polygonOffset = false;\n\t\tthis.polygonOffsetFactor = 0;\n\t\tthis.polygonOffsetUnits = 0;\n\n\t\tthis.dithering = false;\n\n\t\tthis.alphaTest = 0;\n\t\tthis.premultipliedAlpha = false;\n\n\t\tthis.visible = true;\n\n\t\tthis.toneMapped = true;\n\n\t\tthis.userData = {};\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tMaterial.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Material,\n\n\t\tisMaterial: true,\n\n\t\tonBeforeCompile: function () {},\n\n\t\tsetValues: function ( values ) {\n\n\t\t\tif ( values === undefined ) { return; }\n\n\t\t\tfor ( var key in values ) {\n\n\t\t\t\tvar newValue = values[ key ];\n\n\t\t\t\tif ( newValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.Material: '\" + key + \"' parameter is undefined.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t// for backward compatability if shading is set in the constructor\n\t\t\t\tif ( key === 'shading' ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\t\tthis.flatShading = ( newValue === FlatShading ) ? true : false;\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tvar currentValue = this[ key ];\n\n\t\t\t\tif ( currentValue === undefined ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.\" + this.type + \": '\" + key + \"' is not a property of this material.\" );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\tif ( currentValue && currentValue.isColor ) {\n\n\t\t\t\t\tcurrentValue.set( newValue );\n\n\t\t\t\t} else if ( ( currentValue && currentValue.isVector3 ) && ( newValue && newValue.isVector3 ) ) {\n\n\t\t\t\t\tcurrentValue.copy( newValue );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis[ key ] = newValue;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar isRoot = ( meta === undefined || typeof meta === 'string' );\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Material serialization\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.color && this.color.isColor ) { data.color = this.color.getHex(); }\n\n\t\t\tif ( this.roughness !== undefined ) { data.roughness = this.roughness; }\n\t\t\tif ( this.metalness !== undefined ) { data.metalness = this.metalness; }\n\n\t\t\tif ( this.sheen && this.sheen.isColor ) { data.sheen = this.sheen.getHex(); }\n\t\t\tif ( this.emissive && this.emissive.isColor ) { data.emissive = this.emissive.getHex(); }\n\t\t\tif ( this.emissiveIntensity && this.emissiveIntensity !== 1 ) { data.emissiveIntensity = this.emissiveIntensity; }\n\n\t\t\tif ( this.specular && this.specular.isColor ) { data.specular = this.specular.getHex(); }\n\t\t\tif ( this.shininess !== undefined ) { data.shininess = this.shininess; }\n\t\t\tif ( this.clearcoat !== undefined ) { data.clearcoat = this.clearcoat; }\n\t\t\tif ( this.clearcoatRoughness !== undefined ) { data.clearcoatRoughness = this.clearcoatRoughness; }\n\n\t\t\tif ( this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture ) {\n\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.map && this.map.isTexture ) { data.map = this.map.toJSON( meta ).uuid; }\n\t\t\tif ( this.matcap && this.matcap.isTexture ) { data.matcap = this.matcap.toJSON( meta ).uuid; }\n\t\t\tif ( this.alphaMap && this.alphaMap.isTexture ) { data.alphaMap = this.alphaMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.lightMap && this.lightMap.isTexture ) { data.lightMap = this.lightMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.aoMap && this.aoMap.isTexture ) {\n\n\t\t\t\tdata.aoMap = this.aoMap.toJSON( meta ).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( this.bumpMap && this.bumpMap.isTexture ) {\n\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON( meta ).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\n\t\t\t}\n\n\t\t\tif ( this.normalMap && this.normalMap.isTexture ) {\n\n\t\t\t\tdata.normalMap = this.normalMap.toJSON( meta ).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\n\t\t\t}\n\n\t\t\tif ( this.displacementMap && this.displacementMap.isTexture ) {\n\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON( meta ).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( this.roughnessMap && this.roughnessMap.isTexture ) { data.roughnessMap = this.roughnessMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.metalnessMap && this.metalnessMap.isTexture ) { data.metalnessMap = this.metalnessMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.emissiveMap && this.emissiveMap.isTexture ) { data.emissiveMap = this.emissiveMap.toJSON( meta ).uuid; }\n\t\t\tif ( this.specularMap && this.specularMap.isTexture ) { data.specularMap = this.specularMap.toJSON( meta ).uuid; }\n\n\t\t\tif ( this.envMap && this.envMap.isTexture ) {\n\n\t\t\t\tdata.envMap = this.envMap.toJSON( meta ).uuid;\n\t\t\t\tdata.reflectivity = this.reflectivity; // Scale behind envMap\n\t\t\t\tdata.refractionRatio = this.refractionRatio;\n\n\t\t\t\tif ( this.combine !== undefined ) { data.combine = this.combine; }\n\t\t\t\tif ( this.envMapIntensity !== undefined ) { data.envMapIntensity = this.envMapIntensity; }\n\n\t\t\t}\n\n\t\t\tif ( this.gradientMap && this.gradientMap.isTexture ) {\n\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON( meta ).uuid;\n\n\t\t\t}\n\n\t\t\tif ( this.size !== undefined ) { data.size = this.size; }\n\t\t\tif ( this.sizeAttenuation !== undefined ) { data.sizeAttenuation = this.sizeAttenuation; }\n\n\t\t\tif ( this.blending !== NormalBlending ) { data.blending = this.blending; }\n\t\t\tif ( this.flatShading === true ) { data.flatShading = this.flatShading; }\n\t\t\tif ( this.side !== FrontSide ) { data.side = this.side; }\n\t\t\tif ( this.vertexColors !== NoColors ) { data.vertexColors = this.vertexColors; }\n\n\t\t\tif ( this.opacity < 1 ) { data.opacity = this.opacity; }\n\t\t\tif ( this.transparent === true ) { data.transparent = this.transparent; }\n\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass;\n\n\t\t\t// rotation (SpriteMaterial)\n\t\t\tif ( this.rotation && this.rotation !== 0 ) { data.rotation = this.rotation; }\n\n\t\t\tif ( this.polygonOffset === true ) { data.polygonOffset = true; }\n\t\t\tif ( this.polygonOffsetFactor !== 0 ) { data.polygonOffsetFactor = this.polygonOffsetFactor; }\n\t\t\tif ( this.polygonOffsetUnits !== 0 ) { data.polygonOffsetUnits = this.polygonOffsetUnits; }\n\n\t\t\tif ( this.linewidth && this.linewidth !== 1 ) { data.linewidth = this.linewidth; }\n\t\t\tif ( this.dashSize !== undefined ) { data.dashSize = this.dashSize; }\n\t\t\tif ( this.gapSize !== undefined ) { data.gapSize = this.gapSize; }\n\t\t\tif ( this.scale !== undefined ) { data.scale = this.scale; }\n\n\t\t\tif ( this.dithering === true ) { data.dithering = true; }\n\n\t\t\tif ( this.alphaTest > 0 ) { data.alphaTest = this.alphaTest; }\n\t\t\tif ( this.premultipliedAlpha === true ) { data.premultipliedAlpha = this.premultipliedAlpha; }\n\n\t\t\tif ( this.wireframe === true ) { data.wireframe = this.wireframe; }\n\t\t\tif ( this.wireframeLinewidth > 1 ) { data.wireframeLinewidth = this.wireframeLinewidth; }\n\t\t\tif ( this.wireframeLinecap !== 'round' ) { data.wireframeLinecap = this.wireframeLinecap; }\n\t\t\tif ( this.wireframeLinejoin !== 'round' ) { data.wireframeLinejoin = this.wireframeLinejoin; }\n\n\t\t\tif ( this.morphTargets === true ) { data.morphTargets = true; }\n\t\t\tif ( this.morphNormals === true ) { data.morphNormals = true; }\n\t\t\tif ( this.skinning === true ) { data.skinning = true; }\n\n\t\t\tif ( this.visible === false ) { data.visible = false; }\n\n\t\t\tif ( this.toneMapped === false ) { data.toneMapped = false; }\n\n\t\t\tif ( JSON.stringify( this.userData ) !== '{}' ) { data.userData = this.userData; }\n\n\t\t\t// TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache( cache ) {\n\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var key in cache ) {\n\n\t\t\t\t\tvar data = cache[ key ];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push( data );\n\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\n\t\t\t}\n\n\t\t\tif ( isRoot ) {\n\n\t\t\t\tvar textures = extractFromCache( meta.textures );\n\t\t\t\tvar images = extractFromCache( meta.images );\n\n\t\t\t\tif ( textures.length > 0 ) { data.textures = textures; }\n\t\t\t\tif ( images.length > 0 ) { data.images = images; }\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\n\t\t\tthis.fog = source.fog;\n\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexTangents = source.vertexTangents;\n\t\t\tthis.vertexColors = source.vertexColors;\n\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\n\t\t\tvar srcPlanes = source.clippingPlanes,\n\t\t\t\tdstPlanes = null;\n\n\t\t\tif ( srcPlanes !== null ) {\n\n\t\t\t\tvar n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array( n );\n\n\t\t\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t\t\t{ dstPlanes[ i ] = srcPlanes[ i ].clone(); }\n\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\n\t\t\tthis.shadowSide = source.shadowSide;\n\n\t\t\tthis.colorWrite = source.colorWrite;\n\n\t\t\tthis.precision = source.precision;\n\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\n\t\t\tthis.dithering = source.dithering;\n\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\n\t\t\tthis.visible = source.visible;\n\n\t\t\tthis.toneMapped = source.toneMapped;\n\n\t\t\tthis.userData = JSON.parse( JSON.stringify( source.userData ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  depthTest: <bool>,\n\t *  depthWrite: <bool>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction MeshBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // emissive\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshBasicMaterial.prototype = Object.create( Material.prototype );\n\tMeshBasicMaterial.prototype.constructor = MeshBasicMaterial;\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tMeshBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferAttribute( array, itemSize, normalized ) {\n\n\t\tif ( Array.isArray( array ) ) {\n\n\t\t\tthrow new TypeError( 'THREE.BufferAttribute: array should be a Typed Array.' );\n\n\t\t}\n\n\t\tthis.name = '';\n\n\t\tthis.array = array;\n\t\tthis.itemSize = itemSize;\n\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\tthis.normalized = normalized === true;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( BufferAttribute.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\n\t\tisBufferAttribute: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor ( var i = 0, l = this.itemSize; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyArray: function ( array ) {\n\n\t\t\tthis.array.set( array );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyColorsArray: function ( colors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = colors.length; i < l; i ++ ) {\n\n\t\t\t\tvar color = colors[ i ];\n\n\t\t\t\tif ( color === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyColorsArray(): color is undefined', i );\n\t\t\t\t\tcolor = new Color();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = color.r;\n\t\t\t\tarray[ offset ++ ] = color.g;\n\t\t\t\tarray[ offset ++ ] = color.b;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector2sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector2();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector3sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector3();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyVector4sArray: function ( vectors ) {\n\n\t\t\tvar array = this.array, offset = 0;\n\n\t\t\tfor ( var i = 0, l = vectors.length; i < l; i ++ ) {\n\n\t\t\t\tvar vector = vectors[ i ];\n\n\t\t\t\tif ( vector === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i );\n\t\t\t\t\tvector = new Vector4();\n\n\t\t\t\t}\n\n\t\t\t\tarray[ offset ++ ] = vector.x;\n\t\t\t\tarray[ offset ++ ] = vector.y;\n\t\t\t\tarray[ offset ++ ] = vector.z;\n\t\t\t\tarray[ offset ++ ] = vector.w;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize ];\n\n\t\t},\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.array[ index * this.itemSize ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 1 ];\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.array[ index * this.itemSize + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 2 ];\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.array[ index * this.itemSize + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.array[ index * this.itemSize + 3 ];\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.array[ index * this.itemSize + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex *= this.itemSize;\n\n\t\t\tthis.array[ index + 0 ] = x;\n\t\t\tthis.array[ index + 1 ] = y;\n\t\t\tthis.array[ index + 2 ] = z;\n\t\t\tthis.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.array, this.itemSize ).copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\treturn {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call( this.array ),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction Int8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int8Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt8BufferAttribute.prototype.constructor = Int8BufferAttribute;\n\n\n\tfunction Uint8BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint8BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8BufferAttribute.prototype.constructor = Uint8BufferAttribute;\n\n\n\tfunction Uint8ClampedBufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint8ClampedArray( array ), itemSize, normalized );\n\n\t}\n\n\tUint8ClampedBufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint8ClampedBufferAttribute.prototype.constructor = Uint8ClampedBufferAttribute;\n\n\n\tfunction Int16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int16Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt16BufferAttribute.prototype.constructor = Int16BufferAttribute;\n\n\n\tfunction Uint16BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint16Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint16BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint16BufferAttribute.prototype.constructor = Uint16BufferAttribute;\n\n\n\tfunction Int32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Int32Array( array ), itemSize, normalized );\n\n\t}\n\n\tInt32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tInt32BufferAttribute.prototype.constructor = Int32BufferAttribute;\n\n\n\tfunction Uint32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Uint32Array( array ), itemSize, normalized );\n\n\t}\n\n\tUint32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tUint32BufferAttribute.prototype.constructor = Uint32BufferAttribute;\n\n\n\tfunction Float32BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float32Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat32BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat32BufferAttribute.prototype.constructor = Float32BufferAttribute;\n\n\n\tfunction Float64BufferAttribute( array, itemSize, normalized ) {\n\n\t\tBufferAttribute.call( this, new Float64Array( array ), itemSize, normalized );\n\n\t}\n\n\tFloat64BufferAttribute.prototype = Object.create( BufferAttribute.prototype );\n\tFloat64BufferAttribute.prototype.constructor = Float64BufferAttribute;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectGeometry() {\n\n\t\tthis.vertices = [];\n\t\tthis.normals = [];\n\t\tthis.colors = [];\n\t\tthis.uvs = [];\n\t\tthis.uvs2 = [];\n\n\t\tthis.groups = [];\n\n\t\tthis.morphTargets = {};\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\t// this.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tObject.assign( DirectGeometry.prototype, {\n\n\t\tcomputeGroups: function ( geometry ) {\n\n\t\t\tvar group;\n\t\t\tvar groups = [];\n\t\t\tvar materialIndex = undefined;\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\t// materials\n\n\t\t\t\tif ( face.materialIndex !== materialIndex ) {\n\n\t\t\t\t\tmaterialIndex = face.materialIndex;\n\n\t\t\t\t\tif ( group !== undefined ) {\n\n\t\t\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\t\t\tgroups.push( group );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgroup = {\n\t\t\t\t\t\tstart: i * 3,\n\t\t\t\t\t\tmaterialIndex: materialIndex\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( group !== undefined ) {\n\n\t\t\t\tgroup.count = ( i * 3 ) - group.start;\n\t\t\t\tgroups.push( group );\n\n\t\t\t}\n\n\t\t\tthis.groups = groups;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tvar faces = geometry.faces;\n\t\t\tvar vertices = geometry.vertices;\n\t\t\tvar faceVertexUvs = geometry.faceVertexUvs;\n\n\t\t\tvar hasFaceVertexUv = faceVertexUvs[ 0 ] && faceVertexUvs[ 0 ].length > 0;\n\t\t\tvar hasFaceVertexUv2 = faceVertexUvs[ 1 ] && faceVertexUvs[ 1 ].length > 0;\n\n\t\t\t// morphs\n\n\t\t\tvar morphTargets = geometry.morphTargets;\n\t\t\tvar morphTargetsLength = morphTargets.length;\n\n\t\t\tvar morphTargetsPosition;\n\n\t\t\tif ( morphTargetsLength > 0 ) {\n\n\t\t\t\tmorphTargetsPosition = [];\n\n\t\t\t\tfor ( var i = 0; i < morphTargetsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsPosition[ i ] = {\n\t\t\t\t\t\tname: morphTargets[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.position = morphTargetsPosition;\n\n\t\t\t}\n\n\t\t\tvar morphNormals = geometry.morphNormals;\n\t\t\tvar morphNormalsLength = morphNormals.length;\n\n\t\t\tvar morphTargetsNormal;\n\n\t\t\tif ( morphNormalsLength > 0 ) {\n\n\t\t\t\tmorphTargetsNormal = [];\n\n\t\t\t\tfor ( var i = 0; i < morphNormalsLength; i ++ ) {\n\n\t\t\t\t\tmorphTargetsNormal[ i ] = {\n\t\t\t\t\t\tname: morphNormals[ i ].name,\n\t\t\t\t\t \tdata: []\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.normal = morphTargetsNormal;\n\n\t\t\t}\n\n\t\t\t// skins\n\n\t\t\tvar skinIndices = geometry.skinIndices;\n\t\t\tvar skinWeights = geometry.skinWeights;\n\n\t\t\tvar hasSkinIndices = skinIndices.length === vertices.length;\n\t\t\tvar hasSkinWeights = skinWeights.length === vertices.length;\n\n\t\t\t//\n\n\t\t\tif ( vertices.length > 0 && faces.length === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.DirectGeometry: Faceless geometries are not supported.' );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < faces.length; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tthis.vertices.push( vertices[ face.a ], vertices[ face.b ], vertices[ face.c ] );\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tthis.normals.push( vertexNormals[ 0 ], vertexNormals[ 1 ], vertexNormals[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar normal = face.normal;\n\n\t\t\t\t\tthis.normals.push( normal, normal, normal );\n\n\t\t\t\t}\n\n\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\tif ( vertexColors.length === 3 ) {\n\n\t\t\t\t\tthis.colors.push( vertexColors[ 0 ], vertexColors[ 1 ], vertexColors[ 2 ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvar color = face.color;\n\n\t\t\t\t\tthis.colors.push( color, color, color );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv ', i );\n\n\t\t\t\t\t\tthis.uvs.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexUv2 === true ) {\n\n\t\t\t\t\tvar vertexUvs = faceVertexUvs[ 1 ][ i ];\n\n\t\t\t\t\tif ( vertexUvs !== undefined ) {\n\n\t\t\t\t\t\tthis.uvs2.push( vertexUvs[ 0 ], vertexUvs[ 1 ], vertexUvs[ 2 ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.DirectGeometry.fromGeometry(): Undefined vertexUv2 ', i );\n\n\t\t\t\t\t\tthis.uvs2.push( new Vector2(), new Vector2(), new Vector2() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// morphs\n\n\t\t\t\tfor ( var j = 0; j < morphTargetsLength; j ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ j ].vertices;\n\n\t\t\t\t\tmorphTargetsPosition[ j ].data.push( morphTarget[ face.a ], morphTarget[ face.b ], morphTarget[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0; j < morphNormalsLength; j ++ ) {\n\n\t\t\t\t\tvar morphNormal = morphNormals[ j ].vertexNormals[ i ];\n\n\t\t\t\t\tmorphTargetsNormal[ j ].data.push( morphNormal.a, morphNormal.b, morphNormal.c );\n\n\t\t\t\t}\n\n\t\t\t\t// skins\n\n\t\t\t\tif ( hasSkinIndices ) {\n\n\t\t\t\t\tthis.skinIndices.push( skinIndices[ face.a ], skinIndices[ face.b ], skinIndices[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasSkinWeights ) {\n\n\t\t\t\t\tthis.skinWeights.push( skinWeights[ face.a ], skinWeights[ face.b ], skinWeights[ face.c ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeGroups( geometry );\n\n\t\t\tthis.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction arrayMax( array ) {\n\n\t\tif ( array.length === 0 ) { return - Infinity; }\n\n\t\tvar max = array[ 0 ];\n\n\t\tfor ( var i = 1, l = array.length; i < l; ++ i ) {\n\n\t\t\tif ( array[ i ] > max ) { max = array[ i ]; }\n\n\t\t}\n\n\t\treturn max;\n\n\t}\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _bufferGeometryId = 1; // BufferGeometry uses odd numbers as Id\n\n\tvar _m1$2 = new Matrix4();\n\tvar _obj = new Object3D();\n\tvar _offset = new Vector3();\n\tvar _box$2 = new Box3();\n\tvar _boxMorphTargets = new Box3();\n\tvar _vector$4 = new Vector3();\n\n\tfunction BufferGeometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _bufferGeometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'BufferGeometry';\n\n\t\tthis.index = null;\n\t\tthis.attributes = {};\n\n\t\tthis.morphAttributes = {};\n\t\tthis.morphTargetsRelative = false;\n\n\t\tthis.groups = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\tthis.drawRange = { start: 0, count: Infinity };\n\n\t\tthis.userData = {};\n\n\t}\n\n\tBufferGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: BufferGeometry,\n\n\t\tisBufferGeometry: true,\n\n\t\tgetIndex: function () {\n\n\t\t\treturn this.index;\n\n\t\t},\n\n\t\tsetIndex: function ( index ) {\n\n\t\t\tif ( Array.isArray( index ) ) {\n\n\t\t\t\tthis.index = new ( arrayMax( index ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( index, 1 );\n\n\t\t\t} else {\n\n\t\t\t\tthis.index = index;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetAttribute: function ( name ) {\n\n\t\t\treturn this.attributes[ name ];\n\n\t\t},\n\n\t\tsetAttribute: function ( name, attribute ) {\n\n\t\t\tthis.attributes[ name ] = attribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdeleteAttribute: function ( name ) {\n\n\t\t\tdelete this.attributes[ name ];\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddGroup: function ( start, count, materialIndex ) {\n\n\t\t\tthis.groups.push( {\n\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex !== undefined ? materialIndex : 0\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclearGroups: function () {\n\n\t\t\tthis.groups = [];\n\n\t\t},\n\n\t\tsetDrawRange: function ( start, count ) {\n\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\n\t\t},\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar position = this.attributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tmatrix.applyToBufferAttribute( position );\n\t\t\t\tposition.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar normal = this.attributes.normal;\n\n\t\t\tif ( normal !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\tnormalMatrix.applyToBufferAttribute( normal );\n\t\t\t\tnormal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tvar tangent = this.attributes.tangent;\n\n\t\t\tif ( tangent !== undefined ) {\n\n\t\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t\t// Tangent is vec4, but the '.w' component is a sign value (+1/-1).\n\t\t\t\tnormalMatrix.applyToBufferAttribute( tangent );\n\t\t\t\ttangent.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$2.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$2.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$2.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$2.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$2.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$2 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj.lookAt( vector );\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix( _obj.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset ).negate();\n\n\t\t\tthis.translate( _offset.x, _offset.y, _offset.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromObject: function ( object ) {\n\n\t\t\t// console.log( 'THREE.BufferGeometry.setFromObject(). Converting', object, this );\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isPoints || object.isLine ) {\n\n\t\t\t\tvar positions = new Float32BufferAttribute( geometry.vertices.length * 3, 3 );\n\t\t\t\tvar colors = new Float32BufferAttribute( geometry.colors.length * 3, 3 );\n\n\t\t\t\tthis.setAttribute( 'position', positions.copyVector3sArray( geometry.vertices ) );\n\t\t\t\tthis.setAttribute( 'color', colors.copyColorsArray( geometry.colors ) );\n\n\t\t\t\tif ( geometry.lineDistances && geometry.lineDistances.length === geometry.vertices.length ) {\n\n\t\t\t\t\tvar lineDistances = new Float32BufferAttribute( geometry.lineDistances.length, 1 );\n\n\t\t\t\t\tthis.setAttribute( 'lineDistance', lineDistances.copyArray( geometry.lineDistances ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t\t}\n\n\t\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isMesh ) {\n\n\t\t\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t\t\tthis.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tvar position = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tposition.push( point.x, point.y, point.z || 0 );\n\n\t\t\t}\n\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( position, 3 ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateFromObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tvar direct = geometry.__directGeometry;\n\n\t\t\t\tif ( geometry.elementsNeedUpdate === true ) {\n\n\t\t\t\t\tdirect = undefined;\n\t\t\t\t\tgeometry.elementsNeedUpdate = false;\n\n\t\t\t\t}\n\n\t\t\t\tif ( direct === undefined ) {\n\n\t\t\t\t\treturn this.fromGeometry( geometry );\n\n\t\t\t\t}\n\n\t\t\t\tdirect.verticesNeedUpdate = geometry.verticesNeedUpdate;\n\t\t\t\tdirect.normalsNeedUpdate = geometry.normalsNeedUpdate;\n\t\t\t\tdirect.colorsNeedUpdate = geometry.colorsNeedUpdate;\n\t\t\t\tdirect.uvsNeedUpdate = geometry.uvsNeedUpdate;\n\t\t\t\tdirect.groupsNeedUpdate = geometry.groupsNeedUpdate;\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t\tgeometry = direct;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\n\t\t\tif ( geometry.verticesNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.position;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.vertices );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.verticesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.normalsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.normal;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector3sArray( geometry.normals );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.normalsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.colorsNeedUpdate === true ) {\n\n\t\t\t\tattribute = this.attributes.color;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyColorsArray( geometry.colors );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.colorsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvsNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.uv;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyVector2sArray( geometry.uvs );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.uvsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.lineDistancesNeedUpdate ) {\n\n\t\t\t\tattribute = this.attributes.lineDistance;\n\n\t\t\t\tif ( attribute !== undefined ) {\n\n\t\t\t\t\tattribute.copyArray( geometry.lineDistances );\n\t\t\t\t\tattribute.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.lineDistancesNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( geometry.groupsNeedUpdate ) {\n\n\t\t\t\tgeometry.computeGroups( object.geometry );\n\t\t\t\tthis.groups = geometry.groups;\n\n\t\t\t\tgeometry.groupsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromGeometry: function ( geometry ) {\n\n\t\t\tgeometry.__directGeometry = new DirectGeometry().fromGeometry( geometry );\n\n\t\t\treturn this.fromDirectGeometry( geometry.__directGeometry );\n\n\t\t},\n\n\t\tfromDirectGeometry: function ( geometry ) {\n\n\t\t\tvar positions = new Float32Array( geometry.vertices.length * 3 );\n\t\t\tthis.setAttribute( 'position', new BufferAttribute( positions, 3 ).copyVector3sArray( geometry.vertices ) );\n\n\t\t\tif ( geometry.normals.length > 0 ) {\n\n\t\t\t\tvar normals = new Float32Array( geometry.normals.length * 3 );\n\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( normals, 3 ).copyVector3sArray( geometry.normals ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.colors.length > 0 ) {\n\n\t\t\t\tvar colors = new Float32Array( geometry.colors.length * 3 );\n\t\t\t\tthis.setAttribute( 'color', new BufferAttribute( colors, 3 ).copyColorsArray( geometry.colors ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs.length > 0 ) {\n\n\t\t\t\tvar uvs = new Float32Array( geometry.uvs.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv', new BufferAttribute( uvs, 2 ).copyVector2sArray( geometry.uvs ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.uvs2.length > 0 ) {\n\n\t\t\t\tvar uvs2 = new Float32Array( geometry.uvs2.length * 2 );\n\t\t\t\tthis.setAttribute( 'uv2', new BufferAttribute( uvs2, 2 ).copyVector2sArray( geometry.uvs2 ) );\n\n\t\t\t}\n\n\t\t\t// groups\n\n\t\t\tthis.groups = geometry.groups;\n\n\t\t\t// morphs\n\n\t\t\tfor ( var name in geometry.morphTargets ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphTargets = geometry.morphTargets[ name ];\n\n\t\t\t\tfor ( var i = 0, l = morphTargets.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar morphTarget = morphTargets[ i ];\n\n\t\t\t\t\tvar attribute = new Float32BufferAttribute( morphTarget.data.length * 3, 3 );\n\t\t\t\t\tattribute.name = morphTarget.name;\n\n\t\t\t\t\tarray.push( attribute.copyVector3sArray( morphTarget.data ) );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\t// skinning\n\n\t\t\tif ( geometry.skinIndices.length > 0 ) {\n\n\t\t\t\tvar skinIndices = new Float32BufferAttribute( geometry.skinIndices.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinIndex', skinIndices.copyVector4sArray( geometry.skinIndices ) );\n\n\t\t\t}\n\n\t\t\tif ( geometry.skinWeights.length > 0 ) {\n\n\t\t\t\tvar skinWeights = new Float32BufferAttribute( geometry.skinWeights.length * 4, 4 );\n\t\t\t\tthis.setAttribute( 'skinWeight', skinWeights.copyVector4sArray( geometry.skinWeights ) );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position !== undefined ) {\n\n\t\t\t\tthis.boundingBox.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_box$2.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.min, _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( this.boundingBox.max, _box$2.max );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.min );\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint( _box$2.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.boundingBox.makeEmpty();\n\n\t\t\t}\n\n\t\t\tif ( isNaN( this.boundingBox.min.x ) || isNaN( this.boundingBox.min.y ) || isNaN( this.boundingBox.min.z ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingBox: Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tvar position = this.attributes.position;\n\t\t\tvar morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif ( position ) {\n\n\t\t\t\t// first, find the center of the bounding sphere\n\n\t\t\t\tvar center = this.boundingSphere.center;\n\n\t\t\t\t_box$2.setFromBufferAttribute( position );\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute( morphAttribute );\n\n\t\t\t\t\t\tif ( this.morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.min, _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t\t_vector$4.addVectors( _box$2.max, _boxMorphTargets.max );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _vector$4 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.min );\n\t\t\t\t\t\t\t_box$2.expandByPoint( _boxMorphTargets.max );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t_box$2.getCenter( center );\n\n\t\t\t\t// second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\t\t\t\tvar maxRadiusSq = 0;\n\n\t\t\t\tfor ( var i = 0, il = position.count; i < il; i ++ ) {\n\n\t\t\t\t\t_vector$4.fromBufferAttribute( position, i );\n\n\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t}\n\n\t\t\t\t// process morph attributes if present\n\n\t\t\t\tif ( morphAttributesPosition ) {\n\n\t\t\t\t\tfor ( var i = 0, il = morphAttributesPosition.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar morphAttribute = morphAttributesPosition[ i ];\n\t\t\t\t\t\tvar morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = morphAttribute.count; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t_vector$4.fromBufferAttribute( morphAttribute, j );\n\n\t\t\t\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute( position, j );\n\t\t\t\t\t\t\t\t_vector$4.add( _offset );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max( maxRadiusSq, center.distanceToSquared( _vector$4 ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt( maxRadiusSq );\n\n\t\t\t\tif ( isNaN( this.boundingSphere.radius ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\t// backwards compatibility\n\n\t\t},\n\n\t\tcomputeVertexNormals: function () {\n\n\t\t\tvar index = this.index;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tif ( attributes.position ) {\n\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( attributes.normal === undefined ) {\n\n\t\t\t\t\tthis.setAttribute( 'normal', new BufferAttribute( new Float32Array( positions.length ), 3 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// reset existing normals to zero\n\n\t\t\t\t\tvar array = attributes.normal.array;\n\n\t\t\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tarray[ i ] = 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar normals = attributes.normal.array;\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar pA = new Vector3(), pB = new Vector3(), pC = new Vector3();\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\t// indexed elements\n\n\t\t\t\tif ( index ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = index.count; i < il; i += 3 ) {\n\n\t\t\t\t\t\tvA = indices[ i + 0 ] * 3;\n\t\t\t\t\t\tvB = indices[ i + 1 ] * 3;\n\t\t\t\t\t\tvC = indices[ i + 2 ] * 3;\n\n\t\t\t\t\t\tpA.fromArray( positions, vA );\n\t\t\t\t\t\tpB.fromArray( positions, vB );\n\t\t\t\t\t\tpC.fromArray( positions, vC );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ vA ] += cb.x;\n\t\t\t\t\t\tnormals[ vA + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vA + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vB ] += cb.x;\n\t\t\t\t\t\tnormals[ vB + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vB + 2 ] += cb.z;\n\n\t\t\t\t\t\tnormals[ vC ] += cb.x;\n\t\t\t\t\t\tnormals[ vC + 1 ] += cb.y;\n\t\t\t\t\t\tnormals[ vC + 2 ] += cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\n\t\t\t\t\tfor ( var i = 0, il = positions.length; i < il; i += 9 ) {\n\n\t\t\t\t\t\tpA.fromArray( positions, i );\n\t\t\t\t\t\tpB.fromArray( positions, i + 3 );\n\t\t\t\t\t\tpC.fromArray( positions, i + 6 );\n\n\t\t\t\t\t\tcb.subVectors( pC, pB );\n\t\t\t\t\t\tab.subVectors( pA, pB );\n\t\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\t\tnormals[ i ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 1 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 2 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 3 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 4 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 5 ] = cb.z;\n\n\t\t\t\t\t\tnormals[ i + 6 ] = cb.x;\n\t\t\t\t\t\tnormals[ i + 7 ] = cb.y;\n\t\t\t\t\t\tnormals[ i + 8 ] = cb.z;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\n\t\t\t\tattributes.normal.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tmerge: function ( geometry, offset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isBufferGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( offset === undefined ) {\n\n\t\t\t\toffset = 0;\n\n\t\t\t\tconsole.warn(\n\t\t\t\t\t'THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. '\n\t\t\t\t\t+ 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.'\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tif ( geometry.attributes[ key ] === undefined ) { continue; }\n\n\t\t\t\tvar attribute1 = attributes[ key ];\n\t\t\t\tvar attributeArray1 = attribute1.array;\n\n\t\t\t\tvar attribute2 = geometry.attributes[ key ];\n\t\t\t\tvar attributeArray2 = attribute2.array;\n\n\t\t\t\tvar attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tvar length = Math.min( attributeArray2.length, attributeArray1.length - attributeOffset );\n\n\t\t\t\tfor ( var i = 0, j = attributeOffset; i < length; i ++, j ++ ) {\n\n\t\t\t\t\tattributeArray1[ j ] = attributeArray2[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalizeNormals: function () {\n\n\t\t\tvar normals = this.attributes.normal;\n\n\t\t\tfor ( var i = 0, il = normals.count; i < il; i ++ ) {\n\n\t\t\t\t_vector$4.x = normals.getX( i );\n\t\t\t\t_vector$4.y = normals.getY( i );\n\t\t\t\t_vector$4.z = normals.getZ( i );\n\n\t\t\t\t_vector$4.normalize();\n\n\t\t\t\tnormals.setXYZ( i, _vector$4.x, _vector$4.y, _vector$4.z );\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoNonIndexed: function () {\n\n\t\t\tfunction convertBufferAttribute( attribute, indices ) {\n\n\t\t\t\tvar array = attribute.array;\n\t\t\t\tvar itemSize = attribute.itemSize;\n\n\t\t\t\tvar array2 = new array.constructor( indices.length * itemSize );\n\n\t\t\t\tvar index = 0, index2 = 0;\n\n\t\t\t\tfor ( var i = 0, l = indices.length; i < l; i ++ ) {\n\n\t\t\t\t\tindex = indices[ i ] * itemSize;\n\n\t\t\t\t\tfor ( var j = 0; j < itemSize; j ++ ) {\n\n\t\t\t\t\t\tarray2[ index2 ++ ] = array[ index ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute( array2, itemSize );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( this.index === null ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.toNonIndexed(): Geometry is already non-indexed.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar geometry2 = new BufferGeometry();\n\n\t\t\tvar indices = this.index.array;\n\t\t\tvar attributes = this.attributes;\n\n\t\t\t// attributes\n\n\t\t\tfor ( var name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\n\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\tgeometry2.setAttribute( name, newAttribute );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = this.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar morphArray = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( var i = 0, il = morphAttribute.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = morphAttribute[ i ];\n\n\t\t\t\t\tvar newAttribute = convertBufferAttribute( attribute, indices );\n\n\t\t\t\t\tmorphArray.push( newAttribute );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[ name ] = morphArray;\n\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tgeometry2.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\treturn geometry2;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\t\t\tif ( Object.keys( this.userData ).length > 0 ) { data.userData = this.userData; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tdata.data = { attributes: {} };\n\n\t\t\tvar index = this.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call( index.array )\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tvar attributes = this.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\n\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\tif ( attribute.name !== '' ) { attributeData.name = attribute.name; }\n\n\t\t\t\tdata.data.attributes[ key ] = attributeData;\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = {};\n\t\t\tvar hasMorphAttributes = false;\n\n\t\t\tfor ( var key in this.morphAttributes ) {\n\n\t\t\t\tvar attributeArray = this.morphAttributes[ key ];\n\n\t\t\t\tvar array = [];\n\n\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar attribute = attributeArray[ i ];\n\n\t\t\t\t\tvar attributeData = attribute.toJSON();\n\n\t\t\t\t\tif ( attribute.name !== '' ) { attributeData.name = attribute.name; }\n\n\t\t\t\t\tarray.push( attributeData );\n\n\t\t\t\t}\n\n\t\t\t\tif ( array.length > 0 ) {\n\n\t\t\t\t\tmorphAttributes[ key ] = array;\n\n\t\t\t\t\thasMorphAttributes = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( hasMorphAttributes ) {\n\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t}\n\n\t\t\tvar groups = this.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tdata.data.groups = JSON.parse( JSON.stringify( groups ) );\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = this.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new BufferGeometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar name, i, l;\n\n\t\t\t// reset\n\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// index\n\n\t\t\tvar index = source.index;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tthis.setIndex( index.clone() );\n\n\t\t\t}\n\n\t\t\t// attributes\n\n\t\t\tvar attributes = source.attributes;\n\n\t\t\tfor ( name in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ name ];\n\t\t\t\tthis.setAttribute( name, attribute.clone() );\n\n\t\t\t}\n\n\t\t\t// morph attributes\n\n\t\t\tvar morphAttributes = source.morphAttributes;\n\n\t\t\tfor ( name in morphAttributes ) {\n\n\t\t\t\tvar array = [];\n\t\t\t\tvar morphAttribute = morphAttributes[ name ]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor ( i = 0, l = morphAttribute.length; i < l; i ++ ) {\n\n\t\t\t\t\tarray.push( morphAttribute[ i ].clone() );\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[ name ] = array;\n\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative;\n\n\t\t\t// groups\n\n\t\t\tvar groups = source.groups;\n\n\t\t\tfor ( i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\tvar group = groups[ i ];\n\t\t\t\tthis.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// draw range\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count;\n\n\t\t\t// user data\n\n\t\t\tthis.userData = source.userData;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author jonobr1 / http://jonobr1.com/\n\t */\n\n\tvar _inverseMatrix = new Matrix4();\n\tvar _ray = new Ray();\n\tvar _sphere = new Sphere();\n\n\tvar _vA = new Vector3();\n\tvar _vB = new Vector3();\n\tvar _vC = new Vector3();\n\n\tvar _tempA = new Vector3();\n\tvar _tempB = new Vector3();\n\tvar _tempC = new Vector3();\n\n\tvar _morphA = new Vector3();\n\tvar _morphB = new Vector3();\n\tvar _morphC = new Vector3();\n\n\tvar _uvA = new Vector2();\n\tvar _uvB = new Vector2();\n\tvar _uvC = new Vector2();\n\n\tvar _intersectionPoint = new Vector3();\n\tvar _intersectionPointWorld = new Vector3();\n\n\tfunction Mesh( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Mesh';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new MeshBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.drawMode = TrianglesDrawMode;\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tMesh.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Mesh,\n\n\t\tisMesh: true,\n\n\t\tsetDrawMode: function ( value ) {\n\n\t\t\tthis.drawMode = value;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.drawMode = source.drawMode;\n\n\t\t\tif ( source.morphTargetInfluences !== undefined ) {\n\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\n\t\t\t}\n\n\t\t\tif ( source.morphTargetDictionary !== undefined ) {\n\n\t\t\t\tthis.morphTargetDictionary = Object.assign( {}, source.morphTargetDictionary );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar material = this.material;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\tif ( material === undefined ) { return; }\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere.copy( geometry.boundingSphere );\n\t\t\t_sphere.applyMatrix4( matrixWorld );\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix.getInverse( matrixWorld );\n\t\t\t_ray.copy( raycaster.ray ).applyMatrix4( _inverseMatrix );\n\n\t\t\t// Check boundingBox before continuing\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tif ( _ray.intersectsBox( geometry.boundingBox ) === false ) { return; }\n\n\t\t\t}\n\n\t\t\t// check unsupported draw modes\n\n\t\t\tif ( this.drawMode !== TrianglesDrawMode ) {\n\n\t\t\t\tconsole.warn( 'THREE.Mesh: TriangleStripDrawMode and TriangleFanDrawMode are not supported by .raycast().' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar intersection;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar a, b, c;\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar position = geometry.attributes.position;\n\t\t\t\tvar morphPosition = geometry.morphAttributes.position;\n\t\t\t\tvar morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tvar uv = geometry.attributes.uv;\n\t\t\t\tvar uv2 = geometry.attributes.uv2;\n\t\t\t\tvar groups = geometry.groups;\n\t\t\t\tvar drawRange = geometry.drawRange;\n\t\t\t\tvar i, j, il, jl;\n\t\t\t\tvar group, groupMaterial;\n\t\t\t\tvar start, end;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t// indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = index.getX( j );\n\t\t\t\t\t\t\t\tb = index.getX( j + 1 );\n\t\t\t\t\t\t\t\tc = index.getX( j + 2 );\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( index.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = index.getX( i );\n\t\t\t\t\t\t\tb = index.getX( i + 1 );\n\t\t\t\t\t\t\tc = index.getX( i + 2 );\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\t\t// non-indexed buffer geometry\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tfor ( i = 0, il = groups.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tgroup = groups[ i ];\n\t\t\t\t\t\t\tgroupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tstart = Math.max( group.start, drawRange.start );\n\t\t\t\t\t\t\tend = Math.min( ( group.start + group.count ), ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\t\tfor ( j = start, jl = end; j < jl; j += 3 ) {\n\n\t\t\t\t\t\t\t\ta = j;\n\t\t\t\t\t\t\t\tb = j + 1;\n\t\t\t\t\t\t\t\tc = j + 2;\n\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, groupMaterial, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( j / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstart = Math.max( 0, drawRange.start );\n\t\t\t\t\t\tend = Math.min( position.count, ( drawRange.start + drawRange.count ) );\n\n\t\t\t\t\t\tfor ( i = start, il = end; i < il; i += 3 ) {\n\n\t\t\t\t\t\t\ta = i;\n\t\t\t\t\t\t\tb = i + 1;\n\t\t\t\t\t\t\tc = i + 2;\n\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection( this, material, raycaster, _ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c );\n\n\t\t\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor( i / 3 ); // triangle number in non-indexed buffer semantics\n\t\t\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar fvA, fvB, fvC;\n\t\t\t\tvar isMultiMaterial = Array.isArray( material );\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar faces = geometry.faces;\n\t\t\t\tvar uvs;\n\n\t\t\t\tvar faceVertexUvs = geometry.faceVertexUvs[ 0 ];\n\t\t\t\tif ( faceVertexUvs.length > 0 ) { uvs = faceVertexUvs; }\n\n\t\t\t\tfor ( var f = 0, fl = faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tvar face = faces[ f ];\n\t\t\t\t\tvar faceMaterial = isMultiMaterial ? material[ face.materialIndex ] : material;\n\n\t\t\t\t\tif ( faceMaterial === undefined ) { continue; }\n\n\t\t\t\t\tfvA = vertices[ face.a ];\n\t\t\t\t\tfvB = vertices[ face.b ];\n\t\t\t\t\tfvC = vertices[ face.c ];\n\n\t\t\t\t\tintersection = checkIntersection( this, faceMaterial, raycaster, _ray, fvA, fvB, fvC, _intersectionPoint );\n\n\t\t\t\t\tif ( intersection ) {\n\n\t\t\t\t\t\tif ( uvs && uvs[ f ] ) {\n\n\t\t\t\t\t\t\tvar uvs_f = uvs[ f ];\n\t\t\t\t\t\t\t_uvA.copy( uvs_f[ 0 ] );\n\t\t\t\t\t\t\t_uvB.copy( uvs_f[ 1 ] );\n\t\t\t\t\t\t\t_uvC.copy( uvs_f[ 2 ] );\n\n\t\t\t\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, fvA, fvB, fvC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tintersection.face = face;\n\t\t\t\t\t\tintersection.faceIndex = f;\n\t\t\t\t\t\tintersects.push( intersection );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\tfunction checkIntersection( object, material, raycaster, ray, pA, pB, pC, point ) {\n\n\t\tvar intersect;\n\n\t\tif ( material.side === BackSide ) {\n\n\t\t\tintersect = ray.intersectTriangle( pC, pB, pA, true, point );\n\n\t\t} else {\n\n\t\t\tintersect = ray.intersectTriangle( pA, pB, pC, material.side !== DoubleSide, point );\n\n\t\t}\n\n\t\tif ( intersect === null ) { return null; }\n\n\t\t_intersectionPointWorld.copy( point );\n\t\t_intersectionPointWorld.applyMatrix4( object.matrixWorld );\n\n\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectionPointWorld );\n\n\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return null; }\n\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\n\t}\n\n\tfunction checkBufferGeometryIntersection( object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c ) {\n\n\t\t_vA.fromBufferAttribute( position, a );\n\t\t_vB.fromBufferAttribute( position, b );\n\t\t_vC.fromBufferAttribute( position, c );\n\n\t\tvar morphInfluences = object.morphTargetInfluences;\n\n\t\tif ( material.morphTargets && morphPosition && morphInfluences ) {\n\n\t\t\t_morphA.set( 0, 0, 0 );\n\t\t\t_morphB.set( 0, 0, 0 );\n\t\t\t_morphC.set( 0, 0, 0 );\n\n\t\t\tfor ( var i = 0, il = morphPosition.length; i < il; i ++ ) {\n\n\t\t\t\tvar influence = morphInfluences[ i ];\n\t\t\t\tvar morphAttribute = morphPosition[ i ];\n\n\t\t\t\tif ( influence === 0 ) { continue; }\n\n\t\t\t\t_tempA.fromBufferAttribute( morphAttribute, a );\n\t\t\t\t_tempB.fromBufferAttribute( morphAttribute, b );\n\t\t\t\t_tempC.fromBufferAttribute( morphAttribute, c );\n\n\t\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA, influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB, influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC, influence );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_morphA.addScaledVector( _tempA.sub( _vA ), influence );\n\t\t\t\t\t_morphB.addScaledVector( _tempB.sub( _vB ), influence );\n\t\t\t\t\t_morphC.addScaledVector( _tempC.sub( _vC ), influence );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_vA.add( _morphA );\n\t\t\t_vB.add( _morphB );\n\t\t\t_vC.add( _morphC );\n\n\t\t}\n\n\t\tvar intersection = checkIntersection( object, material, raycaster, ray, _vA, _vB, _vC, _intersectionPoint );\n\n\t\tif ( intersection ) {\n\n\t\t\tif ( uv ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv, c );\n\n\t\t\t\tintersection.uv = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tif ( uv2 ) {\n\n\t\t\t\t_uvA.fromBufferAttribute( uv2, a );\n\t\t\t\t_uvB.fromBufferAttribute( uv2, b );\n\t\t\t\t_uvC.fromBufferAttribute( uv2, c );\n\n\t\t\t\tintersection.uv2 = Triangle.getUV( _intersectionPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2() );\n\n\t\t\t}\n\n\t\t\tvar face = new Face3( a, b, c );\n\t\t\tTriangle.getNormal( _vA, _vB, _vC, face.normal );\n\n\t\t\tintersection.face = face;\n\n\t\t}\n\n\t\treturn intersection;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author kile / http://kile.stravaganza.org/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _geometryId = 0; // Geometry uses even numbers as Id\n\tvar _m1$3 = new Matrix4();\n\tvar _obj$1 = new Object3D();\n\tvar _offset$1 = new Vector3();\n\n\tfunction Geometry() {\n\n\t\tObject.defineProperty( this, 'id', { value: _geometryId += 2 } );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.name = '';\n\t\tthis.type = 'Geometry';\n\n\t\tthis.vertices = [];\n\t\tthis.colors = [];\n\t\tthis.faces = [];\n\t\tthis.faceVertexUvs = [[]];\n\n\t\tthis.morphTargets = [];\n\t\tthis.morphNormals = [];\n\n\t\tthis.skinWeights = [];\n\t\tthis.skinIndices = [];\n\n\t\tthis.lineDistances = [];\n\n\t\tthis.boundingBox = null;\n\t\tthis.boundingSphere = null;\n\n\t\t// update flags\n\n\t\tthis.elementsNeedUpdate = false;\n\t\tthis.verticesNeedUpdate = false;\n\t\tthis.uvsNeedUpdate = false;\n\t\tthis.normalsNeedUpdate = false;\n\t\tthis.colorsNeedUpdate = false;\n\t\tthis.lineDistancesNeedUpdate = false;\n\t\tthis.groupsNeedUpdate = false;\n\n\t}\n\n\tGeometry.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: Geometry,\n\n\t\tisGeometry: true,\n\n\t\tapplyMatrix: function ( matrix ) {\n\n\t\t\tvar normalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\tfor ( var i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertex.applyMatrix4( matrix );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\t\t\t\tface.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tface.vertexNormals[ j ].applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.boundingBox !== null ) {\n\n\t\t\t\tthis.computeBoundingBox();\n\n\t\t\t}\n\n\t\t\tif ( this.boundingSphere !== null ) {\n\n\t\t\t\tthis.computeBoundingSphere();\n\n\t\t\t}\n\n\t\t\tthis.verticesNeedUpdate = true;\n\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateX: function ( angle ) {\n\n\t\t\t// rotate geometry around world x-axis\n\n\t\t\t_m1$3.makeRotationX( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateY: function ( angle ) {\n\n\t\t\t// rotate geometry around world y-axis\n\n\t\t\t_m1$3.makeRotationY( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\trotateZ: function ( angle ) {\n\n\t\t\t// rotate geometry around world z-axis\n\n\t\t\t_m1$3.makeRotationZ( angle );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( x, y, z ) {\n\n\t\t\t// translate geometry\n\n\t\t\t_m1$3.makeTranslation( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tscale: function ( x, y, z ) {\n\n\t\t\t// scale geometry\n\n\t\t\t_m1$3.makeScale( x, y, z );\n\n\t\t\tthis.applyMatrix( _m1$3 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlookAt: function ( vector ) {\n\n\t\t\t_obj$1.lookAt( vector );\n\n\t\t\t_obj$1.updateMatrix();\n\n\t\t\tthis.applyMatrix( _obj$1.matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tfromBufferGeometry: function ( geometry ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar indices = geometry.index !== null ? geometry.index.array : undefined;\n\t\t\tvar attributes = geometry.attributes;\n\n\t\t\tif ( attributes.position === undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.fromBufferGeometry(): Position attribute required for conversion.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tvar positions = attributes.position.array;\n\t\t\tvar normals = attributes.normal !== undefined ? attributes.normal.array : undefined;\n\t\t\tvar colors = attributes.color !== undefined ? attributes.color.array : undefined;\n\t\t\tvar uvs = attributes.uv !== undefined ? attributes.uv.array : undefined;\n\t\t\tvar uvs2 = attributes.uv2 !== undefined ? attributes.uv2.array : undefined;\n\n\t\t\tif ( uvs2 !== undefined ) { this.faceVertexUvs[ 1 ] = []; }\n\n\t\t\tfor ( var i = 0; i < positions.length; i += 3 ) {\n\n\t\t\t\tscope.vertices.push( new Vector3().fromArray( positions, i ) );\n\n\t\t\t\tif ( colors !== undefined ) {\n\n\t\t\t\t\tscope.colors.push( new Color().fromArray( colors, i ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction addFace( a, b, c, materialIndex ) {\n\n\t\t\t\tvar vertexColors = ( colors === undefined ) ? [] : [\n\t\t\t\t\tscope.colors[ a ].clone(),\n\t\t\t\t\tscope.colors[ b ].clone(),\n\t\t\t\t\tscope.colors[ c ].clone() ];\n\n\t\t\t\tvar vertexNormals = ( normals === undefined ) ? [] : [\n\t\t\t\t\tnew Vector3().fromArray( normals, a * 3 ),\n\t\t\t\t\tnew Vector3().fromArray( normals, b * 3 ),\n\t\t\t\t\tnew Vector3().fromArray( normals, c * 3 )\n\t\t\t\t];\n\n\t\t\t\tvar face = new Face3( a, b, c, vertexNormals, vertexColors, materialIndex );\n\n\t\t\t\tscope.faces.push( face );\n\n\t\t\t\tif ( uvs !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 0 ].push( [\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, a * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, b * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs, c * 2 )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvs2 !== undefined ) {\n\n\t\t\t\t\tscope.faceVertexUvs[ 1 ].push( [\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, a * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, b * 2 ),\n\t\t\t\t\t\tnew Vector2().fromArray( uvs2, c * 2 )\n\t\t\t\t\t] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar groups = geometry.groups;\n\n\t\t\tif ( groups.length > 0 ) {\n\n\t\t\t\tfor ( var i = 0; i < groups.length; i ++ ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tvar start = group.start;\n\t\t\t\t\tvar count = group.count;\n\n\t\t\t\t\tfor ( var j = start, jl = start + count; j < jl; j += 3 ) {\n\n\t\t\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\t\t\taddFace( indices[ j ], indices[ j + 1 ], indices[ j + 2 ], group.materialIndex );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\taddFace( j, j + 1, j + 2, group.materialIndex );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tif ( indices !== undefined ) {\n\n\t\t\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t\t\taddFace( indices[ i ], indices[ i + 1 ], indices[ i + 2 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0; i < positions.length / 3; i += 3 ) {\n\n\t\t\t\t\t\taddFace( i, i + 1, i + 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tif ( geometry.boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = geometry.boundingBox.clone();\n\n\t\t\t}\n\n\t\t\tif ( geometry.boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = geometry.boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcenter: function () {\n\n\t\t\tthis.computeBoundingBox();\n\n\t\t\tthis.boundingBox.getCenter( _offset$1 ).negate();\n\n\t\t\tthis.translate( _offset$1.x, _offset$1.y, _offset$1.z );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tnormalize: function () {\n\n\t\t\tthis.computeBoundingSphere();\n\n\t\t\tvar center = this.boundingSphere.center;\n\t\t\tvar radius = this.boundingSphere.radius;\n\n\t\t\tvar s = radius === 0 ? 1 : 1.0 / radius;\n\n\t\t\tvar matrix = new Matrix4();\n\t\t\tmatrix.set(\n\t\t\t\ts, 0, 0, - s * center.x,\n\t\t\t\t0, s, 0, - s * center.y,\n\t\t\t\t0, 0, s, - s * center.z,\n\t\t\t\t0, 0, 0, 1\n\t\t\t);\n\n\t\t\tthis.applyMatrix( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcomputeFaceNormals: function () {\n\n\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\tfor ( var f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tvar face = this.faces[ f ];\n\n\t\t\t\tvar vA = this.vertices[ face.a ];\n\t\t\t\tvar vB = this.vertices[ face.b ];\n\t\t\t\tvar vC = this.vertices[ face.c ];\n\n\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\tcb.cross( ab );\n\n\t\t\t\tcb.normalize();\n\n\t\t\t\tface.normal.copy( cb );\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeVertexNormals: function ( areaWeighted ) {\n\n\t\t\tif ( areaWeighted === undefined ) { areaWeighted = true; }\n\n\t\t\tvar v, vl, f, fl, face, vertices;\n\n\t\t\tvertices = new Array( this.vertices.length );\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ] = new Vector3();\n\n\t\t\t}\n\n\t\t\tif ( areaWeighted ) {\n\n\t\t\t\t// vertex normals weighted by triangle areas\n\t\t\t\t// http://www.iquilezles.org/www/articles/normals/normals.htm\n\n\t\t\t\tvar vA, vB, vC;\n\t\t\t\tvar cb = new Vector3(), ab = new Vector3();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvA = this.vertices[ face.a ];\n\t\t\t\t\tvB = this.vertices[ face.b ];\n\t\t\t\t\tvC = this.vertices[ face.c ];\n\n\t\t\t\t\tcb.subVectors( vC, vB );\n\t\t\t\t\tab.subVectors( vA, vB );\n\t\t\t\t\tcb.cross( ab );\n\n\t\t\t\t\tvertices[ face.a ].add( cb );\n\t\t\t\t\tvertices[ face.b ].add( cb );\n\t\t\t\t\tvertices[ face.c ].add( cb );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tthis.computeFaceNormals();\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tvertices[ face.a ].add( face.normal );\n\t\t\t\t\tvertices[ face.b ].add( face.normal );\n\t\t\t\t\tvertices[ face.c ].add( face.normal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( v = 0, vl = this.vertices.length; v < vl; v ++ ) {\n\n\t\t\t\tvertices[ v ].normalize();\n\n\t\t\t}\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( vertices[ face.a ] );\n\t\t\t\t\tvertexNormals[ 1 ].copy( vertices[ face.b ] );\n\t\t\t\t\tvertexNormals[ 2 ].copy( vertices[ face.c ] );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = vertices[ face.a ].clone();\n\t\t\t\t\tvertexNormals[ 1 ] = vertices[ face.b ].clone();\n\t\t\t\t\tvertexNormals[ 2 ] = vertices[ face.c ].clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeFlatVertexNormals: function () {\n\n\t\t\tvar f, fl, face;\n\n\t\t\tthis.computeFaceNormals();\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\tif ( vertexNormals.length === 3 ) {\n\n\t\t\t\t\tvertexNormals[ 0 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 1 ].copy( face.normal );\n\t\t\t\t\tvertexNormals[ 2 ].copy( face.normal );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvertexNormals[ 0 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 1 ] = face.normal.clone();\n\t\t\t\t\tvertexNormals[ 2 ] = face.normal.clone();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.faces.length > 0 ) {\n\n\t\t\t\tthis.normalsNeedUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeMorphNormals: function () {\n\n\t\t\tvar i, il, f, fl, face;\n\n\t\t\t// save original normals\n\t\t\t// - create temp variables on first access\n\t\t\t//   otherwise just copy (for faster repeated calls)\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tif ( ! face.__originalFaceNormal ) {\n\n\t\t\t\t\tface.__originalFaceNormal = face.normal.clone();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tface.__originalFaceNormal.copy( face.normal );\n\n\t\t\t\t}\n\n\t\t\t\tif ( ! face.__originalVertexNormals ) { face.__originalVertexNormals = []; }\n\n\t\t\t\tfor ( i = 0, il = face.vertexNormals.length; i < il; i ++ ) {\n\n\t\t\t\t\tif ( ! face.__originalVertexNormals[ i ] ) {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ] = face.vertexNormals[ i ].clone();\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tface.__originalVertexNormals[ i ].copy( face.vertexNormals[ i ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// use temp geometry to compute face and vertex normals for each morph\n\n\t\t\tvar tmpGeo = new Geometry();\n\t\t\ttmpGeo.faces = this.faces;\n\n\t\t\tfor ( i = 0, il = this.morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\t// create on first access\n\n\t\t\t\tif ( ! this.morphNormals[ i ] ) {\n\n\t\t\t\t\tthis.morphNormals[ i ] = {};\n\t\t\t\t\tthis.morphNormals[ i ].faceNormals = [];\n\t\t\t\t\tthis.morphNormals[ i ].vertexNormals = [];\n\n\t\t\t\t\tvar dstNormalsFace = this.morphNormals[ i ].faceNormals;\n\t\t\t\t\tvar dstNormalsVertex = this.morphNormals[ i ].vertexNormals;\n\n\t\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\t\tfaceNormal = new Vector3();\n\t\t\t\t\t\tvertexNormals = { a: new Vector3(), b: new Vector3(), c: new Vector3() };\n\n\t\t\t\t\t\tdstNormalsFace.push( faceNormal );\n\t\t\t\t\t\tdstNormalsVertex.push( vertexNormals );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar morphNormals = this.morphNormals[ i ];\n\n\t\t\t\t// set vertices to morph target\n\n\t\t\t\ttmpGeo.vertices = this.morphTargets[ i ].vertices;\n\n\t\t\t\t// compute morph normals\n\n\t\t\t\ttmpGeo.computeFaceNormals();\n\t\t\t\ttmpGeo.computeVertexNormals();\n\n\t\t\t\t// store morph normals\n\n\t\t\t\tvar faceNormal, vertexNormals;\n\n\t\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\t\tfaceNormal = morphNormals.faceNormals[ f ];\n\t\t\t\t\tvertexNormals = morphNormals.vertexNormals[ f ];\n\n\t\t\t\t\tfaceNormal.copy( face.normal );\n\n\t\t\t\t\tvertexNormals.a.copy( face.vertexNormals[ 0 ] );\n\t\t\t\t\tvertexNormals.b.copy( face.vertexNormals[ 1 ] );\n\t\t\t\t\tvertexNormals.c.copy( face.vertexNormals[ 2 ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// restore original normals\n\n\t\t\tfor ( f = 0, fl = this.faces.length; f < fl; f ++ ) {\n\n\t\t\t\tface = this.faces[ f ];\n\n\t\t\t\tface.normal = face.__originalFaceNormal;\n\t\t\t\tface.vertexNormals = face.__originalVertexNormals;\n\n\t\t\t}\n\n\t\t},\n\n\t\tcomputeBoundingBox: function () {\n\n\t\t\tif ( this.boundingBox === null ) {\n\n\t\t\t\tthis.boundingBox = new Box3();\n\n\t\t\t}\n\n\t\t\tthis.boundingBox.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tcomputeBoundingSphere: function () {\n\n\t\t\tif ( this.boundingSphere === null ) {\n\n\t\t\t\tthis.boundingSphere = new Sphere();\n\n\t\t\t}\n\n\t\t\tthis.boundingSphere.setFromPoints( this.vertices );\n\n\t\t},\n\n\t\tmerge: function ( geometry, matrix, materialIndexOffset ) {\n\n\t\t\tif ( ! ( geometry && geometry.isGeometry ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.merge(): geometry not an instance of THREE.Geometry.', geometry );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar normalMatrix,\n\t\t\t\tvertexOffset = this.vertices.length,\n\t\t\t\tvertices1 = this.vertices,\n\t\t\t\tvertices2 = geometry.vertices,\n\t\t\t\tfaces1 = this.faces,\n\t\t\t\tfaces2 = geometry.faces,\n\t\t\t\tcolors1 = this.colors,\n\t\t\t\tcolors2 = geometry.colors;\n\n\t\t\tif ( materialIndexOffset === undefined ) { materialIndexOffset = 0; }\n\n\t\t\tif ( matrix !== undefined ) {\n\n\t\t\t\tnormalMatrix = new Matrix3().getNormalMatrix( matrix );\n\n\t\t\t}\n\n\t\t\t// vertices\n\n\t\t\tfor ( var i = 0, il = vertices2.length; i < il; i ++ ) {\n\n\t\t\t\tvar vertex = vertices2[ i ];\n\n\t\t\t\tvar vertexCopy = vertex.clone();\n\n\t\t\t\tif ( matrix !== undefined ) { vertexCopy.applyMatrix4( matrix ); }\n\n\t\t\t\tvertices1.push( vertexCopy );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tfor ( var i = 0, il = colors2.length; i < il; i ++ ) {\n\n\t\t\t\tcolors1.push( colors2[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tfor ( i = 0, il = faces2.length; i < il; i ++ ) {\n\n\t\t\t\tvar face = faces2[ i ], faceCopy, normal, color,\n\t\t\t\t\tfaceVertexNormals = face.vertexNormals,\n\t\t\t\t\tfaceVertexColors = face.vertexColors;\n\n\t\t\t\tfaceCopy = new Face3( face.a + vertexOffset, face.b + vertexOffset, face.c + vertexOffset );\n\t\t\t\tfaceCopy.normal.copy( face.normal );\n\n\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\tfaceCopy.normal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tnormal = faceVertexNormals[ j ].clone();\n\n\t\t\t\t\tif ( normalMatrix !== undefined ) {\n\n\t\t\t\t\t\tnormal.applyMatrix3( normalMatrix ).normalize();\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfaceCopy.vertexNormals.push( normal );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.color.copy( face.color );\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexColors.length; j < jl; j ++ ) {\n\n\t\t\t\t\tcolor = faceVertexColors[ j ];\n\t\t\t\t\tfaceCopy.vertexColors.push( color.clone() );\n\n\t\t\t\t}\n\n\t\t\t\tfaceCopy.materialIndex = face.materialIndex + materialIndexOffset;\n\n\t\t\t\tfaces1.push( faceCopy );\n\n\t\t\t}\n\n\t\t\t// uvs\n\n\t\t\tfor ( var i = 0, il = geometry.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs2 = geometry.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) { this.faceVertexUvs[ i ] = []; }\n\n\t\t\t\tfor ( var j = 0, jl = faceVertexUvs2.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs2 = faceVertexUvs2[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( var k = 0, kl = uvs2.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tuvsCopy.push( uvs2[ k ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tmergeMesh: function ( mesh ) {\n\n\t\t\tif ( ! ( mesh && mesh.isMesh ) ) {\n\n\t\t\t\tconsole.error( 'THREE.Geometry.mergeMesh(): mesh not an instance of THREE.Mesh.', mesh );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( mesh.matrixAutoUpdate ) { mesh.updateMatrix(); }\n\n\t\t\tthis.merge( mesh.geometry, mesh.matrix );\n\n\t\t},\n\n\t\t/*\n\t\t * Checks for duplicate vertices with hashmap.\n\t\t * Duplicated vertices are removed\n\t\t * and faces' vertices are updated.\n\t\t */\n\n\t\tmergeVertices: function () {\n\n\t\t\tvar verticesMap = {}; // Hashmap for looking up vertices by position coordinates (and making sure they are unique)\n\t\t\tvar unique = [], changes = [];\n\n\t\t\tvar v, key;\n\t\t\tvar precisionPoints = 4; // number of decimal points, e.g. 4 for epsilon of 0.0001\n\t\t\tvar precision = Math.pow( 10, precisionPoints );\n\t\t\tvar i, il, face;\n\t\t\tvar indices, j, jl;\n\n\t\t\tfor ( i = 0, il = this.vertices.length; i < il; i ++ ) {\n\n\t\t\t\tv = this.vertices[ i ];\n\t\t\t\tkey = Math.round( v.x * precision ) + '_' + Math.round( v.y * precision ) + '_' + Math.round( v.z * precision );\n\n\t\t\t\tif ( verticesMap[ key ] === undefined ) {\n\n\t\t\t\t\tverticesMap[ key ] = i;\n\t\t\t\t\tunique.push( this.vertices[ i ] );\n\t\t\t\t\tchanges[ i ] = unique.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\t//console.log('Duplicate vertex found. ', i, ' could be using ', verticesMap[key]);\n\t\t\t\t\tchanges[ i ] = changes[ verticesMap[ key ] ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// if faces are completely degenerate after merging vertices, we\n\t\t\t// have to remove them from the geometry.\n\t\t\tvar faceIndicesToRemove = [];\n\n\t\t\tfor ( i = 0, il = this.faces.length; i < il; i ++ ) {\n\n\t\t\t\tface = this.faces[ i ];\n\n\t\t\t\tface.a = changes[ face.a ];\n\t\t\t\tface.b = changes[ face.b ];\n\t\t\t\tface.c = changes[ face.c ];\n\n\t\t\t\tindices = [ face.a, face.b, face.c ];\n\n\t\t\t\t// if any duplicate vertices are found in a Face3\n\t\t\t\t// we have to remove the face as nothing can be saved\n\t\t\t\tfor ( var n = 0; n < 3; n ++ ) {\n\n\t\t\t\t\tif ( indices[ n ] === indices[ ( n + 1 ) % 3 ] ) {\n\n\t\t\t\t\t\tfaceIndicesToRemove.push( i );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( i = faceIndicesToRemove.length - 1; i >= 0; i -- ) {\n\n\t\t\t\tvar idx = faceIndicesToRemove[ i ];\n\n\t\t\t\tthis.faces.splice( idx, 1 );\n\n\t\t\t\tfor ( j = 0, jl = this.faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ j ].splice( idx, 1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Use unique set of vertices\n\n\t\t\tvar diff = this.vertices.length - unique.length;\n\t\t\tthis.vertices = unique;\n\t\t\treturn diff;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.vertices = [];\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tthis.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsortFacesByMaterialIndex: function () {\n\n\t\t\tvar faces = this.faces;\n\t\t\tvar length = faces.length;\n\n\t\t\t// tag faces\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tfaces[ i ]._id = i;\n\n\t\t\t}\n\n\t\t\t// sort faces\n\n\t\t\tfunction materialIndexSort( a, b ) {\n\n\t\t\t\treturn a.materialIndex - b.materialIndex;\n\n\t\t\t}\n\n\t\t\tfaces.sort( materialIndexSort );\n\n\t\t\t// sort uvs\n\n\t\t\tvar uvs1 = this.faceVertexUvs[ 0 ];\n\t\t\tvar uvs2 = this.faceVertexUvs[ 1 ];\n\n\t\t\tvar newUvs1, newUvs2;\n\n\t\t\tif ( uvs1 && uvs1.length === length ) { newUvs1 = []; }\n\t\t\tif ( uvs2 && uvs2.length === length ) { newUvs2 = []; }\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar id = faces[ i ]._id;\n\n\t\t\t\tif ( newUvs1 ) { newUvs1.push( uvs1[ id ] ); }\n\t\t\t\tif ( newUvs2 ) { newUvs2.push( uvs2[ id ] ); }\n\n\t\t\t}\n\n\t\t\tif ( newUvs1 ) { this.faceVertexUvs[ 0 ] = newUvs1; }\n\t\t\tif ( newUvs2 ) { this.faceVertexUvs[ 1 ] = newUvs2; }\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Geometry',\n\t\t\t\t\tgenerator: 'Geometry.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// standard Geometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif ( this.name !== '' ) { data.name = this.name; }\n\n\t\t\tif ( this.parameters !== undefined ) {\n\n\t\t\t\tvar parameters = this.parameters;\n\n\t\t\t\tfor ( var key in parameters ) {\n\n\t\t\t\t\tif ( parameters[ key ] !== undefined ) { data[ key ] = parameters[ key ]; }\n\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\n\t\t\t}\n\n\t\t\tvar vertices = [];\n\n\t\t\tfor ( var i = 0; i < this.vertices.length; i ++ ) {\n\n\t\t\t\tvar vertex = this.vertices[ i ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t\tvar faces = [];\n\t\t\tvar normals = [];\n\t\t\tvar normalsHash = {};\n\t\t\tvar colors = [];\n\t\t\tvar colorsHash = {};\n\t\t\tvar uvs = [];\n\t\t\tvar uvsHash = {};\n\n\t\t\tfor ( var i = 0; i < this.faces.length; i ++ ) {\n\n\t\t\t\tvar face = this.faces[ i ];\n\n\t\t\t\tvar hasMaterial = true;\n\t\t\t\tvar hasFaceUv = false; // deprecated\n\t\t\t\tvar hasFaceVertexUv = this.faceVertexUvs[ 0 ][ i ] !== undefined;\n\t\t\t\tvar hasFaceNormal = face.normal.length() > 0;\n\t\t\t\tvar hasFaceVertexNormal = face.vertexNormals.length > 0;\n\t\t\t\tvar hasFaceColor = face.color.r !== 1 || face.color.g !== 1 || face.color.b !== 1;\n\t\t\t\tvar hasFaceVertexColor = face.vertexColors.length > 0;\n\n\t\t\t\tvar faceType = 0;\n\n\t\t\t\tfaceType = setBit( faceType, 0, 0 ); // isQuad\n\t\t\t\tfaceType = setBit( faceType, 1, hasMaterial );\n\t\t\t\tfaceType = setBit( faceType, 2, hasFaceUv );\n\t\t\t\tfaceType = setBit( faceType, 3, hasFaceVertexUv );\n\t\t\t\tfaceType = setBit( faceType, 4, hasFaceNormal );\n\t\t\t\tfaceType = setBit( faceType, 5, hasFaceVertexNormal );\n\t\t\t\tfaceType = setBit( faceType, 6, hasFaceColor );\n\t\t\t\tfaceType = setBit( faceType, 7, hasFaceVertexColor );\n\n\t\t\t\tfaces.push( faceType );\n\t\t\t\tfaces.push( face.a, face.b, face.c );\n\t\t\t\tfaces.push( face.materialIndex );\n\n\t\t\t\tif ( hasFaceVertexUv ) {\n\n\t\t\t\t\tvar faceVertexUvs = this.faceVertexUvs[ 0 ][ i ];\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 0 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 1 ] ),\n\t\t\t\t\t\tgetUvIndex( faceVertexUvs[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceNormal ) {\n\n\t\t\t\t\tfaces.push( getNormalIndex( face.normal ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexNormal ) {\n\n\t\t\t\t\tvar vertexNormals = face.vertexNormals;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 0 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 1 ] ),\n\t\t\t\t\t\tgetNormalIndex( vertexNormals[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceColor ) {\n\n\t\t\t\t\tfaces.push( getColorIndex( face.color ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( hasFaceVertexColor ) {\n\n\t\t\t\t\tvar vertexColors = face.vertexColors;\n\n\t\t\t\t\tfaces.push(\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 0 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 1 ] ),\n\t\t\t\t\t\tgetColorIndex( vertexColors[ 2 ] )\n\t\t\t\t\t);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction setBit( value, position, enabled ) {\n\n\t\t\t\treturn enabled ? value | ( 1 << position ) : value & ( ~ ( 1 << position ) );\n\n\t\t\t}\n\n\t\t\tfunction getNormalIndex( normal ) {\n\n\t\t\t\tvar hash = normal.x.toString() + normal.y.toString() + normal.z.toString();\n\n\t\t\t\tif ( normalsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tnormalsHash[ hash ] = normals.length / 3;\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\treturn normalsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getColorIndex( color ) {\n\n\t\t\t\tvar hash = color.r.toString() + color.g.toString() + color.b.toString();\n\n\t\t\t\tif ( colorsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tcolorsHash[ hash ] = colors.length;\n\t\t\t\tcolors.push( color.getHex() );\n\n\t\t\t\treturn colorsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tfunction getUvIndex( uv ) {\n\n\t\t\t\tvar hash = uv.x.toString() + uv.y.toString();\n\n\t\t\t\tif ( uvsHash[ hash ] !== undefined ) {\n\n\t\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t\t}\n\n\t\t\t\tuvsHash[ hash ] = uvs.length / 2;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\treturn uvsHash[ hash ];\n\n\t\t\t}\n\n\t\t\tdata.data = {};\n\n\t\t\tdata.data.vertices = vertices;\n\t\t\tdata.data.normals = normals;\n\t\t\tif ( colors.length > 0 ) { data.data.colors = colors; }\n\t\t\tif ( uvs.length > 0 ) { data.data.uvs = [ uvs ]; } // temporal backward compatibility\n\t\t\tdata.data.faces = faces;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\t/*\n\t\t\t // Handle primitives\n\n\t\t\t var parameters = this.parameters;\n\n\t\t\t if ( parameters !== undefined ) {\n\n\t\t\t var values = [];\n\n\t\t\t for ( var key in parameters ) {\n\n\t\t\t values.push( parameters[ key ] );\n\n\t\t\t }\n\n\t\t\t var geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\n\t\t\t }\n\n\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\n\t\t\treturn new Geometry().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tvar i, il, j, jl, k, kl;\n\n\t\t\t// reset\n\n\t\t\tthis.vertices = [];\n\t\t\tthis.colors = [];\n\t\t\tthis.faces = [];\n\t\t\tthis.faceVertexUvs = [[]];\n\t\t\tthis.morphTargets = [];\n\t\t\tthis.morphNormals = [];\n\t\t\tthis.skinWeights = [];\n\t\t\tthis.skinIndices = [];\n\t\t\tthis.lineDistances = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\n\t\t\t// name\n\n\t\t\tthis.name = source.name;\n\n\t\t\t// vertices\n\n\t\t\tvar vertices = source.vertices;\n\n\t\t\tfor ( i = 0, il = vertices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.vertices.push( vertices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// colors\n\n\t\t\tvar colors = source.colors;\n\n\t\t\tfor ( i = 0, il = colors.length; i < il; i ++ ) {\n\n\t\t\t\tthis.colors.push( colors[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// faces\n\n\t\t\tvar faces = source.faces;\n\n\t\t\tfor ( i = 0, il = faces.length; i < il; i ++ ) {\n\n\t\t\t\tthis.faces.push( faces[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// face vertex uvs\n\n\t\t\tfor ( i = 0, il = source.faceVertexUvs.length; i < il; i ++ ) {\n\n\t\t\t\tvar faceVertexUvs = source.faceVertexUvs[ i ];\n\n\t\t\t\tif ( this.faceVertexUvs[ i ] === undefined ) {\n\n\t\t\t\t\tthis.faceVertexUvs[ i ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( j = 0, jl = faceVertexUvs.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar uvs = faceVertexUvs[ j ], uvsCopy = [];\n\n\t\t\t\t\tfor ( k = 0, kl = uvs.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\tvar uv = uvs[ k ];\n\n\t\t\t\t\t\tuvsCopy.push( uv.clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.faceVertexUvs[ i ].push( uvsCopy );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphTargets = source.morphTargets;\n\n\t\t\tfor ( i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = {};\n\t\t\t\tmorphTarget.name = morphTargets[ i ].name;\n\n\t\t\t\t// vertices\n\n\t\t\t\tif ( morphTargets[ i ].vertices !== undefined ) {\n\n\t\t\t\t\tmorphTarget.vertices = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].vertices.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.vertices.push( morphTargets[ i ].vertices[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// normals\n\n\t\t\t\tif ( morphTargets[ i ].normals !== undefined ) {\n\n\t\t\t\t\tmorphTarget.normals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphTargets[ i ].normals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphTarget.normals.push( morphTargets[ i ].normals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphTargets.push( morphTarget );\n\n\t\t\t}\n\n\t\t\t// morph normals\n\n\t\t\tvar morphNormals = source.morphNormals;\n\n\t\t\tfor ( i = 0, il = morphNormals.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphNormal = {};\n\n\t\t\t\t// vertex normals\n\n\t\t\t\tif ( morphNormals[ i ].vertexNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.vertexNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tvar srcVertexNormal = morphNormals[ i ].vertexNormals[ j ];\n\t\t\t\t\t\tvar destVertexNormal = {};\n\n\t\t\t\t\t\tdestVertexNormal.a = srcVertexNormal.a.clone();\n\t\t\t\t\t\tdestVertexNormal.b = srcVertexNormal.b.clone();\n\t\t\t\t\t\tdestVertexNormal.c = srcVertexNormal.c.clone();\n\n\t\t\t\t\t\tmorphNormal.vertexNormals.push( destVertexNormal );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// face normals\n\n\t\t\t\tif ( morphNormals[ i ].faceNormals !== undefined ) {\n\n\t\t\t\t\tmorphNormal.faceNormals = [];\n\n\t\t\t\t\tfor ( j = 0, jl = morphNormals[ i ].faceNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\tmorphNormal.faceNormals.push( morphNormals[ i ].faceNormals[ j ].clone() );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis.morphNormals.push( morphNormal );\n\n\t\t\t}\n\n\t\t\t// skin weights\n\n\t\t\tvar skinWeights = source.skinWeights;\n\n\t\t\tfor ( i = 0, il = skinWeights.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinWeights.push( skinWeights[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// skin indices\n\n\t\t\tvar skinIndices = source.skinIndices;\n\n\t\t\tfor ( i = 0, il = skinIndices.length; i < il; i ++ ) {\n\n\t\t\t\tthis.skinIndices.push( skinIndices[ i ].clone() );\n\n\t\t\t}\n\n\t\t\t// line distances\n\n\t\t\tvar lineDistances = source.lineDistances;\n\n\t\t\tfor ( i = 0, il = lineDistances.length; i < il; i ++ ) {\n\n\t\t\t\tthis.lineDistances.push( lineDistances[ i ] );\n\n\t\t\t}\n\n\t\t\t// bounding box\n\n\t\t\tvar boundingBox = source.boundingBox;\n\n\t\t\tif ( boundingBox !== null ) {\n\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\n\t\t\t}\n\n\t\t\t// bounding sphere\n\n\t\t\tvar boundingSphere = source.boundingSphere;\n\n\t\t\tif ( boundingSphere !== null ) {\n\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\n\t\t\t}\n\n\t\t\t// update flags\n\n\t\t\tthis.elementsNeedUpdate = source.elementsNeedUpdate;\n\t\t\tthis.verticesNeedUpdate = source.verticesNeedUpdate;\n\t\t\tthis.uvsNeedUpdate = source.uvsNeedUpdate;\n\t\t\tthis.normalsNeedUpdate = source.normalsNeedUpdate;\n\t\t\tthis.colorsNeedUpdate = source.colorsNeedUpdate;\n\t\t\tthis.lineDistancesNeedUpdate = source.lineDistancesNeedUpdate;\n\t\t\tthis.groupsNeedUpdate = source.groupsNeedUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdispose: function () {\n\n\t\t\tthis.dispatchEvent( { type: 'dispose' } );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// BoxGeometry\n\n\tvar BoxGeometry = /*@__PURE__*/(function (Geometry) {\n\t\tfunction BoxGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tGeometry.call(this);\n\n\t\t\tthis.type = 'BoxGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tthis.fromBufferGeometry( new BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) );\n\t\t\tthis.mergeVertices();\n\n\t\t}\n\n\t\tif ( Geometry ) BoxGeometry.__proto__ = Geometry;\n\t\tBoxGeometry.prototype = Object.create( Geometry && Geometry.prototype );\n\t\tBoxGeometry.prototype.constructor = BoxGeometry;\n\n\t\treturn BoxGeometry;\n\t}(Geometry));\n\n\t// BoxBufferGeometry\n\n\tvar BoxBufferGeometry = /*@__PURE__*/(function (BufferGeometry) {\n\t\tfunction BoxBufferGeometry( width, height, depth, widthSegments, heightSegments, depthSegments ) {\n\n\t\t\tBufferGeometry.call(this);\n\n\t\t\tthis.type = 'BoxBufferGeometry';\n\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\n\t\t\tvar scope = this;\n\n\t\t\twidth = width || 1;\n\t\t\theight = height || 1;\n\t\t\tdepth = depth || 1;\n\n\t\t\t// segments\n\n\t\t\twidthSegments = Math.floor( widthSegments ) || 1;\n\t\t\theightSegments = Math.floor( heightSegments ) || 1;\n\t\t\tdepthSegments = Math.floor( depthSegments ) || 1;\n\n\t\t\t// buffers\n\n\t\t\tvar indices = [];\n\t\t\tvar vertices = [];\n\t\t\tvar normals = [];\n\t\t\tvar uvs = [];\n\n\t\t\t// helper variables\n\n\t\t\tvar numberOfVertices = 0;\n\t\t\tvar groupStart = 0;\n\n\t\t\t// build each side of the box geometry\n\n\t\t\tbuildPlane( 'z', 'y', 'x', - 1, - 1, depth, height, width, depthSegments, heightSegments, 0 ); // px\n\t\t\tbuildPlane( 'z', 'y', 'x', 1, - 1, depth, height, - width, depthSegments, heightSegments, 1 ); // nx\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2 ); // py\n\t\t\tbuildPlane( 'x', 'z', 'y', 1, - 1, width, depth, - height, widthSegments, depthSegments, 3 ); // ny\n\t\t\tbuildPlane( 'x', 'y', 'z', 1, - 1, width, height, depth, widthSegments, heightSegments, 4 ); // pz\n\t\t\tbuildPlane( 'x', 'y', 'z', - 1, - 1, width, height, - depth, widthSegments, heightSegments, 5 ); // nz\n\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex( indices );\n\t\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t\tfunction buildPlane( u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex ) {\n\n\t\t\t\tvar segmentWidth = width / gridX;\n\t\t\t\tvar segmentHeight = height / gridY;\n\n\t\t\t\tvar widthHalf = width / 2;\n\t\t\t\tvar heightHalf = height / 2;\n\t\t\t\tvar depthHalf = depth / 2;\n\n\t\t\t\tvar gridX1 = gridX + 1;\n\t\t\t\tvar gridY1 = gridY + 1;\n\n\t\t\t\tvar vertexCounter = 0;\n\t\t\t\tvar groupCount = 0;\n\n\t\t\t\tvar ix, iy;\n\n\t\t\t\tvar vector = new Vector3();\n\n\t\t\t\t// generate vertices, normals and uvs\n\n\t\t\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\t\t\tvar y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\t\t\tvar x = ix * segmentWidth - widthHalf;\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = x * udir;\n\t\t\t\t\t\tvector[ v ] = y * vdir;\n\t\t\t\t\t\tvector[ w ] = depthHalf;\n\n\t\t\t\t\t\t// now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// set values to correct vector component\n\n\t\t\t\t\t\tvector[ u ] = 0;\n\t\t\t\t\t\tvector[ v ] = 0;\n\t\t\t\t\t\tvector[ w ] = depth > 0 ? 1 : - 1;\n\n\t\t\t\t\t\t// now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push( vector.x, vector.y, vector.z );\n\n\t\t\t\t\t\t// uvs\n\n\t\t\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t\t\t\t// counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// indices\n\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\t\t\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\t\t\tvar a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tvar b = numberOfVertices + ix + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tvar c = numberOfVertices + ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\t\t\tvar d = numberOfVertices + ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t\t\t// faces\n\n\t\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t\t// increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\t\tscope.addGroup( groupStart, groupCount, materialIndex );\n\n\t\t\t\t// calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\n\t\t\t\t// update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( BufferGeometry ) BoxBufferGeometry.__proto__ = BufferGeometry;\n\t\tBoxBufferGeometry.prototype = Object.create( BufferGeometry && BufferGeometry.prototype );\n\t\tBoxBufferGeometry.prototype.constructor = BoxBufferGeometry;\n\n\t\treturn BoxBufferGeometry;\n\t}(BufferGeometry));\n\n\t/**\n\t * Uniform Utilities\n\t */\n\n\tfunction cloneUniforms( src ) {\n\n\t\tvar dst = {};\n\n\t\tfor ( var u in src ) {\n\n\t\t\tdst[ u ] = {};\n\n\t\t\tfor ( var p in src[ u ] ) {\n\n\t\t\t\tvar property = src[ u ][ p ];\n\n\t\t\t\tif ( property && ( property.isColor ||\n\t\t\t\t\tproperty.isMatrix3 || property.isMatrix4 ||\n\t\t\t\t\tproperty.isVector2 || property.isVector3 || property.isVector4 ||\n\t\t\t\t\tproperty.isTexture ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.clone();\n\n\t\t\t\t} else if ( Array.isArray( property ) ) {\n\n\t\t\t\t\tdst[ u ][ p ] = property.slice();\n\n\t\t\t\t} else {\n\n\t\t\t\t\tdst[ u ][ p ] = property;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn dst;\n\n\t}\n\n\tfunction mergeUniforms( uniforms ) {\n\n\t\tvar merged = {};\n\n\t\tfor ( var u = 0; u < uniforms.length; u ++ ) {\n\n\t\t\tvar tmp = cloneUniforms( uniforms[ u ] );\n\n\t\t\tfor ( var p in tmp ) {\n\n\t\t\t\tmerged[ p ] = tmp[ p ];\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn merged;\n\n\t}\n\n\t// Legacy\n\n\tvar UniformsUtils = { clone: cloneUniforms, merge: mergeUniforms };\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  defines: { \"label\" : \"value\" },\n\t *  uniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *  fragmentShader: <string>,\n\t *  vertexShader: <string>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  lights: <bool>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction ShaderMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShaderMaterial';\n\n\t\tthis.defines = {};\n\t\tthis.uniforms = {};\n\n\t\tthis.vertexShader = default_vertex;\n\t\tthis.fragmentShader = default_fragment;\n\n\t\tthis.linewidth = 1;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false; // set to use scene fog\n\t\tthis.lights = false; // set to use scene lights\n\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\tthis.skinning = false; // set to use skinning attribute streams\n\t\tthis.morphTargets = false; // set to use morph targets\n\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\tthis.extensions = {\n\t\t\tderivatives: false, // set to use derivatives\n\t\t\tfragDepth: false, // set to use fragment depth values\n\t\t\tdrawBuffers: false, // set to use draw buffers\n\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\t\t};\n\n\t\t// When rendered geometry doesn't include these attributes but the material does,\n\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\t\tthis.defaultAttributeValues = {\n\t\t\t'color': [ 1, 1, 1 ],\n\t\t\t'uv': [ 0, 0 ],\n\t\t\t'uv2': [ 0, 0 ]\n\t\t};\n\n\t\tthis.index0AttributeName = undefined;\n\t\tthis.uniformsNeedUpdate = false;\n\n\t\tif ( parameters !== undefined ) {\n\n\t\t\tif ( parameters.attributes !== undefined ) {\n\n\t\t\t\tconsole.error( 'THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.' );\n\n\t\t\t}\n\n\t\t\tthis.setValues( parameters );\n\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype = Object.create( Material.prototype );\n\tShaderMaterial.prototype.constructor = ShaderMaterial;\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tShaderMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.fragmentShader = source.fragmentShader;\n\t\tthis.vertexShader = source.vertexShader;\n\n\t\tthis.uniforms = cloneUniforms( source.uniforms );\n\n\t\tthis.defines = Object.assign( {}, source.defines );\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.lights = source.lights;\n\t\tthis.clipping = source.clipping;\n\n\t\tthis.skinning = source.skinning;\n\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\tthis.extensions = source.extensions;\n\n\t\treturn this;\n\n\t};\n\n\tShaderMaterial.prototype.toJSON = function ( meta ) {\n\n\t\tvar data = Material.prototype.toJSON.call( this, meta );\n\n\t\tdata.uniforms = {};\n\n\t\tfor ( var name in this.uniforms ) {\n\n\t\t\tvar uniform = this.uniforms[ name ];\n\t\t\tvar value = uniform.value;\n\n\t\t\tif ( value && value.isTexture ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 't',\n\t\t\t\t\tvalue: value.toJSON( meta ).uuid\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isColor ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'c',\n\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector2 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v2',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isVector4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'v4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix3 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm3',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else if ( value && value.isMatrix4 ) {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\ttype: 'm4',\n\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t};\n\n\t\t\t} else {\n\n\t\t\t\tdata.uniforms[ name ] = {\n\t\t\t\t\tvalue: value\n\t\t\t\t};\n\n\t\t\t\t// note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( Object.keys( this.defines ).length > 0 ) { data.defines = this.defines; }\n\n\t\tdata.vertexShader = this.vertexShader;\n\t\tdata.fragmentShader = this.fragmentShader;\n\n\t\tvar extensions = {};\n\n\t\tfor ( var key in this.extensions ) {\n\n\t\t\tif ( this.extensions[ key ] === true ) { extensions[ key ] = true; }\n\n\t\t}\n\n\t\tif ( Object.keys( extensions ).length > 0 ) { data.extensions = extensions; }\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author WestLangley / http://github.com/WestLangley\n\t*/\n\n\tfunction Camera() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Camera';\n\n\t\tthis.matrixWorldInverse = new Matrix4();\n\n\t\tthis.projectionMatrix = new Matrix4();\n\t\tthis.projectionMatrixInverse = new Matrix4();\n\n\t}\n\n\tCamera.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Camera,\n\n\t\tisCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.matrixWorldInverse.copy( source.matrixWorldInverse );\n\n\t\t\tthis.projectionMatrix.copy( source.projectionMatrix );\n\t\t\tthis.projectionMatrixInverse.copy( source.projectionMatrixInverse );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetWorldDirection: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Camera: .getWorldDirection() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\tvar e = this.matrixWorld.elements;\n\n\t\t\treturn target.set( - e[ 8 ], - e[ 9 ], - e[ 10 ] ).normalize();\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tthis.matrixWorldInverse.getInverse( this.matrixWorld );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author greggman / http://games.greggman.com/\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author tschw\n\t */\n\n\tfunction PerspectiveCamera( fov, aspect, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'PerspectiveCamera';\n\n\t\tthis.fov = fov !== undefined ? fov : 50;\n\t\tthis.zoom = 1;\n\n\t\tthis.near = near !== undefined ? near : 0.1;\n\t\tthis.far = far !== undefined ? far : 2000;\n\t\tthis.focus = 10;\n\n\t\tthis.aspect = aspect !== undefined ? aspect : 1;\n\t\tthis.view = null;\n\n\t\tthis.filmGauge = 35;\t// width of the film (default in millimeters)\n\t\tthis.filmOffset = 0;\t// horizontal film offset (same unit as gauge)\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tPerspectiveCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: PerspectiveCamera,\n\n\t\tisPerspectiveCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\t\tsetFocalLength: function ( focalLength ) {\n\n\t\t\t// see http://www.bobatkins.com/photography/technical/field_of_view.html\n\t\t\tvar vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\n\t\t\tthis.fov = _Math.RAD2DEG * 2 * Math.atan( vExtentSlope );\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\t\tgetFocalLength: function () {\n\n\t\t\tvar vExtentSlope = Math.tan( _Math.DEG2RAD * 0.5 * this.fov );\n\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\n\t\t},\n\n\t\tgetEffectiveFOV: function () {\n\n\t\t\treturn _Math.RAD2DEG * 2 * Math.atan(\n\t\t\t\tMath.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom );\n\n\t\t},\n\n\t\tgetFilmWidth: function () {\n\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min( this.aspect, 1 );\n\n\t\t},\n\n\t\tgetFilmHeight: function () {\n\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max( this.aspect, 1 );\n\n\t\t},\n\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *   +---+---+---+\n\t\t *   | A | B | C |\n\t\t *   +---+---+---+\n\t\t *   | D | E | F |\n\t\t *   +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *   var w = 1920;\n\t\t *   var h = 1080;\n\t\t *   var fullWidth = w * 3;\n\t\t *   var fullHeight = h * 2;\n\t\t *\n\t\t *   --A--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *   --B--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *   --C--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *   --D--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *   --E--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *   --F--\n\t\t *   camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *   Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar near = this.near,\n\t\t\t\ttop = near * Math.tan( _Math.DEG2RAD * 0.5 * this.fov ) / this.zoom,\n\t\t\t\theight = 2 * top,\n\t\t\t\twidth = this.aspect * height,\n\t\t\t\tleft = - 0.5 * width,\n\t\t\t\tview = this.view;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar fullWidth = view.fullWidth,\n\t\t\t\t\tfullHeight = view.fullHeight;\n\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\n\t\t\t}\n\n\t\t\tvar skew = this.filmOffset;\n\t\t\tif ( skew !== 0 ) { left += near * skew / this.getFilmWidth(); }\n\n\t\t\tthis.projectionMatrix.makePerspective( left, left + width, top, top - height, near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\n\t\t\tdata.object.aspect = this.aspect;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * Camera for rendering cube maps\n\t *\t- renders scene into axis-aligned cube\n\t *\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar fov = 90, aspect = 1;\n\n\tfunction CubeCamera( near, far, cubeResolution, options ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'CubeCamera';\n\n\t\tvar cameraPX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPX.up.set( 0, - 1, 0 );\n\t\tcameraPX.lookAt( new Vector3( 1, 0, 0 ) );\n\t\tthis.add( cameraPX );\n\n\t\tvar cameraNX = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNX.up.set( 0, - 1, 0 );\n\t\tcameraNX.lookAt( new Vector3( - 1, 0, 0 ) );\n\t\tthis.add( cameraNX );\n\n\t\tvar cameraPY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPY.up.set( 0, 0, 1 );\n\t\tcameraPY.lookAt( new Vector3( 0, 1, 0 ) );\n\t\tthis.add( cameraPY );\n\n\t\tvar cameraNY = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNY.up.set( 0, 0, - 1 );\n\t\tcameraNY.lookAt( new Vector3( 0, - 1, 0 ) );\n\t\tthis.add( cameraNY );\n\n\t\tvar cameraPZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraPZ.up.set( 0, - 1, 0 );\n\t\tcameraPZ.lookAt( new Vector3( 0, 0, 1 ) );\n\t\tthis.add( cameraPZ );\n\n\t\tvar cameraNZ = new PerspectiveCamera( fov, aspect, near, far );\n\t\tcameraNZ.up.set( 0, - 1, 0 );\n\t\tcameraNZ.lookAt( new Vector3( 0, 0, - 1 ) );\n\t\tthis.add( cameraNZ );\n\n\t\toptions = options || { format: RGBFormat, magFilter: LinearFilter, minFilter: LinearFilter };\n\n\t\tthis.renderTarget = new WebGLRenderTargetCube( cubeResolution, cubeResolution, options );\n\t\tthis.renderTarget.texture.name = \"CubeCamera\";\n\n\t\tthis.update = function ( renderer, scene ) {\n\n\t\t\tif ( this.parent === null ) { this.updateMatrixWorld(); }\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\t\t\tvar generateMipmaps = renderTarget.texture.generateMipmaps;\n\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 0 );\n\t\t\trenderer.render( scene, cameraPX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 1 );\n\t\t\trenderer.render( scene, cameraNX );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 2 );\n\t\t\trenderer.render( scene, cameraPY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 3 );\n\t\t\trenderer.render( scene, cameraNY );\n\n\t\t\trenderer.setRenderTarget( renderTarget, 4 );\n\t\t\trenderer.render( scene, cameraPZ );\n\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\n\t\t\trenderer.setRenderTarget( renderTarget, 5 );\n\t\t\trenderer.render( scene, cameraNZ );\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t\tthis.clear = function ( renderer, color, depth, stencil ) {\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tvar renderTarget = this.renderTarget;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\trenderer.setRenderTarget( renderTarget, i );\n\n\t\t\t\trenderer.clear( color, depth, stencil );\n\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t};\n\n\t}\n\n\tCubeCamera.prototype = Object.create( Object3D.prototype );\n\tCubeCamera.prototype.constructor = CubeCamera;\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction WebGLRenderTargetCube( width, height, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t}\n\n\tWebGLRenderTargetCube.prototype = Object.create( WebGLRenderTarget.prototype );\n\tWebGLRenderTargetCube.prototype.constructor = WebGLRenderTargetCube;\n\n\tWebGLRenderTargetCube.prototype.isWebGLRenderTargetCube = true;\n\n\tWebGLRenderTargetCube.prototype.fromEquirectangularTexture = function ( renderer, texture ) {\n\n\t\tthis.texture.type = texture.type;\n\t\tthis.texture.format = texture.format;\n\t\tthis.texture.encoding = texture.encoding;\n\n\t\tvar scene = new Scene();\n\n\t\tvar shader = {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"vec3 transformDirection( in vec3 dir, in mat4 matrix ) {\",\n\n\t\t\t\t\"\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\",\n\n\t\t\t\t\"}\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvWorldDirection = transformDirection( position, modelMatrix );\",\n\n\t\t\t\t\"\t#include <begin_vertex>\",\n\t\t\t\t\"\t#include <project_vertex>\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t\"uniform sampler2D tEquirect;\",\n\n\t\t\t\t\"varying vec3 vWorldDirection;\",\n\n\t\t\t\t\"#define RECIPROCAL_PI 0.31830988618\",\n\t\t\t\t\"#define RECIPROCAL_PI2 0.15915494\",\n\n\t\t\t\t\"void main() {\",\n\n\t\t\t\t\"\tvec3 direction = normalize( vWorldDirection );\",\n\n\t\t\t\t\"\tvec2 sampleUV;\",\n\n\t\t\t\t\"\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\",\n\n\t\t\t\t\"\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\",\n\n\t\t\t\t\"\tgl_FragColor = texture2D( tEquirect, sampleUV );\",\n\n\t\t\t\t\"}\"\n\n\t\t\t].join( '\\n' ),\n\t\t};\n\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\ttype: 'CubemapFromEquirect',\n\n\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\tvertexShader: shader.vertexShader,\n\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\tside: BackSide,\n\t\t\tblending: NoBlending\n\n\t\t} );\n\n\t\tmaterial.uniforms.tEquirect.value = texture;\n\n\t\tvar mesh = new Mesh( new BoxBufferGeometry( 5, 5, 5 ), material );\n\n\t\tscene.add( mesh );\n\n\t\tvar camera = new CubeCamera( 1, 10, 1 );\n\n\t\tcamera.renderTarget = this;\n\t\tcamera.renderTarget.texture.name = 'CubeCameraTexture';\n\n\t\tcamera.update( renderer, scene );\n\n\t\tmesh.geometry.dispose();\n\t\tmesh.material.dispose();\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DataTexture( data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1 };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\t\tthis.unpackAlignment = 1;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture.prototype = Object.create( Texture.prototype );\n\tDataTexture.prototype.constructor = DataTexture;\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _sphere$1 = new Sphere();\n\tvar _vector$5 = new Vector3();\n\n\tfunction Frustum( p0, p1, p2, p3, p4, p5 ) {\n\n\t\tthis.planes = [\n\n\t\t\t( p0 !== undefined ) ? p0 : new Plane(),\n\t\t\t( p1 !== undefined ) ? p1 : new Plane(),\n\t\t\t( p2 !== undefined ) ? p2 : new Plane(),\n\t\t\t( p3 !== undefined ) ? p3 : new Plane(),\n\t\t\t( p4 !== undefined ) ? p4 : new Plane(),\n\t\t\t( p5 !== undefined ) ? p5 : new Plane()\n\n\t\t];\n\n\t}\n\n\tObject.assign( Frustum.prototype, {\n\n\t\tset: function ( p0, p1, p2, p3, p4, p5 ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tplanes[ 0 ].copy( p0 );\n\t\t\tplanes[ 1 ].copy( p1 );\n\t\t\tplanes[ 2 ].copy( p2 );\n\t\t\tplanes[ 3 ].copy( p3 );\n\t\t\tplanes[ 4 ].copy( p4 );\n\t\t\tplanes[ 5 ].copy( p5 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( frustum ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tplanes[ i ].copy( frustum.planes[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromMatrix: function ( m ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar me = m.elements;\n\t\t\tvar me0 = me[ 0 ], me1 = me[ 1 ], me2 = me[ 2 ], me3 = me[ 3 ];\n\t\t\tvar me4 = me[ 4 ], me5 = me[ 5 ], me6 = me[ 6 ], me7 = me[ 7 ];\n\t\t\tvar me8 = me[ 8 ], me9 = me[ 9 ], me10 = me[ 10 ], me11 = me[ 11 ];\n\t\t\tvar me12 = me[ 12 ], me13 = me[ 13 ], me14 = me[ 14 ], me15 = me[ 15 ];\n\n\t\t\tplanes[ 0 ].setComponents( me3 - me0, me7 - me4, me11 - me8, me15 - me12 ).normalize();\n\t\t\tplanes[ 1 ].setComponents( me3 + me0, me7 + me4, me11 + me8, me15 + me12 ).normalize();\n\t\t\tplanes[ 2 ].setComponents( me3 + me1, me7 + me5, me11 + me9, me15 + me13 ).normalize();\n\t\t\tplanes[ 3 ].setComponents( me3 - me1, me7 - me5, me11 - me9, me15 - me13 ).normalize();\n\t\t\tplanes[ 4 ].setComponents( me3 - me2, me7 - me6, me11 - me10, me15 - me14 ).normalize();\n\t\t\tplanes[ 5 ].setComponents( me3 + me2, me7 + me6, me11 + me10, me15 + me14 ).normalize();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tintersectsObject: function ( object ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$1.copy( geometry.boundingSphere ).applyMatrix4( object.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSprite: function ( sprite ) {\n\n\t\t\t_sphere$1.center.set( 0, 0, 0 );\n\t\t\t_sphere$1.radius = 0.7071067811865476;\n\t\t\t_sphere$1.applyMatrix4( sprite.matrixWorld );\n\n\t\t\treturn this.intersectsSphere( _sphere$1 );\n\n\t\t},\n\n\t\tintersectsSphere: function ( sphere ) {\n\n\t\t\tvar planes = this.planes;\n\t\t\tvar center = sphere.center;\n\t\t\tvar negRadius = - sphere.radius;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar distance = planes[ i ].distanceToPoint( center );\n\n\t\t\t\tif ( distance < negRadius ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tvar plane = planes[ i ];\n\n\t\t\t\t// corner at max distance\n\n\t\t\t\t_vector$5.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$5.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$5.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif ( plane.distanceToPoint( _vector$5 ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\tvar planes = this.planes;\n\n\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\tif ( planes[ i ].distanceToPoint( point ) < 0 ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t} );\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE  = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS  = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha  = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 );\\n\\t\\tfDet *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vViewPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vViewPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\t#if ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\t\\tvarying vec3 vViewPosition;\\n\\t#endif\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0 && ! defined( STANDARD ) && ! defined( PHONG ) && ! defined( MATCAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#ifdef USE_COLOR\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#ifdef USE_COLOR\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#ifdef USE_COLOR\\n\\tvColor.xyz = color.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.14159265359\\n#define PI2 6.28318530718\\n#define PI_HALF 1.5707963267949\\n#define RECIPROCAL_PI 0.31830988618\\n#define RECIPROCAL_PI2 0.15915494\\n#define LOG2 1.442695\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n  return m[ 2 ][ 3 ] == - 1.0;\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n#define cubeUV_textureSize (1024.0)\\nint getFaceFromDirection(vec3 direction) {\\n\\tvec3 absDirection = abs(direction);\\n\\tint face = -1;\\n\\tif( absDirection.x > absDirection.z ) {\\n\\t\\tif(absDirection.x > absDirection.y )\\n\\t\\t\\tface = direction.x > 0.0 ? 0 : 3;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\telse {\\n\\t\\tif(absDirection.z > absDirection.y )\\n\\t\\t\\tface = direction.z > 0.0 ? 2 : 5;\\n\\t\\telse\\n\\t\\t\\tface = direction.y > 0.0 ? 1 : 4;\\n\\t}\\n\\treturn face;\\n}\\n#define cubeUV_maxLods1  (log2(cubeUV_textureSize*0.25) - 1.0)\\n#define cubeUV_rangeClamp (exp2((6.0 - 1.0) * 2.0))\\nvec2 MipLevelInfo( vec3 vec, float roughnessLevel, float roughness ) {\\n\\tfloat scale = exp2(cubeUV_maxLods1 - roughnessLevel);\\n\\tfloat dxRoughness = dFdx(roughness);\\n\\tfloat dyRoughness = dFdy(roughness);\\n\\tvec3 dx = dFdx( vec * scale * dxRoughness );\\n\\tvec3 dy = dFdy( vec * scale * dyRoughness );\\n\\tfloat d = max( dot( dx, dx ), dot( dy, dy ) );\\n\\td = clamp(d, 1.0, cubeUV_rangeClamp);\\n\\tfloat mipLevel = 0.5 * log2(d);\\n\\treturn vec2(floor(mipLevel), fract(mipLevel));\\n}\\n#define cubeUV_maxLods2 (log2(cubeUV_textureSize*0.25) - 2.0)\\n#define cubeUV_rcpTextureSize (1.0 / cubeUV_textureSize)\\nvec2 getCubeUV(vec3 direction, float roughnessLevel, float mipLevel) {\\n\\tmipLevel = roughnessLevel > cubeUV_maxLods2 - 3.0 ? 0.0 : mipLevel;\\n\\tfloat a = 16.0 * cubeUV_rcpTextureSize;\\n\\tvec2 exp2_packed = exp2( vec2( roughnessLevel, mipLevel ) );\\n\\tvec2 rcp_exp2_packed = vec2( 1.0 ) / exp2_packed;\\n\\tfloat powScale = exp2_packed.x * exp2_packed.y;\\n\\tfloat scale = rcp_exp2_packed.x * rcp_exp2_packed.y * 0.25;\\n\\tfloat mipOffset = 0.75*(1.0 - rcp_exp2_packed.y) * rcp_exp2_packed.x;\\n\\tbool bRes = mipLevel == 0.0;\\n\\tscale =  bRes && (scale < a) ? a : scale;\\n\\tvec3 r;\\n\\tvec2 offset;\\n\\tint face = getFaceFromDirection(direction);\\n\\tfloat rcpPowScale = 1.0 / powScale;\\n\\tif( face == 0) {\\n\\t\\tr = vec3(direction.x, -direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 1) {\\n\\t\\tr = vec3(direction.y, direction.x, direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 2) {\\n\\t\\tr = vec3(direction.z, direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.75 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? a : offset.y;\\n\\t}\\n\\telse if( face == 3) {\\n\\t\\tr = vec3(direction.x, direction.z, direction.y);\\n\\t\\toffset = vec2(0.0+mipOffset,0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse if( face == 4) {\\n\\t\\tr = vec3(direction.y, direction.x, -direction.z);\\n\\t\\toffset = vec2(scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\telse {\\n\\t\\tr = vec3(direction.z, -direction.x, direction.y);\\n\\t\\toffset = vec2(2.0*scale+mipOffset, 0.5 * rcpPowScale);\\n\\t\\toffset.y = bRes && (offset.y < 2.0*a) ? 0.0 : offset.y;\\n\\t}\\n\\tr = normalize(r);\\n\\tfloat texelOffset = 0.5 * cubeUV_rcpTextureSize;\\n\\tvec2 s = ( r.yz / abs( r.x ) + vec2( 1.0 ) ) * 0.5;\\n\\tvec2 base = offset + vec2( texelOffset );\\n\\treturn base + s * ( scale - 2.0 * texelOffset );\\n}\\n#define cubeUV_maxLods3 (log2(cubeUV_textureSize*0.25) - 3.0)\\nvec4 textureCubeUV( sampler2D envMap, vec3 reflectedDirection, float roughness ) {\\n\\tfloat roughnessVal = roughness* cubeUV_maxLods3;\\n\\tfloat r1 = floor(roughnessVal);\\n\\tfloat r2 = r1 + 1.0;\\n\\tfloat t = fract(roughnessVal);\\n\\tvec2 mipInfo = MipLevelInfo(reflectedDirection, r1, roughness);\\n\\tfloat s = mipInfo.y;\\n\\tfloat level0 = mipInfo.x;\\n\\tfloat level1 = level0 + 1.0;\\n\\tlevel1 = level1 > 5.0 ? 5.0 : level1;\\n\\tlevel0 += min( floor( s + 0.5 ), 5.0 );\\n\\tvec2 uv_10 = getCubeUV(reflectedDirection, r1, level0);\\n\\tvec4 color10 = envMapTexelToLinear(texture2D(envMap, uv_10));\\n\\tvec2 uv_20 = getCubeUV(reflectedDirection, r2, level0);\\n\\tvec4 color20 = envMapTexelToLinear(texture2D(envMap, uv_20));\\n\\tvec4 result = mix(color10, color20, t);\\n\\treturn vec4(result.rgb, 1.0);\\n}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\ttransformedNormal = mat3( instanceMatrix ) * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = normalMatrix * objectTangent;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = min( floor( D ) / 255.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value )  {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\t\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t}  else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\tvec2 sampleUV;\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\tvec4 envColor = texture2D( envMap, sampleUV );\\n\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\treflectVec = normalize( reflectVec );\\n\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0, 0.0, 1.0 ) );\\n\\t\\tvec4 envColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) { \\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = -mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef TOON\\n\\tuniform sampler2D gradientMap;\\n\\tvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\t\\tfloat dotNL = dot( normal, lightDirection );\\n\\t\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t\\t#ifdef USE_GRADIENTMAP\\n\\t\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t\\t#else\\n\\t\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\treflectedLight.indirectDiffuse += PI * texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t\\tfloat shadowCameraNear;\\n\\t\\tfloat shadowCameraFar;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t\\tint shadow;\\n\\t\\tfloat shadowBias;\\n\\t\\tfloat shadowRadius;\\n\\t\\tvec2 shadowMapSize;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight  ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryVec, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t  vec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t  reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t  vec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, queryReflectVec, roughness );\\n\\t\\t#elif defined( ENVMAP_TYPE_EQUIREC )\\n\\t\\t\\tvec2 sampleUV;\\n\\t\\t\\tsampleUV.y = asin( clamp( reflectVec.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\t\\t\\tsampleUV.x = atan( reflectVec.z, reflectVec.x ) * RECIPROCAL_PI2 + 0.5;\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, sampleUV, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_SPHERE )\\n\\t\\t\\tvec3 reflectView = normalize( ( viewMatrix * vec4( reflectVec, 0.0 ) ).xyz + vec3( 0.0,0.0,1.0 ) );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = texture2DLodEXT( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = texture2D( envMap, reflectView.xy * 0.5 + 0.5, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tvec3\\tspecularColor;\\n\\tfloat\\tspecularShininess;\\n\\tfloat\\tspecularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t#ifdef TOON\\n\\t\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#else\\n\\t\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\t\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#endif\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nmaterial.specularRoughness = clamp( roughnessFactor, 0.04, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), diffuseColor.rgb, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), diffuseColor.rgb, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = saturate( clearcoat );\\tmaterial.clearcoatRoughness = clamp( clearcoatRoughness, 0.04, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3\\tdiffuseColor;\\n\\tfloat\\tspecularRoughness;\\n\\tvec3\\tspecularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(    0, 1,    0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( pointLight.shadow, directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( spotLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectLight.color *= all( bvec3( directionalLight.shadow, directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec3 lightMapIrradiance = texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t\\tbitangent = bitangent * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd() );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tfloat scale = sign( st1.t * st0.s - st0.t * st1.s );\\n\\t\\tvec3 S = normalize( ( q0 * st1.t - q1 * st0.t ) * scale );\\n\\t\\tvec3 T = normalize( ( - q0 * st1.s + q1 * st0.s ) * scale );\\n\\t\\tvec3 N = normalize( surf_norm );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tbool frontFacing = dot( cross( S, T ), N ) > 0.0;\\n\\t\\t\\tmapN.xy *= ( float( frontFacing ) * 2.0 - 1.0 );\\n\\t\\t#else\\n\\t\\t\\tmapN.xy *= ( float( gl_FrontFacing ) * 2.0 - 1.0 );\\n\\t\\t#endif\\n\\t\\tmat3 tsn = mat3( S, T, N );\\n\\t\\treturn normalize( tsn * mapN );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_normalmap_pars_fragment = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256.,  256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpack2HalfToRGBA( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpack2HalfToRGBA( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat texture2DShadowLerp( sampler2D depths, vec2 size, vec2 uv, float compare ) {\\n\\t\\tconst vec2 offset = vec2( 0.0, 1.0 );\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / size;\\n\\t\\tvec2 centroidUV = ( floor( uv * size - 0.5 ) + 0.5 ) * texelSize;\\n\\t\\tfloat lb = texture2DCompare( depths, centroidUV + texelSize * offset.xx, compare );\\n\\t\\tfloat lt = texture2DCompare( depths, centroidUV + texelSize * offset.xy, compare );\\n\\t\\tfloat rb = texture2DCompare( depths, centroidUV + texelSize * offset.yx, compare );\\n\\t\\tfloat rt = texture2DCompare( depths, centroidUV + texelSize * offset.yy, compare );\\n\\t\\tvec2 f = fract( uv * size + 0.5 );\\n\\t\\tfloat a = mix( lb, lt, f.y );\\n\\t\\tfloat b = mix( rb, rt, f.y );\\n\\t\\tfloat c = mix( a, b, f.x );\\n\\t\\treturn c;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DShadowLerp( shadowMap, shadowMapSize, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * worldPosition;\\n\\t}\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLight directionalLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tshadow *= all( bvec2( directionalLight.shadow, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLight spotLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tshadow *= all( bvec2( spotLight.shadow, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLight pointLight;\\n\\t#pragma unroll_loop\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tshadow *= all( bvec2( pointLight.shadow, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix  = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nuniform float toneMappingWhitePoint;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\n#define Uncharted2Helper( x ) max( ( ( x * ( 0.15 * x + 0.10 * 0.50 ) + 0.20 * 0.02 ) / ( x * ( 0.15 * x + 0.50 ) + 0.20 * 0.30 ) ) - 0.02 / 0.30, vec3( 0.0 ) )\\nvec3 Uncharted2ToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( Uncharted2Helper( color ) / Uncharted2Helper( vec3( toneMappingWhitePoint ) ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( ( color * ( 2.51 * color + 0.03 ) ) / ( color * ( 2.43 * color + 0.59 ) + 0.14 ) );\\n}\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = uv2;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"uniform samplerCube tCube;\\nuniform float tFlip;\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\nvoid main() {\\n\\tvec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - gl_FragCoord.z ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( gl_FragCoord.z );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV;\\n\\tsampleUV.y = asin( clamp( direction.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\tsampleUV.x = atan( direction.z, direction.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\tvLineDistance = scale * lineDistance;\\n\\tvec4 mvPosition = modelViewMatrix * vec4( position, 1.0 );\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\treflectedLight.indirectDiffuse += texture2D( lightMap, vUv2 ).xyz * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\treflectedLight.indirectDiffuse = getAmbientLightIrradiance( ambientLightColor );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n\\t#define TRANSPARENCY\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef TRANSPARENCY\\n\\tuniform float transparency;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_normalmap_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#ifdef TRANSPARENCY\\n\\t\\tdiffuseColor.a *= saturate( 1. - transparency + linearToRelativeLuminance( reflectedLight.directSpecular + reflectedLight.indirectSpecular ) );\\n\\t#endif\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_normalmap_pars_fragment: clearcoat_normalmap_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tvar UniformsLib = {\n\n\t\tcommon: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\n\t\t\tmap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() },\n\n\t\t\talphaMap: { value: null },\n\n\t\t},\n\n\t\tspecularmap: {\n\n\t\t\tspecularMap: { value: null },\n\n\t\t},\n\n\t\tenvmap: {\n\n\t\t\tenvMap: { value: null },\n\t\t\tflipEnvMap: { value: - 1 },\n\t\t\treflectivity: { value: 1.0 },\n\t\t\trefractionRatio: { value: 0.98 },\n\t\t\tmaxMipLevel: { value: 0 }\n\n\t\t},\n\n\t\taomap: {\n\n\t\t\taoMap: { value: null },\n\t\t\taoMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\tlightmap: {\n\n\t\t\tlightMap: { value: null },\n\t\t\tlightMapIntensity: { value: 1 }\n\n\t\t},\n\n\t\temissivemap: {\n\n\t\t\temissiveMap: { value: null }\n\n\t\t},\n\n\t\tbumpmap: {\n\n\t\t\tbumpMap: { value: null },\n\t\t\tbumpScale: { value: 1 }\n\n\t\t},\n\n\t\tnormalmap: {\n\n\t\t\tnormalMap: { value: null },\n\t\t\tnormalScale: { value: new Vector2( 1, 1 ) }\n\n\t\t},\n\n\t\tdisplacementmap: {\n\n\t\t\tdisplacementMap: { value: null },\n\t\t\tdisplacementScale: { value: 1 },\n\t\t\tdisplacementBias: { value: 0 }\n\n\t\t},\n\n\t\troughnessmap: {\n\n\t\t\troughnessMap: { value: null }\n\n\t\t},\n\n\t\tmetalnessmap: {\n\n\t\t\tmetalnessMap: { value: null }\n\n\t\t},\n\n\t\tgradientmap: {\n\n\t\t\tgradientMap: { value: null }\n\n\t\t},\n\n\t\tfog: {\n\n\t\t\tfogDensity: { value: 0.00025 },\n\t\t\tfogNear: { value: 1 },\n\t\t\tfogFar: { value: 2000 },\n\t\t\tfogColor: { value: new Color( 0xffffff ) }\n\n\t\t},\n\n\t\tlights: {\n\n\t\t\tambientLightColor: { value: [] },\n\n\t\t\tlightProbe: { value: [] },\n\n\t\t\tdirectionalLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tcolor: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tdirectionalShadowMap: { value: [] },\n\t\t\tdirectionalShadowMatrix: { value: [] },\n\n\t\t\tspotLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdirection: {},\n\t\t\t\tdistance: {},\n\t\t\t\tconeCos: {},\n\t\t\t\tpenumbraCos: {},\n\t\t\t\tdecay: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {}\n\t\t\t} },\n\n\t\t\tspotShadowMap: { value: [] },\n\t\t\tspotShadowMatrix: { value: [] },\n\n\t\t\tpointLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\tdecay: {},\n\t\t\t\tdistance: {},\n\n\t\t\t\tshadow: {},\n\t\t\t\tshadowBias: {},\n\t\t\t\tshadowRadius: {},\n\t\t\t\tshadowMapSize: {},\n\t\t\t\tshadowCameraNear: {},\n\t\t\t\tshadowCameraFar: {}\n\t\t\t} },\n\n\t\t\tpointShadowMap: { value: [] },\n\t\t\tpointShadowMatrix: { value: [] },\n\n\t\t\themisphereLights: { value: [], properties: {\n\t\t\t\tdirection: {},\n\t\t\t\tskyColor: {},\n\t\t\t\tgroundColor: {}\n\t\t\t} },\n\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: { value: [], properties: {\n\t\t\t\tcolor: {},\n\t\t\t\tposition: {},\n\t\t\t\twidth: {},\n\t\t\t\theight: {}\n\t\t\t} }\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tsize: { value: 1.0 },\n\t\t\tscale: { value: 1.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tdiffuse: { value: new Color( 0xeeeeee ) },\n\t\t\topacity: { value: 1.0 },\n\t\t\tcenter: { value: new Vector2( 0.5, 0.5 ) },\n\t\t\trotation: { value: 0.0 },\n\t\t\tmap: { value: null },\n\t\t\talphaMap: { value: null },\n\t\t\tuvTransform: { value: new Matrix3() }\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author mikael emtinger / http://gomo.se/\n\t */\n\n\tvar ShaderLib = {\n\n\t\tbasic: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\n\t\t},\n\n\t\tlambert: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\n\t\t},\n\n\t\tphong: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.specularmap,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.gradientmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\tspecular: { value: new Color( 0x111111 ) },\n\t\t\t\t\tshininess: { value: 30 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\n\t\t},\n\n\t\tstandard: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.envmap,\n\t\t\t\tUniformsLib.aomap,\n\t\t\t\tUniformsLib.lightmap,\n\t\t\t\tUniformsLib.emissivemap,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.roughnessmap,\n\t\t\t\tUniformsLib.metalnessmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\tUniformsLib.lights,\n\t\t\t\t{\n\t\t\t\t\temissive: { value: new Color( 0x000000 ) },\n\t\t\t\t\troughness: { value: 0.5 },\n\t\t\t\t\tmetalness: { value: 0.5 },\n\t\t\t\t\tenvMapIntensity: { value: 1 } // temporary\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t\t},\n\n\t\tmatcap: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tmatcap: { value: null }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\n\t\t},\n\n\t\tpoints: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.points,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\n\t\t},\n\n\t\tdashed: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tscale: { value: 1 },\n\t\t\t\t\tdashSize: { value: 1 },\n\t\t\t\t\ttotalSize: { value: 2 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\n\t\t},\n\n\t\tdepth: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\n\t\t},\n\n\t\tnormal: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.bumpmap,\n\t\t\t\tUniformsLib.normalmap,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\n\t\t},\n\n\t\tsprite: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.sprite,\n\t\t\t\tUniformsLib.fog\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\n\t\t},\n\n\t\tbackground: {\n\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: { value: new Matrix3() },\n\t\t\t\tt2D: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\n\t\t},\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\n\t\tcube: {\n\n\t\t\tuniforms: {\n\t\t\t\ttCube: { value: null },\n\t\t\t\ttFlip: { value: - 1 },\n\t\t\t\topacity: { value: 1.0 }\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\n\t\t},\n\n\t\tequirect: {\n\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: { value: null },\n\t\t\t},\n\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\n\t\t},\n\n\t\tdistanceRGBA: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.common,\n\t\t\t\tUniformsLib.displacementmap,\n\t\t\t\t{\n\t\t\t\t\treferencePosition: { value: new Vector3() },\n\t\t\t\t\tnearDistance: { value: 1 },\n\t\t\t\t\tfarDistance: { value: 1000 }\n\t\t\t\t}\n\t\t\t] ),\n\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\n\t\t},\n\n\t\tshadow: {\n\n\t\t\tuniforms: mergeUniforms( [\n\t\t\t\tUniformsLib.lights,\n\t\t\t\tUniformsLib.fog,\n\t\t\t\t{\n\t\t\t\t\tcolor: { value: new Color( 0x00000 ) },\n\t\t\t\t\topacity: { value: 1.0 }\n\t\t\t\t} ] ),\n\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\n\t\t}\n\n\t};\n\n\tShaderLib.physical = {\n\n\t\tuniforms: mergeUniforms( [\n\t\t\tShaderLib.standard.uniforms,\n\t\t\t{\n\t\t\t\ttransparency: { value: 0 },\n\t\t\t\tclearcoat: { value: 0 },\n\t\t\t\tclearcoatRoughness: { value: 0 },\n\t\t\t\tsheen: { value: new Color( 0x000000 ) },\n\t\t\t\tclearcoatNormalScale: { value: new Vector2( 1, 1 ) },\n\t\t\t\tclearcoatNormalMap: { value: null },\n\t\t\t}\n\t\t] ),\n\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAnimation() {\n\n\t\tvar context = null;\n\t\tvar isAnimating = false;\n\t\tvar animationLoop = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tif ( isAnimating === false ) { return; }\n\n\t\t\tanimationLoop( time, frame );\n\n\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tstart: function () {\n\n\t\t\t\tif ( isAnimating === true ) { return; }\n\t\t\t\tif ( animationLoop === null ) { return; }\n\n\t\t\t\tcontext.requestAnimationFrame( onAnimationFrame );\n\n\t\t\t\tisAnimating = true;\n\n\t\t\t},\n\n\t\t\tstop: function () {\n\n\t\t\t\tisAnimating = false;\n\n\t\t\t},\n\n\t\t\tsetAnimationLoop: function ( callback ) {\n\n\t\t\t\tanimationLoop = callback;\n\n\t\t\t},\n\n\t\t\tsetContext: function ( value ) {\n\n\t\t\t\tcontext = value;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLAttributes( gl ) {\n\n\t\tvar buffers = new WeakMap();\n\n\t\tfunction createBuffer( attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar usage = attribute.usage;\n\n\t\t\tvar buffer = gl.createBuffer();\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\t\t\tgl.bufferData( bufferType, array, usage );\n\n\t\t\tattribute.onUploadCallback();\n\n\t\t\tvar type = 5126;\n\n\t\t\tif ( array instanceof Float32Array ) {\n\n\t\t\t\ttype = 5126;\n\n\t\t\t} else if ( array instanceof Float64Array ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.' );\n\n\t\t\t} else if ( array instanceof Uint16Array ) {\n\n\t\t\t\ttype = 5123;\n\n\t\t\t} else if ( array instanceof Int16Array ) {\n\n\t\t\t\ttype = 5122;\n\n\t\t\t} else if ( array instanceof Uint32Array ) {\n\n\t\t\t\ttype = 5125;\n\n\t\t\t} else if ( array instanceof Int32Array ) {\n\n\t\t\t\ttype = 5124;\n\n\t\t\t} else if ( array instanceof Int8Array ) {\n\n\t\t\t\ttype = 5120;\n\n\t\t\t} else if ( array instanceof Uint8Array ) {\n\n\t\t\t\ttype = 5121;\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\n\t\t}\n\n\t\tfunction updateBuffer( buffer, attribute, bufferType ) {\n\n\t\t\tvar array = attribute.array;\n\t\t\tvar updateRange = attribute.updateRange;\n\n\t\t\tgl.bindBuffer( bufferType, buffer );\n\n\t\t\tif ( updateRange.count === - 1 ) {\n\n\t\t\t\t// Not using update ranges\n\n\t\t\t\tgl.bufferSubData( bufferType, 0, array );\n\n\t\t\t} else {\n\n\t\t\t\tgl.bufferSubData( bufferType, updateRange.offset * array.BYTES_PER_ELEMENT,\n\t\t\t\t\tarray.subarray( updateRange.offset, updateRange.offset + updateRange.count ) );\n\n\t\t\t\tupdateRange.count = - 1; // reset range\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction get( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\treturn buffers.get( attribute );\n\n\t\t}\n\n\t\tfunction remove( attribute ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data ) {\n\n\t\t\t\tgl.deleteBuffer( data.buffer );\n\n\t\t\t\tbuffers.delete( attribute );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction update( attribute, bufferType ) {\n\n\t\t\tif ( attribute.isInterleavedBufferAttribute ) { attribute = attribute.data; }\n\n\t\t\tvar data = buffers.get( attribute );\n\n\t\t\tif ( data === undefined ) {\n\n\t\t\t\tbuffers.set( attribute, createBuffer( attribute, bufferType ) );\n\n\t\t\t} else if ( data.version < attribute.version ) {\n\n\t\t\t\tupdateBuffer( data.buffer, attribute, bufferType );\n\n\t\t\t\tdata.version = attribute.version;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PlaneGeometry\n\n\tfunction PlaneGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PlaneGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PlaneBufferGeometry( width, height, widthSegments, heightSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPlaneGeometry.prototype = Object.create( Geometry.prototype );\n\tPlaneGeometry.prototype.constructor = PlaneGeometry;\n\n\t// PlaneBufferGeometry\n\n\tfunction PlaneBufferGeometry( width, height, widthSegments, heightSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PlaneBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\twidth: width,\n\t\t\theight: height,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments\n\t\t};\n\n\t\twidth = width || 1;\n\t\theight = height || 1;\n\n\t\tvar width_half = width / 2;\n\t\tvar height_half = height / 2;\n\n\t\tvar gridX = Math.floor( widthSegments ) || 1;\n\t\tvar gridY = Math.floor( heightSegments ) || 1;\n\n\t\tvar gridX1 = gridX + 1;\n\t\tvar gridY1 = gridY + 1;\n\n\t\tvar segment_width = width / gridX;\n\t\tvar segment_height = height / gridY;\n\n\t\tvar ix, iy;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy < gridY1; iy ++ ) {\n\n\t\t\tvar y = iy * segment_height - height_half;\n\n\t\t\tfor ( ix = 0; ix < gridX1; ix ++ ) {\n\n\t\t\t\tvar x = ix * segment_width - width_half;\n\n\t\t\t\tvertices.push( x, - y, 0 );\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\tuvs.push( ix / gridX );\n\t\t\t\tuvs.push( 1 - ( iy / gridY ) );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < gridY; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < gridX; ix ++ ) {\n\n\t\t\t\tvar a = ix + gridX1 * iy;\n\t\t\t\tvar b = ix + gridX1 * ( iy + 1 );\n\t\t\t\tvar c = ( ix + 1 ) + gridX1 * ( iy + 1 );\n\t\t\t\tvar d = ( ix + 1 ) + gridX1 * iy;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tPlaneBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPlaneBufferGeometry.prototype.constructor = PlaneBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBackground( renderer, state, objects, premultipliedAlpha ) {\n\n\t\tvar clearColor = new Color( 0x000000 );\n\t\tvar clearAlpha = 0;\n\n\t\tvar planeMesh;\n\t\tvar boxMesh;\n\t\t// Store the current background texture and its `version`\n\t\t// so we can recompile the material accordingly.\n\t\tvar currentBackground = null;\n\t\tvar currentBackgroundVersion = 0;\n\n\t\tfunction render( renderList, scene, camera, forceClear ) {\n\n\t\t\tvar background = scene.background;\n\n\t\t\t// Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\t\t\tvar vr = renderer.vr;\n\t\t\tvar session = vr.getSession && vr.getSession();\n\n\t\t\tif ( session && session.environmentBlendMode === 'additive' ) {\n\n\t\t\t\tbackground = null;\n\n\t\t\t}\n\n\t\t\tif ( background === null ) {\n\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\t\t\t\tcurrentBackground = null;\n\t\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t\t} else if ( background && background.isColor ) {\n\n\t\t\t\tsetClear( background, 1 );\n\t\t\t\tforceClear = true;\n\t\t\t\tcurrentBackground = null;\n\t\t\t\tcurrentBackgroundVersion = 0;\n\n\t\t\t}\n\n\t\t\tif ( renderer.autoClear || forceClear ) {\n\n\t\t\t\trenderer.clear( renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil );\n\n\t\t\t}\n\n\t\t\tif ( background && ( background.isCubeTexture || background.isWebGLRenderTargetCube ) ) {\n\n\t\t\t\tif ( boxMesh === undefined ) {\n\n\t\t\t\t\tboxMesh = new Mesh(\n\t\t\t\t\t\tnew BoxBufferGeometry( 1, 1, 1 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\ttype: 'BackgroundCubeMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.cube.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'normal' );\n\t\t\t\t\tboxMesh.geometry.deleteAttribute( 'uv' );\n\n\t\t\t\t\tboxMesh.onBeforeRender = function ( renderer, scene, camera ) {\n\n\t\t\t\t\t\tthis.matrixWorld.copyPosition( camera.matrixWorld );\n\n\t\t\t\t\t};\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( boxMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.tCube.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( boxMesh );\n\n\t\t\t\t}\n\n\t\t\t\tvar texture = background.isWebGLRenderTargetCube ? background.texture : background;\n\t\t\t\tboxMesh.material.uniforms.tCube.value = texture;\n\t\t\t\tboxMesh.material.uniforms.tFlip.value = ( background.isWebGLRenderTargetCube ) ? 1 : - 1;\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t     currentBackgroundVersion !== texture.version ) {\n\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = texture.version;\n\n\t\t\t\t}\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null );\n\n\t\t\t} else if ( background && background.isTexture ) {\n\n\t\t\t\tif ( planeMesh === undefined ) {\n\n\t\t\t\t\tplaneMesh = new Mesh(\n\t\t\t\t\t\tnew PlaneBufferGeometry( 2, 2 ),\n\t\t\t\t\t\tnew ShaderMaterial( {\n\t\t\t\t\t\t\ttype: 'BackgroundMaterial',\n\t\t\t\t\t\t\tuniforms: cloneUniforms( ShaderLib.background.uniforms ),\n\t\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\t\tfog: false\n\t\t\t\t\t\t} )\n\t\t\t\t\t);\n\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute( 'normal' );\n\n\t\t\t\t\t// enable code injection for non-built-in material\n\t\t\t\t\tObject.defineProperty( planeMesh.material, 'map', {\n\n\t\t\t\t\t\tget: function () {\n\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} );\n\n\t\t\t\t\tobjects.update( planeMesh );\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif ( background.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tbackground.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy( background.matrix );\n\n\t\t\t\tif ( currentBackground !== background ||\n\t\t\t\t\t   currentBackgroundVersion !== background.version ) {\n\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\n\t\t\t\t}\n\n\n\t\t\t\t// push to the pre-sorted opaque render list\n\t\t\t\trenderList.unshift( planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setClear( color, alpha ) {\n\n\t\t\tstate.buffers.color.setClear( color.r, color.g, color.b, alpha, premultipliedAlpha );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tgetClearColor: function () {\n\n\t\t\t\treturn clearColor;\n\n\t\t\t},\n\t\t\tsetClearColor: function ( color, alpha ) {\n\n\t\t\t\tclearColor.set( color );\n\t\t\t\tclearAlpha = alpha !== undefined ? alpha : 1;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\n\t\t\t\treturn clearAlpha;\n\n\t\t\t},\n\t\t\tsetClearAlpha: function ( alpha ) {\n\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear( clearColor, clearAlpha );\n\n\t\t\t},\n\t\t\trender: render\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawArrays( mode, start, count );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, start, count, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLCapabilities( gl, extensions, parameters ) {\n\n\t\tvar maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\n\t\t\tif ( maxAnisotropy !== undefined ) { return maxAnisotropy; }\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tmaxAnisotropy = gl.getParameter( extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT );\n\n\t\t\t} else {\n\n\t\t\t\tmaxAnisotropy = 0;\n\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\n\t\t}\n\n\t\tfunction getMaxPrecision( precision ) {\n\n\t\t\tif ( precision === 'highp' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36338 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36338 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'highp';\n\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\n\t\t\t}\n\n\t\t\tif ( precision === 'mediump' ) {\n\n\t\t\t\tif ( gl.getShaderPrecisionFormat( 35633, 36337 ).precision > 0 &&\n\t\t\t\t\tgl.getShaderPrecisionFormat( 35632, 36337 ).precision > 0 ) {\n\n\t\t\t\t\treturn 'mediump';\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\n\t\t}\n\n\t\t/* eslint-disable no-undef */\n\t\tvar isWebGL2 = ( typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext ) ||\n\t\t\t( typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext );\n\t\t/* eslint-enable no-undef */\n\n\t\tvar precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tvar maxPrecision = getMaxPrecision( precision );\n\n\t\tif ( maxPrecision !== precision ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.' );\n\t\t\tprecision = maxPrecision;\n\n\t\t}\n\n\t\tvar logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\n\t\tvar maxTextures = gl.getParameter( 34930 );\n\t\tvar maxVertexTextures = gl.getParameter( 35660 );\n\t\tvar maxTextureSize = gl.getParameter( 3379 );\n\t\tvar maxCubemapSize = gl.getParameter( 34076 );\n\n\t\tvar maxAttributes = gl.getParameter( 34921 );\n\t\tvar maxVertexUniforms = gl.getParameter( 36347 );\n\t\tvar maxVaryings = gl.getParameter( 36348 );\n\t\tvar maxFragmentUniforms = gl.getParameter( 36349 );\n\n\t\tvar vertexTextures = maxVertexTextures > 0;\n\t\tvar floatFragmentTextures = isWebGL2 || !! extensions.get( 'OES_texture_float' );\n\t\tvar floatVertexTextures = vertexTextures && floatFragmentTextures;\n\n\t\tvar maxSamples = isWebGL2 ? gl.getParameter( 36183 ) : 0;\n\n\t\treturn {\n\n\t\t\tisWebGL2: isWebGL2,\n\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\n\t\t\tmaxSamples: maxSamples\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction WebGLClipping() {\n\n\t\tvar scope = this,\n\n\t\t\tglobalState = null,\n\t\t\tnumGlobalPlanes = 0,\n\t\t\tlocalClippingEnabled = false,\n\t\t\trenderingShadows = false,\n\n\t\t\tplane = new Plane(),\n\t\t\tviewNormalMatrix = new Matrix3(),\n\n\t\t\tuniform = { value: null, needsUpdate: false };\n\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function ( planes, enableLocalClipping, camera ) {\n\n\t\t\tvar enabled =\n\t\t\t\tplanes.length !== 0 ||\n\t\t\t\tenableLocalClipping ||\n\t\t\t\t// enable state of previous frame - the clipping code has to\n\t\t\t\t// run another frame in order to reset the state:\n\t\t\t\tnumGlobalPlanes !== 0 ||\n\t\t\t\tlocalClippingEnabled;\n\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\n\t\t\tglobalState = projectPlanes( planes, camera, 0 );\n\t\t\tnumGlobalPlanes = planes.length;\n\n\t\t\treturn enabled;\n\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes( null );\n\n\t\t};\n\n\t\tthis.endShadows = function () {\n\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\n\t\t};\n\n\t\tthis.setState = function ( planes, clipIntersection, clipShadows, camera, cache, fromCache ) {\n\n\t\t\tif ( ! localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && ! clipShadows ) {\n\n\t\t\t\t// there's no local clipping\n\n\t\t\t\tif ( renderingShadows ) {\n\n\t\t\t\t\t// there's no global clipping\n\n\t\t\t\t\tprojectPlanes( null );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tresetGlobalState();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\tlGlobal = nGlobal * 4,\n\n\t\t\t\t\tdstArray = cache.clippingState || null;\n\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes( planes, camera, lGlobal, fromCache );\n\n\t\t\t\tfor ( var i = 0; i !== lGlobal; ++ i ) {\n\n\t\t\t\t\tdstArray[ i ] = globalState[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcache.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\n\t\t\t}\n\n\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\n\t\t\tif ( uniform.value !== globalState ) {\n\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\n\t\t}\n\n\t\tfunction projectPlanes( planes, camera, dstOffset, skipTransform ) {\n\n\t\t\tvar nPlanes = planes !== null ? planes.length : 0,\n\t\t\t\tdstArray = null;\n\n\t\t\tif ( nPlanes !== 0 ) {\n\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif ( skipTransform !== true || dstArray === null ) {\n\n\t\t\t\t\tvar flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix( viewMatrix );\n\n\t\t\t\t\tif ( dstArray === null || dstArray.length < flatSize ) {\n\n\t\t\t\t\t\tdstArray = new Float32Array( flatSize );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfor ( var i = 0, i4 = dstOffset; i !== nPlanes; ++ i, i4 += 4 ) {\n\n\t\t\t\t\t\tplane.copy( planes[ i ] ).applyMatrix4( viewMatrix, viewNormalMatrix );\n\n\t\t\t\t\t\tplane.normal.toArray( dstArray, i4 );\n\t\t\t\t\t\tdstArray[ i4 + 3 ] = plane.constant;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\n\t\t\treturn dstArray;\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLExtensions( gl ) {\n\n\t\tvar extensions = {};\n\n\t\treturn {\n\n\t\t\tget: function ( name ) {\n\n\t\t\t\tif ( extensions[ name ] !== undefined ) {\n\n\t\t\t\t\treturn extensions[ name ];\n\n\t\t\t\t}\n\n\t\t\t\tvar extension;\n\n\t\t\t\tswitch ( name ) {\n\n\t\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_depth_texture' ) || gl.getExtension( 'MOZ_WEBGL_depth_texture' ) || gl.getExtension( 'WEBKIT_WEBGL_depth_texture' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\t\textension = gl.getExtension( 'EXT_texture_filter_anisotropic' ) || gl.getExtension( 'MOZ_EXT_texture_filter_anisotropic' ) || gl.getExtension( 'WEBKIT_EXT_texture_filter_anisotropic' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'MOZ_WEBGL_compressed_texture_s3tc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_s3tc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\t\textension = gl.getExtension( 'WEBGL_compressed_texture_pvrtc' ) || gl.getExtension( 'WEBKIT_WEBGL_compressed_texture_pvrtc' );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\textension = gl.getExtension( name );\n\n\t\t\t\t}\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: ' + name + ' extension not supported.' );\n\n\t\t\t\t}\n\n\t\t\t\textensions[ name ] = extension;\n\n\t\t\t\treturn extension;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLGeometries( gl, attributes, info ) {\n\n\t\tvar geometries = new WeakMap();\n\t\tvar wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose( event ) {\n\n\t\t\tvar geometry = event.target;\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry.index !== null ) {\n\n\t\t\t\tattributes.remove( buffergeometry.index );\n\n\t\t\t}\n\n\t\t\tfor ( var name in buffergeometry.attributes ) {\n\n\t\t\t\tattributes.remove( buffergeometry.attributes[ name ] );\n\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tgeometries.delete( geometry );\n\n\t\t\tvar attribute = wireframeAttributes.get( buffergeometry );\n\n\t\t\tif ( attribute ) {\n\n\t\t\t\tattributes.remove( attribute );\n\t\t\t\twireframeAttributes.delete( buffergeometry );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tinfo.memory.geometries --;\n\n\t\t}\n\n\t\tfunction get( object, geometry ) {\n\n\t\t\tvar buffergeometry = geometries.get( geometry );\n\n\t\t\tif ( buffergeometry ) { return buffergeometry; }\n\n\t\t\tgeometry.addEventListener( 'dispose', onGeometryDispose );\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tbuffergeometry = geometry;\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tif ( geometry._bufferGeometry === undefined ) {\n\n\t\t\t\t\tgeometry._bufferGeometry = new BufferGeometry().setFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tbuffergeometry = geometry._bufferGeometry;\n\n\t\t\t}\n\n\t\t\tgeometries.set( geometry, buffergeometry );\n\n\t\t\tinfo.memory.geometries ++;\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction update( geometry ) {\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattributes.update( index, 34963 );\n\n\t\t\t}\n\n\t\t\tfor ( var name in geometryAttributes ) {\n\n\t\t\t\tattributes.update( geometryAttributes[ name ], 34962 );\n\n\t\t\t}\n\n\t\t\t// morph targets\n\n\t\t\tvar morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor ( var name in morphAttributes ) {\n\n\t\t\t\tvar array = morphAttributes[ name ];\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i ++ ) {\n\n\t\t\t\t\tattributes.update( array[ i ], 34962 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateWireframeAttribute( geometry ) {\n\n\t\t\tvar indices = [];\n\n\t\t\tvar geometryIndex = geometry.index;\n\t\t\tvar geometryPosition = geometry.attributes.position;\n\t\t\tvar version = 0;\n\n\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\tvar array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor ( var i = 0, l = array.length; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = array[ i + 0 ];\n\t\t\t\t\tvar b = array[ i + 1 ];\n\t\t\t\t\tvar c = array[ i + 2 ];\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor ( var i = 0, l = ( array.length / 3 ) - 1; i < l; i += 3 ) {\n\n\t\t\t\t\tvar a = i + 0;\n\t\t\t\t\tvar b = i + 1;\n\t\t\t\t\tvar c = i + 2;\n\n\t\t\t\t\tindices.push( a, b, b, c, c, a );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar attribute = new ( arrayMax( indices ) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute )( indices, 1 );\n\t\t\tattribute.version = version;\n\n\t\t\tattributes.update( attribute, 34963 );\n\n\t\t\t//\n\n\t\t\tvar previousAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( previousAttribute ) { attributes.remove( previousAttribute ); }\n\n\t\t\t//\n\n\t\t\twireframeAttributes.set( geometry, attribute );\n\n\t\t}\n\n\t\tfunction getWireframeAttribute( geometry ) {\n\n\t\t\tvar currentAttribute = wireframeAttributes.get( geometry );\n\n\t\t\tif ( currentAttribute ) {\n\n\t\t\t\tvar geometryIndex = geometry.index;\n\n\t\t\t\tif ( geometryIndex !== null ) {\n\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\n\t\t\t\t\tif ( currentAttribute.version < geometryIndex.version ) {\n\n\t\t\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tupdateWireframeAttribute( geometry );\n\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get( geometry );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tget: get,\n\t\t\tupdate: update,\n\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLIndexedBufferRenderer( gl, extensions, info, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tvar mode;\n\n\t\tfunction setMode( value ) {\n\n\t\t\tmode = value;\n\n\t\t}\n\n\t\tvar type, bytesPerElement;\n\n\t\tfunction setIndex( value ) {\n\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\n\t\t}\n\n\t\tfunction render( start, count ) {\n\n\t\t\tgl.drawElements( mode, count, type, start * bytesPerElement );\n\n\t\t\tinfo.update( count, mode );\n\n\t\t}\n\n\t\tfunction renderInstances( geometry, start, count, primcount ) {\n\n\t\t\tif ( primcount === 0 ) { return; }\n\n\t\t\tvar extension, methodName;\n\n\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\n\t\t\t} else {\n\n\t\t\t\textension = extensions.get( 'ANGLE_instanced_arrays' );\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif ( extension === null ) {\n\n\t\t\t\t\tconsole.error( 'THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.' );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\textension[ methodName ]( mode, count, type, start * bytesPerElement, primcount );\n\n\t\t\tinfo.update( count, mode, primcount );\n\n\t\t}\n\n\t\t//\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLInfo( gl ) {\n\n\t\tvar memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\n\t\tvar render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update( count, mode, instanceCount ) {\n\n\t\t\tinstanceCount = instanceCount || 1;\n\n\t\t\trender.calls ++;\n\n\t\t\tswitch ( mode ) {\n\n\t\t\t\tcase 4:\n\t\t\t\t\trender.triangles += instanceCount * ( count / 3 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 5:\n\t\t\t\tcase 6:\n\t\t\t\t\trender.triangles += instanceCount * ( count - 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\trender.lines += instanceCount * ( count / 2 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\trender.lines += instanceCount * ( count - 1 );\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 0:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error( 'THREE.WebGLInfo: Unknown draw mode:', mode );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction reset() {\n\n\t\t\trender.frame ++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction absNumericalSort( a, b ) {\n\n\t\treturn Math.abs( b[ 1 ] ) - Math.abs( a[ 1 ] );\n\n\t}\n\n\tfunction WebGLMorphtargets( gl ) {\n\n\t\tvar influencesList = {};\n\t\tvar morphInfluences = new Float32Array( 8 );\n\n\t\tfunction update( object, geometry, material, program ) {\n\n\t\t\tvar objectInfluences = object.morphTargetInfluences;\n\n\t\t\tvar length = objectInfluences.length;\n\n\t\t\tvar influences = influencesList[ geometry.id ];\n\n\t\t\tif ( influences === undefined ) {\n\n\t\t\t\t// initialise list\n\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\t\tinfluences[ i ] = [ i, 0 ];\n\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[ geometry.id ] = influences;\n\n\t\t\t}\n\n\t\t\tvar morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tvar morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\n\t\t\t// Remove current morphAttributes\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence[ 1 ] !== 0 ) {\n\n\t\t\t\t\tif ( morphTargets ) { geometry.deleteAttribute( 'morphTarget' + i ); }\n\t\t\t\t\tif ( morphNormals ) { geometry.deleteAttribute( 'morphNormal' + i ); }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Collect influences\n\n\t\t\tfor ( var i = 0; i < length; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tinfluence[ 0 ] = i;\n\t\t\t\tinfluence[ 1 ] = objectInfluences[ i ];\n\n\t\t\t}\n\n\t\t\tinfluences.sort( absNumericalSort );\n\n\t\t\t// Add morphAttributes\n\n\t\t\tvar morphInfluencesSum = 0;\n\n\t\t\tfor ( var i = 0; i < 8; i ++ ) {\n\n\t\t\t\tvar influence = influences[ i ];\n\n\t\t\t\tif ( influence ) {\n\n\t\t\t\t\tvar index = influence[ 0 ];\n\t\t\t\t\tvar value = influence[ 1 ];\n\n\t\t\t\t\tif ( value ) {\n\n\t\t\t\t\t\tif ( morphTargets ) { geometry.setAttribute( 'morphTarget' + i, morphTargets[ index ] ); }\n\t\t\t\t\t\tif ( morphNormals ) { geometry.setAttribute( 'morphNormal' + i, morphNormals[ index ] ); }\n\n\t\t\t\t\t\tmorphInfluences[ i ] = value;\n\t\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tmorphInfluences[ i ] = 0;\n\n\t\t\t}\n\n\t\t\t// GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\t\t\tvar morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetBaseInfluence', morphBaseInfluence );\n\t\t\tprogram.getUniforms().setValue( gl, 'morphTargetInfluences', morphInfluences );\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLObjects( gl, geometries, attributes, info ) {\n\n\t\tvar updateList = {};\n\n\t\tfunction update( object ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\tvar geometry = object.geometry;\n\t\t\tvar buffergeometry = geometries.get( object, geometry );\n\n\t\t\t// Update once per frame\n\n\t\t\tif ( updateList[ buffergeometry.id ] !== frame ) {\n\n\t\t\t\tif ( geometry.isGeometry ) {\n\n\t\t\t\t\tbuffergeometry.updateFromObject( object );\n\n\t\t\t\t}\n\n\t\t\t\tgeometries.update( buffergeometry );\n\n\t\t\t\tupdateList[ buffergeometry.id ] = frame;\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\tattributes.update( object.instanceMatrix, 34962 );\n\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tupdateList = {};\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CubeTexture( images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding ) {\n\n\t\timages = images !== undefined ? images : [];\n\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\tformat = format !== undefined ? format : RGBFormat;\n\n\t\tTexture.call( this, images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.flipY = false;\n\n\t}\n\n\tCubeTexture.prototype = Object.create( Texture.prototype );\n\tCubeTexture.prototype.constructor = CubeTexture;\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tObject.defineProperty( CubeTexture.prototype, 'images', {\n\n\t\tget: function () {\n\n\t\t\treturn this.image;\n\n\t\t},\n\n\t\tset: function ( value ) {\n\n\t\t\tthis.image = value;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction DataTexture2DArray( data, width, height, depth ) {\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tDataTexture2DArray.prototype = Object.create( Texture.prototype );\n\tDataTexture2DArray.prototype.constructor = DataTexture2DArray;\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\t/**\n\t * @author Artur Trzesiok\n\t */\n\n\tfunction DataTexture3D( data, width, height, depth ) {\n\n\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t// Users can still set in DataTexture3D directly.\n\t\t//\n\t\t//\tvar texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t// \ttexture.anisotropy = 16;\n\t\t//\n\t\t// See #14839\n\n\t\tTexture.call( this, null );\n\n\t\tthis.image = { data: data || null, width: width || 1, height: height || 1, depth: depth || 1 };\n\n\t\tthis.magFilter = NearestFilter;\n\t\tthis.minFilter = NearestFilter;\n\n\t\tthis.wrapR = ClampToEdgeWrapping;\n\n\t\tthis.generateMipmaps = false;\n\t\tthis.flipY = false;\n\n\t\tthis.needsUpdate = true;\n\n\n\t}\n\n\tDataTexture3D.prototype = Object.create( Texture.prototype );\n\tDataTexture3D.prototype.constructor = DataTexture3D;\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * @author tschw\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *  \tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with  name 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\n\tvar emptyTexture = new Texture();\n\tvar emptyTexture2dArray = new DataTexture2DArray();\n\tvar emptyTexture3d = new DataTexture3D();\n\tvar emptyCubeTexture = new CubeTexture();\n\n\t// --- Utilities ---\n\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tvar arrayCacheF32 = [];\n\tvar arrayCacheI32 = [];\n\n\t// Float32Array caches used for uploading Matrix uniforms\n\n\tvar mat4array = new Float32Array( 16 );\n\tvar mat3array = new Float32Array( 9 );\n\tvar mat2array = new Float32Array( 4 );\n\n\t// Flattening for arrays of vectors and matrices\n\n\tfunction flatten( array, nBlocks, blockSize ) {\n\n\t\tvar firstElem = array[ 0 ];\n\n\t\tif ( firstElem <= 0 || firstElem > 0 ) { return array; }\n\t\t// unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tvar n = nBlocks * blockSize,\n\t\t\tr = arrayCacheF32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Float32Array( n );\n\t\t\tarrayCacheF32[ n ] = r;\n\n\t\t}\n\n\t\tif ( nBlocks !== 0 ) {\n\n\t\t\tfirstElem.toArray( r, 0 );\n\n\t\t\tfor ( var i = 1, offset = 0; i !== nBlocks; ++ i ) {\n\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[ i ].toArray( r, offset );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn r;\n\n\t}\n\n\tfunction arraysEqual( a, b ) {\n\n\t\tif ( a.length !== b.length ) { return false; }\n\n\t\tfor ( var i = 0, l = a.length; i < l; i ++ ) {\n\n\t\t\tif ( a[ i ] !== b[ i ] ) { return false; }\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction copyArray( a, b ) {\n\n\t\tfor ( var i = 0, l = b.length; i < l; i ++ ) {\n\n\t\t\ta[ i ] = b[ i ];\n\n\t\t}\n\n\t}\n\n\t// Texture unit allocation\n\n\tfunction allocTexUnits( textures, n ) {\n\n\t\tvar r = arrayCacheI32[ n ];\n\n\t\tif ( r === undefined ) {\n\n\t\t\tr = new Int32Array( n );\n\t\t\tarrayCacheI32[ n ] = r;\n\n\t\t}\n\n\t\tfor ( var i = 0; i !== n; ++ i )\n\t\t\t{ r[ i ] = textures.allocateTextureUnit(); }\n\n\t\treturn r;\n\n\t}\n\n\t// --- Setters ---\n\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\n\t// Single scalar\n\n\tfunction setValueV1f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1f( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\t// Single float vector (from flat array or THREE.VectorN)\n\n\tfunction setValueV2f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y ) {\n\n\t\t\t\tgl.uniform2f( this.addr, v.x, v.y );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform2fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV3f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.x, v.y, v.z );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\n\t\t\t}\n\n\t\t} else if ( v.r !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.r || cache[ 1 ] !== v.g || cache[ 2 ] !== v.b ) {\n\n\t\t\t\tgl.uniform3f( this.addr, v.r, v.g, v.b );\n\n\t\t\t\tcache[ 0 ] = v.r;\n\t\t\t\tcache[ 1 ] = v.g;\n\t\t\t\tcache[ 2 ] = v.b;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform3fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\tfunction setValueV4f( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( v.x !== undefined ) {\n\n\t\t\tif ( cache[ 0 ] !== v.x || cache[ 1 ] !== v.y || cache[ 2 ] !== v.z || cache[ 3 ] !== v.w ) {\n\n\t\t\t\tgl.uniform4f( this.addr, v.x, v.y, v.z, v.w );\n\n\t\t\t\tcache[ 0 ] = v.x;\n\t\t\t\tcache[ 1 ] = v.y;\n\t\t\t\tcache[ 2 ] = v.z;\n\t\t\t\tcache[ 3 ] = v.w;\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniform4fv( this.addr, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t}\n\n\t}\n\n\t// Single matrix (from flat array or MatrixN)\n\n\tfunction setValueM2( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat2array.set( elements );\n\n\t\t\tgl.uniformMatrix2fv( this.addr, false, mat2array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM3( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat3array.set( elements );\n\n\t\t\tgl.uniformMatrix3fv( this.addr, false, mat3array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\tfunction setValueM4( gl, v ) {\n\n\t\tvar cache = this.cache;\n\t\tvar elements = v.elements;\n\n\t\tif ( elements === undefined ) {\n\n\t\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, v );\n\n\t\t\tcopyArray( cache, v );\n\n\t\t} else {\n\n\t\t\tif ( arraysEqual( cache, elements ) ) { return; }\n\n\t\t\tmat4array.set( elements );\n\n\t\t\tgl.uniformMatrix4fv( this.addr, false, mat4array );\n\n\t\t\tcopyArray( cache, elements );\n\n\t\t}\n\n\t}\n\n\t// Single texture (2D / Cube)\n\n\tfunction setValueT1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTexture2D( v || emptyTexture, unit );\n\n\t}\n\n\tfunction setValueT2DArray1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture2DArray( v || emptyTexture2dArray, unit );\n\n\t}\n\n\tfunction setValueT3D1( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.setTexture3D( v || emptyTexture3d, unit );\n\n\t}\n\n\tfunction setValueT6( gl, v, textures ) {\n\n\t\tvar cache = this.cache;\n\t\tvar unit = textures.allocateTextureUnit();\n\n\t\tif ( cache[ 0 ] !== unit ) {\n\n\t\t\tgl.uniform1i( this.addr, unit );\n\t\t\tcache[ 0 ] = unit;\n\n\t\t}\n\n\t\ttextures.safeSetTextureCube( v || emptyCubeTexture, unit );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\n\tfunction setValueV1i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( cache[ 0 ] === v ) { return; }\n\n\t\tgl.uniform1i( this.addr, v );\n\n\t\tcache[ 0 ] = v;\n\n\t}\n\n\tfunction setValueV2i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV3i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\tfunction setValueV4i( gl, v ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( arraysEqual( cache, v ) ) { return; }\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t\tcopyArray( cache, v );\n\n\t}\n\n\t// Helper to pick the right setter for the singular case\n\n\tfunction getSingularSetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1f; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2f; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3f; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4f; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4; // _MAT4\n\n\t\t\tcase 0x8b5e: case 0x8d66: return setValueT1; // SAMPLER_2D, SAMPLER_EXTERNAL_OES\n\t\t\tcase 0x8b5f: return setValueT3D1; // SAMPLER_3D\n\t\t\tcase 0x8b60: return setValueT6; // SAMPLER_CUBE\n\t\t\tcase 0x8DC1: return setValueT2DArray1; // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1i; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2i; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3i; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4i; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// Array of scalars\n\tfunction setValueV1fArray( gl, v ) {\n\n\t\tgl.uniform1fv( this.addr, v );\n\n\t}\n\n\t// Integer / Boolean vectors or arrays thereof (always flat arrays)\n\tfunction setValueV1iArray( gl, v ) {\n\n\t\tgl.uniform1iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV2iArray( gl, v ) {\n\n\t\tgl.uniform2iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV3iArray( gl, v ) {\n\n\t\tgl.uniform3iv( this.addr, v );\n\n\t}\n\n\tfunction setValueV4iArray( gl, v ) {\n\n\t\tgl.uniform4iv( this.addr, v );\n\n\t}\n\n\n\t// Array of vectors (flat or from THREE classes)\n\n\tfunction setValueV2fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 2 );\n\n\t\tgl.uniform2fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV3fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 3 );\n\n\t\tgl.uniform3fv( this.addr, data );\n\n\t}\n\n\tfunction setValueV4fArray( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniform4fv( this.addr, data );\n\n\t}\n\n\t// Array of matrices (flat or from THREE clases)\n\n\tfunction setValueM2Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 4 );\n\n\t\tgl.uniformMatrix2fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM3Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 9 );\n\n\t\tgl.uniformMatrix3fv( this.addr, false, data );\n\n\t}\n\n\tfunction setValueM4Array( gl, v ) {\n\n\t\tvar data = flatten( v, this.size, 16 );\n\n\t\tgl.uniformMatrix4fv( this.addr, false, data );\n\n\t}\n\n\t// Array of textures (2D / Cube)\n\n\tfunction setValueT1Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTexture2D( v[ i ] || emptyTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\tfunction setValueT6Array( gl, v, textures ) {\n\n\t\tvar n = v.length;\n\n\t\tvar units = allocTexUnits( textures, n );\n\n\t\tgl.uniform1iv( this.addr, units );\n\n\t\tfor ( var i = 0; i !== n; ++ i ) {\n\n\t\t\ttextures.safeSetTextureCube( v[ i ] || emptyCubeTexture, units[ i ] );\n\n\t\t}\n\n\t}\n\n\t// Helper to pick the right setter for a pure (bottom-level) array\n\n\tfunction getPureArraySetter( type ) {\n\n\t\tswitch ( type ) {\n\n\t\t\tcase 0x1406: return setValueV1fArray; // FLOAT\n\t\t\tcase 0x8b50: return setValueV2fArray; // _VEC2\n\t\t\tcase 0x8b51: return setValueV3fArray; // _VEC3\n\t\t\tcase 0x8b52: return setValueV4fArray; // _VEC4\n\n\t\t\tcase 0x8b5a: return setValueM2Array; // _MAT2\n\t\t\tcase 0x8b5b: return setValueM3Array; // _MAT3\n\t\t\tcase 0x8b5c: return setValueM4Array; // _MAT4\n\n\t\t\tcase 0x8b5e: return setValueT1Array; // SAMPLER_2D\n\t\t\tcase 0x8b60: return setValueT6Array; // SAMPLER_CUBE\n\n\t\t\tcase 0x1404: case 0x8b56: return setValueV1iArray; // INT, BOOL\n\t\t\tcase 0x8b53: case 0x8b57: return setValueV2iArray; // _VEC2\n\t\t\tcase 0x8b54: case 0x8b58: return setValueV3iArray; // _VEC3\n\t\t\tcase 0x8b55: case 0x8b59: return setValueV4iArray; // _VEC4\n\n\t\t}\n\n\t}\n\n\t// --- Uniform Classes ---\n\n\tfunction SingleUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tfunction PureArrayUniform( id, activeInfo, addr ) {\n\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter( activeInfo.type );\n\n\t\t// this.path = activeInfo.name; // DEBUG\n\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function ( data ) {\n\n\t\tvar cache = this.cache;\n\n\t\tif ( data instanceof Float32Array && cache.length !== data.length ) {\n\n\t\t\tthis.cache = new Float32Array( data.length );\n\n\t\t}\n\n\t\tcopyArray( cache, data );\n\n\t};\n\n\tfunction StructuredUniform( id ) {\n\n\t\tthis.id = id;\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t}\n\n\tStructuredUniform.prototype.setValue = function ( gl, value, textures ) {\n\n\t\tvar seq = this.seq;\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tu.setValue( gl, value[ u.id ], textures );\n\n\t\t}\n\n\t};\n\n\t// --- Top-level ---\n\n\t// Parser - builds up the property tree from the path strings\n\n\tvar RePathPart = /([\\w\\d_]+)(\\])?(\\[|\\.)?/g;\n\n\t// extracts\n\t// \t- the identifier (member name or array index)\n\t//  - followed by an optional right bracket (found when array index)\n\t//  - followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform( container, uniformObject ) {\n\n\t\tcontainer.seq.push( uniformObject );\n\t\tcontainer.map[ uniformObject.id ] = uniformObject;\n\n\t}\n\n\tfunction parseUniform( activeInfo, addr, container ) {\n\n\t\tvar path = activeInfo.name,\n\t\t\tpathLength = path.length;\n\n\t\t// reset RegExp object, because of the early exit of a previous run\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile ( true ) {\n\n\t\t\tvar match = RePathPart.exec( path ),\n\t\t\t\tmatchEnd = RePathPart.lastIndex,\n\n\t\t\t\tid = match[ 1 ],\n\t\t\t\tidIsIndex = match[ 2 ] === ']',\n\t\t\t\tsubscript = match[ 3 ];\n\n\t\t\tif ( idIsIndex ) { id = id | 0; } // convert to integer\n\n\t\t\tif ( subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength ) {\n\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\n\t\t\t\taddUniform( container, subscript === undefined ?\n\t\t\t\t\tnew SingleUniform( id, activeInfo, addr ) :\n\t\t\t\t\tnew PureArrayUniform( id, activeInfo, addr ) );\n\n\t\t\t\tbreak;\n\n\t\t\t} else {\n\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\n\t\t\t\tvar map = container.map, next = map[ id ];\n\n\t\t\t\tif ( next === undefined ) {\n\n\t\t\t\t\tnext = new StructuredUniform( id );\n\t\t\t\t\taddUniform( container, next );\n\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// Root Container\n\n\tfunction WebGLUniforms( gl, program ) {\n\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35718 );\n\n\t\tfor ( var i = 0; i < n; ++ i ) {\n\n\t\t\tvar info = gl.getActiveUniform( program, i ),\n\t\t\t\taddr = gl.getUniformLocation( program, info.name );\n\n\t\t\tparseUniform( info, addr, this );\n\n\t\t}\n\n\t}\n\n\tWebGLUniforms.prototype.setValue = function ( gl, name, value, textures ) {\n\n\t\tvar u = this.map[ name ];\n\n\t\tif ( u !== undefined ) { u.setValue( gl, value, textures ); }\n\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function ( gl, object, name ) {\n\n\t\tvar v = object[ name ];\n\n\t\tif ( v !== undefined ) { this.setValue( gl, name, v ); }\n\n\t};\n\n\n\t// Static interface\n\n\tWebGLUniforms.upload = function ( gl, seq, values, textures ) {\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ],\n\t\t\t\tv = values[ u.id ];\n\n\t\t\tif ( v.needsUpdate !== false ) {\n\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue( gl, v.value, textures );\n\n\t\t\t}\n\n\t\t}\n\n\t};\n\n\tWebGLUniforms.seqWithValue = function ( seq, values ) {\n\n\t\tvar r = [];\n\n\t\tfor ( var i = 0, n = seq.length; i !== n; ++ i ) {\n\n\t\t\tvar u = seq[ i ];\n\t\t\tif ( u.id in values ) { r.push( u ); }\n\n\t\t}\n\n\t\treturn r;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShader( gl, type, string ) {\n\n\t\tvar shader = gl.createShader( type );\n\n\t\tgl.shaderSource( shader, string );\n\t\tgl.compileShader( shader );\n\n\t\treturn shader;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar programIdCount = 0;\n\n\tfunction addLineNumbers( string ) {\n\n\t\tvar lines = string.split( '\\n' );\n\n\t\tfor ( var i = 0; i < lines.length; i ++ ) {\n\n\t\t\tlines[ i ] = ( i + 1 ) + ': ' + lines[ i ];\n\n\t\t}\n\n\t\treturn lines.join( '\\n' );\n\n\t}\n\n\tfunction getEncodingComponents( encoding ) {\n\n\t\tswitch ( encoding ) {\n\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn [ 'Linear', '( value )' ];\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn [ 'sRGB', '( value )' ];\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn [ 'RGBE', '( value )' ];\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 7.0 )' ];\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn [ 'RGBM', '( value, 16.0 )' ];\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn [ 'RGBD', '( value, 256.0 )' ];\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn [ 'Gamma', '( value, float( GAMMA_FACTOR ) )' ];\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn [ 'LogLuv', '( value )' ];\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported encoding: ' + encoding );\n\n\t\t}\n\n\t}\n\n\tfunction getShaderErrors( gl, shader, type ) {\n\n\t\tvar status = gl.getShaderParameter( shader, 35713 );\n\t\tvar log = gl.getShaderInfoLog( shader ).trim();\n\n\t\tif ( status && log === '' ) { return ''; }\n\n\t\t// --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tvar source = gl.getShaderSource( shader );\n\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers( source );\n\n\t}\n\n\tfunction getTexelDecodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[ 0 ] + 'ToLinear' + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getTexelEncodingFunction( functionName, encoding ) {\n\n\t\tvar components = getEncodingComponents( encoding );\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[ 0 ] + components[ 1 ] + '; }';\n\n\t}\n\n\tfunction getToneMappingFunction( functionName, toneMapping ) {\n\n\t\tvar toneMappingName;\n\n\t\tswitch ( toneMapping ) {\n\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase Uncharted2ToneMapping:\n\t\t\t\ttoneMappingName = 'Uncharted2';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tthrow new Error( 'unsupported toneMapping: ' + toneMapping );\n\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\n\t}\n\n\tfunction generateExtensions( extensions, parameters, rendererExtensions ) {\n\n\t\textensions = extensions || {};\n\n\t\tvar chunks = [\n\t\t\t( extensions.derivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading ) ? '#extension GL_OES_standard_derivatives : enable' : '',\n\t\t\t( extensions.fragDepth || parameters.logarithmicDepthBuffer ) && rendererExtensions.get( 'EXT_frag_depth' ) ? '#extension GL_EXT_frag_depth : enable' : '',\n\t\t\t( extensions.drawBuffers ) && rendererExtensions.get( 'WEBGL_draw_buffers' ) ? '#extension GL_EXT_draw_buffers : require' : '',\n\t\t\t( extensions.shaderTextureLOD || parameters.envMap ) && rendererExtensions.get( 'EXT_shader_texture_lod' ) ? '#extension GL_EXT_shader_texture_lod : enable' : ''\n\t\t];\n\n\t\treturn chunks.filter( filterEmptyLine ).join( '\\n' );\n\n\t}\n\n\tfunction generateDefines( defines ) {\n\n\t\tvar chunks = [];\n\n\t\tfor ( var name in defines ) {\n\n\t\t\tvar value = defines[ name ];\n\n\t\t\tif ( value === false ) { continue; }\n\n\t\t\tchunks.push( '#define ' + name + ' ' + value );\n\n\t\t}\n\n\t\treturn chunks.join( '\\n' );\n\n\t}\n\n\tfunction fetchAttributeLocations( gl, program ) {\n\n\t\tvar attributes = {};\n\n\t\tvar n = gl.getProgramParameter( program, 35721 );\n\n\t\tfor ( var i = 0; i < n; i ++ ) {\n\n\t\t\tvar info = gl.getActiveAttrib( program, i );\n\t\t\tvar name = info.name;\n\n\t\t\t// console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[ name ] = gl.getAttribLocation( program, name );\n\n\t\t}\n\n\t\treturn attributes;\n\n\t}\n\n\tfunction filterEmptyLine( string ) {\n\n\t\treturn string !== '';\n\n\t}\n\n\tfunction replaceLightNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_DIR_LIGHTS/g, parameters.numDirLights )\n\t\t\t.replace( /NUM_SPOT_LIGHTS/g, parameters.numSpotLights )\n\t\t\t.replace( /NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights )\n\t\t\t.replace( /NUM_POINT_LIGHTS/g, parameters.numPointLights )\n\t\t\t.replace( /NUM_HEMI_LIGHTS/g, parameters.numHemiLights )\n\t\t\t.replace( /NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows )\n\t\t\t.replace( /NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows )\n\t\t\t.replace( /NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows );\n\n\t}\n\n\tfunction replaceClippingPlaneNums( string, parameters ) {\n\n\t\treturn string\n\t\t\t.replace( /NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes )\n\t\t\t.replace( /UNION_CLIPPING_PLANES/g, ( parameters.numClippingPlanes - parameters.numClipIntersection ) );\n\n\t}\n\n\t// Resolve Includes\n\n\tvar includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes( string ) {\n\n\t\treturn string.replace( includePattern, includeReplacer );\n\n\t}\n\n\tfunction includeReplacer( match, include ) {\n\n\t\tvar string = ShaderChunk[ include ];\n\n\t\tif ( string === undefined ) {\n\n\t\t\tthrow new Error( 'Can not resolve #include <' + include + '>' );\n\n\t\t}\n\n\t\treturn resolveIncludes( string );\n\n\t}\n\n\t// Unroll Loops\n\n\tvar loopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\n\tfunction unrollLoops( string ) {\n\n\t\treturn string.replace( loopPattern, loopReplacer );\n\n\t}\n\n\tfunction loopReplacer( match, start, end, snippet ) {\n\n\t\tvar string = '';\n\n\t\tfor ( var i = parseInt( start ); i < parseInt( end ); i ++ ) {\n\n\t\t\tstring += snippet\n\t\t\t\t.replace( /\\[ i \\]/g, '[ ' + i + ' ]' )\n\t\t\t\t.replace( /UNROLLED_LOOP_INDEX/g, i );\n\n\t\t}\n\n\t\treturn string;\n\n\t}\n\n\t//\n\n\tfunction generatePrecision( parameters ) {\n\n\t\tvar precisionstring = \"precision \" + parameters.precision + \" float;\\nprecision \" + parameters.precision + \" int;\";\n\n\t\tif ( parameters.precision === \"highp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define HIGH_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"mediump\" ) {\n\n\t\t\tprecisionstring += \"\\n#define MEDIUM_PRECISION\";\n\n\t\t} else if ( parameters.precision === \"lowp\" ) {\n\n\t\t\tprecisionstring += \"\\n#define LOW_PRECISION\";\n\n\t\t}\n\n\t\treturn precisionstring;\n\n\t}\n\n\tfunction generateShadowMapTypeDefine( parameters ) {\n\n\t\tvar shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif ( parameters.shadowMapType === PCFShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\n\t\t} else if ( parameters.shadowMapType === PCFSoftShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\n\t\t} else if ( parameters.shadowMapType === VSMShadowMap ) {\n\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapTypeDefine( parameters ) {\n\n\t\tvar envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase EquirectangularReflectionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_EQUIREC';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase SphericalReflectionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_SPHERE';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\n\t}\n\n\tfunction generateEnvMapModeDefine( parameters ) {\n\n\t\tvar envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.envMapMode ) {\n\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase EquirectangularRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapModeDefine;\n\n\t}\n\n\tfunction generateEnvMapBlendingDefine( parameters ) {\n\n\t\tvar envMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\n\t\tif ( parameters.envMap ) {\n\n\t\t\tswitch ( parameters.combine ) {\n\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\n\t}\n\n\tfunction WebGLProgram( renderer, extensions, cacheKey, material, shader, parameters ) {\n\n\t\tvar gl = renderer.getContext();\n\n\t\tvar defines = material.defines;\n\n\t\tvar vertexShader = shader.vertexShader;\n\t\tvar fragmentShader = shader.fragmentShader;\n\t\tvar shadowMapTypeDefine = generateShadowMapTypeDefine( parameters );\n\t\tvar envMapTypeDefine = generateEnvMapTypeDefine( parameters );\n\t\tvar envMapModeDefine = generateEnvMapModeDefine( parameters );\n\t\tvar envMapBlendingDefine = generateEnvMapBlendingDefine( parameters );\n\n\n\t\tvar gammaFactorDefine = ( renderer.gammaFactor > 0 ) ? renderer.gammaFactor : 1.0;\n\n\t\tvar customExtensions = parameters.isWebGL2 ? '' : generateExtensions( material.extensions, parameters, extensions );\n\n\t\tvar customDefines = generateDefines( defines );\n\n\t\tvar program = gl.createProgram();\n\n\t\tvar prefixVertex, prefixFragment;\n\n\t\tvar numMultiviewViews = parameters.numMultiviewViews;\n\n\t\tif ( material.isRawShaderMaterial ) {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixVertex.length > 0 ) {\n\n\t\t\t\tprefixVertex += '\\n';\n\n\t\t\t}\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\t\t\t\tcustomDefines\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tif ( prefixFragment.length > 0 ) {\n\n\t\t\t\tprefixFragment += '\\n';\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tprefixVertex = [\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.instancing ? '#define USE_INSTANCING' : '',\n\t\t\t\tparameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '',\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t'#define MAX_BONES ' + parameters.maxBones,\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.skinning ? '#define USE_SKINNING' : '',\n\t\t\t\tparameters.useVertexTexture ? '#define BONE_TEXTURE' : '',\n\n\t\t\t\tparameters.morphTargets ? '#define USE_MORPHTARGETS' : '',\n\t\t\t\tparameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '',\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( parameters.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t'uniform mat4 modelMatrix;',\n\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform mat3 normalMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t'#ifdef USE_INSTANCING',\n\n\t\t\t\t' attribute mat4 instanceMatrix;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'attribute vec3 position;',\n\t\t\t\t'attribute vec3 normal;',\n\t\t\t\t'attribute vec2 uv;',\n\n\t\t\t\t'#ifdef USE_TANGENT',\n\n\t\t\t\t'\tattribute vec4 tangent;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_COLOR',\n\n\t\t\t\t'\tattribute vec3 color;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_MORPHTARGETS',\n\n\t\t\t\t'\tattribute vec3 morphTarget0;',\n\t\t\t\t'\tattribute vec3 morphTarget1;',\n\t\t\t\t'\tattribute vec3 morphTarget2;',\n\t\t\t\t'\tattribute vec3 morphTarget3;',\n\n\t\t\t\t'\t#ifdef USE_MORPHNORMALS',\n\n\t\t\t\t'\t\tattribute vec3 morphNormal0;',\n\t\t\t\t'\t\tattribute vec3 morphNormal1;',\n\t\t\t\t'\t\tattribute vec3 morphNormal2;',\n\t\t\t\t'\t\tattribute vec3 morphNormal3;',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\tattribute vec3 morphTarget4;',\n\t\t\t\t'\t\tattribute vec3 morphTarget5;',\n\t\t\t\t'\t\tattribute vec3 morphTarget6;',\n\t\t\t\t'\t\tattribute vec3 morphTarget7;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'#ifdef USE_SKINNING',\n\n\t\t\t\t'\tattribute vec4 skinIndex;',\n\t\t\t\t'\tattribute vec4 skinWeight;',\n\n\t\t\t\t'#endif',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t\tprefixFragment = [\n\n\t\t\t\tcustomExtensions,\n\n\t\t\t\tgeneratePrecision( parameters ),\n\n\t\t\t\t'#define SHADER_NAME ' + shader.name,\n\n\t\t\t\tcustomDefines,\n\n\t\t\t\tparameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + ( parameters.alphaTest % 1 ? '' : '.0' ) : '', // add '.0' if integer\n\n\t\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine,\n\n\t\t\t\t( parameters.useFog && parameters.fog ) ? '#define USE_FOG' : '',\n\t\t\t\t( parameters.useFog && parameters.fogExp2 ) ? '#define FOG_EXP2' : '',\n\n\t\t\t\tparameters.map ? '#define USE_MAP' : '',\n\t\t\t\tparameters.matcap ? '#define USE_MATCAP' : '',\n\t\t\t\tparameters.envMap ? '#define USE_ENVMAP' : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapTypeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapModeDefine : '',\n\t\t\t\tparameters.envMap ? '#define ' + envMapBlendingDefine : '',\n\t\t\t\tparameters.lightMap ? '#define USE_LIGHTMAP' : '',\n\t\t\t\tparameters.aoMap ? '#define USE_AOMAP' : '',\n\t\t\t\tparameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '',\n\t\t\t\tparameters.bumpMap ? '#define USE_BUMPMAP' : '',\n\t\t\t\tparameters.normalMap ? '#define USE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.objectSpaceNormalMap ) ? '#define OBJECTSPACE_NORMALMAP' : '',\n\t\t\t\t( parameters.normalMap && parameters.tangentSpaceNormalMap ) ? '#define TANGENTSPACE_NORMALMAP' : '',\n\t\t\t\tparameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '',\n\t\t\t\tparameters.specularMap ? '#define USE_SPECULARMAP' : '',\n\t\t\t\tparameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '',\n\t\t\t\tparameters.metalnessMap ? '#define USE_METALNESSMAP' : '',\n\t\t\t\tparameters.alphaMap ? '#define USE_ALPHAMAP' : '',\n\n\t\t\t\tparameters.sheen ? '#define USE_SHEEN' : '',\n\n\t\t\t\tparameters.vertexTangents ? '#define USE_TANGENT' : '',\n\t\t\t\tparameters.vertexColors ? '#define USE_COLOR' : '',\n\t\t\t\tparameters.vertexUvs ? '#define USE_UV' : '',\n\t\t\t\tparameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '',\n\n\t\t\t\tparameters.gradientMap ? '#define USE_GRADIENTMAP' : '',\n\n\t\t\t\tparameters.flatShading ? '#define FLAT_SHADED' : '',\n\n\t\t\t\tparameters.doubleSided ? '#define DOUBLE_SIDED' : '',\n\t\t\t\tparameters.flipSided ? '#define FLIP_SIDED' : '',\n\n\t\t\t\tparameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '',\n\t\t\t\tparameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '',\n\n\t\t\t\tparameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '',\n\n\t\t\t\tparameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '',\n\n\t\t\t\tparameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '',\n\t\t\t\tparameters.logarithmicDepthBuffer && ( parameters.isWebGL2 || extensions.get( 'EXT_frag_depth' ) ) ? '#define USE_LOGDEPTHBUF_EXT' : '',\n\n\t\t\t\t( ( material.extensions ? material.extensions.shaderTextureLOD : false ) || parameters.envMap ) && ( parameters.isWebGL2 || extensions.get( 'EXT_shader_texture_lod' ) ) ? '#define TEXTURE_LOD_EXT' : '',\n\n\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t'uniform vec3 cameraPosition;',\n\t\t\t\t'uniform bool isOrthographic;',\n\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? '#define TONE_MAPPING' : '',\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? ShaderChunk[ 'tonemapping_pars_fragment' ] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\t\t( parameters.toneMapping !== NoToneMapping ) ? getToneMappingFunction( 'toneMapping', parameters.toneMapping ) : '',\n\n\t\t\t\tparameters.dithering ? '#define DITHERING' : '',\n\n\t\t\t\t( parameters.outputEncoding || parameters.mapEncoding || parameters.matcapEncoding || parameters.envMapEncoding || parameters.emissiveMapEncoding ) ?\n\t\t\t\t\tShaderChunk[ 'encodings_pars_fragment' ] : '', // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\t\tparameters.mapEncoding ? getTexelDecodingFunction( 'mapTexelToLinear', parameters.mapEncoding ) : '',\n\t\t\t\tparameters.matcapEncoding ? getTexelDecodingFunction( 'matcapTexelToLinear', parameters.matcapEncoding ) : '',\n\t\t\t\tparameters.envMapEncoding ? getTexelDecodingFunction( 'envMapTexelToLinear', parameters.envMapEncoding ) : '',\n\t\t\t\tparameters.emissiveMapEncoding ? getTexelDecodingFunction( 'emissiveMapTexelToLinear', parameters.emissiveMapEncoding ) : '',\n\t\t\t\tparameters.outputEncoding ? getTexelEncodingFunction( 'linearToOutputTexel', parameters.outputEncoding ) : '',\n\n\t\t\t\tparameters.depthPacking ? '#define DEPTH_PACKING ' + material.depthPacking : '',\n\n\t\t\t\t'\\n'\n\n\t\t\t].filter( filterEmptyLine ).join( '\\n' );\n\n\t\t}\n\n\t\tvertexShader = resolveIncludes( vertexShader );\n\t\tvertexShader = replaceLightNums( vertexShader, parameters );\n\t\tvertexShader = replaceClippingPlaneNums( vertexShader, parameters );\n\n\t\tfragmentShader = resolveIncludes( fragmentShader );\n\t\tfragmentShader = replaceLightNums( fragmentShader, parameters );\n\t\tfragmentShader = replaceClippingPlaneNums( fragmentShader, parameters );\n\n\t\tvertexShader = unrollLoops( vertexShader );\n\t\tfragmentShader = unrollLoops( fragmentShader );\n\n\t\tif ( parameters.isWebGL2 && ! material.isRawShaderMaterial ) {\n\n\t\t\tvar isGLSL3ShaderMaterial = false;\n\n\t\t\tvar versionRegex = /^\\s*#version\\s+300\\s+es\\s*\\n/;\n\n\t\t\tif ( material.isShaderMaterial &&\n\t\t\t\tvertexShader.match( versionRegex ) !== null &&\n\t\t\t\tfragmentShader.match( versionRegex ) !== null ) {\n\n\t\t\t\tisGLSL3ShaderMaterial = true;\n\n\t\t\t\tvertexShader = vertexShader.replace( versionRegex, '' );\n\t\t\t\tfragmentShader = fragmentShader.replace( versionRegex, '' );\n\n\t\t\t}\n\n\t\t\t// GLSL 3.0 conversion\n\n\t\t\tprefixVertex = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define attribute in',\n\t\t\t\t'#define varying out',\n\t\t\t\t'#define texture2D texture'\n\t\t\t].join( '\\n' ) + '\\n' + prefixVertex;\n\n\t\t\tprefixFragment = [\n\t\t\t\t'#version 300 es\\n',\n\t\t\t\t'#define varying in',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : 'out highp vec4 pc_fragColor;',\n\t\t\t\tisGLSL3ShaderMaterial ? '' : '#define gl_FragColor pc_fragColor',\n\t\t\t\t'#define gl_FragDepthEXT gl_FragDepth',\n\t\t\t\t'#define texture2D texture',\n\t\t\t\t'#define textureCube texture',\n\t\t\t\t'#define texture2DProj textureProj',\n\t\t\t\t'#define texture2DLodEXT textureLod',\n\t\t\t\t'#define texture2DProjLodEXT textureProjLod',\n\t\t\t\t'#define textureCubeLodEXT textureLod',\n\t\t\t\t'#define texture2DGradEXT textureGrad',\n\t\t\t\t'#define texture2DProjGradEXT textureProjGrad',\n\t\t\t\t'#define textureCubeGradEXT textureGrad'\n\t\t\t].join( '\\n' ) + '\\n' + prefixFragment;\n\n\t\t\t// Multiview\n\n\t\t\tif ( numMultiviewViews > 0 ) {\n\n\t\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t[\n\t\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t\t'layout(num_views = ' + numMultiviewViews + ') in;',\n\t\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t\t].join( '\\n' )\n\t\t\t\t);\n\n\t\t\t\tprefixVertex = prefixVertex.replace(\n\t\t\t\t\t[\n\t\t\t\t\t\t'uniform mat4 modelViewMatrix;',\n\t\t\t\t\t\t'uniform mat4 projectionMatrix;',\n\t\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t\t'uniform mat3 normalMatrix;'\n\t\t\t\t\t].join( '\\n' ),\n\t\t\t\t\t[\n\t\t\t\t\t\t'uniform mat4 modelViewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t\t'uniform mat4 projectionMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t\t'uniform mat3 normalMatrices[' + numMultiviewViews + '];',\n\n\t\t\t\t\t\t'#define modelViewMatrix modelViewMatrices[VIEW_ID]',\n\t\t\t\t\t\t'#define projectionMatrix projectionMatrices[VIEW_ID]',\n\t\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]',\n\t\t\t\t\t\t'#define normalMatrix normalMatrices[VIEW_ID]'\n\t\t\t\t\t].join( '\\n' )\n\t\t\t\t);\n\n\t\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t[\n\t\t\t\t\t\t'#version 300 es\\n',\n\t\t\t\t\t\t'#extension GL_OVR_multiview2 : require',\n\t\t\t\t\t\t'#define VIEW_ID gl_ViewID_OVR'\n\t\t\t\t\t].join( '\\n' )\n\t\t\t\t);\n\n\t\t\t\tprefixFragment = prefixFragment.replace(\n\t\t\t\t\t'uniform mat4 viewMatrix;',\n\t\t\t\t\t[\n\t\t\t\t\t\t'uniform mat4 viewMatrices[' + numMultiviewViews + '];',\n\t\t\t\t\t\t'#define viewMatrix viewMatrices[VIEW_ID]'\n\t\t\t\t\t].join( '\\n' )\n\t\t\t\t);\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar vertexGlsl = prefixVertex + vertexShader;\n\t\tvar fragmentGlsl = prefixFragment + fragmentShader;\n\n\t\t// console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tvar glVertexShader = WebGLShader( gl, 35633, vertexGlsl );\n\t\tvar glFragmentShader = WebGLShader( gl, 35632, fragmentGlsl );\n\n\t\tgl.attachShader( program, glVertexShader );\n\t\tgl.attachShader( program, glFragmentShader );\n\n\t\t// Force a particular attribute to index 0.\n\n\t\tif ( material.index0AttributeName !== undefined ) {\n\n\t\t\tgl.bindAttribLocation( program, 0, material.index0AttributeName );\n\n\t\t} else if ( parameters.morphTargets === true ) {\n\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation( program, 0, 'position' );\n\n\t\t}\n\n\t\tgl.linkProgram( program );\n\n\t\t// check for link errors\n\t\tif ( renderer.debug.checkShaderErrors ) {\n\n\t\t\tvar programLog = gl.getProgramInfoLog( program ).trim();\n\t\t\tvar vertexLog = gl.getShaderInfoLog( glVertexShader ).trim();\n\t\t\tvar fragmentLog = gl.getShaderInfoLog( glFragmentShader ).trim();\n\n\t\t\tvar runnable = true;\n\t\t\tvar haveDiagnostics = true;\n\n\t\t\tif ( gl.getProgramParameter( program, 35714 ) === false ) {\n\n\t\t\t\trunnable = false;\n\n\t\t\t\tvar vertexErrors = getShaderErrors( gl, glVertexShader, 'vertex' );\n\t\t\t\tvar fragmentErrors = getShaderErrors( gl, glFragmentShader, 'fragment' );\n\n\t\t\t\tconsole.error( 'THREE.WebGLProgram: shader error: ', gl.getError(), '35715', gl.getProgramParameter( program, 35715 ), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors );\n\n\t\t\t} else if ( programLog !== '' ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLProgram: gl.getProgramInfoLog()', programLog );\n\n\t\t\t} else if ( vertexLog === '' || fragmentLog === '' ) {\n\n\t\t\t\thaveDiagnostics = false;\n\n\t\t\t}\n\n\t\t\tif ( haveDiagnostics ) {\n\n\t\t\t\tthis.diagnostics = {\n\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tmaterial: material,\n\n\t\t\t\t\tprogramLog: programLog,\n\n\t\t\t\t\tvertexShader: {\n\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\n\t\t\t\t\t},\n\n\t\t\t\t\tfragmentShader: {\n\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\n\t\t\t\t\t}\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t}\n\n\t\t// clean up\n\n\t\tgl.deleteShader( glVertexShader );\n\t\tgl.deleteShader( glFragmentShader );\n\n\t\t// set up caching for uniform locations\n\n\t\tvar cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\n\t\t\tif ( cachedUniforms === undefined ) {\n\n\t\t\t\tcachedUniforms = new WebGLUniforms( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\n\t\t};\n\n\t\t// set up caching for attribute locations\n\n\t\tvar cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\n\t\t\tif ( cachedAttributes === undefined ) {\n\n\t\t\t\tcachedAttributes = fetchAttributeLocations( gl, program );\n\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\n\t\t};\n\n\t\t// free resource\n\n\t\tthis.destroy = function () {\n\n\t\t\tgl.deleteProgram( program );\n\t\t\tthis.program = undefined;\n\n\t\t};\n\n\t\t//\n\n\t\tthis.name = shader.name;\n\t\tthis.id = programIdCount ++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\tthis.numMultiviewViews = numMultiviewViews;\n\n\t\treturn this;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLPrograms( renderer, extensions, capabilities ) {\n\n\t\tvar programs = [];\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tvar floatVertexTextures = capabilities.floatVertexTextures;\n\t\tvar precision = capabilities.precision;\n\t\tvar maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tvar vertexTextures = capabilities.vertexTextures;\n\n\t\tvar shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'phong',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\n\t\tvar parameterNames = [\n\t\t\t\"precision\", \"isWebGL2\", \"supportsVertexTextures\", \"outputEncoding\", \"instancing\", \"numMultiviewViews\",\n\t\t\t\"map\", \"mapEncoding\", \"matcap\", \"matcapEncoding\", \"envMap\", \"envMapMode\", \"envMapEncoding\", \"envMapCubeUV\",\n\t\t\t\"lightMap\", \"aoMap\", \"emissiveMap\", \"emissiveMapEncoding\", \"bumpMap\", \"normalMap\", \"objectSpaceNormalMap\", \"tangentSpaceNormalMap\", \"clearcoatNormalMap\", \"displacementMap\", \"specularMap\",\n\t\t\t\"roughnessMap\", \"metalnessMap\", \"gradientMap\",\n\t\t\t\"alphaMap\", \"combine\", \"vertexColors\", \"vertexTangents\", \"vertexUvs\", \"uvsVertexOnly\", \"fog\", \"useFog\", \"fogExp2\",\n\t\t\t\"flatShading\", \"sizeAttenuation\", \"logarithmicDepthBuffer\", \"skinning\",\n\t\t\t\"maxBones\", \"useVertexTexture\", \"morphTargets\", \"morphNormals\",\n\t\t\t\"maxMorphTargets\", \"maxMorphNormals\", \"premultipliedAlpha\",\n\t\t\t\"numDirLights\", \"numPointLights\", \"numSpotLights\", \"numHemiLights\", \"numRectAreaLights\",\n\t\t\t\"numDirLightShadows\", \"numPointLightShadows\", \"numSpotLightShadows\",\n\t\t\t\"shadowMapEnabled\", \"shadowMapType\", \"toneMapping\", 'physicallyCorrectLights',\n\t\t\t\"alphaTest\", \"doubleSided\", \"flipSided\", \"numClippingPlanes\", \"numClipIntersection\", \"depthPacking\", \"dithering\",\n\t\t\t\"sheen\"\n\t\t];\n\n\n\t\tfunction allocateBones( object ) {\n\n\t\t\tvar skeleton = object.skeleton;\n\t\t\tvar bones = skeleton.bones;\n\n\t\t\tif ( floatVertexTextures ) {\n\n\t\t\t\treturn 1024;\n\n\t\t\t} else {\n\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//  - leave some extra space for other uniforms\n\t\t\t\t//  - limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//    (up to 54 should be safe)\n\n\t\t\t\tvar nVertexUniforms = maxVertexUniforms;\n\t\t\t\tvar nVertexMatrices = Math.floor( ( nVertexUniforms - 20 ) / 4 );\n\n\t\t\t\tvar maxBones = Math.min( nVertexMatrices, bones.length );\n\n\t\t\t\tif ( maxBones < bones.length ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.' );\n\t\t\t\t\treturn 0;\n\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap( map, gammaOverrideLinear ) {\n\n\t\t\tvar encoding;\n\n\t\t\tif ( ! map ) {\n\n\t\t\t\tencoding = LinearEncoding;\n\n\t\t\t} else if ( map.isTexture ) {\n\n\t\t\t\tencoding = map.encoding;\n\n\t\t\t} else if ( map.isWebGLRenderTarget ) {\n\n\t\t\t\tconsole.warn( \"THREE.WebGLPrograms.getTextureEncodingFromMap: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\tencoding = map.texture.encoding;\n\n\t\t\t}\n\n\t\t\t// add backwards compatibility for WebGLRenderer.gammaInput/gammaOutput parameter, should probably be removed at some point.\n\t\t\tif ( encoding === LinearEncoding && gammaOverrideLinear ) {\n\n\t\t\t\tencoding = GammaEncoding;\n\n\t\t\t}\n\n\t\t\treturn encoding;\n\n\t\t}\n\n\t\tthis.getParameters = function ( material, lights, shadows, fog, nClipPlanes, nClipIntersection, object ) {\n\n\t\t\tvar shaderID = shaderIDs[ material.type ];\n\n\t\t\t// heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tvar maxBones = object.isSkinnedMesh ? allocateBones( object ) : 0;\n\n\t\t\tif ( material.precision !== null ) {\n\n\t\t\t\tprecision = capabilities.getMaxPrecision( material.precision );\n\n\t\t\t\tif ( precision !== material.precision ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\t\t\tvar numMultiviewViews = currentRenderTarget && currentRenderTarget.isWebGLMultiviewRenderTarget ? currentRenderTarget.numViews : 0;\n\n\t\t\tvar parameters = {\n\n\t\t\t\tisWebGL2: isWebGL2,\n\n\t\t\t\tshaderID: shaderID,\n\n\t\t\t\tprecision: precision,\n\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\tnumMultiviewViews: numMultiviewViews,\n\t\t\t\toutputEncoding: getTextureEncodingFromMap( ( ! currentRenderTarget ) ? null : currentRenderTarget.texture, renderer.gammaOutput ),\n\t\t\t\tmap: !! material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap( material.map, renderer.gammaInput ),\n\t\t\t\tmatcap: !! material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap( material.matcap, renderer.gammaInput ),\n\t\t\t\tenvMap: !! material.envMap,\n\t\t\t\tenvMapMode: material.envMap && material.envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap( material.envMap, renderer.gammaInput ),\n\t\t\t\tenvMapCubeUV: ( !! material.envMap ) && ( ( material.envMap.mapping === CubeUVReflectionMapping ) || ( material.envMap.mapping === CubeUVRefractionMapping ) ),\n\t\t\t\tlightMap: !! material.lightMap,\n\t\t\t\taoMap: !! material.aoMap,\n\t\t\t\temissiveMap: !! material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap( material.emissiveMap, renderer.gammaInput ),\n\t\t\t\tbumpMap: !! material.bumpMap,\n\t\t\t\tnormalMap: !! material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatNormalMap: !! material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !! material.displacementMap,\n\t\t\t\troughnessMap: !! material.roughnessMap,\n\t\t\t\tmetalnessMap: !! material.metalnessMap,\n\t\t\t\tspecularMap: !! material.specularMap,\n\t\t\t\talphaMap: !! material.alphaMap,\n\n\t\t\t\tgradientMap: !! material.gradientMap,\n\n\t\t\t\tsheen: !! material.sheen,\n\n\t\t\t\tcombine: material.combine,\n\n\t\t\t\tvertexTangents: ( material.normalMap && material.vertexTangents ),\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexUvs: !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap || !! material.displacementMap,\n\t\t\t\tuvsVertexOnly: ! ( !! material.map || !! material.bumpMap || !! material.normalMap || !! material.specularMap || !! material.alphaMap || !! material.emissiveMap || !! material.roughnessMap || !! material.metalnessMap || !! material.clearcoatNormalMap ) && !! material.displacementMap,\n\n\t\t\t\tfog: !! fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: ( fog && fog.isFogExp2 ),\n\n\t\t\t\tflatShading: material.flatShading,\n\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\n\t\t\t\tskinning: material.skinning && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tmaxMorphTargets: renderer.maxMorphTargets,\n\t\t\t\tmaxMorphNormals: renderer.maxMorphNormals,\n\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\n\t\t\t\tnumClippingPlanes: nClipPlanes,\n\t\t\t\tnumClipIntersection: nClipIntersection,\n\n\t\t\t\tdithering: material.dithering,\n\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\n\t\t\t\tdepthPacking: ( material.depthPacking !== undefined ) ? material.depthPacking : false\n\n\t\t\t};\n\n\t\t\treturn parameters;\n\n\t\t};\n\n\t\tthis.getProgramCacheKey = function ( material, parameters ) {\n\n\t\t\tvar array = [];\n\n\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\tarray.push( parameters.shaderID );\n\n\t\t\t} else {\n\n\t\t\t\tarray.push( material.fragmentShader );\n\t\t\t\tarray.push( material.vertexShader );\n\n\t\t\t}\n\n\t\t\tif ( material.defines !== undefined ) {\n\n\t\t\t\tfor ( var name in material.defines ) {\n\n\t\t\t\t\tarray.push( name );\n\t\t\t\t\tarray.push( material.defines[ name ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < parameterNames.length; i ++ ) {\n\n\t\t\t\tarray.push( parameters[ parameterNames[ i ] ] );\n\n\t\t\t}\n\n\t\t\tarray.push( material.onBeforeCompile.toString() );\n\n\t\t\tarray.push( renderer.gammaOutput );\n\n\t\t\tarray.push( renderer.gammaFactor );\n\n\t\t\treturn array.join();\n\n\t\t};\n\n\t\tthis.acquireProgram = function ( material, shader, parameters, cacheKey ) {\n\n\t\t\tvar program;\n\n\t\t\t// Check if code has been already compiled\n\t\t\tfor ( var p = 0, pl = programs.length; p < pl; p ++ ) {\n\n\t\t\t\tvar preexistingProgram = programs[ p ];\n\n\t\t\t\tif ( preexistingProgram.cacheKey === cacheKey ) {\n\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++ program.usedTimes;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\tprogram = new WebGLProgram( renderer, extensions, cacheKey, material, shader, parameters );\n\t\t\t\tprograms.push( program );\n\n\t\t\t}\n\n\t\t\treturn program;\n\n\t\t};\n\n\t\tthis.releaseProgram = function ( program ) {\n\n\t\t\tif ( -- program.usedTimes === 0 ) {\n\n\t\t\t\t// Remove from unordered set\n\t\t\t\tvar i = programs.indexOf( program );\n\t\t\t\tprograms[ i ] = programs[ programs.length - 1 ];\n\t\t\t\tprograms.pop();\n\n\t\t\t\t// Free WebGL resources\n\t\t\t\tprogram.destroy();\n\n\t\t\t}\n\n\t\t};\n\n\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\tthis.programs = programs;\n\n\t}\n\n\t/**\n\t * @author fordacious / fordacious.github.io\n\t */\n\n\tfunction WebGLProperties() {\n\n\t\tvar properties = new WeakMap();\n\n\t\tfunction get( object ) {\n\n\t\t\tvar map = properties.get( object );\n\n\t\t\tif ( map === undefined ) {\n\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set( object, map );\n\n\t\t\t}\n\n\t\t\treturn map;\n\n\t\t}\n\n\t\tfunction remove( object ) {\n\n\t\t\tproperties.delete( object );\n\n\t\t}\n\n\t\tfunction update( object, key, value ) {\n\n\t\t\tproperties.get( object )[ key ] = value;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tproperties = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction painterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.program !== b.program ) {\n\n\t\t\treturn a.program.id - b.program.id;\n\n\t\t} else if ( a.material.id !== b.material.id ) {\n\n\t\t\treturn a.material.id - b.material.id;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn a.z - b.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\tfunction reversePainterSortStable( a, b ) {\n\n\t\tif ( a.groupOrder !== b.groupOrder ) {\n\n\t\t\treturn a.groupOrder - b.groupOrder;\n\n\t\t} else if ( a.renderOrder !== b.renderOrder ) {\n\n\t\t\treturn a.renderOrder - b.renderOrder;\n\n\t\t} else if ( a.z !== b.z ) {\n\n\t\t\treturn b.z - a.z;\n\n\t\t} else {\n\n\t\t\treturn a.id - b.id;\n\n\t\t}\n\n\t}\n\n\n\tfunction WebGLRenderList() {\n\n\t\tvar renderItems = [];\n\t\tvar renderItemsIndex = 0;\n\n\t\tvar opaque = [];\n\t\tvar transparent = [];\n\n\t\tvar defaultProgram = { id: - 1 };\n\n\t\tfunction init() {\n\n\t\t\trenderItemsIndex = 0;\n\n\t\t\topaque.length = 0;\n\t\t\ttransparent.length = 0;\n\n\t\t}\n\n\t\tfunction getNextRenderItem( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = renderItems[ renderItemsIndex ];\n\n\t\t\tif ( renderItem === undefined ) {\n\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: material.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\n\t\t\t\trenderItems[ renderItemsIndex ] = renderItem;\n\n\t\t\t} else {\n\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = material.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\n\t\t\t}\n\n\t\t\trenderItemsIndex ++;\n\n\t\t\treturn renderItem;\n\n\t\t}\n\n\t\tfunction push( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).push( renderItem );\n\n\t\t}\n\n\t\tfunction unshift( object, geometry, material, groupOrder, z, group ) {\n\n\t\t\tvar renderItem = getNextRenderItem( object, geometry, material, groupOrder, z, group );\n\n\t\t\t( material.transparent === true ? transparent : opaque ).unshift( renderItem );\n\n\t\t}\n\n\t\tfunction sort() {\n\n\t\t\tif ( opaque.length > 1 ) { opaque.sort( painterSortStable ); }\n\t\t\tif ( transparent.length > 1 ) { transparent.sort( reversePainterSortStable ); }\n\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransparent: transparent,\n\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\n\t\t\tsort: sort\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderLists() {\n\n\t\tvar lists = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\tlists.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar cameras = lists.get( scene );\n\t\t\tvar list;\n\t\t\tif ( cameras === undefined ) {\n\n\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\tlists.set( scene, new WeakMap() );\n\t\t\t\tlists.get( scene ).set( camera, list );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tlist = cameras.get( camera );\n\t\t\t\tif ( list === undefined ) {\n\n\t\t\t\t\tlist = new WebGLRenderList();\n\t\t\t\t\tcameras.set( camera, list );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn list;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\tlists = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction UniformsCache() {\n\n\t\tvar lights = {};\n\n\t\treturn {\n\n\t\t\tget: function ( light ) {\n\n\t\t\t\tif ( lights[ light.id ] !== undefined ) {\n\n\t\t\t\t\treturn lights[ light.id ];\n\n\t\t\t\t}\n\n\t\t\t\tvar uniforms;\n\n\t\t\t\tswitch ( light.type ) {\n\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0,\n\n\t\t\t\t\t\t\tshadow: false,\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tlights[ light.id ] = uniforms;\n\n\t\t\t\treturn uniforms;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tvar nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst( lightA, lightB ) {\n\n\t\treturn ( lightB.castShadow ? 1 : 0 ) - ( lightA.castShadow ? 1 : 0 );\n\n\t}\n\n\tfunction WebGLLights() {\n\n\t\tvar cache = new UniformsCache();\n\n\t\tvar state = {\n\n\t\t\tversion: 0,\n\n\t\t\thash: {\n\t\t\t\tdirectionalLength: - 1,\n\t\t\t\tpointLength: - 1,\n\t\t\t\tspotLength: - 1,\n\t\t\t\trectAreaLength: - 1,\n\t\t\t\themiLength: - 1,\n\n\t\t\t\tnumDirectionalShadows: - 1,\n\t\t\t\tnumPointShadows: - 1,\n\t\t\t\tnumSpotShadows: - 1,\n\t\t\t},\n\n\t\t\tambient: [ 0, 0, 0 ],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\tpoint: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: [],\n\n\t\t\tnumDirectionalShadows: - 1,\n\t\t\tnumPointShadows: - 1,\n\t\t\tnumSpotShadows: - 1\n\n\t\t};\n\n\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe.push( new Vector3() ); }\n\n\t\tvar vector3 = new Vector3();\n\t\tvar matrix4 = new Matrix4();\n\t\tvar matrix42 = new Matrix4();\n\n\t\tfunction setup( lights, shadows, camera ) {\n\n\t\t\tvar r = 0, g = 0, b = 0;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) { state.probe[ i ].set( 0, 0, 0 ); }\n\n\t\t\tvar directionalLength = 0;\n\t\t\tvar pointLength = 0;\n\t\t\tvar spotLength = 0;\n\t\t\tvar rectAreaLength = 0;\n\t\t\tvar hemiLength = 0;\n\n\t\t\tvar numDirectionalShadows = 0;\n\t\t\tvar numPointShadows = 0;\n\t\t\tvar numSpotShadows = 0;\n\n\t\t\tvar viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tlights.sort( shadowCastingLightsFirst );\n\n\t\t\tfor ( var i = 0, l = lights.length; i < l; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\n\t\t\t\tvar color = light.color;\n\t\t\t\tvar intensity = light.intensity;\n\t\t\t\tvar distance = light.distance;\n\n\t\t\t\tvar shadowMap = ( light.shadow && light.shadow.map ) ? light.shadow.map.texture : null;\n\n\t\t\t\tif ( light.isAmbientLight ) {\n\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\n\t\t\t\t} else if ( light.isLightProbe ) {\n\n\t\t\t\t\tfor ( var j = 0; j < 9; j ++ ) {\n\n\t\t\t\t\t\tstate.probe[ j ].addScaledVector( light.sh.coefficients[ j ], intensity );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( light.isDirectionalLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.directionalShadowMap[ directionalLength ] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[ directionalLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumDirectionalShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[ directionalLength ] = uniforms;\n\n\t\t\t\t\tdirectionalLength ++;\n\n\t\t\t\t} else if ( light.isSpotLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.distance = distance;\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tvector3.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\t\t\tuniforms.direction.sub( vector3 );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\n\t\t\t\t\tuniforms.coneCos = Math.cos( light.angle );\n\t\t\t\t\tuniforms.penumbraCos = Math.cos( light.angle * ( 1 - light.penumbra ) );\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\n\t\t\t\t\t\tstate.spotShadowMap[ spotLength ] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[ spotLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumSpotShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[ spotLength ] = uniforms;\n\n\t\t\t\t\tspotLength ++;\n\n\t\t\t\t} else if ( light.isRectAreaLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\t// (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\t\t\t\t\tuniforms.color.copy( color ).multiplyScalar( intensity );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\t// extract local rotation of light to derive width/height half vectors\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy( light.matrixWorld );\n\t\t\t\t\tmatrix4.premultiply( viewMatrix );\n\t\t\t\t\tmatrix42.extractRotation( matrix4 );\n\n\t\t\t\t\tuniforms.halfWidth.set( light.width * 0.5, 0.0, 0.0 );\n\t\t\t\t\tuniforms.halfHeight.set( 0.0, light.height * 0.5, 0.0 );\n\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4( matrix42 );\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4( matrix42 );\n\n\t\t\t\t\t// TODO (abelnation): RectAreaLight distance?\n\t\t\t\t\t// uniforms.distance = distance;\n\n\t\t\t\t\tstate.rectArea[ rectAreaLength ] = uniforms;\n\n\t\t\t\t\trectAreaLength ++;\n\n\t\t\t\t} else if ( light.isPointLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.position.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.position.applyMatrix4( viewMatrix );\n\n\t\t\t\t\tuniforms.color.copy( light.color ).multiplyScalar( light.intensity );\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tuniforms.shadow = light.castShadow;\n\n\t\t\t\t\tif ( light.castShadow ) {\n\n\t\t\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\t\t\tuniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tuniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tuniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tuniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tuniforms.shadowCameraFar = shadow.camera.far;\n\n\t\t\t\t\t\tstate.pointShadowMap[ pointLength ] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[ pointLength ] = light.shadow.matrix;\n\n\t\t\t\t\t\tnumPointShadows ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[ pointLength ] = uniforms;\n\n\t\t\t\t\tpointLength ++;\n\n\t\t\t\t} else if ( light.isHemisphereLight ) {\n\n\t\t\t\t\tvar uniforms = cache.get( light );\n\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\t\tuniforms.direction.transformDirection( viewMatrix );\n\t\t\t\t\tuniforms.direction.normalize();\n\n\t\t\t\t\tuniforms.skyColor.copy( light.color ).multiplyScalar( intensity );\n\t\t\t\t\tuniforms.groundColor.copy( light.groundColor ).multiplyScalar( intensity );\n\n\t\t\t\t\tstate.hemi[ hemiLength ] = uniforms;\n\n\t\t\t\t\themiLength ++;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.ambient[ 0 ] = r;\n\t\t\tstate.ambient[ 1 ] = g;\n\t\t\tstate.ambient[ 2 ] = b;\n\n\t\t\tvar hash = state.hash;\n\n\t\t\tif ( hash.directionalLength !== directionalLength ||\n\t\t\t\thash.pointLength !== pointLength ||\n\t\t\t\thash.spotLength !== spotLength ||\n\t\t\t\thash.rectAreaLength !== rectAreaLength ||\n\t\t\t\thash.hemiLength !== hemiLength ||\n\t\t\t\thash.numDirectionalShadows !== numDirectionalShadows ||\n\t\t\t\thash.numPointShadows !== numPointShadows ||\n\t\t\t\thash.numSpotShadows !== numSpotShadows ) {\n\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\n\t\t\t\tstate.version = nextVersion ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tstate: state\n\t\t};\n\n\t}\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WebGLRenderState() {\n\n\t\tvar lights = new WebGLLights();\n\n\t\tvar lightsArray = [];\n\t\tvar shadowsArray = [];\n\n\t\tfunction init() {\n\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\n\t\t}\n\n\t\tfunction pushLight( light ) {\n\n\t\t\tlightsArray.push( light );\n\n\t\t}\n\n\t\tfunction pushShadow( shadowLight ) {\n\n\t\t\tshadowsArray.push( shadowLight );\n\n\t\t}\n\n\t\tfunction setupLights( camera ) {\n\n\t\t\tlights.setup( lightsArray, shadowsArray, camera );\n\n\t\t}\n\n\t\tvar state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\n\t\t\tlights: lights\n\t\t};\n\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\n\t}\n\n\tfunction WebGLRenderStates() {\n\n\t\tvar renderStates = new WeakMap();\n\n\t\tfunction onSceneDispose( event ) {\n\n\t\t\tvar scene = event.target;\n\n\t\t\tscene.removeEventListener( 'dispose', onSceneDispose );\n\n\t\t\trenderStates.delete( scene );\n\n\t\t}\n\n\t\tfunction get( scene, camera ) {\n\n\t\t\tvar renderState;\n\n\t\t\tif ( renderStates.has( scene ) === false ) {\n\n\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\trenderStates.set( scene, new WeakMap() );\n\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\tscene.addEventListener( 'dispose', onSceneDispose );\n\n\t\t\t} else {\n\n\t\t\t\tif ( renderStates.get( scene ).has( camera ) === false ) {\n\n\t\t\t\t\trenderState = new WebGLRenderState();\n\t\t\t\t\trenderStates.get( scene ).set( camera, renderState );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderState = renderStates.get( scene ).get( camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn renderState;\n\n\t\t}\n\n\t\tfunction dispose() {\n\n\t\t\trenderStates = new WeakMap();\n\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author bhouston / https://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t * }\n\t */\n\n\tfunction MeshDepthMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDepthMaterial';\n\n\t\tthis.depthPacking = BasicDepthPacking;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDepthMaterial.prototype = Object.create( Material.prototype );\n\tMeshDepthMaterial.prototype.constructor = MeshDepthMaterial;\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\tMeshDepthMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.depthPacking = source.depthPacking;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *\n\t *  referencePosition: <float>,\n\t *  nearDistance: <float>,\n\t *  farDistance: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tfunction MeshDistanceMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshDistanceMaterial';\n\n\t\tthis.referencePosition = new Vector3();\n\t\tthis.nearDistance = 1;\n\t\tthis.farDistance = 1000;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.fog = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshDistanceMaterial.prototype = Object.create( Material.prototype );\n\tMeshDistanceMaterial.prototype.constructor = MeshDistanceMaterial;\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tMeshDistanceMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.referencePosition.copy( source.referencePosition );\n\t\tthis.nearDistance = source.nearDistance;\n\t\tthis.farDistance = source.farDistance;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\treturn this;\n\n\t};\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n  float mean = 0.0;\\n  float squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy  ) / resolution ) );\\n  for ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n    #ifdef HORIZONAL_PASS\\n      vec2 distribution = unpack2HalfToRGBA ( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n      mean += distribution.x;\\n      squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n    #else\\n      float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0,  i )  * radius ) / resolution ) );\\n      mean += depth;\\n      squared_mean += depth * depth;\\n    #endif\\n  }\\n  mean = mean * HALF_SAMPLE_RATE;\\n  squared_mean = squared_mean * HALF_SAMPLE_RATE;\\n  float std_dev = sqrt( squared_mean - mean * mean );\\n  gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLShadowMap( _renderer, _objects, maxTextureSize ) {\n\n\t\tvar _frustum = new Frustum(),\n\n\t\t\t_shadowMapSize = new Vector2(),\n\t\t\t_viewportSize = new Vector2(),\n\n\t\t\t_viewport = new Vector4(),\n\n\t\t\t_depthMaterials = [],\n\t\t\t_distanceMaterials = [],\n\n\t\t\t_materialCache = {};\n\n\t\tvar shadowSide = { 0: BackSide, 1: FrontSide, 2: DoubleSide };\n\n\t\tvar shadowMaterialVertical = new ShaderMaterial( {\n\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: { value: null },\n\t\t\t\tresolution: { value: new Vector2() },\n\t\t\t\tradius: { value: 4.0 }\n\t\t\t},\n\n\t\t\tvertexShader: vsm_vert,\n\n\t\t\tfragmentShader: vsm_frag\n\n\t\t} );\n\n\t\tvar shadowMaterialHorizonal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizonal.defines.HORIZONAL_PASS = 1;\n\n\t\tvar fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute(\n\t\t\t\"position\",\n\t\t\tnew BufferAttribute(\n\t\t\t\tnew Float32Array( [ - 1, - 1, 0.5, 3, - 1, 0.5, - 1, 3, 0.5 ] ),\n\t\t\t\t3\n\t\t\t)\n\t\t);\n\n\t\tvar fullScreenMesh = new Mesh( fullScreenTri, shadowMaterialVertical );\n\n\t\tvar scope = this;\n\n\t\tthis.enabled = false;\n\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function ( lights, scene, camera ) {\n\n\t\t\tif ( scope.enabled === false ) { return; }\n\t\t\tif ( scope.autoUpdate === false && scope.needsUpdate === false ) { return; }\n\n\t\t\tif ( lights.length === 0 ) { return; }\n\n\t\t\tvar currentRenderTarget = _renderer.getRenderTarget();\n\t\t\tvar activeCubeFace = _renderer.getActiveCubeFace();\n\t\t\tvar activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tvar _state = _renderer.state;\n\n\t\t\t// Set GL state for depth map.\n\t\t\t_state.setBlending( NoBlending );\n\t\t\t_state.buffers.color.setClear( 1, 1, 1, 1 );\n\t\t\t_state.buffers.depth.setTest( true );\n\t\t\t_state.setScissorTest( false );\n\n\t\t\t// render depth map\n\n\t\t\tfor ( var i = 0, il = lights.length; i < il; i ++ ) {\n\n\t\t\t\tvar light = lights[ i ];\n\t\t\t\tvar shadow = light.shadow;\n\n\t\t\t\tif ( shadow === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has no shadow.' );\n\t\t\t\t\tcontinue;\n\n\t\t\t\t}\n\n\t\t\t\t_shadowMapSize.copy( shadow.mapSize );\n\n\t\t\t\tvar shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply( shadowFrameExtents );\n\n\t\t\t\t_viewportSize.copy( shadow.mapSize );\n\n\t\t\t\tif ( _shadowMapSize.x > maxTextureSize || _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap:', light, 'has shadow exceeding max texture size, reducing' );\n\n\t\t\t\t\tif ( _shadowMapSize.x > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.x = Math.floor( maxTextureSize / shadowFrameExtents.x );\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _shadowMapSize.y > maxTextureSize ) {\n\n\t\t\t\t\t\t_viewportSize.y = Math.floor( maxTextureSize / shadowFrameExtents.y );\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null && ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tif ( shadow.map === null ) {\n\n\t\t\t\t\tvar pars = { minFilter: NearestFilter, magFilter: NearestFilter, format: RGBAFormat };\n\n\t\t\t\t\tshadow.map = new WebGLRenderTarget( _shadowMapSize.x, _shadowMapSize.y, pars );\n\t\t\t\t\tshadow.map.texture.name = light.name + \".shadowMap\";\n\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tvar viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor ( var vp = 0; vp < viewportCount; vp ++ ) {\n\n\t\t\t\t\tvar viewport = shadow.getViewport( vp );\n\n\t\t\t\t\t_viewport.set(\n\t\t\t\t\t\t_viewportSize.x * viewport.x,\n\t\t\t\t\t\t_viewportSize.y * viewport.y,\n\t\t\t\t\t\t_viewportSize.x * viewport.z,\n\t\t\t\t\t\t_viewportSize.y * viewport.w\n\t\t\t\t\t);\n\n\t\t\t\t\t_state.viewport( _viewport );\n\n\t\t\t\t\tshadow.updateMatrices( light, vp );\n\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\n\t\t\t\t\trenderObject( scene, camera, shadow.camera, light, this.type );\n\n\t\t\t\t}\n\n\t\t\t\t// do blur pass for VSM\n\n\t\t\t\tif ( ! shadow.isPointLightShadow && this.type === VSMShadowMap ) {\n\n\t\t\t\t\tVSMPass( shadow, camera );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget( currentRenderTarget, activeCubeFace, activeMipmapLevel );\n\n\t\t};\n\n\t\tfunction VSMPass( shadow, camera ) {\n\n\t\t\tvar geometry = _objects.update( fullScreenMesh );\n\n\t\t\t// vertical pass\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.mapPass );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null );\n\n\t\t\t// horizonal pass\n\n\t\t\tshadowMaterialHorizonal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizonal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizonal.uniforms.radius.value = shadow.radius;\n\t\t\t_renderer.setRenderTarget( shadow.map );\n\t\t\t_renderer.clear();\n\t\t\t_renderer.renderBufferDirect( camera, null, geometry, shadowMaterialHorizonal, fullScreenMesh, null );\n\n\t\t}\n\n\t\tfunction getDepthMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _depthMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDepthMaterial( {\n\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_depthMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant( useMorphing, useSkinning, useInstancing ) {\n\n\t\t\tvar index = useMorphing << 0 | useSkinning << 1 | useInstancing << 2;\n\n\t\t\tvar material = _distanceMaterials[ index ];\n\n\t\t\tif ( material === undefined ) {\n\n\t\t\t\tmaterial = new MeshDistanceMaterial( {\n\n\t\t\t\t\tmorphTargets: useMorphing,\n\t\t\t\t\tskinning: useSkinning\n\n\t\t\t\t} );\n\n\t\t\t\t_distanceMaterials[ index ] = material;\n\n\t\t\t}\n\n\t\t\treturn material;\n\n\t\t}\n\n\t\tfunction getDepthMaterial( object, material, light, shadowCameraNear, shadowCameraFar, type ) {\n\n\t\t\tvar geometry = object.geometry;\n\n\t\t\tvar result = null;\n\n\t\t\tvar getMaterialVariant = getDepthMaterialVariant;\n\t\t\tvar customMaterial = object.customDepthMaterial;\n\n\t\t\tif ( light.isPointLight === true ) {\n\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\n\t\t\t}\n\n\t\t\tif ( customMaterial === undefined ) {\n\n\t\t\t\tvar useMorphing = false;\n\n\t\t\t\tif ( material.morphTargets === true ) {\n\n\t\t\t\t\tif ( geometry.isBufferGeometry === true ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\n\t\t\t\t\t} else if ( geometry.isGeometry === true ) {\n\n\t\t\t\t\t\tuseMorphing = geometry.morphTargets && geometry.morphTargets.length > 0;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useSkinning = false;\n\n\t\t\t\tif ( object.isSkinnedMesh === true ) {\n\n\t\t\t\t\tif ( material.skinning === true ) {\n\n\t\t\t\t\t\tuseSkinning = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLShadowMap: THREE.SkinnedMesh with material.skinning set to false:', object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar useInstancing = object.isInstancedMesh === true;\n\n\t\t\t\tresult = getMaterialVariant( useMorphing, useSkinning, useInstancing );\n\n\t\t\t} else {\n\n\t\t\t\tresult = customMaterial;\n\n\t\t\t}\n\n\t\t\tif ( _renderer.localClippingEnabled &&\n\t\t\t\t\tmaterial.clipShadows === true &&\n\t\t\t\t\tmaterial.clippingPlanes.length !== 0 ) {\n\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\n\t\t\t\tvar keyA = result.uuid, keyB = material.uuid;\n\n\t\t\t\tvar materialsForVariant = _materialCache[ keyA ];\n\n\t\t\t\tif ( materialsForVariant === undefined ) {\n\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[ keyA ] = materialsForVariant;\n\n\t\t\t\t}\n\n\t\t\t\tvar cachedMaterial = materialsForVariant[ keyB ];\n\n\t\t\t\tif ( cachedMaterial === undefined ) {\n\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[ keyB ] = cachedMaterial;\n\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif ( type === VSMShadowMap ) {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : material.side;\n\n\t\t\t} else {\n\n\t\t\t\tresult.side = ( material.shadowSide !== null ) ? material.shadowSide : shadowSide[ material.side ];\n\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif ( light.isPointLight === true && result.isMeshDistanceMaterial === true ) {\n\n\t\t\t\tresult.referencePosition.setFromMatrixPosition( light.matrixWorld );\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t\tfunction renderObject( object, camera, shadowCamera, light, type ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible && ( object.isMesh || object.isLine || object.isPoints ) ) {\n\n\t\t\t\tif ( ( object.castShadow || ( object.receiveShadow && type === VSMShadowMap ) ) && ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) ) {\n\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices( shadowCamera.matrixWorldInverse, object.matrixWorld );\n\n\t\t\t\t\tvar geometry = _objects.update( object );\n\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\tfor ( var k = 0, kl = groups.length; k < kl; k ++ ) {\n\n\t\t\t\t\t\t\tvar group = groups[ k ];\n\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, groupMaterial, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\tvar depthMaterial = getDepthMaterial( object, material, light, shadowCamera.near, shadowCamera.far, type );\n\n\t\t\t\t\t\t_renderer.renderBufferDirect( shadowCamera, null, geometry, depthMaterial, object, null );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\trenderObject( children[ i ], camera, shadowCamera, light, type );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLState( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar color = new Vector4();\n\t\t\tvar currentColorMask = null;\n\t\t\tvar currentColorClear = new Vector4( 0, 0, 0, 0 );\n\n\t\t\treturn {\n\n\t\t\t\tsetMask: function ( colorMask ) {\n\n\t\t\t\t\tif ( currentColorMask !== colorMask && ! locked ) {\n\n\t\t\t\t\t\tgl.colorMask( colorMask, colorMask, colorMask, colorMask );\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( r, g, b, a, premultipliedAlpha ) {\n\n\t\t\t\t\tif ( premultipliedAlpha === true ) {\n\n\t\t\t\t\t\tr *= a; g *= a; b *= a;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set( r, g, b, a );\n\n\t\t\t\t\tif ( currentColorClear.equals( color ) === false ) {\n\n\t\t\t\t\t\tgl.clearColor( r, g, b, a );\n\t\t\t\t\t\tcurrentColorClear.copy( color );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set( - 1, 0, 0, 0 ); // set to invalid state\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentDepthMask = null;\n\t\t\tvar currentDepthFunc = null;\n\t\t\tvar currentDepthClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( depthTest ) {\n\n\t\t\t\t\tif ( depthTest ) {\n\n\t\t\t\t\t\tenable( 2929 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tdisable( 2929 );\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( depthMask ) {\n\n\t\t\t\t\tif ( currentDepthMask !== depthMask && ! locked ) {\n\n\t\t\t\t\t\tgl.depthMask( depthMask );\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( depthFunc ) {\n\n\t\t\t\t\tif ( currentDepthFunc !== depthFunc ) {\n\n\t\t\t\t\t\tif ( depthFunc ) {\n\n\t\t\t\t\t\t\tswitch ( depthFunc ) {\n\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 512 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 519 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 513 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 514 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 518 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 516 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 517 );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tgl.depthFunc( 515 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( depth ) {\n\n\t\t\t\t\tif ( currentDepthClear !== depth ) {\n\n\t\t\t\t\t\tgl.clearDepth( depth );\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\n\t\t\tvar locked = false;\n\n\t\t\tvar currentStencilMask = null;\n\t\t\tvar currentStencilFunc = null;\n\t\t\tvar currentStencilRef = null;\n\t\t\tvar currentStencilFuncMask = null;\n\t\t\tvar currentStencilFail = null;\n\t\t\tvar currentStencilZFail = null;\n\t\t\tvar currentStencilZPass = null;\n\t\t\tvar currentStencilClear = null;\n\n\t\t\treturn {\n\n\t\t\t\tsetTest: function ( stencilTest ) {\n\n\t\t\t\t\tif ( ! locked ) {\n\n\t\t\t\t\t\tif ( stencilTest ) {\n\n\t\t\t\t\t\t\tenable( 2960 );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tdisable( 2960 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetMask: function ( stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilMask !== stencilMask && ! locked ) {\n\n\t\t\t\t\t\tgl.stencilMask( stencilMask );\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetFunc: function ( stencilFunc, stencilRef, stencilMask ) {\n\n\t\t\t\t\tif ( currentStencilFunc !== stencilFunc ||\n\t\t\t\t\t     currentStencilRef \t!== stencilRef \t||\n\t\t\t\t\t     currentStencilFuncMask !== stencilMask ) {\n\n\t\t\t\t\t\tgl.stencilFunc( stencilFunc, stencilRef, stencilMask );\n\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetOp: function ( stencilFail, stencilZFail, stencilZPass ) {\n\n\t\t\t\t\tif ( currentStencilFail\t !== stencilFail \t||\n\t\t\t\t\t     currentStencilZFail !== stencilZFail ||\n\t\t\t\t\t     currentStencilZPass !== stencilZPass ) {\n\n\t\t\t\t\t\tgl.stencilOp( stencilFail, stencilZFail, stencilZPass );\n\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tsetLocked: function ( lock ) {\n\n\t\t\t\t\tlocked = lock;\n\n\t\t\t\t},\n\n\t\t\t\tsetClear: function ( stencil ) {\n\n\t\t\t\t\tif ( currentStencilClear !== stencil ) {\n\n\t\t\t\t\t\tgl.clearStencil( stencil );\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\treset: function () {\n\n\t\t\t\t\tlocked = false;\n\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t}\n\n\t\t//\n\n\t\tvar colorBuffer = new ColorBuffer();\n\t\tvar depthBuffer = new DepthBuffer();\n\t\tvar stencilBuffer = new StencilBuffer();\n\n\t\tvar maxVertexAttributes = gl.getParameter( 34921 );\n\t\tvar newAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar enabledAttributes = new Uint8Array( maxVertexAttributes );\n\t\tvar attributeDivisors = new Uint8Array( maxVertexAttributes );\n\n\t\tvar enabledCapabilities = {};\n\n\t\tvar currentProgram = null;\n\n\t\tvar currentBlendingEnabled = null;\n\t\tvar currentBlending = null;\n\t\tvar currentBlendEquation = null;\n\t\tvar currentBlendSrc = null;\n\t\tvar currentBlendDst = null;\n\t\tvar currentBlendEquationAlpha = null;\n\t\tvar currentBlendSrcAlpha = null;\n\t\tvar currentBlendDstAlpha = null;\n\t\tvar currentPremultipledAlpha = false;\n\n\t\tvar currentFlipSided = null;\n\t\tvar currentCullFace = null;\n\n\t\tvar currentLineWidth = null;\n\n\t\tvar currentPolygonOffsetFactor = null;\n\t\tvar currentPolygonOffsetUnits = null;\n\n\t\tvar maxTextures = gl.getParameter( 35661 );\n\n\t\tvar lineWidthAvailable = false;\n\t\tvar version = 0;\n\t\tvar glVersion = gl.getParameter( 7938 );\n\n\t\tif ( glVersion.indexOf( 'WebGL' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^WebGL\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 1.0 );\n\n\t\t} else if ( glVersion.indexOf( 'OpenGL ES' ) !== - 1 ) {\n\n\t\t\tversion = parseFloat( /^OpenGL\\ ES\\ ([0-9])/.exec( glVersion )[ 1 ] );\n\t\t\tlineWidthAvailable = ( version >= 2.0 );\n\n\t\t}\n\n\t\tvar currentTextureSlot = null;\n\t\tvar currentBoundTextures = {};\n\n\t\tvar currentScissor = new Vector4();\n\t\tvar currentViewport = new Vector4();\n\n\t\tfunction createTexture( type, target, count ) {\n\n\t\t\tvar data = new Uint8Array( 4 ); // 4 is required to match default unpack alignment of 4.\n\t\t\tvar texture = gl.createTexture();\n\n\t\t\tgl.bindTexture( type, texture );\n\t\t\tgl.texParameteri( type, 10241, 9728 );\n\t\t\tgl.texParameteri( type, 10240, 9728 );\n\n\t\t\tfor ( var i = 0; i < count; i ++ ) {\n\n\t\t\t\tgl.texImage2D( target + i, 0, 6408, 1, 1, 0, 6408, 5121, data );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t\tvar emptyTextures = {};\n\t\temptyTextures[ 3553 ] = createTexture( 3553, 3553, 1 );\n\t\temptyTextures[ 34067 ] = createTexture( 34067, 34069, 6 );\n\n\t\t// init\n\n\t\tcolorBuffer.setClear( 0, 0, 0, 1 );\n\t\tdepthBuffer.setClear( 1 );\n\t\tstencilBuffer.setClear( 0 );\n\n\t\tenable( 2929 );\n\t\tdepthBuffer.setFunc( LessEqualDepth );\n\n\t\tsetFlipSided( false );\n\t\tsetCullFace( CullFaceBack );\n\t\tenable( 2884 );\n\n\t\tsetBlending( NoBlending );\n\n\t\t//\n\n\t\tfunction initAttributes() {\n\n\t\t\tfor ( var i = 0, l = newAttributes.length; i < l; i ++ ) {\n\n\t\t\t\tnewAttributes[ i ] = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enableAttribute( attribute ) {\n\n\t\t\tenableAttributeAndDivisor( attribute, 0 );\n\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor( attribute, meshPerAttribute ) {\n\n\t\t\tnewAttributes[ attribute ] = 1;\n\n\t\t\tif ( enabledAttributes[ attribute ] === 0 ) {\n\n\t\t\t\tgl.enableVertexAttribArray( attribute );\n\t\t\t\tenabledAttributes[ attribute ] = 1;\n\n\t\t\t}\n\n\t\t\tif ( attributeDivisors[ attribute ] !== meshPerAttribute ) {\n\n\t\t\t\tvar extension = isWebGL2 ? gl : extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t\textension[ isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE' ]( attribute, meshPerAttribute );\n\t\t\t\tattributeDivisors[ attribute ] = meshPerAttribute;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\n\t\t\tfor ( var i = 0, l = enabledAttributes.length; i !== l; ++ i ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] !== newAttributes[ i ] ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction enable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== true ) {\n\n\t\t\t\tgl.enable( id );\n\t\t\t\tenabledCapabilities[ id ] = true;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction disable( id ) {\n\n\t\t\tif ( enabledCapabilities[ id ] !== false ) {\n\n\t\t\t\tgl.disable( id );\n\t\t\t\tenabledCapabilities[ id ] = false;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction useProgram( program ) {\n\n\t\t\tif ( currentProgram !== program ) {\n\n\t\t\t\tgl.useProgram( program );\n\n\t\t\t\tcurrentProgram = program;\n\n\t\t\t\treturn true;\n\n\t\t\t}\n\n\t\t\treturn false;\n\n\t\t}\n\n\t\tvar equationToGL = {};\n\t\tequationToGL[ AddEquation ] = 32774;\n\t\tequationToGL[ SubtractEquation ] = 32778;\n\t\tequationToGL[ ReverseSubtractEquation ] = 32779;\n\n\t\tif ( isWebGL2 ) {\n\n\t\t\tequationToGL[ MinEquation ] = 32775;\n\t\t\tequationToGL[ MaxEquation ] = 32776;\n\n\t\t} else {\n\n\t\t\tvar extension = extensions.get( 'EXT_blend_minmax' );\n\n\t\t\tif ( extension !== null ) {\n\n\t\t\t\tequationToGL[ MinEquation ] = extension.MIN_EXT;\n\t\t\t\tequationToGL[ MaxEquation ] = extension.MAX_EXT;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar factorToGL = {};\n\t\tfactorToGL[ ZeroFactor ] = 0;\n\t\tfactorToGL[ OneFactor ] = 1;\n\t\tfactorToGL[ SrcColorFactor ] = 768;\n\t\tfactorToGL[ SrcAlphaFactor ] = 770;\n\t\tfactorToGL[ SrcAlphaSaturateFactor ] = 776;\n\t\tfactorToGL[ DstColorFactor ] = 774;\n\t\tfactorToGL[ DstAlphaFactor ] = 772;\n\t\tfactorToGL[ OneMinusSrcColorFactor ] = 769;\n\t\tfactorToGL[ OneMinusSrcAlphaFactor ] = 771;\n\t\tfactorToGL[ OneMinusDstColorFactor ] = 775;\n\t\tfactorToGL[ OneMinusDstAlphaFactor ] = 773;\n\n\t\tfunction setBlending( blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha ) {\n\n\t\t\tif ( blending === NoBlending ) {\n\n\t\t\t\tif ( currentBlendingEnabled ) {\n\n\t\t\t\t\tdisable( 3042 );\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( ! currentBlendingEnabled ) {\n\n\t\t\t\tenable( 3042 );\n\t\t\t\tcurrentBlendingEnabled = true;\n\n\t\t\t}\n\n\t\t\tif ( blending !== CustomBlending ) {\n\n\t\t\t\tif ( blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha ) {\n\n\t\t\t\t\tif ( currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation ) {\n\n\t\t\t\t\t\tgl.blendEquation( 32774 );\n\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( premultipliedAlpha ) {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 1, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 1, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 0, 769, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 0, 768, 0, 770 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tswitch ( blending ) {\n\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate( 770, 771, 1, 771 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 770, 1 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 769 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc( 0, 768 );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.WebGLState: Invalid blending: ', blending );\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\n\t\t\t\t}\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// custom blending\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif ( blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha ) {\n\n\t\t\t\tgl.blendEquationSeparate( equationToGL[ blendEquation ], equationToGL[ blendEquationAlpha ] );\n\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\n\t\t\t}\n\n\t\t\tif ( blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha ) {\n\n\t\t\t\tgl.blendFuncSeparate( factorToGL[ blendSrc ], factorToGL[ blendDst ], factorToGL[ blendSrcAlpha ], factorToGL[ blendDstAlpha ] );\n\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\n\t\t}\n\n\t\tfunction setMaterial( material, frontFaceCW ) {\n\n\t\t\tmaterial.side === DoubleSide\n\t\t\t\t? disable( 2884 )\n\t\t\t\t: enable( 2884 );\n\n\t\t\tvar flipSided = ( material.side === BackSide );\n\t\t\tif ( frontFaceCW ) { flipSided = ! flipSided; }\n\n\t\t\tsetFlipSided( flipSided );\n\n\t\t\t( material.blending === NormalBlending && material.transparent === false )\n\t\t\t\t? setBlending( NoBlending )\n\t\t\t\t: setBlending( material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha );\n\n\t\t\tdepthBuffer.setFunc( material.depthFunc );\n\t\t\tdepthBuffer.setTest( material.depthTest );\n\t\t\tdepthBuffer.setMask( material.depthWrite );\n\t\t\tcolorBuffer.setMask( material.colorWrite );\n\n\t\t\tvar stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest( stencilWrite );\n\t\t\tif ( stencilWrite ) {\n\n\t\t\t\tstencilBuffer.setMask( material.stencilWriteMask );\n\t\t\t\tstencilBuffer.setFunc( material.stencilFunc, material.stencilRef, material.stencilFuncMask );\n\t\t\t\tstencilBuffer.setOp( material.stencilFail, material.stencilZFail, material.stencilZPass );\n\n\t\t\t}\n\n\t\t\tsetPolygonOffset( material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits );\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setFlipSided( flipSided ) {\n\n\t\t\tif ( currentFlipSided !== flipSided ) {\n\n\t\t\t\tif ( flipSided ) {\n\n\t\t\t\t\tgl.frontFace( 2304 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tgl.frontFace( 2305 );\n\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setCullFace( cullFace ) {\n\n\t\t\tif ( cullFace !== CullFaceNone ) {\n\n\t\t\t\tenable( 2884 );\n\n\t\t\t\tif ( cullFace !== currentCullFace ) {\n\n\t\t\t\t\tif ( cullFace === CullFaceBack ) {\n\n\t\t\t\t\t\tgl.cullFace( 1029 );\n\n\t\t\t\t\t} else if ( cullFace === CullFaceFront ) {\n\n\t\t\t\t\t\tgl.cullFace( 1028 );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tgl.cullFace( 1032 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 2884 );\n\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\n\t\t}\n\n\t\tfunction setLineWidth( width ) {\n\n\t\t\tif ( width !== currentLineWidth ) {\n\n\t\t\t\tif ( lineWidthAvailable ) { gl.lineWidth( width ); }\n\n\t\t\t\tcurrentLineWidth = width;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setPolygonOffset( polygonOffset, factor, units ) {\n\n\t\t\tif ( polygonOffset ) {\n\n\t\t\t\tenable( 32823 );\n\n\t\t\t\tif ( currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units ) {\n\n\t\t\t\t\tgl.polygonOffset( factor, units );\n\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 32823 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setScissorTest( scissorTest ) {\n\n\t\t\tif ( scissorTest ) {\n\n\t\t\t\tenable( 3089 );\n\n\t\t\t} else {\n\n\t\t\t\tdisable( 3089 );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// texture\n\n\t\tfunction activeTexture( webglSlot ) {\n\n\t\t\tif ( webglSlot === undefined ) { webglSlot = 33984 + maxTextures - 1; }\n\n\t\t\tif ( currentTextureSlot !== webglSlot ) {\n\n\t\t\t\tgl.activeTexture( webglSlot );\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction bindTexture( webglType, webglTexture ) {\n\n\t\t\tif ( currentTextureSlot === null ) {\n\n\t\t\t\tactiveTexture();\n\n\t\t\t}\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture === undefined ) {\n\n\t\t\t\tboundTexture = { type: undefined, texture: undefined };\n\t\t\t\tcurrentBoundTextures[ currentTextureSlot ] = boundTexture;\n\n\t\t\t}\n\n\t\t\tif ( boundTexture.type !== webglType || boundTexture.texture !== webglTexture ) {\n\n\t\t\t\tgl.bindTexture( webglType, webglTexture || emptyTextures[ webglType ] );\n\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction unbindTexture() {\n\n\t\t\tvar boundTexture = currentBoundTextures[ currentTextureSlot ];\n\n\t\t\tif ( boundTexture !== undefined && boundTexture.type !== undefined ) {\n\n\t\t\t\tgl.bindTexture( boundTexture.type, null );\n\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.compressedTexImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage2D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage2D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction texImage3D() {\n\n\t\t\ttry {\n\n\t\t\t\tgl.texImage3D.apply( gl, arguments );\n\n\t\t\t} catch ( error ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLState:', error );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction scissor( scissor ) {\n\n\t\t\tif ( currentScissor.equals( scissor ) === false ) {\n\n\t\t\t\tgl.scissor( scissor.x, scissor.y, scissor.z, scissor.w );\n\t\t\t\tcurrentScissor.copy( scissor );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction viewport( viewport ) {\n\n\t\t\tif ( currentViewport.equals( viewport ) === false ) {\n\n\t\t\t\tgl.viewport( viewport.x, viewport.y, viewport.z, viewport.w );\n\t\t\t\tcurrentViewport.copy( viewport );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction reset() {\n\n\t\t\tfor ( var i = 0; i < enabledAttributes.length; i ++ ) {\n\n\t\t\t\tif ( enabledAttributes[ i ] === 1 ) {\n\n\t\t\t\t\tgl.disableVertexAttribArray( i );\n\t\t\t\t\tenabledAttributes[ i ] = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tenabledCapabilities = {};\n\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\n\t\t\tcurrentProgram = null;\n\n\t\t\tcurrentBlending = null;\n\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tenableAttributeAndDivisor: enableAttributeAndDivisor,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes,\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\n\t\t\tuseProgram: useProgram,\n\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\n\t\t\tsetScissorTest: setScissorTest,\n\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\n\t\t\treset: reset\n\n\t\t};\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\t\tvar maxTextures = capabilities.maxTextures;\n\t\tvar maxCubemapSize = capabilities.maxCubemapSize;\n\t\tvar maxTextureSize = capabilities.maxTextureSize;\n\t\tvar maxSamples = capabilities.maxSamples;\n\n\t\tvar _videoTextures = new WeakMap();\n\t\tvar _canvas;\n\n\t\t// cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\n\t\tvar useOffscreenCanvas = typeof OffscreenCanvas !== 'undefined'\n\t\t\t&& ( new OffscreenCanvas( 1, 1 ).getContext( \"2d\" ) ) !== null;\n\n\t\tfunction createCanvas( width, height ) {\n\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\n\t\t\treturn useOffscreenCanvas ?\n\t\t\t\tnew OffscreenCanvas( width, height ) :\n\t\t\t\tdocument.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' );\n\n\t\t}\n\n\t\tfunction resizeImage( image, needsPowerOfTwo, needsNewCanvas, maxSize ) {\n\n\t\t\tvar scale = 1;\n\n\t\t\t// handle case if texture exceeds max size\n\n\t\t\tif ( image.width > maxSize || image.height > maxSize ) {\n\n\t\t\t\tscale = maxSize / Math.max( image.width, image.height );\n\n\t\t\t}\n\n\t\t\t// only perform resize if necessary\n\n\t\t\tif ( scale < 1 || needsPowerOfTwo === true ) {\n\n\t\t\t\t// only perform resize for certain image types\n\n\t\t\t\tif ( ( typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement ) ||\n\t\t\t\t\t( typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement ) ||\n\t\t\t\t\t( typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap ) ) {\n\n\t\t\t\t\tvar floor = needsPowerOfTwo ? _Math.floorPowerOfTwo : Math.floor;\n\n\t\t\t\t\tvar width = floor( scale * image.width );\n\t\t\t\t\tvar height = floor( scale * image.height );\n\n\t\t\t\t\tif ( _canvas === undefined ) { _canvas = createCanvas( width, height ); }\n\n\t\t\t\t\t// cube textures can't reuse the same canvas\n\n\t\t\t\t\tvar canvas = needsNewCanvas ? createCanvas( width, height ) : _canvas;\n\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\n\t\t\t\t\tvar context = canvas.getContext( '2d' );\n\t\t\t\t\tcontext.drawImage( image, 0, 0, width, height );\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').' );\n\n\t\t\t\t\treturn canvas;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tif ( 'data' in image ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').' );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn image;\n\n\t\t}\n\n\t\tfunction isPowerOfTwo( image ) {\n\n\t\t\treturn _Math.isPowerOfTwo( image.width ) && _Math.isPowerOfTwo( image.height );\n\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo( texture ) {\n\n\t\t\tif ( isWebGL2 ) { return false; }\n\n\t\t\treturn ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) ||\n\t\t\t\t( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter );\n\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps( texture, supportsMips ) {\n\n\t\t\treturn texture.generateMipmaps && supportsMips &&\n\t\t\t\ttexture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\n\t\t}\n\n\t\tfunction generateMipmap( target, texture, width, height ) {\n\n\t\t\t_gl.generateMipmap( target );\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\t// Note: Math.log( x ) * Math.LOG2E used instead of Math.log2( x ) which is not supported by IE11\n\t\t\ttextureProperties.__maxMipLevel = Math.log( Math.max( width, height ) ) * Math.LOG2E;\n\n\t\t}\n\n\t\tfunction getInternalFormat( glFormat, glType ) {\n\n\t\t\tif ( isWebGL2 === false ) { return glFormat; }\n\n\t\t\tvar internalFormat = glFormat;\n\n\t\t\tif ( glFormat === 6403 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 33326; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 33325; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 33321; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6407 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34837; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34843; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32849; }\n\n\t\t\t}\n\n\t\t\tif ( glFormat === 6408 ) {\n\n\t\t\t\tif ( glType === 5126 ) { internalFormat = 34836; }\n\t\t\t\tif ( glType === 5131 ) { internalFormat = 34842; }\n\t\t\t\tif ( glType === 5121 ) { internalFormat = 32856; }\n\n\t\t\t}\n\n\t\t\tif ( internalFormat === 33325 || internalFormat === 33326 ||\n\t\t\t\tinternalFormat === 34842 || internalFormat === 34836 ) {\n\n\t\t\t\textensions.get( 'EXT_color_buffer_float' );\n\n\t\t\t} else if ( internalFormat === 34843 || internalFormat === 34837 ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Floating point textures with RGB format not supported. Please use RGBA instead.' );\n\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\n\t\t}\n\n\t\t// Fallback filters for non-power-of-2 textures\n\n\t\tfunction filterFallback( f ) {\n\n\t\t\tif ( f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter ) {\n\n\t\t\t\treturn 9728;\n\n\t\t\t}\n\n\t\t\treturn 9729;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction onTextureDispose( event ) {\n\n\t\t\tvar texture = event.target;\n\n\t\t\ttexture.removeEventListener( 'dispose', onTextureDispose );\n\n\t\t\tdeallocateTexture( texture );\n\n\t\t\tif ( texture.isVideoTexture ) {\n\n\t\t\t\t_videoTextures.delete( texture );\n\n\t\t\t}\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\tfunction onRenderTargetDispose( event ) {\n\n\t\t\tvar renderTarget = event.target;\n\n\t\t\trenderTarget.removeEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\tdeallocateRenderTarget( renderTarget );\n\n\t\t\tinfo.memory.textures --;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction deallocateTexture( texture ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) { return; }\n\n\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\tproperties.remove( texture );\n\n\t\t}\n\n\t\tfunction deallocateRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\tif ( ! renderTarget ) { return; }\n\n\t\t\tif ( textureProperties.__webglTexture !== undefined ) {\n\n\t\t\t\t_gl.deleteTexture( textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\trenderTarget.depthTexture.dispose();\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer[ i ] ); }\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglFramebuffer );\n\t\t\t\tif ( renderTargetProperties.__webglDepthbuffer ) { _gl.deleteRenderbuffer( renderTargetProperties.__webglDepthbuffer ); }\n\n\t\t\t}\n\n\t\t\tif ( renderTarget.isWebGLMultiviewRenderTarget ) {\n\n\t\t\t\t_gl.deleteTexture( renderTargetProperties.__webglColorTexture );\n\t\t\t\t_gl.deleteTexture( renderTargetProperties.__webglDepthStencilTexture );\n\n\t\t\t\tinfo.memory.textures -= 2;\n\n\t\t\t\tfor ( var i = 0, il = renderTargetProperties.__webglViewFramebuffers.length; i < il; i ++ ) {\n\n\t\t\t\t\t_gl.deleteFramebuffer( renderTargetProperties.__webglViewFramebuffers[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tproperties.remove( renderTarget.texture );\n\t\t\tproperties.remove( renderTarget );\n\n\t\t}\n\n\t\t//\n\n\t\tvar textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\n\t\t\ttextureUnits = 0;\n\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\n\t\t\tvar textureUnit = textureUnits;\n\n\t\t\tif ( textureUnit >= maxTextures ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures );\n\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\n\t\t\treturn textureUnit;\n\n\t\t}\n\n\t\t//\n\n\t\tfunction setTexture2D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.isVideoTexture ) { updateVideoTexture( texture ); }\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tvar image = texture.image;\n\n\t\t\t\tif ( image === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is undefined' );\n\n\t\t\t\t} else if ( image.complete === false ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture marked for update but image is incomplete' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture2DArray( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 35866, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTexture3D( texture, slot ) {\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tuploadTexture( textureProperties, texture, slot );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 32879, textureProperties.__webglTexture );\n\n\t\t}\n\n\t\tfunction setTextureCube( texture, slot ) {\n\n\t\t\tif ( texture.image.length !== 6 ) { return; }\n\n\t\t\tvar textureProperties = properties.get( texture );\n\n\t\t\tif ( texture.version > 0 && textureProperties.__version !== texture.version ) {\n\n\t\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\n\t\t\t\tvar isCompressed = ( texture && texture.isCompressedTexture );\n\t\t\t\tvar isDataTexture = ( texture.image[ 0 ] && texture.image[ 0 ].isDataTexture );\n\n\t\t\t\tvar cubeImage = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tif ( ! isCompressed && ! isDataTexture ) {\n\n\t\t\t\t\t\tcubeImage[ i ] = resizeImage( texture.image[ i ], false, true, maxCubemapSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tcubeImage[ i ] = isDataTexture ? texture.image[ i ].image : texture.image[ i ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tvar image = cubeImage[ 0 ],\n\t\t\t\t\tsupportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tsetTextureParameters( 34067, texture, supportsMips );\n\n\t\t\t\tvar mipmaps;\n\n\t\t\t\tif ( isCompressed ) {\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tmipmaps = cubeImage[ i ].mipmaps;\n\n\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\t\t\tstate.compressedTexImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()' );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\tif ( isDataTexture ) {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, cubeImage[ i ].width, cubeImage[ i ].height, 0, glFormat, glType, cubeImage[ i ].data );\n\n\t\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\t\t\t\t\t\t\t\tvar mipmapImage = mipmap.image[ i ].image;\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, 0, glInternalFormat, glFormat, glType, cubeImage[ i ] );\n\n\t\t\t\t\t\t\tfor ( var j = 0; j < mipmaps.length; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar mipmap = mipmaps[ j ];\n\n\t\t\t\t\t\t\t\tstate.texImage2D( 34069 + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[ i ] );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\t\tgenerateMipmap( 34067, texture, image.width, image.height );\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t\t} else {\n\n\t\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction setTextureCubeDynamic( texture, slot ) {\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( 34067, properties.get( texture ).__webglTexture );\n\n\t\t}\n\n\t\tvar wrappingToGL = {};\n\t\twrappingToGL[ RepeatWrapping ] = 10497;\n\t\twrappingToGL[ ClampToEdgeWrapping ] = 33071;\n\t\twrappingToGL[ MirroredRepeatWrapping ] = 33648;\n\n\t\tvar filterToGL = {};\n\t\tfilterToGL[ NearestFilter ] = 9728;\n\t\tfilterToGL[ NearestMipmapNearestFilter ] = 9984;\n\t\tfilterToGL[ NearestMipmapLinearFilter ] = 9986;\n\t\tfilterToGL[ LinearFilter ] = 9729;\n\t\tfilterToGL[ LinearMipmapNearestFilter ] = 9985;\n\t\tfilterToGL[ LinearMipmapLinearFilter ] = 9987;\n\n\t\tfunction setTextureParameters( textureType, texture, supportsMips ) {\n\n\t\t\tif ( supportsMips ) {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, wrappingToGL[ texture.wrapS ] );\n\t\t\t\t_gl.texParameteri( textureType, 10243, wrappingToGL[ texture.wrapT ] );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, wrappingToGL[ texture.wrapR ] );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterToGL[ texture.magFilter ] );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterToGL[ texture.minFilter ] );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texParameteri( textureType, 10242, 33071 );\n\t\t\t\t_gl.texParameteri( textureType, 10243, 33071 );\n\n\t\t\t\tif ( textureType === 32879 || textureType === 35866 ) {\n\n\t\t\t\t\t_gl.texParameteri( textureType, 32882, 33071 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.' );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri( textureType, 10240, filterFallback( texture.magFilter ) );\n\t\t\t\t_gl.texParameteri( textureType, 10241, filterFallback( texture.minFilter ) );\n\n\t\t\t\tif ( texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar extension = extensions.get( 'EXT_texture_filter_anisotropic' );\n\n\t\t\tif ( extension ) {\n\n\t\t\t\tif ( texture.type === FloatType && extensions.get( 'OES_texture_float_linear' ) === null ) { return; }\n\t\t\t\tif ( texture.type === HalfFloatType && ( isWebGL2 || extensions.get( 'OES_texture_half_float_linear' ) ) === null ) { return; }\n\n\t\t\t\tif ( texture.anisotropy > 1 || properties.get( texture ).__currentAnisotropy ) {\n\n\t\t\t\t\t_gl.texParameterf( textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min( texture.anisotropy, capabilities.getMaxAnisotropy() ) );\n\t\t\t\t\tproperties.get( texture ).__currentAnisotropy = texture.anisotropy;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction initTexture( textureProperties, texture ) {\n\n\t\t\tif ( textureProperties.__webglInit === undefined ) {\n\n\t\t\t\ttextureProperties.__webglInit = true;\n\n\t\t\t\ttexture.addEventListener( 'dispose', onTextureDispose );\n\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\t\tinfo.memory.textures ++;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction uploadTexture( textureProperties, texture, slot ) {\n\n\t\t\tvar textureType = 3553;\n\n\t\t\tif ( texture.isDataTexture2DArray ) { textureType = 35866; }\n\t\t\tif ( texture.isDataTexture3D ) { textureType = 32879; }\n\n\t\t\tinitTexture( textureProperties, texture );\n\n\t\t\tstate.activeTexture( 33984 + slot );\n\t\t\tstate.bindTexture( textureType, textureProperties.__webglTexture );\n\n\t\t\t_gl.pixelStorei( 37440, texture.flipY );\n\t\t\t_gl.pixelStorei( 37441, texture.premultiplyAlpha );\n\t\t\t_gl.pixelStorei( 3317, texture.unpackAlignment );\n\n\t\t\tvar needsPowerOfTwo = textureNeedsPowerOfTwo( texture ) && isPowerOfTwo( texture.image ) === false;\n\t\t\tvar image = resizeImage( texture.image, needsPowerOfTwo, false, maxTextureSize );\n\n\t\t\tvar supportsMips = isPowerOfTwo( image ) || isWebGL2,\n\t\t\t\tglFormat = utils.convert( texture.format ),\n\t\t\t\tglType = utils.convert( texture.type ),\n\t\t\t\tglInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\tsetTextureParameters( textureType, texture, supportsMips );\n\n\t\t\tvar mipmap, mipmaps = texture.mipmaps;\n\n\t\t\tif ( texture.isDepthTexture ) {\n\n\t\t\t\t// populate depth texture with dummy data\n\n\t\t\t\tglInternalFormat = 6402;\n\n\t\t\t\tif ( texture.type === FloatType ) {\n\n\t\t\t\t\tif ( isWebGL2 === false ) { throw new Error( 'Float Depth Texture only supported in WebGL2.0' ); }\n\t\t\t\t\tglInternalFormat = 36012;\n\n\t\t\t\t} else if ( isWebGL2 ) {\n\n\t\t\t\t\t// WebGL 2.0 requires signed internalformat for glTexImage2D\n\t\t\t\t\tglInternalFormat = 33189;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texture.format === DepthFormat && glInternalFormat === 6402 ) {\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedShortType && texture.type !== UnsignedIntType ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\tif ( texture.format === DepthStencilFormat ) {\n\n\t\t\t\t\tglInternalFormat = 34041;\n\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif ( texture.type !== UnsignedInt248Type ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.' );\n\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert( texture.type );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null );\n\n\t\t\t} else if ( texture.isDataTexture ) {\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t} else if ( texture.isCompressedTexture ) {\n\n\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\tmipmap = mipmaps[ i ];\n\n\t\t\t\t\tif ( texture.format !== RGBAFormat && texture.format !== RGBFormat ) {\n\n\t\t\t\t\t\tif ( glFormat !== null ) {\n\n\t\t\t\t\t\t\tstate.compressedTexImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()' );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t} else if ( texture.isDataTexture2DArray ) {\n\n\t\t\t\tstate.texImage3D( 35866, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else if ( texture.isDataTexture3D ) {\n\n\t\t\t\tstate.texImage3D( 32879, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data );\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t} else {\n\n\t\t\t\t// regular Texture (image, video, canvas)\n\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\n\t\t\t\tif ( mipmaps.length > 0 && supportsMips ) {\n\n\t\t\t\t\tfor ( var i = 0, il = mipmaps.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tmipmap = mipmaps[ i ];\n\t\t\t\t\t\tstate.texImage2D( 3553, i, glInternalFormat, glFormat, glType, mipmap );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstate.texImage2D( 3553, 0, glInternalFormat, glFormat, glType, image );\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tgenerateMipmap( 3553, texture, image.width, image.height );\n\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\n\t\t\tif ( texture.onUpdate ) { texture.onUpdate( texture ); }\n\n\t\t}\n\n\t\t// Render targets\n\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\t\tfunction setupFrameBufferTexture( framebuffer, renderTarget, attachment, textureTarget ) {\n\n\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\tstate.texImage2D( textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null );\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t_gl.framebufferTexture2D( 36160, attachment, textureTarget, properties.get( renderTarget.texture ).__webglTexture, 0 );\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\t\tfunction setupRenderBufferStorage( renderbuffer, renderTarget, isMultisample ) {\n\n\t\t\t_gl.bindRenderbuffer( 36161, renderbuffer );\n\n\t\t\tif ( renderTarget.depthBuffer && ! renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 33189, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36096, 36161, renderbuffer );\n\n\t\t\t} else if ( renderTarget.depthBuffer && renderTarget.stencilBuffer ) {\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, 35056, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, 34041, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\n\t\t\t\t_gl.framebufferRenderbuffer( 36160, 33306, 36161, renderbuffer );\n\n\t\t\t} else {\n\n\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.renderbufferStorage( 36161, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t}\n\n\t\t// Setup resources for a Depth Texture for a FBO (needs an extension)\n\t\tfunction setupDepthTexture( framebuffer, renderTarget ) {\n\n\t\t\tvar isCube = ( renderTarget && renderTarget.isWebGLRenderTargetCube );\n\t\t\tif ( isCube ) { throw new Error( 'Depth Texture with cube render targets is not supported' ); }\n\n\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\tif ( ! ( renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture ) ) {\n\n\t\t\t\tthrow new Error( 'renderTarget.depthTexture must be an instance of THREE.DepthTexture' );\n\n\t\t\t}\n\n\t\t\t// upload an empty depth texture with framebuffer size\n\t\t\tif ( ! properties.get( renderTarget.depthTexture ).__webglTexture ||\n\t\t\t\t\trenderTarget.depthTexture.image.width !== renderTarget.width ||\n\t\t\t\t\trenderTarget.depthTexture.image.height !== renderTarget.height ) {\n\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( renderTarget.depthTexture, 0 );\n\n\t\t\tvar webglDepthTexture = properties.get( renderTarget.depthTexture ).__webglTexture;\n\n\t\t\tif ( renderTarget.depthTexture.format === DepthFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36096, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else if ( renderTarget.depthTexture.format === DepthStencilFormat ) {\n\n\t\t\t\t_gl.framebufferTexture2D( 36160, 33306, 3553, webglDepthTexture, 0 );\n\n\t\t\t} else {\n\n\t\t\t\tthrow new Error( 'Unknown depthTexture format' );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Setup GL resources for a non-texture depth buffer\n\t\tfunction setupDepthRenderbuffer( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\n\t\t\tif ( renderTarget.depthTexture ) {\n\n\t\t\t\tif ( isCube ) { throw new Error( 'target.depthTexture not supported in Cube render targets' ); }\n\n\t\t\t\tsetupDepthTexture( renderTargetProperties.__webglFramebuffer, renderTarget );\n\n\t\t\t} else {\n\n\t\t\t\tif ( isCube ) {\n\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer[ i ] );\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[ i ] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer[ i ], renderTarget );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthbuffer, renderTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\t\t}\n\n\t\t// Set up GL resources for the render target\n\t\tfunction setupRenderTarget( renderTarget ) {\n\n\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\n\t\t\trenderTarget.addEventListener( 'dispose', onRenderTargetDispose );\n\n\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\n\t\t\tinfo.memory.textures ++;\n\n\t\t\tvar isCube = ( renderTarget.isWebGLRenderTargetCube === true );\n\t\t\tvar isMultisample = ( renderTarget.isWebGLMultisampleRenderTarget === true );\n\t\t\tvar isMultiview = ( renderTarget.isWebGLMultiviewRenderTarget === true );\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\t// Setup framebuffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[ i ] = _gl.createFramebuffer();\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif ( isMultisample ) {\n\n\t\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\tvar glFormat = utils.convert( renderTarget.texture.format );\n\t\t\t\t\t\tvar glType = utils.convert( renderTarget.texture.type );\n\t\t\t\t\t\tvar glInternalFormat = getInternalFormat( glFormat, glType );\n\t\t\t\t\t\tvar samples = getRenderTargetSamples( renderTarget );\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample( 36161, samples, glInternalFormat, renderTarget.width, renderTarget.height );\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t\t_gl.framebufferRenderbuffer( 36160, 36064, 36161, renderTargetProperties.__webglColorRenderbuffer );\n\t\t\t\t\t\t_gl.bindRenderbuffer( 36161, null );\n\n\t\t\t\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage( renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( isMultiview ) {\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar numViews = renderTarget.numViews;\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar ext = extensions.get( 'OVR_multiview2' );\n\n\t\t\t\t\tinfo.memory.textures += 2;\n\n\t\t\t\t\tvar colorTexture = _gl.createTexture();\n\t\t\t\t\t_gl.bindTexture( 35866, colorTexture );\n\t\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t\t_gl.texImage3D( 35866, 0, 32856, width, height, numViews, 0, 6408, 5121, null );\n\t\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 36064, colorTexture, 0, 0, numViews );\n\n\t\t\t\t\tvar depthStencilTexture = _gl.createTexture();\n\t\t\t\t\t_gl.bindTexture( 35866, depthStencilTexture );\n\t\t\t\t\t_gl.texParameteri( 35866, 10240, 9728 );\n\t\t\t\t\t_gl.texParameteri( 35866, 10241, 9728 );\n\t\t\t\t\t_gl.texImage3D( 35866, 0, 35056, width, height, numViews, 0, 34041, 34042, null );\n\t\t\t\t\text.framebufferTextureMultiviewOVR( 36160, 33306, depthStencilTexture, 0, 0, numViews );\n\n\t\t\t\t\tvar viewFramebuffers = new Array( numViews );\n\t\t\t\t\tfor ( var i = 0; i < numViews; ++ i ) {\n\n\t\t\t\t\t\tviewFramebuffers[ i ] = _gl.createFramebuffer();\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, viewFramebuffers[ i ] );\n\t\t\t\t\t\t_gl.framebufferTextureLayer( 36160, 36064, colorTexture, 0, i );\n\n\t\t\t\t\t}\n\n\t\t\t\t\trenderTargetProperties.__webglColorTexture = colorTexture;\n\t\t\t\t\trenderTargetProperties.__webglDepthStencilTexture = depthStencilTexture;\n\t\t\t\t\trenderTargetProperties.__webglViewFramebuffers = viewFramebuffers;\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, null );\n\t\t\t\t\t_gl.bindTexture( 35866, null );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Setup color buffer\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tstate.bindTexture( 34067, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 34067, renderTarget.texture, supportsMips );\n\n\t\t\t\tfor ( var i = 0; i < 6; i ++ ) {\n\n\t\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer[ i ], renderTarget, 36064, 34069 + i );\n\n\t\t\t\t}\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 34067, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 34067, null );\n\n\t\t\t} else if ( ! isMultiview ) {\n\n\t\t\t\tstate.bindTexture( 3553, textureProperties.__webglTexture );\n\t\t\t\tsetTextureParameters( 3553, renderTarget.texture, supportsMips );\n\t\t\t\tsetupFrameBufferTexture( renderTargetProperties.__webglFramebuffer, renderTarget, 36064, 3553 );\n\n\t\t\t\tif ( textureNeedsGenerateMipmaps( renderTarget.texture, supportsMips ) ) {\n\n\t\t\t\t\tgenerateMipmap( 3553, renderTarget.texture, renderTarget.width, renderTarget.height );\n\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture( 3553, null );\n\n\t\t\t}\n\n\t\t\t// Setup depth and stencil buffers\n\n\t\t\tif ( renderTarget.depthBuffer ) {\n\n\t\t\t\tsetupDepthRenderbuffer( renderTarget );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap( renderTarget ) {\n\n\t\t\tvar texture = renderTarget.texture;\n\t\t\tvar supportsMips = isPowerOfTwo( renderTarget ) || isWebGL2;\n\n\t\t\tif ( textureNeedsGenerateMipmaps( texture, supportsMips ) ) {\n\n\t\t\t\tvar target = renderTarget.isWebGLRenderTargetCube ? 34067 : 3553;\n\t\t\t\tvar webglTexture = properties.get( texture ).__webglTexture;\n\n\t\t\t\tstate.bindTexture( target, webglTexture );\n\t\t\t\tgenerateMipmap( target, texture, renderTarget.width, renderTarget.height );\n\t\t\t\tstate.bindTexture( target, null );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget( renderTarget ) {\n\n\t\t\tif ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\tif ( isWebGL2 ) {\n\n\t\t\t\t\tvar renderTargetProperties = properties.get( renderTarget );\n\n\t\t\t\t\t_gl.bindFramebuffer( 36008, renderTargetProperties.__webglMultisampledFramebuffer );\n\t\t\t\t\t_gl.bindFramebuffer( 36009, renderTargetProperties.__webglFramebuffer );\n\n\t\t\t\t\tvar width = renderTarget.width;\n\t\t\t\t\tvar height = renderTarget.height;\n\t\t\t\t\tvar mask = 16384;\n\n\t\t\t\t\tif ( renderTarget.depthBuffer ) { mask |= 256; }\n\t\t\t\t\tif ( renderTarget.stencilBuffer ) { mask |= 1024; }\n\n\t\t\t\t\t_gl.blitFramebuffer( 0, 0, width, height, 0, 0, width, height, mask, 9728 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction getRenderTargetSamples( renderTarget ) {\n\n\t\t\treturn ( isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ) ?\n\t\t\t\tMath.min( maxSamples, renderTarget.samples ) : 0;\n\n\t\t}\n\n\t\tfunction updateVideoTexture( texture ) {\n\n\t\t\tvar frame = info.render.frame;\n\n\t\t\t// Check the last frame we updated the VideoTexture\n\n\t\t\tif ( _videoTextures.get( texture ) !== frame ) {\n\n\t\t\t\t_videoTextures.set( texture, frame );\n\t\t\t\ttexture.update();\n\n\t\t\t}\n\n\t\t}\n\n\t\t// backwards compatibility\n\n\t\tvar warnedTexture2D = false;\n\t\tvar warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTarget ) {\n\n\t\t\t\tif ( warnedTexture2D === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTexture2D: don't use render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTexture2D = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\tsetTexture2D( texture, slot );\n\n\t\t}\n\n\t\tfunction safeSetTextureCube( texture, slot ) {\n\n\t\t\tif ( texture && texture.isWebGLRenderTargetCube ) {\n\n\t\t\t\tif ( warnedTextureCube === false ) {\n\n\t\t\t\t\tconsole.warn( \"THREE.WebGLTextures.safeSetTextureCube: don't use cube render targets as textures. Use their .texture property instead.\" );\n\t\t\t\t\twarnedTextureCube = true;\n\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\n\t\t\t}\n\n\t\t\t// currently relying on the fact that WebGLRenderTargetCube.texture is a Texture and NOT a CubeTexture\n\t\t\t// TODO: unify these code paths\n\t\t\tif ( ( texture && texture.isCubeTexture ) ||\n\t\t\t\t( Array.isArray( texture.image ) && texture.image.length === 6 ) ) {\n\n\t\t\t\t// CompressedTexture can have Array in image :/\n\n\t\t\t\t// this function alone should take care of cube textures\n\t\t\t\tsetTextureCube( texture, slot );\n\n\t\t\t} else {\n\n\t\t\t\t// assumed: texture property of THREE.WebGLRenderTargetCube\n\t\t\t\tsetTextureCubeDynamic( texture, slot );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setTextureCubeDynamic = setTextureCubeDynamic;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\n\t}\n\n\t/**\n\t * @author thespite / http://www.twitter.com/thespite\n\t */\n\n\tfunction WebGLUtils( gl, extensions, capabilities ) {\n\n\t\tvar isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert( p ) {\n\n\t\t\tvar extension;\n\n\t\t\tif ( p === UnsignedByteType ) { return 5121; }\n\t\t\tif ( p === UnsignedShort4444Type ) { return 32819; }\n\t\t\tif ( p === UnsignedShort5551Type ) { return 32820; }\n\t\t\tif ( p === UnsignedShort565Type ) { return 33635; }\n\n\t\t\tif ( p === ByteType ) { return 5120; }\n\t\t\tif ( p === ShortType ) { return 5122; }\n\t\t\tif ( p === UnsignedShortType ) { return 5123; }\n\t\t\tif ( p === IntType ) { return 5124; }\n\t\t\tif ( p === UnsignedIntType ) { return 5125; }\n\t\t\tif ( p === FloatType ) { return 5126; }\n\n\t\t\tif ( p === HalfFloatType ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 5131; }\n\n\t\t\t\textension = extensions.get( 'OES_texture_half_float' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === AlphaFormat ) { return 6406; }\n\t\t\tif ( p === RGBFormat ) { return 6407; }\n\t\t\tif ( p === RGBAFormat ) { return 6408; }\n\t\t\tif ( p === LuminanceFormat ) { return 6409; }\n\t\t\tif ( p === LuminanceAlphaFormat ) { return 6410; }\n\t\t\tif ( p === DepthFormat ) { return 6402; }\n\t\t\tif ( p === DepthStencilFormat ) { return 34041; }\n\t\t\tif ( p === RedFormat ) { return 6403; }\n\n\t\t\tif ( p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format ||\n\t\t\t\tp === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGB_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT1_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT3_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT; }\n\t\t\t\t\tif ( p === RGBA_S3TC_DXT5_Format ) { return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format ||\n\t\t\t\tp === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\tif ( p === RGB_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGB_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_4BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG; }\n\t\t\t\t\tif ( p === RGBA_PVRTC_2BPPV1_Format ) { return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG; }\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGB_ETC1_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_etc1' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format ||\n\t\t\t\tp === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format ||\n\t\t\t\tp === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format ||\n\t\t\t\tp === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format ||\n\t\t\t\tp === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format ) {\n\n\t\t\t\textension = extensions.get( 'WEBGL_compressed_texture_astc' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\t// TODO Complete?\n\n\t\t\t\t\treturn p;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( p === UnsignedInt248Type ) {\n\n\t\t\t\tif ( isWebGL2 ) { return 34042; }\n\n\t\t\t\textension = extensions.get( 'WEBGL_depth_texture' );\n\n\t\t\t\tif ( extension !== null ) {\n\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { convert: convert };\n\n\t}\n\n\t/**\n\t * @author fernandojsg / http://fernandojsg.com\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction WebGLMultiviewRenderTarget( width, height, numViews, options ) {\n\n\t\tWebGLRenderTarget.call( this, width, height, options );\n\n\t\tthis.depthBuffer = false;\n\t\tthis.stencilBuffer = false;\n\n\t\tthis.numViews = numViews;\n\n\t}\n\n\tWebGLMultiviewRenderTarget.prototype = Object.assign( Object.create( WebGLRenderTarget.prototype ), {\n\n\t\tconstructor: WebGLMultiviewRenderTarget,\n\n\t\tisWebGLMultiviewRenderTarget: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tWebGLRenderTarget.prototype.copy.call( this, source );\n\n\t\t\tthis.numViews = source.numViews;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetNumViews: function ( numViews ) {\n\n\t\t\tif ( this.numViews !== numViews ) {\n\n\t\t\t\tthis.numViews = numViews;\n\t\t\t\tthis.dispose();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author fernandojsg / http://fernandojsg.com\n\t * @author Takahiro https://github.com/takahirox\n\t */\n\n\tfunction WebGLMultiview( renderer, gl ) {\n\n\t\tvar DEFAULT_NUMVIEWS = 2;\n\n\t\tvar extensions = renderer.extensions;\n\t\tvar properties = renderer.properties;\n\n\t\tvar renderTarget, currentRenderTarget;\n\t\tvar mat3, mat4, cameraArray, renderSize;\n\n\t\tvar available;\n\t\tvar maxNumViews = 0;\n\n\t\t//\n\n\t\tfunction isAvailable() {\n\n\t\t\tif ( available === undefined ) {\n\n\t\t\t\tvar extension = extensions.get( 'OVR_multiview2' );\n\n\t\t\t\tavailable = extension !== null && gl.getContextAttributes().antialias === false;\n\n\t\t\t\tif ( available ) {\n\n\t\t\t\t\tmaxNumViews = gl.getParameter( extension.MAX_VIEWS_OVR );\n\t\t\t\t\trenderTarget = new WebGLMultiviewRenderTarget( 0, 0, DEFAULT_NUMVIEWS );\n\n\t\t\t\t\trenderSize = new Vector2();\n\t\t\t\t\tmat4 = [];\n\t\t\t\t\tmat3 = [];\n\t\t\t\t\tcameraArray = [];\n\n\t\t\t\t\tfor ( var i = 0; i < maxNumViews; i ++ ) {\n\n\t\t\t\t\t\tmat4[ i ] = new Matrix4();\n\t\t\t\t\t\tmat3[ i ] = new Matrix3();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn available;\n\n\t\t}\n\n\t\tfunction getCameraArray( camera ) {\n\n\t\t\tif ( camera.isArrayCamera ) { return camera.cameras; }\n\n\t\t\tcameraArray[ 0 ] = camera;\n\n\t\t\treturn cameraArray;\n\n\t\t}\n\n\t\tfunction updateCameraProjectionMatricesUniform( camera, uniforms ) {\n\n\t\t\tvar cameras = getCameraArray( camera );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tmat4[ i ].copy( cameras[ i ].projectionMatrix );\n\n\t\t\t}\n\n\t\t\tuniforms.setValue( gl, 'projectionMatrices', mat4 );\n\n\t\t}\n\n\t\tfunction updateCameraViewMatricesUniform( camera, uniforms ) {\n\n\t\t\tvar cameras = getCameraArray( camera );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tmat4[ i ].copy( cameras[ i ].matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\tuniforms.setValue( gl, 'viewMatrices', mat4 );\n\n\t\t}\n\n\t\tfunction updateObjectMatricesUniforms( object, camera, uniforms ) {\n\n\t\t\tvar cameras = getCameraArray( camera );\n\n\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\tmat4[ i ].multiplyMatrices( cameras[ i ].matrixWorldInverse, object.matrixWorld );\n\t\t\t\tmat3[ i ].getNormalMatrix( mat4[ i ] );\n\n\t\t\t}\n\n\t\t\tuniforms.setValue( gl, 'modelViewMatrices', mat4 );\n\t\t\tuniforms.setValue( gl, 'normalMatrices', mat3 );\n\n\t\t}\n\n\t\tfunction isMultiviewCompatible( camera ) {\n\n\t\t\tif ( camera.isArrayCamera === undefined ) { return true; }\n\n\t\t\tvar cameras = camera.cameras;\n\n\t\t\tif ( cameras.length > maxNumViews ) { return false; }\n\n\t\t\tfor ( var i = 1, il = cameras.length; i < il; i ++ ) {\n\n\t\t\t\tif ( cameras[ 0 ].viewport.z !== cameras[ i ].viewport.z ||\n\t\t\t\t\tcameras[ 0 ].viewport.w !== cameras[ i ].viewport.w ) { return false; }\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t}\n\n\t\tfunction resizeRenderTarget( camera ) {\n\n\t\t\tif ( currentRenderTarget ) {\n\n\t\t\t\trenderSize.set( currentRenderTarget.width, currentRenderTarget.height );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.getDrawingBufferSize( renderSize );\n\n\t\t\t}\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tvar viewport = camera.cameras[ 0 ].viewport;\n\n\t\t\t\trenderTarget.setSize( viewport.z, viewport.w );\n\t\t\t\trenderTarget.setNumViews( camera.cameras.length );\n\n\t\t\t} else {\n\n\t\t\t\trenderTarget.setSize( renderSize.x, renderSize.y );\n\t\t\t\trenderTarget.setNumViews( DEFAULT_NUMVIEWS );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction attachCamera( camera ) {\n\n\t\t\tif ( isMultiviewCompatible( camera ) === false ) { return; }\n\n\t\t\tcurrentRenderTarget = renderer.getRenderTarget();\n\t\t\tresizeRenderTarget( camera );\n\t\t\trenderer.setRenderTarget( renderTarget );\n\n\t\t}\n\n\t\tfunction detachCamera( camera ) {\n\n\t\t\tif ( renderTarget !== renderer.getRenderTarget() ) { return; }\n\n\t\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t\t\tflush( camera );\n\n\t\t}\n\n\t\tfunction flush( camera ) {\n\n\t\t\tvar srcRenderTarget = renderTarget;\n\t\t\tvar numViews = srcRenderTarget.numViews;\n\n\t\t\tvar srcFramebuffers = properties.get( srcRenderTarget ).__webglViewFramebuffers;\n\n\t\t\tvar viewWidth = srcRenderTarget.width;\n\t\t\tvar viewHeight = srcRenderTarget.height;\n\n\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\tfor ( var i = 0; i < numViews; i ++ ) {\n\n\t\t\t\t\tvar viewport = camera.cameras[ i ].viewport;\n\n\t\t\t\t\tvar x1 = viewport.x;\n\t\t\t\t\tvar y1 = viewport.y;\n\t\t\t\t\tvar x2 = x1 + viewport.z;\n\t\t\t\t\tvar y2 = y1 + viewport.w;\n\n\t\t\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ i ] );\n\t\t\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, x1, y1, x2, y2, 16384, 9728 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tgl.bindFramebuffer( 36008, srcFramebuffers[ 0 ] );\n\t\t\t\tgl.blitFramebuffer( 0, 0, viewWidth, viewHeight, 0, 0, renderSize.x, renderSize.y, 16384, 9728 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tthis.isAvailable = isAvailable;\n\t\tthis.attachCamera = attachCamera;\n\t\tthis.detachCamera = detachCamera;\n\t\tthis.updateCameraProjectionMatricesUniform = updateCameraProjectionMatricesUniform;\n\t\tthis.updateCameraViewMatricesUniform = updateCameraViewMatricesUniform;\n\t\tthis.updateObjectMatricesUniforms = updateObjectMatricesUniforms;\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Group() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Group';\n\n\t}\n\n\tGroup.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Group,\n\n\t\tisGroup: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ArrayCamera( array ) {\n\n\t\tPerspectiveCamera.call( this );\n\n\t\tthis.cameras = array || [];\n\n\t}\n\n\tArrayCamera.prototype = Object.assign( Object.create( PerspectiveCamera.prototype ), {\n\n\t\tconstructor: ArrayCamera,\n\n\t\tisArrayCamera: true\n\n\t} );\n\n\t/**\n\t * @author jsantell / https://www.jsantell.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar cameraLPos = new Vector3();\n\tvar cameraRPos = new Vector3();\n\n\t/**\n\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t * the cameras' projection and world matrices have already been set.\n\t * And that near and far planes are identical for both cameras.\n\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t */\n\tfunction setProjectionFromUnion( camera, cameraL, cameraR ) {\n\n\t\tcameraLPos.setFromMatrixPosition( cameraL.matrixWorld );\n\t\tcameraRPos.setFromMatrixPosition( cameraR.matrixWorld );\n\n\t\tvar ipd = cameraLPos.distanceTo( cameraRPos );\n\n\t\tvar projL = cameraL.projectionMatrix.elements;\n\t\tvar projR = cameraR.projectionMatrix.elements;\n\n\t\t// VR systems will have identical far and near planes, and\n\t\t// most likely identical top and bottom frustum extents.\n\t\t// Use the left camera for these values.\n\t\tvar near = projL[ 14 ] / ( projL[ 10 ] - 1 );\n\t\tvar far = projL[ 14 ] / ( projL[ 10 ] + 1 );\n\t\tvar topFov = ( projL[ 9 ] + 1 ) / projL[ 5 ];\n\t\tvar bottomFov = ( projL[ 9 ] - 1 ) / projL[ 5 ];\n\n\t\tvar leftFov = ( projL[ 8 ] - 1 ) / projL[ 0 ];\n\t\tvar rightFov = ( projR[ 8 ] + 1 ) / projR[ 0 ];\n\t\tvar left = near * leftFov;\n\t\tvar right = near * rightFov;\n\n\t\t// Calculate the new camera's position offset from the\n\t\t// left camera. xOffset should be roughly half `ipd`.\n\t\tvar zOffset = ipd / ( - leftFov + rightFov );\n\t\tvar xOffset = zOffset * - leftFov;\n\n\t\t// TODO: Better way to apply this offset?\n\t\tcameraL.matrixWorld.decompose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.translateX( xOffset );\n\t\tcamera.translateZ( zOffset );\n\t\tcamera.matrixWorld.compose( camera.position, camera.quaternion, camera.scale );\n\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t// Find the union of the frustum values of the cameras and scale\n\t\t// the values so that the near plane's position does not change in world space,\n\t\t// although must now be relative to the new union camera.\n\t\tvar near2 = near + zOffset;\n\t\tvar far2 = far + zOffset;\n\t\tvar left2 = left - xOffset;\n\t\tvar right2 = right + ( ipd - xOffset );\n\t\tvar top2 = topFov * far / far2 * near2;\n\t\tvar bottom2 = bottomFov * far / far2 * near2;\n\n\t\tcamera.projectionMatrix.makePerspective( left2, right2, top2, bottom2, near2, far2 );\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebVRManager( renderer ) {\n\n\t\tvar renderWidth, renderHeight;\n\t\tvar scope = this;\n\n\t\tvar device = null;\n\t\tvar frameData = null;\n\n\t\tvar poseTarget = null;\n\n\t\tvar controllers = [];\n\t\tvar standingMatrix = new Matrix4();\n\t\tvar standingMatrixInverse = new Matrix4();\n\n\t\tvar framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tif ( typeof window !== 'undefined' && 'VRFrameData' in window ) {\n\n\t\t\tframeData = new window.VRFrameData();\n\t\t\twindow.addEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange, false );\n\n\t\t}\n\n\t\tvar matrixWorldInverse = new Matrix4();\n\t\tvar tempQuaternion = new Quaternion();\n\t\tvar tempPosition = new Vector3();\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.viewport = new Vector4();\n\t\tcameraL.layers.enable( 1 );\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.viewport = new Vector4();\n\t\tcameraR.layers.enable( 2 );\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn device !== null && device.isPresenting === true;\n\n\t\t}\n\n\t\tvar currentSize = new Vector2(), currentPixelRatio;\n\n\t\tfunction onVRDisplayPresentChange() {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar eyeParameters = device.getEyeParameters( 'left' );\n\t\t\t\trenderWidth = 2 * eyeParameters.renderWidth * framebufferScaleFactor;\n\t\t\t\trenderHeight = eyeParameters.renderHeight * framebufferScaleFactor;\n\n\t\t\t\tcurrentPixelRatio = renderer.getPixelRatio();\n\t\t\t\trenderer.getSize( currentSize );\n\n\t\t\t\trenderer.setDrawingBufferSize( renderWidth, renderHeight, 1 );\n\n\t\t\t\tcameraL.viewport.set( 0, 0, renderWidth / 2, renderHeight );\n\t\t\t\tcameraR.viewport.set( renderWidth / 2, 0, renderWidth / 2, renderHeight );\n\n\t\t\t\tanimation.start();\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t\t} else {\n\n\t\t\t\tif ( scope.enabled ) {\n\n\t\t\t\t\trenderer.setDrawingBufferSize( currentSize.width, currentSize.height, currentPixelRatio );\n\n\t\t\t\t}\n\n\t\t\t\tanimation.stop();\n\n\t\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tvar triggers = [];\n\n\t\tfunction findGamepad( id ) {\n\n\t\t\tvar gamepads = navigator.getGamepads && navigator.getGamepads();\n\n\t\t\tfor ( var i = 0, l = gamepads.length; i < l; i ++ ) {\n\n\t\t\t\tvar gamepad = gamepads[ i ];\n\n\t\t\t\tif ( gamepad && ( gamepad.id === 'Daydream Controller' ||\n\t\t\t\t\tgamepad.id === 'Gear VR Controller' || gamepad.id === 'Oculus Go Controller' ||\n\t\t\t\t\tgamepad.id === 'OpenVR Gamepad' || gamepad.id.startsWith( 'Oculus Touch' ) ||\n\t\t\t\t\tgamepad.id.startsWith( 'HTC Vive Focus' ) ||\n\t\t\t\t\tgamepad.id.startsWith( 'Spatial Controller' ) ) ) {\n\n\t\t\t\t\tvar hand = gamepad.hand;\n\n\t\t\t\t\tif ( id === 0 && ( hand === '' || hand === 'right' ) ) { return gamepad; }\n\t\t\t\t\tif ( id === 1 && ( hand === 'left' ) ) { return gamepad; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateControllers() {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar gamepad = findGamepad( i );\n\n\t\t\t\tif ( gamepad !== undefined && gamepad.pose !== undefined ) {\n\n\t\t\t\t\tif ( gamepad.pose === null ) { return; }\n\n\t\t\t\t\t// Pose\n\n\t\t\t\t\tvar pose = gamepad.pose;\n\n\t\t\t\t\tif ( pose.hasPosition === false ) { controller.position.set( 0.2, - 0.6, - 0.05 ); }\n\n\t\t\t\t\tif ( pose.position !== null ) { controller.position.fromArray( pose.position ); }\n\t\t\t\t\tif ( pose.orientation !== null ) { controller.quaternion.fromArray( pose.orientation ); }\n\t\t\t\t\tcontroller.matrix.compose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrix.premultiply( standingMatrix );\n\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.quaternion, controller.scale );\n\t\t\t\t\tcontroller.matrixWorldNeedsUpdate = true;\n\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t// Trigger\n\n\t\t\t\t\tvar buttonId = gamepad.id === 'Daydream Controller' ? 0 : 1;\n\n\t\t\t\t\tif ( triggers[ i ] === undefined ) { triggers[ i ] = false; }\n\n\t\t\t\t\tif ( triggers[ i ] !== gamepad.buttons[ buttonId ].pressed ) {\n\n\t\t\t\t\t\ttriggers[ i ] = gamepad.buttons[ buttonId ].pressed;\n\n\t\t\t\t\t\tif ( triggers[ i ] === true ) {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectstart' } );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'selectend' } );\n\t\t\t\t\t\t\tcontroller.dispatchEvent( { type: 'select' } );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tcontroller.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction updateViewportFromBounds( viewport, bounds ) {\n\n\t\t\tif ( bounds !== null && bounds.length === 4 ) {\n\n\t\t\t\tviewport.set( bounds[ 0 ] * renderWidth, bounds[ 1 ] * renderHeight, bounds[ 2 ] * renderWidth, bounds[ 3 ] * renderHeight );\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\treturn device;\n\n\t\t};\n\n\t\tthis.setDevice = function ( value ) {\n\n\t\t\tif ( value !== undefined ) { device = value; }\n\n\t\t\tanimation.setContext( value );\n\n\t\t};\n\n\t\tthis.setFramebufferScaleFactor = function ( value ) {\n\n\t\t\tframebufferScaleFactor = value;\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t};\n\n\t\tthis.setPoseTarget = function ( object ) {\n\n\t\t\tif ( object !== undefined ) { poseTarget = object; }\n\n\t\t};\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tvar userHeight = referenceSpaceType === 'local-floor' ? 1.6 : 0;\n\n\t\t\tif ( isPresenting() === false ) {\n\n\t\t\t\tcamera.position.set( 0, userHeight, 0 );\n\t\t\t\tcamera.rotation.set( 0, 0, 0 );\n\n\t\t\t\treturn camera;\n\n\t\t\t}\n\n\t\t\tdevice.depthNear = camera.near;\n\t\t\tdevice.depthFar = camera.far;\n\n\t\t\tdevice.getFrameData( frameData );\n\n\t\t\t//\n\n\t\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\t\tvar stageParameters = device.stageParameters;\n\n\t\t\t\tif ( stageParameters ) {\n\n\t\t\t\t\tstandingMatrix.fromArray( stageParameters.sittingToStandingTransform );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tstandingMatrix.makeTranslation( 0, userHeight, 0 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar pose = frameData.pose;\n\t\t\tvar poseObject = poseTarget !== null ? poseTarget : camera;\n\n\t\t\t// We want to manipulate poseObject by its position and quaternion components since users may rely on them.\n\t\t\tposeObject.matrix.copy( standingMatrix );\n\t\t\tposeObject.matrix.decompose( poseObject.position, poseObject.quaternion, poseObject.scale );\n\n\t\t\tif ( pose.orientation !== null ) {\n\n\t\t\t\ttempQuaternion.fromArray( pose.orientation );\n\t\t\t\tposeObject.quaternion.multiply( tempQuaternion );\n\n\t\t\t}\n\n\t\t\tif ( pose.position !== null ) {\n\n\t\t\t\ttempQuaternion.setFromRotationMatrix( standingMatrix );\n\t\t\t\ttempPosition.fromArray( pose.position );\n\t\t\t\ttempPosition.applyQuaternion( tempQuaternion );\n\t\t\t\tposeObject.position.add( tempPosition );\n\n\t\t\t}\n\n\t\t\tposeObject.updateMatrixWorld();\n\n\t\t\t//\n\n\t\t\tcameraL.near = camera.near;\n\t\t\tcameraR.near = camera.near;\n\n\t\t\tcameraL.far = camera.far;\n\t\t\tcameraR.far = camera.far;\n\n\t\t\tcameraL.matrixWorldInverse.fromArray( frameData.leftViewMatrix );\n\t\t\tcameraR.matrixWorldInverse.fromArray( frameData.rightViewMatrix );\n\n\t\t\t// TODO (mrdoob) Double check this code\n\n\t\t\tstandingMatrixInverse.getInverse( standingMatrix );\n\n\t\t\tif ( referenceSpaceType === 'local-floor' ) {\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( standingMatrixInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( standingMatrixInverse );\n\n\t\t\t}\n\n\t\t\tvar parent = poseObject.parent;\n\n\t\t\tif ( parent !== null ) {\n\n\t\t\t\tmatrixWorldInverse.getInverse( parent.matrixWorld );\n\n\t\t\t\tcameraL.matrixWorldInverse.multiply( matrixWorldInverse );\n\t\t\t\tcameraR.matrixWorldInverse.multiply( matrixWorldInverse );\n\n\t\t\t}\n\n\t\t\t// envMap and Mirror needs camera.matrixWorld\n\n\t\t\tcameraL.matrixWorld.getInverse( cameraL.matrixWorldInverse );\n\t\t\tcameraR.matrixWorld.getInverse( cameraR.matrixWorldInverse );\n\n\t\t\tcameraL.projectionMatrix.fromArray( frameData.leftProjectionMatrix );\n\t\t\tcameraR.projectionMatrix.fromArray( frameData.rightProjectionMatrix );\n\n\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t//\n\n\t\t\tvar layers = device.getLayers();\n\n\t\t\tif ( layers.length ) {\n\n\t\t\t\tvar layer = layers[ 0 ];\n\n\t\t\t\tupdateViewportFromBounds( cameraL.viewport, layer.leftBounds );\n\t\t\t\tupdateViewportFromBounds( cameraR.viewport, layer.rightBounds );\n\n\t\t\t}\n\n\t\t\tupdateControllers();\n\n\t\t\treturn cameraVR;\n\n\t\t};\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\treturn standingMatrix;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar animation = new WebGLAnimation();\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tanimation.setAnimationLoop( callback );\n\n\t\t\tif ( isPresenting() ) { animation.start(); }\n\n\t\t};\n\n\t\tthis.submitFrame = function () {\n\n\t\t\tif ( isPresenting() ) { device.submitFrame(); }\n\n\t\t};\n\n\t\tthis.dispose = function () {\n\n\t\t\tif ( typeof window !== 'undefined' ) {\n\n\t\t\t\twindow.removeEventListener( 'vrdisplaypresentchange', onVRDisplayPresentChange );\n\n\t\t\t}\n\n\t\t};\n\n\t\t// DEPRECATED\n\n\t\tthis.setFrameOfReferenceType = function () {\n\n\t\t\tconsole.warn( 'THREE.WebVRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t\t};\n\n\t}\n\n\tObject.assign( WebVRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction WebXRManager( renderer, gl ) {\n\n\t\tvar scope = this;\n\n\t\tvar session = null;\n\n\t\t// var framebufferScaleFactor = 1.0;\n\n\t\tvar referenceSpace = null;\n\t\tvar referenceSpaceType = 'local-floor';\n\n\t\tvar pose = null;\n\n\t\tvar controllers = [];\n\t\tvar sortedInputSources = [];\n\n\t\tfunction isPresenting() {\n\n\t\t\treturn session !== null && referenceSpace !== null;\n\n\t\t}\n\n\t\t//\n\n\t\tvar cameraL = new PerspectiveCamera();\n\t\tcameraL.layers.enable( 1 );\n\t\tcameraL.viewport = new Vector4();\n\n\t\tvar cameraR = new PerspectiveCamera();\n\t\tcameraR.layers.enable( 2 );\n\t\tcameraR.viewport = new Vector4();\n\n\t\tvar cameraVR = new ArrayCamera( [ cameraL, cameraR ] );\n\t\tcameraVR.layers.enable( 1 );\n\t\tcameraVR.layers.enable( 2 );\n\n\t\t//\n\n\t\tthis.enabled = false;\n\n\t\tthis.getController = function ( id ) {\n\n\t\t\tvar controller = controllers[ id ];\n\n\t\t\tif ( controller === undefined ) {\n\n\t\t\t\tcontroller = new Group();\n\t\t\t\tcontroller.matrixAutoUpdate = false;\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t\tcontrollers[ id ] = controller;\n\n\t\t\t}\n\n\t\t\treturn controller;\n\n\t\t};\n\n\t\t//\n\n\t\tfunction onSessionEvent( event ) {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tif ( sortedInputSources[ i ] === event.inputSource ) {\n\n\t\t\t\t\tcontrollers[ i ].dispatchEvent( { type: event.type } );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction onSessionEnd() {\n\n\t\t\trenderer.setFramebuffer( null );\n\t\t\trenderer.setRenderTarget( renderer.getRenderTarget() ); // Hack #15830\n\t\t\tanimation.stop();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionend' } );\n\n\t\t}\n\n\t\tfunction onRequestReferenceSpace( value ) {\n\n\t\t\treferenceSpace = value;\n\n\t\t\tanimation.setContext( session );\n\t\t\tanimation.start();\n\n\t\t\tscope.dispatchEvent( { type: 'sessionstart' } );\n\n\t\t}\n\n\t\tthis.setFramebufferScaleFactor = function ( /* value */ ) {\n\n\t\t\t// framebufferScaleFactor = value;\n\n\t\t};\n\n\t\tthis.setReferenceSpaceType = function ( value ) {\n\n\t\t\treferenceSpaceType = value;\n\n\t\t};\n\n\t\tthis.getSession = function () {\n\n\t\t\treturn session;\n\n\t\t};\n\n\t\tthis.setSession = function ( value ) {\n\n\t\t\tsession = value;\n\n\t\t\tif ( session !== null ) {\n\n\t\t\t\tsession.addEventListener( 'select', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectstart', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'selectend', onSessionEvent );\n\t\t\t\tsession.addEventListener( 'end', onSessionEnd );\n\n\t\t\t\t// eslint-disable-next-line no-undef\n\t\t\t\tsession.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl ) } );\n\n\t\t\t\tsession.requestReferenceSpace( referenceSpaceType ).then( onRequestReferenceSpace );\n\n\t\t\t\t//\n\n\t\t\t\tsession.addEventListener( 'inputsourceschange', updateInputSources );\n\n\t\t\t\tupdateInputSources();\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction updateInputSources() {\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tsortedInputSources[ i ] = findInputSource( i );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction findInputSource( id ) {\n\n\t\t\tvar inputSources = session.inputSources;\n\n\t\t\tfor ( var i = 0; i < inputSources.length; i ++ ) {\n\n\t\t\t\tvar inputSource = inputSources[ i ];\n\t\t\t\tvar handedness = inputSource.handedness;\n\n\t\t\t\tif ( id === 0 && ( handedness === 'none' || handedness === 'right' ) ) { return inputSource; }\n\t\t\t\tif ( id === 1 && ( handedness === 'left' ) ) { return inputSource; }\n\n\t\t\t}\n\n\t\t}\n\n\t\t//\n\n\t\tfunction updateCamera( camera, parent ) {\n\n\t\t\tif ( parent === null ) {\n\n\t\t\t\tcamera.matrixWorld.copy( camera.matrix );\n\n\t\t\t} else {\n\n\t\t\t\tcamera.matrixWorld.multiplyMatrices( parent.matrixWorld, camera.matrix );\n\n\t\t\t}\n\n\t\t\tcamera.matrixWorldInverse.getInverse( camera.matrixWorld );\n\n\t\t}\n\n\t\tthis.getCamera = function ( camera ) {\n\n\t\t\tif ( isPresenting() ) {\n\n\t\t\t\tvar parent = camera.parent;\n\t\t\t\tvar cameras = cameraVR.cameras;\n\n\t\t\t\tupdateCamera( cameraVR, parent );\n\n\t\t\t\tfor ( var i = 0; i < cameras.length; i ++ ) {\n\n\t\t\t\t\tupdateCamera( cameras[ i ], parent );\n\n\t\t\t\t}\n\n\t\t\t\t// update camera and its children\n\n\t\t\t\tcamera.matrixWorld.copy( cameraVR.matrixWorld );\n\n\t\t\t\tvar children = camera.children;\n\n\t\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\t\tchildren[ i ].updateMatrixWorld( true );\n\n\t\t\t\t}\n\n\t\t\t\tsetProjectionFromUnion( cameraVR, cameraL, cameraR );\n\n\t\t\t\treturn cameraVR;\n\n\t\t\t}\n\n\t\t\treturn camera;\n\n\t\t};\n\n\t\tthis.isPresenting = isPresenting;\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time, frame ) {\n\n\t\t\tpose = frame.getViewerPose( referenceSpace );\n\n\t\t\tif ( pose !== null ) {\n\n\t\t\t\tvar views = pose.views;\n\t\t\t\tvar baseLayer = session.renderState.baseLayer;\n\n\t\t\t\trenderer.setFramebuffer( baseLayer.framebuffer );\n\n\t\t\t\tfor ( var i = 0; i < views.length; i ++ ) {\n\n\t\t\t\t\tvar view = views[ i ];\n\t\t\t\t\tvar viewport = baseLayer.getViewport( view );\n\t\t\t\t\tvar viewMatrix = view.transform.inverse.matrix;\n\n\t\t\t\t\tvar camera = cameraVR.cameras[ i ];\n\t\t\t\t\tcamera.matrix.fromArray( viewMatrix ).getInverse( camera.matrix );\n\t\t\t\t\tcamera.projectionMatrix.fromArray( view.projectionMatrix );\n\t\t\t\t\tcamera.viewport.set( viewport.x, viewport.y, viewport.width, viewport.height );\n\n\t\t\t\t\tif ( i === 0 ) {\n\n\t\t\t\t\t\tcameraVR.matrix.copy( camera.matrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < controllers.length; i ++ ) {\n\n\t\t\t\tvar controller = controllers[ i ];\n\n\t\t\t\tvar inputSource = sortedInputSources[ i ];\n\n\t\t\t\tif ( inputSource ) {\n\n\t\t\t\t\tvar inputPose = frame.getPose( inputSource.targetRaySpace, referenceSpace );\n\n\t\t\t\t\tif ( inputPose !== null ) {\n\n\t\t\t\t\t\tcontroller.matrix.fromArray( inputPose.transform.matrix );\n\t\t\t\t\t\tcontroller.matrix.decompose( controller.position, controller.rotation, controller.scale );\n\t\t\t\t\t\tcontroller.visible = true;\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tcontroller.visible = false;\n\n\t\t\t}\n\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time, frame, referenceSpace ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\n\t\t};\n\n\t\tthis.dispose = function () {};\n\n\t\t// DEPRECATED\n\n\t\tthis.getStandingMatrix = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: getStandingMatrix() is no longer needed.' );\n\t\t\treturn new Matrix4();\n\n\t\t};\n\n\t\tthis.getDevice = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: getDevice() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.setDevice = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: setDevice() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.setFrameOfReferenceType = function () {\n\n\t\t\tconsole.warn( 'THREE.WebXRManager: setFrameOfReferenceType() has been deprecated.' );\n\n\t\t};\n\n\t\tthis.submitFrame = function () {};\n\n\t}\n\n\tObject.assign( WebXRManager.prototype, EventDispatcher.prototype );\n\n\t/**\n\t * @author supereggbert / http://www.paulbrunt.co.uk/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author szimek / https://github.com/szimek/\n\t * @author tschw\n\t */\n\n\tfunction WebGLRenderer( parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar _canvas = parameters.canvas !== undefined ? parameters.canvas : document.createElementNS( 'http://www.w3.org/1999/xhtml', 'canvas' ),\n\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\n\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tvar currentRenderList = null;\n\t\tvar currentRenderState = null;\n\n\t\t// public properties\n\n\t\tthis.domElement = _canvas;\n\n\t\t// Debug configuration container\n\t\tthis.debug = {\n\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t};\n\n\t\t// clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true;\n\n\t\t// scene graph\n\n\t\tthis.sortObjects = true;\n\n\t\t// user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false;\n\n\t\t// physically based shading\n\n\t\tthis.gammaFactor = 2.0;\t// for backwards compatibility\n\t\tthis.gammaInput = false;\n\t\tthis.gammaOutput = false;\n\n\t\t// physical lights\n\n\t\tthis.physicallyCorrectLights = false;\n\n\t\t// tone mapping\n\n\t\tthis.toneMapping = LinearToneMapping;\n\t\tthis.toneMappingExposure = 1.0;\n\t\tthis.toneMappingWhitePoint = 1.0;\n\n\t\t// morphs\n\n\t\tthis.maxMorphTargets = 8;\n\t\tthis.maxMorphNormals = 4;\n\n\t\t// internal properties\n\n\t\tvar _this = this,\n\n\t\t\t_isContextLost = false,\n\n\t\t\t// internal state cache\n\n\t\t\t_framebuffer = null,\n\n\t\t\t_currentActiveCubeFace = 0,\n\t\t\t_currentActiveMipmapLevel = 0,\n\t\t\t_currentRenderTarget = null,\n\t\t\t_currentFramebuffer = null,\n\t\t\t_currentMaterialId = - 1,\n\n\t\t\t// geometry and program caching\n\n\t\t\t_currentGeometryProgram = {\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false\n\t\t\t},\n\n\t\t\t_currentCamera = null,\n\t\t\t_currentArrayCamera = null,\n\n\t\t\t_currentViewport = new Vector4(),\n\t\t\t_currentScissor = new Vector4(),\n\t\t\t_currentScissorTest = null,\n\n\t\t\t//\n\n\t\t\t_width = _canvas.width,\n\t\t\t_height = _canvas.height,\n\n\t\t\t_pixelRatio = 1,\n\n\t\t\t_viewport = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissor = new Vector4( 0, 0, _width, _height ),\n\t\t\t_scissorTest = false,\n\n\t\t\t// frustum\n\n\t\t\t_frustum = new Frustum(),\n\n\t\t\t// clipping\n\n\t\t\t_clipping = new WebGLClipping(),\n\t\t\t_clippingEnabled = false,\n\t\t\t_localClippingEnabled = false,\n\n\t\t\t// camera matrices cache\n\n\t\t\t_projScreenMatrix = new Matrix4(),\n\n\t\t\t_vector3 = new Vector3();\n\n\t\tfunction getTargetPixelRatio() {\n\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\n\t\t}\n\n\t\t// initialize\n\n\t\tvar _gl;\n\n\t\ttry {\n\n\t\t\tvar contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat,\n\t\t\t\txrCompatible: true\n\t\t\t};\n\n\t\t\t// event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.addEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\t_gl = _context || _canvas.getContext( 'webgl', contextAttributes ) || _canvas.getContext( 'experimental-webgl', contextAttributes );\n\n\t\t\tif ( _gl === null ) {\n\n\t\t\t\tif ( _canvas.getContext( 'webgl' ) !== null ) {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context with your selected attributes.' );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthrow new Error( 'Error creating WebGL context.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\t\t\tif ( _gl.getShaderPrecisionFormat === undefined ) {\n\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\n\t\t\t\t\treturn { 'rangeMin': 1, 'rangeMax': 1, 'precision': 1 };\n\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t} catch ( error ) {\n\n\t\t\tconsole.error( 'THREE.WebGLRenderer: ' + error.message );\n\t\t\tthrow error;\n\n\t\t}\n\n\t\tvar extensions, capabilities, state, info;\n\t\tvar properties, textures, attributes, geometries, objects;\n\t\tvar programCache, renderLists, renderStates;\n\n\t\tvar background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\n\t\tvar utils;\n\n\t\tfunction initGLContext() {\n\n\t\t\textensions = new WebGLExtensions( _gl );\n\n\t\t\tcapabilities = new WebGLCapabilities( _gl, extensions, parameters );\n\n\t\t\tif ( capabilities.isWebGL2 === false ) {\n\n\t\t\t\textensions.get( 'WEBGL_depth_texture' );\n\t\t\t\textensions.get( 'OES_texture_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float' );\n\t\t\t\textensions.get( 'OES_texture_half_float_linear' );\n\t\t\t\textensions.get( 'OES_standard_derivatives' );\n\t\t\t\textensions.get( 'OES_element_index_uint' );\n\t\t\t\textensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t\t}\n\n\t\t\textensions.get( 'OES_texture_float_linear' );\n\n\t\t\tutils = new WebGLUtils( _gl, extensions, capabilities );\n\n\t\t\tstate = new WebGLState( _gl, extensions, capabilities );\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t\tinfo = new WebGLInfo( _gl );\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures( _gl, extensions, state, properties, capabilities, utils, info );\n\t\t\tattributes = new WebGLAttributes( _gl );\n\t\t\tgeometries = new WebGLGeometries( _gl, attributes, info );\n\t\t\tobjects = new WebGLObjects( _gl, geometries, attributes, info );\n\t\t\tmorphtargets = new WebGLMorphtargets( _gl );\n\t\t\tprogramCache = new WebGLPrograms( _this, extensions, capabilities );\n\t\t\trenderLists = new WebGLRenderLists();\n\t\t\trenderStates = new WebGLRenderStates();\n\n\t\t\tbackground = new WebGLBackground( _this, state, objects, _premultipliedAlpha );\n\n\t\t\tbufferRenderer = new WebGLBufferRenderer( _gl, extensions, info, capabilities );\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer( _gl, extensions, info, capabilities );\n\n\t\t\tinfo.programs = programCache.programs;\n\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\n\t\t}\n\n\t\tinitGLContext();\n\n\t\t// vr\n\n\t\tvar vr = ( typeof navigator !== 'undefined' && 'xr' in navigator ) ? new WebXRManager( _this, _gl ) : new WebVRManager( _this );\n\n\t\tthis.vr = vr;\n\n\t\t// Multiview\n\n\t\tvar multiview = new WebGLMultiview( _this, _gl );\n\n\t\t// shadow map\n\n\t\tvar shadowMap = new WebGLShadowMap( _this, objects, capabilities.maxTextureSize );\n\n\t\tthis.shadowMap = shadowMap;\n\n\t\t// API\n\n\t\tthis.getContext = function () {\n\n\t\t\treturn _gl;\n\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\n\t\t\treturn _gl.getContextAttributes();\n\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.loseContext(); }\n\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\n\t\t\tvar extension = extensions.get( 'WEBGL_lose_context' );\n\t\t\tif ( extension ) { extension.restoreContext(); }\n\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\n\t\t\treturn _pixelRatio;\n\n\t\t};\n\n\t\tthis.setPixelRatio = function ( value ) {\n\n\t\t\tif ( value === undefined ) { return; }\n\n\t\t\t_pixelRatio = value;\n\n\t\t\tthis.setSize( _width, _height, false );\n\n\t\t};\n\n\t\tthis.getSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getsize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width, _height );\n\n\t\t};\n\n\t\tthis.setSize = function ( width, height, updateStyle ) {\n\n\t\t\tif ( vr.isPresenting() ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_canvas.width = Math.floor( width * _pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * _pixelRatio );\n\n\t\t\tif ( updateStyle !== false ) {\n\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\n\t\t\t}\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument' );\n\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set( _width * _pixelRatio, _height * _pixelRatio ).floor();\n\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function ( width, height, pixelRatio ) {\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\n\t\t\t_pixelRatio = pixelRatio;\n\n\t\t\t_canvas.width = Math.floor( width * pixelRatio );\n\t\t\t_canvas.height = Math.floor( height * pixelRatio );\n\n\t\t\tthis.setViewport( 0, 0, width, height );\n\n\t\t};\n\n\t\tthis.getCurrentViewport = function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument' );\n\n\t\t\t\ttarget = new Vector4();\n\n\t\t\t}\n\n\t\t\treturn target.copy( _currentViewport );\n\n\t\t};\n\n\t\tthis.getViewport = function ( target ) {\n\n\t\t\treturn target.copy( _viewport );\n\n\t\t};\n\n\t\tthis.setViewport = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_viewport.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_viewport.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissor = function ( target ) {\n\n\t\t\treturn target.copy( _scissor );\n\n\t\t};\n\n\t\tthis.setScissor = function ( x, y, width, height ) {\n\n\t\t\tif ( x.isVector4 ) {\n\n\t\t\t\t_scissor.set( x.x, x.y, x.z, x.w );\n\n\t\t\t} else {\n\n\t\t\t\t_scissor.set( x, y, width, height );\n\n\t\t\t}\n\n\t\t\tstate.scissor( _currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor() );\n\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\n\t\t\treturn _scissorTest;\n\n\t\t};\n\n\t\tthis.setScissorTest = function ( boolean ) {\n\n\t\t\tstate.setScissorTest( _scissorTest = boolean );\n\n\t\t};\n\n\t\t// Clearing\n\n\t\tthis.getClearColor = function () {\n\n\t\t\treturn background.getClearColor();\n\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\n\t\t\tbackground.setClearColor.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\n\t\t\treturn background.getClearAlpha();\n\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\n\t\t\tbackground.setClearAlpha.apply( background, arguments );\n\n\t\t};\n\n\t\tthis.clear = function ( color, depth, stencil ) {\n\n\t\t\tvar bits = 0;\n\n\t\t\tif ( color === undefined || color ) { bits |= 16384; }\n\t\t\tif ( depth === undefined || depth ) { bits |= 256; }\n\t\t\tif ( stencil === undefined || stencil ) { bits |= 1024; }\n\n\t\t\t_gl.clear( bits );\n\n\t\t};\n\n\t\tthis.clearColor = function () {\n\n\t\t\tthis.clear( true, false, false );\n\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\n\t\t\tthis.clear( false, true, false );\n\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\n\t\t\tthis.clear( false, false, true );\n\n\t\t};\n\n\t\t//\n\n\t\tthis.dispose = function () {\n\n\t\t\t_canvas.removeEventListener( 'webglcontextlost', onContextLost, false );\n\t\t\t_canvas.removeEventListener( 'webglcontextrestored', onContextRestore, false );\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tobjects.dispose();\n\n\t\t\tvr.dispose();\n\n\t\t\tanimation.stop();\n\n\t\t};\n\n\t\t// Events\n\n\t\tfunction onContextLost( event ) {\n\n\t\t\tevent.preventDefault();\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Lost.' );\n\n\t\t\t_isContextLost = true;\n\n\t\t}\n\n\t\tfunction onContextRestore( /* event */ ) {\n\n\t\t\tconsole.log( 'THREE.WebGLRenderer: Context Restored.' );\n\n\t\t\t_isContextLost = false;\n\n\t\t\tinitGLContext();\n\n\t\t}\n\n\t\tfunction onMaterialDispose( event ) {\n\n\t\t\tvar material = event.target;\n\n\t\t\tmaterial.removeEventListener( 'dispose', onMaterialDispose );\n\n\t\t\tdeallocateMaterial( material );\n\n\t\t}\n\n\t\t// Buffer deallocation\n\n\t\tfunction deallocateMaterial( material ) {\n\n\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\tproperties.remove( material );\n\n\t\t}\n\n\n\t\tfunction releaseMaterialProgramReference( material ) {\n\n\t\t\tvar programInfo = properties.get( material ).program;\n\n\t\t\tmaterial.program = undefined;\n\n\t\t\tif ( programInfo !== undefined ) {\n\n\t\t\t\tprogramCache.releaseProgram( programInfo );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Buffer rendering\n\n\t\tfunction renderObjectImmediate( object, program ) {\n\n\t\t\tobject.render( function ( object ) {\n\n\t\t\t\t_this.renderBufferImmediate( object, program );\n\n\t\t\t} );\n\n\t\t}\n\n\t\tthis.renderBufferImmediate = function ( object, program ) {\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar buffers = properties.get( object );\n\n\t\t\tif ( object.hasPositions && ! buffers.position ) { buffers.position = _gl.createBuffer(); }\n\t\t\tif ( object.hasNormals && ! buffers.normal ) { buffers.normal = _gl.createBuffer(); }\n\t\t\tif ( object.hasUvs && ! buffers.uv ) { buffers.uv = _gl.createBuffer(); }\n\t\t\tif ( object.hasColors && ! buffers.color ) { buffers.color = _gl.createBuffer(); }\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( object.hasPositions ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.position );\n\t\t\t\t_gl.bufferData( 34962, object.positionArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.position );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.position, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasNormals ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.normal );\n\t\t\t\t_gl.bufferData( 34962, object.normalArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.normal );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.normal, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasUvs ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.uv );\n\t\t\t\t_gl.bufferData( 34962, object.uvArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.uv );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.uv, 2, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( object.hasColors ) {\n\n\t\t\t\t_gl.bindBuffer( 34962, buffers.color );\n\t\t\t\t_gl.bufferData( 34962, object.colorArray, 35048 );\n\n\t\t\t\tstate.enableAttribute( programAttributes.color );\n\t\t\t\t_gl.vertexAttribPointer( programAttributes.color, 3, 5126, false, 0, 0 );\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays( 4, 0, object.count );\n\n\t\t\tobject.count = 0;\n\n\t\t};\n\n\t\tthis.renderBufferDirect = function ( camera, fog, geometry, material, object, group ) {\n\n\t\t\tvar frontFaceCW = ( object.isMesh && object.matrixWorld.determinant() < 0 );\n\n\t\t\tstate.setMaterial( material, frontFaceCW );\n\n\t\t\tvar program = setProgram( camera, fog, material, object );\n\n\t\t\tvar updateBuffers = false;\n\n\t\t\tif ( _currentGeometryProgram.geometry !== geometry.id ||\n\t\t\t\t_currentGeometryProgram.program !== program.id ||\n\t\t\t\t_currentGeometryProgram.wireframe !== ( material.wireframe === true ) ) {\n\n\t\t\t\t_currentGeometryProgram.geometry = geometry.id;\n\t\t\t\t_currentGeometryProgram.program = program.id;\n\t\t\t\t_currentGeometryProgram.wireframe = material.wireframe === true;\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\tif ( object.morphTargetInfluences ) {\n\n\t\t\t\tmorphtargets.update( object, geometry, material, program );\n\n\t\t\t\tupdateBuffers = true;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar index = geometry.index;\n\t\t\tvar position = geometry.attributes.position;\n\t\t\tvar rangeFactor = 1;\n\n\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\tindex = geometries.getWireframeAttribute( geometry );\n\t\t\t\trangeFactor = 2;\n\n\t\t\t}\n\n\t\t\tvar attribute;\n\t\t\tvar renderer = bufferRenderer;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tattribute = attributes.get( index );\n\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex( attribute );\n\n\t\t\t}\n\n\t\t\tif ( updateBuffers ) {\n\n\t\t\t\tsetupVertexAttributes( object, geometry, material, program );\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\t_gl.bindBuffer( 34963, attribute.buffer );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar dataCount = Infinity;\n\n\t\t\tif ( index !== null ) {\n\n\t\t\t\tdataCount = index.count;\n\n\t\t\t} else if ( position !== undefined ) {\n\n\t\t\t\tdataCount = position.count;\n\n\t\t\t}\n\n\t\t\tvar rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tvar rangeCount = geometry.drawRange.count * rangeFactor;\n\n\t\t\tvar groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tvar groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\n\t\t\tvar drawStart = Math.max( rangeStart, groupStart );\n\t\t\tvar drawEnd = Math.min( dataCount, rangeStart + rangeCount, groupStart + groupCount ) - 1;\n\n\t\t\tvar drawCount = Math.max( 0, drawEnd - drawStart + 1 );\n\n\t\t\tif ( drawCount === 0 ) { return; }\n\n\t\t\t//\n\n\t\t\tif ( object.isMesh ) {\n\n\t\t\t\tif ( material.wireframe === true ) {\n\n\t\t\t\t\tstate.setLineWidth( material.wireframeLinewidth * getTargetPixelRatio() );\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tswitch ( object.drawMode ) {\n\n\t\t\t\t\t\tcase TrianglesDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 4 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleStripDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 5 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase TriangleFanDrawMode:\n\t\t\t\t\t\t\trenderer.setMode( 6 );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isLine ) {\n\n\t\t\t\tvar lineWidth = material.linewidth;\n\n\t\t\t\tif ( lineWidth === undefined ) { lineWidth = 1; } // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth( lineWidth * getTargetPixelRatio() );\n\n\t\t\t\tif ( object.isLineSegments ) {\n\n\t\t\t\t\trenderer.setMode( 1 );\n\n\t\t\t\t} else if ( object.isLineLoop ) {\n\n\t\t\t\t\trenderer.setMode( 2 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\trenderer.setMode( 3 );\n\n\t\t\t\t}\n\n\t\t\t} else if ( object.isPoints ) {\n\n\t\t\t\trenderer.setMode( 0 );\n\n\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\trenderer.setMode( 4 );\n\n\t\t\t}\n\n\t\t\tif ( object.isInstancedMesh ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, object.count );\n\n\t\t\t} else if ( geometry.isInstancedBufferGeometry ) {\n\n\t\t\t\trenderer.renderInstances( geometry, drawStart, drawCount, geometry.maxInstancedCount );\n\n\t\t\t} else {\n\n\t\t\t\trenderer.render( drawStart, drawCount );\n\n\t\t\t}\n\n\t\t};\n\n\t\tfunction setupVertexAttributes( object, geometry, material, program ) {\n\n\t\t\tif ( capabilities.isWebGL2 === false && ( object.isInstancedMesh || geometry.isInstancedBufferGeometry ) ) {\n\n\t\t\t\tif ( extensions.get( 'ANGLE_instanced_arrays' ) === null ) { return; }\n\n\t\t\t}\n\n\t\t\tstate.initAttributes();\n\n\t\t\tvar geometryAttributes = geometry.attributes;\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tvar materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor ( var name in programAttributes ) {\n\n\t\t\t\tvar programAttribute = programAttributes[ name ];\n\n\t\t\t\tif ( programAttribute >= 0 ) {\n\n\t\t\t\t\tvar geometryAttribute = geometryAttributes[ name ];\n\n\t\t\t\t\tif ( geometryAttribute !== undefined ) {\n\n\t\t\t\t\t\tvar normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tvar size = geometryAttribute.itemSize;\n\n\t\t\t\t\t\tvar attribute = attributes.get( geometryAttribute );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\t\t\t\t\t\tvar bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif ( geometryAttribute.isInterleavedBufferAttribute ) {\n\n\t\t\t\t\t\t\tvar data = geometryAttribute.data;\n\t\t\t\t\t\t\tvar stride = data.stride;\n\t\t\t\t\t\t\tvar offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif ( data && data.isInstancedInterleavedBuffer ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, data.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = data.meshPerAttribute * data.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( geometryAttribute.isInstancedBufferAttribute ) {\n\n\t\t\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute, geometryAttribute.meshPerAttribute );\n\n\t\t\t\t\t\t\t\tif ( geometry.maxInstancedCount === undefined ) {\n\n\t\t\t\t\t\t\t\t\tgeometry.maxInstancedCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tstate.enableAttribute( programAttribute );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\t\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute, size, type, normalized, 0, 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else if ( name === 'instanceMatrix' ) {\n\n\t\t\t\t\t\tvar attribute = attributes.get( object.instanceMatrix );\n\n\t\t\t\t\t\t// TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif ( attribute === undefined ) { continue; }\n\n\t\t\t\t\t\tvar buffer = attribute.buffer;\n\t\t\t\t\t\tvar type = attribute.type;\n\n\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 0, 1 );\n\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 1, 1 );\n\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 2, 1 );\n\t\t\t\t\t\tstate.enableAttributeAndDivisor( programAttribute + 3, 1 );\n\n\t\t\t\t\t\t_gl.bindBuffer( 34962, buffer );\n\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 0, 4, type, false, 64, 0 );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 1, 4, type, false, 64, 16 );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 2, 4, type, false, 64, 32 );\n\t\t\t\t\t\t_gl.vertexAttribPointer( programAttribute + 3, 4, type, false, 64, 48 );\n\n\t\t\t\t\t} else if ( materialDefaultAttributeValues !== undefined ) {\n\n\t\t\t\t\t\tvar value = materialDefaultAttributeValues[ name ];\n\n\t\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\t\tswitch ( value.length ) {\n\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib2fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib3fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib4fv( programAttribute, value );\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\t_gl.vertexAttrib1fv( programAttribute, value );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tstate.disableUnusedAttributes();\n\n\t\t}\n\n\t\t// Compile\n\n\t\tthis.compile = function ( scene, camera ) {\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tscene.traverse( function ( object ) {\n\n\t\t\t\tif ( object.material ) {\n\n\t\t\t\t\tif ( Array.isArray( object.material ) ) {\n\n\t\t\t\t\t\tfor ( var i = 0; i < object.material.length; i ++ ) {\n\n\t\t\t\t\t\t\tinitMaterial( object.material[ i ], scene.fog, object );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tinitMaterial( object.material, scene.fog, object );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} );\n\n\t\t};\n\n\t\t// Animation Loop\n\n\t\tvar onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame( time ) {\n\n\t\t\tif ( vr.isPresenting() ) { return; }\n\t\t\tif ( onAnimationFrameCallback ) { onAnimationFrameCallback( time ); }\n\n\t\t}\n\n\t\tvar animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop( onAnimationFrame );\n\n\t\tif ( typeof window !== 'undefined' ) { animation.setContext( window ); }\n\n\t\tthis.setAnimationLoop = function ( callback ) {\n\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\tvr.setAnimationLoop( callback );\n\n\t\t\tanimation.start();\n\n\t\t};\n\n\t\t// Rendering\n\n\t\tthis.render = function ( scene, camera ) {\n\n\t\t\tvar renderTarget, forceClear;\n\n\t\t\tif ( arguments[ 2 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the renderTarget argument has been removed. Use .setRenderTarget() instead.' );\n\t\t\t\trenderTarget = arguments[ 2 ];\n\n\t\t\t}\n\n\t\t\tif ( arguments[ 3 ] !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer.render(): the forceClear argument has been removed. Use .clear() instead.' );\n\t\t\t\tforceClear = arguments[ 3 ];\n\n\t\t\t}\n\n\t\t\tif ( ! ( camera && camera.isCamera ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( _isContextLost ) { return; }\n\n\t\t\t// reset caching for this frame\n\n\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t_currentGeometryProgram.program = null;\n\t\t\t_currentGeometryProgram.wireframe = false;\n\t\t\t_currentMaterialId = - 1;\n\t\t\t_currentCamera = null;\n\n\t\t\t// update scene graph\n\n\t\t\tif ( scene.autoUpdate === true ) { scene.updateMatrixWorld(); }\n\n\t\t\t// update camera matrices and frustum\n\n\t\t\tif ( camera.parent === null ) { camera.updateMatrixWorld(); }\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tcamera = vr.getCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tcurrentRenderState = renderStates.get( scene, camera );\n\t\t\tcurrentRenderState.init();\n\n\t\t\tscene.onBeforeRender( _this, scene, camera, renderTarget || _currentRenderTarget );\n\n\t\t\t_projScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\t_frustum.setFromMatrix( _projScreenMatrix );\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = _clipping.init( this.clippingPlanes, _localClippingEnabled, camera );\n\n\t\t\tcurrentRenderList = renderLists.get( scene, camera );\n\t\t\tcurrentRenderList.init();\n\n\t\t\tprojectObject( scene, camera, 0, _this.sortObjects );\n\n\t\t\tif ( _this.sortObjects === true ) {\n\n\t\t\t\tcurrentRenderList.sort();\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tif ( _clippingEnabled ) { _clipping.beginShadows(); }\n\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tshadowMap.render( shadowsArray, scene, camera );\n\n\t\t\tcurrentRenderState.setupLights( camera );\n\n\t\t\tif ( _clippingEnabled ) { _clipping.endShadows(); }\n\n\t\t\t//\n\n\t\t\tif ( this.info.autoReset ) { this.info.reset(); }\n\n\t\t\tif ( renderTarget !== undefined ) {\n\n\t\t\t\tthis.setRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tif ( vr.enabled && multiview.isAvailable() ) {\n\n\t\t\t\tmultiview.attachCamera( camera );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tbackground.render( currentRenderList, scene, camera, forceClear );\n\n\t\t\t// render scene\n\n\t\t\tvar opaqueObjects = currentRenderList.opaque;\n\t\t\tvar transparentObjects = currentRenderList.transparent;\n\n\t\t\tif ( scene.overrideMaterial ) {\n\n\t\t\t\tvar overrideMaterial = scene.overrideMaterial;\n\n\t\t\t\tif ( opaqueObjects.length ) { renderObjects( opaqueObjects, scene, camera, overrideMaterial ); }\n\t\t\t\tif ( transparentObjects.length ) { renderObjects( transparentObjects, scene, camera, overrideMaterial ); }\n\n\t\t\t} else {\n\n\t\t\t\t// opaque pass (front-to-back order)\n\n\t\t\t\tif ( opaqueObjects.length ) { renderObjects( opaqueObjects, scene, camera ); }\n\n\t\t\t\t// transparent pass (back-to-front order)\n\n\t\t\t\tif ( transparentObjects.length ) { renderObjects( transparentObjects, scene, camera ); }\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tscene.onAfterRender( _this, scene, camera );\n\n\t\t\t//\n\n\t\t\tif ( _currentRenderTarget !== null ) {\n\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\n\t\t\t\ttextures.updateRenderTargetMipmap( _currentRenderTarget );\n\n\t\t\t\t// resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget( _currentRenderTarget );\n\n\t\t\t}\n\n\t\t\t// Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest( true );\n\t\t\tstate.buffers.depth.setMask( true );\n\t\t\tstate.buffers.color.setMask( true );\n\n\t\t\tstate.setPolygonOffset( false );\n\n\t\t\tif ( vr.enabled ) {\n\n\t\t\t\tif ( multiview.isAvailable() ) {\n\n\t\t\t\t\tmultiview.detachCamera( camera );\n\n\t\t\t\t}\n\n\t\t\t\tvr.submitFrame();\n\n\t\t\t}\n\n\t\t\t// _gl.finish();\n\n\t\t\tcurrentRenderList = null;\n\t\t\tcurrentRenderState = null;\n\n\t\t};\n\n\t\tfunction projectObject( object, camera, groupOrder, sortObjects ) {\n\n\t\t\tif ( object.visible === false ) { return; }\n\n\t\t\tvar visible = object.layers.test( camera.layers );\n\n\t\t\tif ( visible ) {\n\n\t\t\t\tif ( object.isGroup ) {\n\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\n\t\t\t\t} else if ( object.isLOD ) {\n\n\t\t\t\t\tif ( object.autoUpdate === true ) { object.update( camera ); }\n\n\t\t\t\t} else if ( object.isLight ) {\n\n\t\t\t\t\tcurrentRenderState.pushLight( object );\n\n\t\t\t\t\tif ( object.castShadow ) {\n\n\t\t\t\t\t\tcurrentRenderState.pushShadow( object );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isSprite ) {\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsSprite( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( object.isImmediateRenderObject ) {\n\n\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push( object, null, object.material, groupOrder, _vector3.z, null );\n\n\t\t\t\t} else if ( object.isMesh || object.isLine || object.isPoints ) {\n\n\t\t\t\t\tif ( object.isSkinnedMesh ) {\n\n\t\t\t\t\t\t// update skeleton only once in a frame\n\n\t\t\t\t\t\tif ( object.skeleton.frame !== info.render.frame ) {\n\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( ! object.frustumCulled || _frustum.intersectsObject( object ) ) {\n\n\t\t\t\t\t\tif ( sortObjects ) {\n\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( object.matrixWorld )\n\t\t\t\t\t\t\t\t.applyMatrix4( _projScreenMatrix );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar geometry = objects.update( object );\n\t\t\t\t\t\tvar material = object.material;\n\n\t\t\t\t\t\tif ( Array.isArray( material ) ) {\n\n\t\t\t\t\t\t\tvar groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor ( var i = 0, l = groups.length; i < l; i ++ ) {\n\n\t\t\t\t\t\t\t\tvar group = groups[ i ];\n\t\t\t\t\t\t\t\tvar groupMaterial = material[ group.materialIndex ];\n\n\t\t\t\t\t\t\t\tif ( groupMaterial && groupMaterial.visible ) {\n\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, groupMaterial, groupOrder, _vector3.z, group );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else if ( material.visible ) {\n\n\t\t\t\t\t\t\tcurrentRenderList.push( object, geometry, material, groupOrder, _vector3.z, null );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tprojectObject( children[ i ], camera, groupOrder, sortObjects );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObjects( renderList, scene, camera, overrideMaterial ) {\n\n\t\t\tfor ( var i = 0, l = renderList.length; i < l; i ++ ) {\n\n\t\t\t\tvar renderItem = renderList[ i ];\n\n\t\t\t\tvar object = renderItem.object;\n\t\t\t\tvar geometry = renderItem.geometry;\n\t\t\t\tvar material = overrideMaterial === undefined ? renderItem.material : overrideMaterial;\n\t\t\t\tvar group = renderItem.group;\n\n\t\t\t\tif ( camera.isArrayCamera ) {\n\n\t\t\t\t\t_currentArrayCamera = camera;\n\n\t\t\t\t\tif ( vr.enabled && multiview.isAvailable() ) {\n\n\t\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tvar cameras = camera.cameras;\n\n\t\t\t\t\t\tfor ( var j = 0, jl = cameras.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar camera2 = cameras[ j ];\n\n\t\t\t\t\t\t\tif ( object.layers.test( camera2.layers ) ) {\n\n\t\t\t\t\t\t\t\tstate.viewport( _currentViewport.copy( camera2.viewport ) );\n\n\t\t\t\t\t\t\t\tcurrentRenderState.setupLights( camera2 );\n\n\t\t\t\t\t\t\t\trenderObject( object, scene, camera2, geometry, material, group );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t_currentArrayCamera = null;\n\n\t\t\t\t\trenderObject( object, scene, camera, geometry, material, group );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction renderObject( object, scene, camera, geometry, material, group ) {\n\n\t\t\tobject.onBeforeRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t\tobject.modelViewMatrix.multiplyMatrices( camera.matrixWorldInverse, object.matrixWorld );\n\t\t\tobject.normalMatrix.getNormalMatrix( object.modelViewMatrix );\n\n\t\t\tif ( object.isImmediateRenderObject ) {\n\n\t\t\t\tstate.setMaterial( material );\n\n\t\t\t\tvar program = setProgram( camera, scene.fog, material, object );\n\n\t\t\t\t_currentGeometryProgram.geometry = null;\n\t\t\t\t_currentGeometryProgram.program = null;\n\t\t\t\t_currentGeometryProgram.wireframe = false;\n\n\t\t\t\trenderObjectImmediate( object, program );\n\n\t\t\t} else {\n\n\t\t\t\t_this.renderBufferDirect( camera, scene.fog, geometry, material, object, group );\n\n\t\t\t}\n\n\t\t\tobject.onAfterRender( _this, scene, camera, geometry, material, group );\n\t\t\tcurrentRenderState = renderStates.get( scene, _currentArrayCamera || camera );\n\n\t\t}\n\n\t\tfunction initMaterial( material, fog, object ) {\n\n\t\t\tvar materialProperties = properties.get( material );\n\n\t\t\tvar lights = currentRenderState.state.lights;\n\t\t\tvar shadowsArray = currentRenderState.state.shadowsArray;\n\n\t\t\tvar lightsStateVersion = lights.state.version;\n\n\t\t\tvar parameters = programCache.getParameters(\n\t\t\t\tmaterial, lights.state, shadowsArray, fog, _clipping.numPlanes, _clipping.numIntersection, object );\n\n\t\t\tvar programCacheKey = programCache.getProgramCacheKey( material, parameters );\n\n\t\t\tvar program = materialProperties.program;\n\t\t\tvar programChange = true;\n\n\t\t\tif ( program === undefined ) {\n\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener( 'dispose', onMaterialDispose );\n\n\t\t\t} else if ( program.cacheKey !== programCacheKey ) {\n\n\t\t\t\t// changed glsl or parameters\n\t\t\t\treleaseMaterialProgramReference( material );\n\n\t\t\t} else if ( materialProperties.lightsStateVersion !== lightsStateVersion ) {\n\n\t\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\t\tprogramChange = false;\n\n\t\t\t} else if ( parameters.shaderID !== undefined ) {\n\n\t\t\t\t// same glsl and uniform list\n\t\t\t\treturn;\n\n\t\t\t} else {\n\n\t\t\t\t// only rebuild uniform list\n\t\t\t\tprogramChange = false;\n\n\t\t\t}\n\n\t\t\tif ( programChange ) {\n\n\t\t\t\tif ( parameters.shaderID ) {\n\n\t\t\t\t\tvar shader = ShaderLib[ parameters.shaderID ];\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: cloneUniforms( shader.uniforms ),\n\t\t\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\t\t\tfragmentShader: shader.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t} else {\n\n\t\t\t\t\tmaterialProperties.shader = {\n\t\t\t\t\t\tname: material.type,\n\t\t\t\t\t\tuniforms: material.uniforms,\n\t\t\t\t\t\tvertexShader: material.vertexShader,\n\t\t\t\t\t\tfragmentShader: material.fragmentShader\n\t\t\t\t\t};\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.onBeforeCompile( materialProperties.shader, _this );\n\n\t\t\t\t// Computing cache key again as onBeforeCompile may have changed the shaders\n\t\t\t\tprogramCacheKey = programCache.getProgramCacheKey( material, parameters );\n\n\t\t\t\tprogram = programCache.acquireProgram( material, materialProperties.shader, parameters, programCacheKey );\n\n\t\t\t\tmaterialProperties.program = program;\n\t\t\t\tmaterial.program = program;\n\n\t\t\t}\n\n\t\t\tvar programAttributes = program.getAttributes();\n\n\t\t\tif ( material.morphTargets ) {\n\n\t\t\t\tmaterial.numSupportedMorphTargets = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphTargets; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphTarget' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphTargets ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.morphNormals ) {\n\n\t\t\t\tmaterial.numSupportedMorphNormals = 0;\n\n\t\t\t\tfor ( var i = 0; i < _this.maxMorphNormals; i ++ ) {\n\n\t\t\t\t\tif ( programAttributes[ 'morphNormal' + i ] >= 0 ) {\n\n\t\t\t\t\t\tmaterial.numSupportedMorphNormals ++;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( ! material.isShaderMaterial &&\n\t\t\t\t! material.isRawShaderMaterial ||\n\t\t\t\tmaterial.clipping === true ) {\n\n\t\t\t\tmaterialProperties.numClippingPlanes = _clipping.numPlanes;\n\t\t\t\tmaterialProperties.numIntersection = _clipping.numIntersection;\n\t\t\t\tuniforms.clippingPlanes = _clipping.uniform;\n\n\t\t\t}\n\n\t\t\tmaterialProperties.fog = fog;\n\n\t\t\t// store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights( material );\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t// wire up the material to this renderer's lighting state\n\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix;\n\t\t\t\t// TODO (abelnation): add area lights shadow info to uniforms\n\n\t\t\t}\n\n\t\t\tvar progUniforms = materialProperties.program.getUniforms(),\n\t\t\t\tuniformsList =\n\t\t\t\t\tWebGLUniforms.seqWithValue( progUniforms.seq, uniforms );\n\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\n\t\t}\n\n\t\tfunction setProgram( camera, fog, material, object ) {\n\n\t\t\ttextures.resetTextureUnits();\n\n\t\t\tvar materialProperties = properties.get( material );\n\t\t\tvar lights = currentRenderState.state.lights;\n\n\t\t\tif ( _clippingEnabled ) {\n\n\t\t\t\tif ( _localClippingEnabled || camera !== _currentCamera ) {\n\n\t\t\t\t\tvar useCache =\n\t\t\t\t\t\tcamera === _currentCamera &&\n\t\t\t\t\t\tmaterial.id === _currentMaterialId;\n\n\t\t\t\t\t// we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\t\t\t\t\t_clipping.setState(\n\t\t\t\t\t\tmaterial.clippingPlanes, material.clipIntersection, material.clipShadows,\n\t\t\t\t\t\tcamera, materialProperties, useCache );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate === false ) {\n\n\t\t\t\tif ( materialProperties.program === undefined ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( material.fog && materialProperties.fog !== fog ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.needsLights && ( materialProperties.lightsStateVersion !== lights.state.version ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t} else if ( materialProperties.numClippingPlanes !== undefined &&\n\t\t\t\t\t( materialProperties.numClippingPlanes !== _clipping.numPlanes ||\n\t\t\t\t\tmaterialProperties.numIntersection !== _clipping.numIntersection ) ) {\n\n\t\t\t\t\tmaterial.needsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.needsUpdate ) {\n\n\t\t\t\tinitMaterial( material, fog, object );\n\t\t\t\tmaterial.needsUpdate = false;\n\n\t\t\t}\n\n\t\t\tvar refreshProgram = false;\n\t\t\tvar refreshMaterial = false;\n\t\t\tvar refreshLights = false;\n\n\t\t\tvar program = materialProperties.program,\n\t\t\t\tp_uniforms = program.getUniforms(),\n\t\t\t\tm_uniforms = materialProperties.shader.uniforms;\n\n\t\t\tif ( state.useProgram( program.program ) ) {\n\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\n\t\t\t}\n\n\t\t\tif ( material.id !== _currentMaterialId ) {\n\n\t\t\t\t_currentMaterialId = material.id;\n\n\t\t\t\trefreshMaterial = true;\n\n\t\t\t}\n\n\t\t\tif ( refreshProgram || _currentCamera !== camera ) {\n\n\t\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\t\tmultiview.updateCameraProjectionMatricesUniform( camera, p_uniforms );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'projectionMatrix', camera.projectionMatrix );\n\n\t\t\t\t}\n\n\t\t\t\tif ( capabilities.logarithmicDepthBuffer ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'logDepthBufFC',\n\t\t\t\t\t\t2.0 / ( Math.log( camera.far + 1.0 ) / Math.LN2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tif ( _currentCamera !== camera ) {\n\n\t\t\t\t\t_currentCamera = camera;\n\n\t\t\t\t\t// lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true;\t\t// set to true on material change\n\t\t\t\t\trefreshLights = true;\t\t// remains set until update done\n\n\t\t\t\t}\n\n\t\t\t\t// load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\t\t\t\tif ( material.isShaderMaterial ||\n\t\t\t\t\tmaterial.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.envMap ) {\n\n\t\t\t\t\tvar uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif ( uCamPos !== undefined ) {\n\n\t\t\t\t\t\tuCamPos.setValue( _gl,\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition( camera.matrixWorld ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ) {\n\n\t\t\t\t\tp_uniforms.setValue( _gl, 'isOrthographic', camera.isOrthographicCamera === true );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshPhongMaterial ||\n\t\t\t\t\tmaterial.isMeshLambertMaterial ||\n\t\t\t\t\tmaterial.isMeshBasicMaterial ||\n\t\t\t\t\tmaterial.isMeshStandardMaterial ||\n\t\t\t\t\tmaterial.isShaderMaterial ||\n\t\t\t\t\tmaterial.skinning ) {\n\n\t\t\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\t\t\tmultiview.updateCameraViewMatricesUniform( camera, p_uniforms );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'viewMatrix', camera.matrixWorldInverse );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// not sure why, but otherwise weird things happen\n\n\t\t\tif ( material.skinning ) {\n\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrix' );\n\t\t\t\tp_uniforms.setOptional( _gl, object, 'bindMatrixInverse' );\n\n\t\t\t\tvar skeleton = object.skeleton;\n\n\t\t\t\tif ( skeleton ) {\n\n\t\t\t\t\tvar bones = skeleton.bones;\n\n\t\t\t\t\tif ( capabilities.floatVertexTextures ) {\n\n\t\t\t\t\t\tif ( skeleton.boneTexture === undefined ) {\n\n\t\t\t\t\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t\t\t\t\t//      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t\t\t\t\t//  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\n\t\t\t\t\t\t\t//       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\n\t\t\t\t\t\t\t//       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\n\t\t\t\t\t\t\t//       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\n\n\t\t\t\t\t\t\tvar size = Math.sqrt( bones.length * 4 ); // 4 pixels needed for 1 matrix\n\t\t\t\t\t\t\tsize = _Math.ceilPowerOfTwo( size );\n\t\t\t\t\t\t\tsize = Math.max( size, 4 );\n\n\t\t\t\t\t\t\tvar boneMatrices = new Float32Array( size * size * 4 ); // 4 floats per RGBA pixel\n\t\t\t\t\t\t\tboneMatrices.set( skeleton.boneMatrices ); // copy current values\n\n\t\t\t\t\t\t\tvar boneTexture = new DataTexture( boneMatrices, size, size, RGBAFormat, FloatType );\n\n\t\t\t\t\t\t\tskeleton.boneMatrices = boneMatrices;\n\t\t\t\t\t\t\tskeleton.boneTexture = boneTexture;\n\t\t\t\t\t\t\tskeleton.boneTextureSize = size;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTexture', skeleton.boneTexture, textures );\n\t\t\t\t\t\tp_uniforms.setValue( _gl, 'boneTextureSize', skeleton.boneTextureSize );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tp_uniforms.setOptional( _gl, skeleton, 'boneMatrices' );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow ) {\n\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue( _gl, 'receiveShadow', object.receiveShadow );\n\n\t\t\t}\n\n\t\t\tif ( refreshMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingExposure', _this.toneMappingExposure );\n\t\t\t\tp_uniforms.setValue( _gl, 'toneMappingWhitePoint', _this.toneMappingWhitePoint );\n\n\t\t\t\tif ( materialProperties.needsLights ) {\n\n\t\t\t\t\t// the current material requires lighting info\n\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate( m_uniforms, refreshLights );\n\n\t\t\t\t}\n\n\t\t\t\t// refresh uniforms common to several materials\n\n\t\t\t\tif ( fog && material.fog ) {\n\n\t\t\t\t\trefreshUniformsFog( m_uniforms, fog );\n\n\t\t\t\t}\n\n\t\t\t\tif ( material.isMeshBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshLambertMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsLambert( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshPhongMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshToonMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsToon( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsPhong( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshStandardMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isMeshPhysicalMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsPhysical( m_uniforms, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\trefreshUniformsStandard( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isMeshMatcapMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\n\t\t\t\t\trefreshUniformsMatcap( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDepthMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDepth( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshDistanceMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsDistance( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isMeshNormalMaterial ) {\n\n\t\t\t\t\trefreshUniformsCommon( m_uniforms, material );\n\t\t\t\t\trefreshUniformsNormal( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isLineBasicMaterial ) {\n\n\t\t\t\t\trefreshUniformsLine( m_uniforms, material );\n\n\t\t\t\t\tif ( material.isLineDashedMaterial ) {\n\n\t\t\t\t\t\trefreshUniformsDash( m_uniforms, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( material.isPointsMaterial ) {\n\n\t\t\t\t\trefreshUniformsPoints( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isSpriteMaterial ) {\n\n\t\t\t\t\trefreshUniformsSprites( m_uniforms, material );\n\n\t\t\t\t} else if ( material.isShadowMaterial ) {\n\n\t\t\t\t\tm_uniforms.color.value.copy( material.color );\n\t\t\t\t\tm_uniforms.opacity.value = material.opacity;\n\n\t\t\t\t}\n\n\t\t\t\t// RectAreaLight Texture\n\t\t\t\t// TODO (mrdoob): Find a nicer implementation\n\n\t\t\t\tif ( m_uniforms.ltc_1 !== undefined ) { m_uniforms.ltc_1.value = UniformsLib.LTC_1; }\n\t\t\t\tif ( m_uniforms.ltc_2 !== undefined ) { m_uniforms.ltc_2.value = UniformsLib.LTC_2; }\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\n\t\t\t\tif ( material.isShaderMaterial ) {\n\n\t\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( material.isShaderMaterial && material.uniformsNeedUpdate === true ) {\n\n\t\t\t\tWebGLUniforms.upload( _gl, materialProperties.uniformsList, m_uniforms, textures );\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\n\t\t\t}\n\n\t\t\tif ( material.isSpriteMaterial ) {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'center', object.center );\n\n\t\t\t}\n\n\t\t\t// common matrices\n\n\t\t\tif ( program.numMultiviewViews > 0 ) {\n\n\t\t\t\tmultiview.updateObjectMatricesUniforms( object, camera, p_uniforms );\n\n\t\t\t} else {\n\n\t\t\t\tp_uniforms.setValue( _gl, 'modelViewMatrix', object.modelViewMatrix );\n\t\t\t\tp_uniforms.setValue( _gl, 'normalMatrix', object.normalMatrix );\n\n\t\t\t}\n\n\t\t\tp_uniforms.setValue( _gl, 'modelMatrix', object.matrixWorld );\n\n\t\t\treturn program;\n\n\t\t}\n\n\t\t// Uniforms (refresh uniforms objects)\n\n\t\tfunction refreshUniformsCommon( uniforms, material ) {\n\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif ( material.color ) {\n\n\t\t\t\tuniforms.diffuse.value.copy( material.color );\n\n\t\t\t}\n\n\t\t\tif ( material.emissive ) {\n\n\t\t\t\tuniforms.emissive.value.copy( material.emissive ).multiplyScalar( material.emissiveIntensity );\n\n\t\t\t}\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( material.specularMap ) {\n\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\tuniforms.envMap.value = material.envMap;\n\n\t\t\t\t// don't flip CubeTexture envMaps, flip everything else:\n\t\t\t\t//  WebGLRenderTargetCube will be flipped for backwards compatibility\n\t\t\t\t//  WebGLRenderTargetCube.texture will be flipped because it's a Texture and NOT a CubeTexture\n\t\t\t\t// this check must be handled differently, or removed entirely, if WebGLRenderTargetCube uses a CubeTexture in the future\n\t\t\t\tuniforms.flipEnvMap.value = material.envMap.isCubeTexture ? - 1 : 1;\n\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tuniforms.maxMipLevel.value = properties.get( material.envMap ).__maxMipLevel;\n\n\t\t\t}\n\n\t\t\tif ( material.lightMap ) {\n\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\n\t\t\t}\n\n\t\t\tif ( material.aoMap ) {\n\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. normal map\n\t\t\t// 4. bump map\n\t\t\t// 5. alpha map\n\t\t\t// 6. emissive map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.specularMap ) {\n\n\t\t\t\tuvScaleMap = material.specularMap;\n\n\t\t\t} else if ( material.displacementMap ) {\n\n\t\t\t\tuvScaleMap = material.displacementMap;\n\n\t\t\t} else if ( material.normalMap ) {\n\n\t\t\t\tuvScaleMap = material.normalMap;\n\n\t\t\t} else if ( material.bumpMap ) {\n\n\t\t\t\tuvScaleMap = material.bumpMap;\n\n\t\t\t} else if ( material.roughnessMap ) {\n\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\n\t\t\t} else if ( material.metalnessMap ) {\n\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t} else if ( material.emissiveMap ) {\n\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\t// backwards compatibility\n\t\t\t\tif ( uvScaleMap.isWebGLRenderTarget ) {\n\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\n\t\t\t\t}\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLine( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t}\n\n\t\tfunction refreshUniformsDash( uniforms, material ) {\n\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\n\t\t}\n\n\t\tfunction refreshUniformsPoints( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * _pixelRatio;\n\t\t\tuniforms.scale.value = _height * 0.5;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsSprites( uniforms, material ) {\n\n\t\t\tuniforms.diffuse.value.copy( material.color );\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuniforms.map.value = material.map;\n\n\t\t\t}\n\n\t\t\tif ( material.alphaMap ) {\n\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\n\t\t\t}\n\n\t\t\t// uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\t\t\tvar uvScaleMap;\n\n\t\t\tif ( material.map ) {\n\n\t\t\t\tuvScaleMap = material.map;\n\n\t\t\t} else if ( material.alphaMap ) {\n\n\t\t\t\tuvScaleMap = material.alphaMap;\n\n\t\t\t}\n\n\t\t\tif ( uvScaleMap !== undefined ) {\n\n\t\t\t\tif ( uvScaleMap.matrixAutoUpdate === true ) {\n\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy( uvScaleMap.matrix );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsFog( uniforms, fog ) {\n\n\t\t\tuniforms.fogColor.value.copy( fog.color );\n\n\t\t\tif ( fog.isFog ) {\n\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\n\t\t\t} else if ( fog.isFogExp2 ) {\n\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsLambert( uniforms, material ) {\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhong( uniforms, material ) {\n\n\t\t\tuniforms.specular.value.copy( material.specular );\n\t\t\tuniforms.shininess.value = Math.max( material.shininess, 1e-4 ); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsToon( uniforms, material ) {\n\n\t\t\trefreshUniformsPhong( uniforms, material );\n\n\t\t\tif ( material.gradientMap ) {\n\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsStandard( uniforms, material ) {\n\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif ( material.roughnessMap ) {\n\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.metalnessMap ) {\n\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\n\t\t\t}\n\n\t\t\tif ( material.emissiveMap ) {\n\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tif ( material.envMap ) {\n\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsPhysical( uniforms, material ) {\n\n\t\t\trefreshUniformsStandard( uniforms, material );\n\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif ( material.sheen ) { uniforms.sheen.value.copy( material.sheen ); }\n\n\t\t\tif ( material.clearcoatNormalMap ) {\n\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy( material.clearcoatNormalScale );\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif ( material.side === BackSide ) {\n\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tuniforms.transparency.value = material.transparency;\n\n\t\t}\n\n\t\tfunction refreshUniformsMatcap( uniforms, material ) {\n\n\t\t\tif ( material.matcap ) {\n\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\n\t\t\t}\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDepth( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction refreshUniformsDistance( uniforms, material ) {\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy( material.referencePosition );\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\n\t\t}\n\n\t\tfunction refreshUniformsNormal( uniforms, material ) {\n\n\t\t\tif ( material.bumpMap ) {\n\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif ( material.side === BackSide ) { uniforms.bumpScale.value *= - 1; }\n\n\t\t\t}\n\n\t\t\tif ( material.normalMap ) {\n\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy( material.normalScale );\n\t\t\t\tif ( material.side === BackSide ) { uniforms.normalScale.value.negate(); }\n\n\t\t\t}\n\n\t\t\tif ( material.displacementMap ) {\n\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\t\tfunction markUniformsLightsNeedsUpdate( uniforms, value ) {\n\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\n\t\t}\n\n\t\tfunction materialNeedsLights( material ) {\n\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshPhongMaterial ||\n\t\t\t\tmaterial.isMeshStandardMaterial || material.isShadowMaterial ||\n\t\t\t\t( material.isShaderMaterial && material.lights === true );\n\n\t\t}\n\n\t\t//\n\t\tthis.setFramebuffer = function ( value ) {\n\n\t\t\tif ( _framebuffer !== value && _currentRenderTarget === null ) { _gl.bindFramebuffer( 36160, value ); }\n\n\t\t\t_framebuffer = value;\n\n\t\t};\n\n\t\tthis.getActiveCubeFace = function () {\n\n\t\t\treturn _currentActiveCubeFace;\n\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\n\t\t\treturn _currentActiveMipmapLevel;\n\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\n\t\t\treturn _currentRenderTarget;\n\n\t\t};\n\n\t\tthis.setRenderTarget = function ( renderTarget, activeCubeFace, activeMipmapLevel ) {\n\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif ( renderTarget && properties.get( renderTarget ).__webglFramebuffer === undefined ) {\n\n\t\t\t\ttextures.setupRenderTarget( renderTarget );\n\n\t\t\t}\n\n\t\t\tvar framebuffer = _framebuffer;\n\t\t\tvar isCube = false;\n\n\t\t\tif ( renderTarget ) {\n\n\t\t\t\tvar __webglFramebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\t\tif ( renderTarget.isWebGLRenderTargetCube ) {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer[ activeCubeFace || 0 ];\n\t\t\t\t\tisCube = true;\n\n\t\t\t\t} else if ( renderTarget.isWebGLMultisampleRenderTarget ) {\n\n\t\t\t\t\tframebuffer = properties.get( renderTarget ).__webglMultisampledFramebuffer;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy( renderTarget.viewport );\n\t\t\t\t_currentScissor.copy( renderTarget.scissor );\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\n\t\t\t} else {\n\n\t\t\t\t_currentViewport.copy( _viewport ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissor.copy( _scissor ).multiplyScalar( _pixelRatio ).floor();\n\t\t\t\t_currentScissorTest = _scissorTest;\n\n\t\t\t}\n\n\t\t\tif ( _currentFramebuffer !== framebuffer ) {\n\n\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\t\t\t\t_currentFramebuffer = framebuffer;\n\n\t\t\t}\n\n\t\t\tstate.viewport( _currentViewport );\n\t\t\tstate.scissor( _currentScissor );\n\t\t\tstate.setScissorTest( _currentScissorTest );\n\n\t\t\tif ( isCube ) {\n\n\t\t\t\tvar textureProperties = properties.get( renderTarget.texture );\n\t\t\t\t_gl.framebufferTexture2D( 36160, 36064, 34069 + ( activeCubeFace || 0 ), textureProperties.__webglTexture, activeMipmapLevel || 0 );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function ( renderTarget, x, y, width, height, buffer, activeCubeFaceIndex ) {\n\n\t\t\tif ( ! ( renderTarget && renderTarget.isWebGLRenderTarget ) ) {\n\n\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar framebuffer = properties.get( renderTarget ).__webglFramebuffer;\n\n\t\t\tif ( renderTarget.isWebGLRenderTargetCube && activeCubeFaceIndex !== undefined ) {\n\n\t\t\t\tframebuffer = framebuffer[ activeCubeFaceIndex ];\n\n\t\t\t}\n\n\t\t\tif ( framebuffer ) {\n\n\t\t\t\tvar restore = false;\n\n\t\t\t\tif ( framebuffer !== _currentFramebuffer ) {\n\n\t\t\t\t\t_gl.bindFramebuffer( 36160, framebuffer );\n\n\t\t\t\t\trestore = true;\n\n\t\t\t\t}\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar texture = renderTarget.texture;\n\t\t\t\t\tvar textureFormat = texture.format;\n\t\t\t\t\tvar textureType = texture.type;\n\n\t\t\t\t\tif ( textureFormat !== RGBAFormat && utils.convert( textureFormat ) !== _gl.getParameter( 35739 ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( textureType !== UnsignedByteType && utils.convert( textureType ) !== _gl.getParameter( 35738 ) && // IE11, Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t\t! ( textureType === FloatType && ( capabilities.isWebGL2 || extensions.get( 'OES_texture_float' ) || extensions.get( 'WEBGL_color_buffer_float' ) ) ) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t\t! ( textureType === HalfFloatType && ( capabilities.isWebGL2 ? extensions.get( 'EXT_color_buffer_float' ) : extensions.get( 'EXT_color_buffer_half_float' ) ) ) ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.' );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( _gl.checkFramebufferStatus( 36160 ) === 36053 ) {\n\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\n\t\t\t\t\t\tif ( ( x >= 0 && x <= ( renderTarget.width - width ) ) && ( y >= 0 && y <= ( renderTarget.height - height ) ) ) {\n\n\t\t\t\t\t\t\t_gl.readPixels( x, y, width, height, utils.convert( textureFormat ), utils.convert( textureType ), buffer );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tconsole.error( 'THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.' );\n\n\t\t\t\t\t}\n\n\t\t\t\t} finally {\n\n\t\t\t\t\tif ( restore ) {\n\n\t\t\t\t\t\t_gl.bindFramebuffer( 36160, _currentFramebuffer );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function ( position, texture, level ) {\n\n\t\t\tif ( level === undefined ) { level = 0; }\n\n\t\t\tvar levelScale = Math.pow( 2, - level );\n\t\t\tvar width = Math.floor( texture.image.width * levelScale );\n\t\t\tvar height = Math.floor( texture.image.height * levelScale );\n\t\t\tvar glFormat = utils.convert( texture.format );\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\t_gl.copyTexImage2D( 3553, level, glFormat, position.x, position.y, width, height, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.copyTextureToTexture = function ( position, srcTexture, dstTexture, level ) {\n\n\t\t\tvar width = srcTexture.image.width;\n\t\t\tvar height = srcTexture.image.height;\n\t\t\tvar glFormat = utils.convert( dstTexture.format );\n\t\t\tvar glType = utils.convert( dstTexture.type );\n\n\t\t\ttextures.setTexture2D( dstTexture, 0 );\n\n\t\t\tif ( srcTexture.isDataTexture ) {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data );\n\n\t\t\t} else {\n\n\t\t\t\t_gl.texSubImage2D( 3553, level || 0, position.x, position.y, glFormat, glType, srcTexture.image );\n\n\t\t\t}\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tthis.initTexture = function ( texture ) {\n\n\t\t\ttextures.setTexture2D( texture, 0 );\n\n\t\t\tstate.unbindTexture();\n\n\t\t};\n\n\t\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'observe', { detail: this } ) ); // eslint-disable-line no-undef\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction FogExp2( color, density ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\t\tthis.density = ( density !== undefined ) ? density : 0.00025;\n\n\t}\n\n\tObject.assign( FogExp2.prototype, {\n\n\t\tisFogExp2: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new FogExp2( this.color, this.density );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Fog( color, near, far ) {\n\n\t\tthis.name = '';\n\n\t\tthis.color = new Color( color );\n\n\t\tthis.near = ( near !== undefined ) ? near : 1;\n\t\tthis.far = ( far !== undefined ) ? far : 1000;\n\n\t}\n\n\tObject.assign( Fog.prototype, {\n\n\t\tisFog: true,\n\n\t\tclone: function () {\n\n\t\t\treturn new Fog( this.color, this.near, this.far );\n\n\t\t},\n\n\t\ttoJSON: function ( /* meta */ ) {\n\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBuffer( array, stride ) {\n\n\t\tthis.array = array;\n\t\tthis.stride = stride;\n\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\n\t\tthis.usage = StaticDrawUsage;\n\t\tthis.updateRange = { offset: 0, count: - 1 };\n\n\t\tthis.version = 0;\n\n\t}\n\n\tObject.defineProperty( InterleavedBuffer.prototype, 'needsUpdate', {\n\n\t\tset: function ( value ) {\n\n\t\t\tif ( value === true ) { this.version ++; }\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\n\t\tisInterleavedBuffer: true,\n\n\t\tonUploadCallback: function () {},\n\n\t\tsetUsage: function ( value ) {\n\n\t\t\tthis.usage = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.array = new source.array.constructor( source.array );\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopyAt: function ( index1, attribute, index2 ) {\n\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor ( var i = 0, l = this.stride; i < l; i ++ ) {\n\n\t\t\t\tthis.array[ index1 + i ] = attribute.array[ index2 + i ];\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tset: function ( value, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tthis.array.set( value, offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tonUpload: function ( callback ) {\n\n\t\t\tthis.onUploadCallback = callback;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InterleavedBufferAttribute( interleavedBuffer, itemSize, offset, normalized ) {\n\n\t\tthis.data = interleavedBuffer;\n\t\tthis.itemSize = itemSize;\n\t\tthis.offset = offset;\n\n\t\tthis.normalized = normalized === true;\n\n\t}\n\n\tObject.defineProperties( InterleavedBufferAttribute.prototype, {\n\n\t\tcount: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.count;\n\n\t\t\t}\n\n\t\t},\n\n\t\tarray: {\n\n\t\t\tget: function () {\n\n\t\t\t\treturn this.data.array;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBufferAttribute.prototype, {\n\n\t\tisInterleavedBufferAttribute: true,\n\n\t\tsetX: function ( index, x ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset ] = x;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetY: function ( index, y ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetZ: function ( index, z ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetW: function ( index, w ) {\n\n\t\t\tthis.data.array[ index * this.data.stride + this.offset + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetX: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset ];\n\n\t\t},\n\n\t\tgetY: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 1 ];\n\n\t\t},\n\n\t\tgetZ: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 2 ];\n\n\t\t},\n\n\t\tgetW: function ( index ) {\n\n\t\t\treturn this.data.array[ index * this.data.stride + this.offset + 3 ];\n\n\t\t},\n\n\t\tsetXY: function ( index, x, y ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZ: function ( index, x, y, z ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetXYZW: function ( index, x, y, z, w ) {\n\n\t\t\tindex = index * this.data.stride + this.offset;\n\n\t\t\tthis.data.array[ index + 0 ] = x;\n\t\t\tthis.data.array[ index + 1 ] = y;\n\t\t\tthis.data.array[ index + 2 ] = z;\n\t\t\tthis.data.array[ index + 3 ] = w;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *  rotation: <float>,\n\t *  sizeAttenuation: <bool>\n\t * }\n\t */\n\n\tfunction SpriteMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'SpriteMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.rotation = 0;\n\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tSpriteMaterial.prototype = Object.create( Material.prototype );\n\tSpriteMaterial.prototype.constructor = SpriteMaterial;\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tSpriteMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.rotation = source.rotation;\n\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _geometry;\n\n\tvar _intersectPoint = new Vector3();\n\tvar _worldScale = new Vector3();\n\tvar _mvPosition = new Vector3();\n\n\tvar _alignedPosition = new Vector2();\n\tvar _rotatedPosition = new Vector2();\n\tvar _viewWorldMatrix = new Matrix4();\n\n\tvar _vA$1 = new Vector3();\n\tvar _vB$1 = new Vector3();\n\tvar _vC$1 = new Vector3();\n\n\tvar _uvA$1 = new Vector2();\n\tvar _uvB$1 = new Vector2();\n\tvar _uvC$1 = new Vector2();\n\n\tfunction Sprite( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Sprite';\n\n\t\tif ( _geometry === undefined ) {\n\n\t\t\t_geometry = new BufferGeometry();\n\n\t\t\tvar float32Array = new Float32Array( [\n\t\t\t\t- 0.5, - 0.5, 0, 0, 0,\n\t\t\t\t0.5, - 0.5, 0, 1, 0,\n\t\t\t\t0.5, 0.5, 0, 1, 1,\n\t\t\t\t- 0.5, 0.5, 0, 0, 1\n\t\t\t] );\n\n\t\t\tvar interleavedBuffer = new InterleavedBuffer( float32Array, 5 );\n\n\t\t\t_geometry.setIndex( [ 0, 1, 2,\t0, 2, 3 ] );\n\t\t\t_geometry.setAttribute( 'position', new InterleavedBufferAttribute( interleavedBuffer, 3, 0, false ) );\n\t\t\t_geometry.setAttribute( 'uv', new InterleavedBufferAttribute( interleavedBuffer, 2, 3, false ) );\n\n\t\t}\n\n\t\tthis.geometry = _geometry;\n\t\tthis.material = ( material !== undefined ) ? material : new SpriteMaterial();\n\n\t\tthis.center = new Vector2( 0.5, 0.5 );\n\n\t}\n\n\tSprite.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Sprite,\n\n\t\tisSprite: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tif ( raycaster.camera === null ) {\n\n\t\t\t\tconsole.error( 'THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.' );\n\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale( this.matrixWorld );\n\n\t\t\t_viewWorldMatrix.copy( raycaster.camera.matrixWorld );\n\t\t\tthis.modelViewMatrix.multiplyMatrices( raycaster.camera.matrixWorldInverse, this.matrixWorld );\n\n\t\t\t_mvPosition.setFromMatrixPosition( this.modelViewMatrix );\n\n\t\t\tif ( raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false ) {\n\n\t\t\t\t_worldScale.multiplyScalar( - _mvPosition.z );\n\n\t\t\t}\n\n\t\t\tvar rotation = this.material.rotation;\n\t\t\tvar sin, cos;\n\t\t\tif ( rotation !== 0 ) {\n\n\t\t\t\tcos = Math.cos( rotation );\n\t\t\t\tsin = Math.sin( rotation );\n\n\t\t\t}\n\n\t\t\tvar center = this.center;\n\n\t\t\ttransformVertex( _vA$1.set( - 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vB$1.set( 0.5, - 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\ttransformVertex( _vC$1.set( 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\n\t\t\t_uvA$1.set( 0, 0 );\n\t\t\t_uvB$1.set( 1, 0 );\n\t\t\t_uvC$1.set( 1, 1 );\n\n\t\t\t// check first triangle\n\t\t\tvar intersect = raycaster.ray.intersectTriangle( _vA$1, _vB$1, _vC$1, false, _intersectPoint );\n\n\t\t\tif ( intersect === null ) {\n\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex( _vB$1.set( - 0.5, 0.5, 0 ), _mvPosition, center, _worldScale, sin, cos );\n\t\t\t\t_uvB$1.set( 0, 1 );\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle( _vA$1, _vC$1, _vB$1, false, _intersectPoint );\n\t\t\t\tif ( intersect === null ) {\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( _intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV( _intersectPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2() ),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\n\t\t\t} );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.material ).copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tif ( source.center !== undefined ) { this.center.copy( source.center ); }\n\n\t\t\treturn this;\n\n\t\t}\n\n\n\t} );\n\n\tfunction transformVertex( vertexPosition, mvPosition, center, scale, sin, cos ) {\n\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors( vertexPosition, center ).addScalar( 0.5 ).multiply( scale );\n\n\t\t// to check if rotation is not zero\n\t\tif ( sin !== undefined ) {\n\n\t\t\t_rotatedPosition.x = ( cos * _alignedPosition.x ) - ( sin * _alignedPosition.y );\n\t\t\t_rotatedPosition.y = ( sin * _alignedPosition.x ) + ( cos * _alignedPosition.y );\n\n\t\t} else {\n\n\t\t\t_rotatedPosition.copy( _alignedPosition );\n\n\t\t}\n\n\n\t\tvertexPosition.copy( mvPosition );\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y;\n\n\t\t// transform to world space\n\t\tvertexPosition.applyMatrix4( _viewWorldMatrix );\n\n\t}\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _v1$4 = new Vector3();\n\tvar _v2$2 = new Vector3();\n\n\tfunction LOD() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'LOD';\n\n\t\tObject.defineProperties( this, {\n\t\t\tlevels: {\n\t\t\t\tenumerable: true,\n\t\t\t\tvalue: []\n\t\t\t}\n\t\t} );\n\n\t\tthis.autoUpdate = true;\n\n\t}\n\n\tLOD.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: LOD,\n\n\t\tisLOD: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\t\tvar levels = source.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tthis.addLevel( level.object.clone(), level.distance );\n\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\taddLevel: function ( object, distance ) {\n\n\t\t\tif ( distance === undefined ) { distance = 0; }\n\n\t\t\tdistance = Math.abs( distance );\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\tif ( distance < levels[ l ].distance ) {\n\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tlevels.splice( l, 0, { distance: distance, object: object } );\n\n\t\t\tthis.add( object );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetObjectForDistance: function ( distance ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance < levels[ i ].distance ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn levels[ i - 1 ].object;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 0 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( _v1$4 );\n\n\t\t\t\tthis.getObjectForDistance( distance ).raycast( raycaster, intersects );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tif ( levels.length > 1 ) {\n\n\t\t\t\t_v1$4.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\t_v2$2.setFromMatrixPosition( this.matrixWorld );\n\n\t\t\t\tvar distance = _v1$4.distanceTo( _v2$2 );\n\n\t\t\t\tlevels[ 0 ].object.visible = true;\n\n\t\t\t\tfor ( var i = 1, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\t\tif ( distance >= levels[ i ].distance ) {\n\n\t\t\t\t\t\tlevels[ i - 1 ].object.visible = false;\n\t\t\t\t\t\tlevels[ i ].object.visible = true;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tfor ( ; i < l; i ++ ) {\n\n\t\t\t\t\tlevels[ i ].object.visible = false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tif ( this.autoUpdate === false ) { data.object.autoUpdate = false; }\n\n\t\t\tdata.object.levels = [];\n\n\t\t\tvar levels = this.levels;\n\n\t\t\tfor ( var i = 0, l = levels.length; i < l; i ++ ) {\n\n\t\t\t\tvar level = levels[ i ];\n\n\t\t\t\tdata.object.levels.push( {\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction SkinnedMesh( geometry, material ) {\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\tconsole.error( 'THREE.SkinnedMesh no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t}\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.type = 'SkinnedMesh';\n\n\t\tthis.bindMode = 'attached';\n\t\tthis.bindMatrix = new Matrix4();\n\t\tthis.bindMatrixInverse = new Matrix4();\n\n\t}\n\n\tSkinnedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: SkinnedMesh,\n\n\t\tisSkinnedMesh: true,\n\n\t\tbind: function ( skeleton, bindMatrix ) {\n\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif ( bindMatrix === undefined ) {\n\n\t\t\t\tthis.updateMatrixWorld( true );\n\n\t\t\t\tthis.skeleton.calculateInverses();\n\n\t\t\t\tbindMatrix = this.matrixWorld;\n\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy( bindMatrix );\n\t\t\tthis.bindMatrixInverse.getInverse( bindMatrix );\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tthis.skeleton.pose();\n\n\t\t},\n\n\t\tnormalizeSkinWeights: function () {\n\n\t\t\tvar vector = new Vector4();\n\n\t\t\tvar skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor ( var i = 0, l = skinWeight.count; i < l; i ++ ) {\n\n\t\t\t\tvector.x = skinWeight.getX( i );\n\t\t\t\tvector.y = skinWeight.getY( i );\n\t\t\t\tvector.z = skinWeight.getZ( i );\n\t\t\t\tvector.w = skinWeight.getW( i );\n\n\t\t\t\tvar scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif ( scale !== Infinity ) {\n\n\t\t\t\t\tvector.multiplyScalar( scale );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tvector.set( 1, 0, 0, 0 ); // do something reasonable\n\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW( i, vector.x, vector.y, vector.z, vector.w );\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tMesh.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.bindMode === 'attached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.matrixWorld );\n\n\t\t\t} else if ( this.bindMode === 'detached' ) {\n\n\t\t\t\tthis.bindMatrixInverse.getInverse( this.bindMatrix );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode );\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author michael guerrero / http://realitymeltdown.com\n\t * @author ikerr / http://verold.com\n\t */\n\n\tvar _offsetMatrix = new Matrix4();\n\tvar _identityMatrix = new Matrix4();\n\n\tfunction Skeleton( bones, boneInverses ) {\n\n\t\t// copy the bone array\n\n\t\tbones = bones || [];\n\n\t\tthis.bones = bones.slice( 0 );\n\t\tthis.boneMatrices = new Float32Array( this.bones.length * 16 );\n\n\t\tthis.frame = - 1;\n\n\t\t// use the supplied bone inverses or calculate the inverses\n\n\t\tif ( boneInverses === undefined ) {\n\n\t\t\tthis.calculateInverses();\n\n\t\t} else {\n\n\t\t\tif ( this.bones.length === boneInverses.length ) {\n\n\t\t\t\tthis.boneInverses = boneInverses.slice( 0 );\n\n\t\t\t} else {\n\n\t\t\t\tconsole.warn( 'THREE.Skeleton boneInverses is the wrong length.' );\n\n\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\t\tthis.boneInverses.push( new Matrix4() );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Skeleton.prototype, {\n\n\t\tcalculateInverses: function () {\n\n\t\t\tthis.boneInverses = [];\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar inverse = new Matrix4();\n\n\t\t\t\tif ( this.bones[ i ] ) {\n\n\t\t\t\t\tinverse.getInverse( this.bones[ i ].matrixWorld );\n\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push( inverse );\n\n\t\t\t}\n\n\t\t},\n\n\t\tpose: function () {\n\n\t\t\tvar bone, i, il;\n\n\t\t\t// recover the bind-time world matrices\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tbone.matrixWorld.getInverse( this.boneInverses[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// compute the local matrices, positions, rotations and scales\n\n\t\t\tfor ( i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tbone = this.bones[ i ];\n\n\t\t\t\tif ( bone ) {\n\n\t\t\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t\t\tbone.matrix.getInverse( bone.parent.matrixWorld );\n\t\t\t\t\t\tbone.matrix.multiply( bone.matrixWorld );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tbone.matrix.copy( bone.matrixWorld );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose( bone.position, bone.quaternion, bone.scale );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdate: function () {\n\n\t\t\tvar bones = this.bones;\n\t\t\tvar boneInverses = this.boneInverses;\n\t\t\tvar boneMatrices = this.boneMatrices;\n\t\t\tvar boneTexture = this.boneTexture;\n\n\t\t\t// flatten bone matrices to array\n\n\t\t\tfor ( var i = 0, il = bones.length; i < il; i ++ ) {\n\n\t\t\t\t// compute the offset between the current and the original transform\n\n\t\t\t\tvar matrix = bones[ i ] ? bones[ i ].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices( matrix, boneInverses[ i ] );\n\t\t\t\t_offsetMatrix.toArray( boneMatrices, i * 16 );\n\n\t\t\t}\n\n\t\t\tif ( boneTexture !== undefined ) {\n\n\t\t\t\tboneTexture.needsUpdate = true;\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new Skeleton( this.bones, this.boneInverses );\n\n\t\t},\n\n\t\tgetBoneByName: function ( name ) {\n\n\t\t\tfor ( var i = 0, il = this.bones.length; i < il; i ++ ) {\n\n\t\t\t\tvar bone = this.bones[ i ];\n\n\t\t\t\tif ( bone.name === name ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn undefined;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mikael emtinger / http://gomo.se/\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author ikerr / http://verold.com\n\t */\n\n\tfunction Bone() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Bone';\n\n\t}\n\n\tBone.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Bone,\n\n\t\tisBone: true\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction InstancedMesh( geometry, material, count ) {\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.instanceMatrix = new BufferAttribute( new Float32Array( count * 16 ), 16 );\n\n\t\tthis.count = count;\n\n\t}\n\n\tInstancedMesh.prototype = Object.assign( Object.create( Mesh.prototype ), {\n\n\t\tconstructor: InstancedMesh,\n\n\t\tisInstancedMesh: true,\n\n\t\traycast: function () {},\n\n\t\tsetMatrixAt: function ( index, matrix ) {\n\n\t\t\tmatrix.toArray( this.instanceMatrix.array, index * 16 );\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *  linecap: \"round\",\n\t *  linejoin: \"round\"\n\t * }\n\t */\n\n\tfunction LineBasicMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'LineBasicMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.linewidth = 1;\n\t\tthis.linecap = 'round';\n\t\tthis.linejoin = 'round';\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineBasicMaterial.prototype = Object.create( Material.prototype );\n\tLineBasicMaterial.prototype.constructor = LineBasicMaterial;\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tLineBasicMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.linewidth = source.linewidth;\n\t\tthis.linecap = source.linecap;\n\t\tthis.linejoin = source.linejoin;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start = new Vector3();\n\tvar _end = new Vector3();\n\tvar _inverseMatrix$1 = new Matrix4();\n\tvar _ray$1 = new Ray();\n\tvar _sphere$2 = new Sphere();\n\n\tfunction Line( geometry, material, mode ) {\n\n\t\tif ( mode === 1 ) {\n\n\t\t\tconsole.error( 'THREE.Line: parameter THREE.LinePieces no longer supported. Use THREE.LineSegments instead.' );\n\n\t\t}\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Line';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new LineBasicMaterial( { color: Math.random() * 0xffffff } );\n\n\t}\n\n\tLine.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Line,\n\n\t\tisLine: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [ 0 ];\n\n\t\t\t\t\tfor ( var i = 1, l = positionAttribute.count; i < l; i ++ ) {\n\n\t\t\t\t\t\t_start.fromBufferAttribute( positionAttribute, i - 1 );\n\t\t\t\t\t\t_end.fromBufferAttribute( positionAttribute, i );\n\n\t\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i ] += _start.distanceTo( _end );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tlineDistances[ 0 ] = 0;\n\n\t\t\t\tfor ( var i = 1, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\tlineDistances[ i ] = lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i ] += vertices[ i - 1 ].distanceTo( vertices[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar precision = raycaster.linePrecision;\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$2.copy( geometry.boundingSphere );\n\t\t\t_sphere$2.applyMatrix4( matrixWorld );\n\t\t\t_sphere$2.radius += precision;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$2 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$1.getInverse( matrixWorld );\n\t\t\t_ray$1.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$1 );\n\n\t\t\tvar localPrecision = precision / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localPrecisionSq = localPrecision * localPrecision;\n\n\t\t\tvar vStart = new Vector3();\n\t\t\tvar vEnd = new Vector3();\n\t\t\tvar interSegment = new Vector3();\n\t\t\tvar interRay = new Vector3();\n\t\t\tvar step = ( this && this.isLineSegments ) ? 2 : 1;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, l = indices.length - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\t\t\t\t\t\tvar b = indices[ i + 1 ];\n\n\t\t\t\t\t\tvStart.fromArray( positions, a * 3 );\n\t\t\t\t\t\tvEnd.fromArray( positions, b * 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3 - 1; i < l; i += step ) {\n\n\t\t\t\t\t\tvStart.fromArray( positions, 3 * i );\n\t\t\t\t\t\tvEnd.fromArray( positions, 3 * i + 3 );\n\n\t\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vStart, vEnd, interRay, interSegment );\n\n\t\t\t\t\t\tif ( distSq > localPrecisionSq ) { continue; }\n\n\t\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar nbVertices = vertices.length;\n\n\t\t\t\tfor ( var i = 0; i < nbVertices - 1; i += step ) {\n\n\t\t\t\t\tvar distSq = _ray$1.distanceSqToSegment( vertices[ i ], vertices[ i + 1 ], interRay, interSegment );\n\n\t\t\t\t\tif ( distSq > localPrecisionSq ) { continue; }\n\n\t\t\t\t\tinterRay.applyMatrix4( this.matrixWorld ); //Move back to world space for distance calculation\n\n\t\t\t\t\tvar distance = raycaster.ray.origin.distanceTo( interRay );\n\n\t\t\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { continue; }\n\n\t\t\t\t\tintersects.push( {\n\n\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4( this.matrixWorld ),\n\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\tface: null,\n\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\tobject: this\n\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _start$1 = new Vector3();\n\tvar _end$1 = new Vector3();\n\n\tfunction LineSegments( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineSegments';\n\n\t}\n\n\tLineSegments.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineSegments,\n\n\t\tisLineSegments: true,\n\n\t\tcomputeLineDistances: function () {\n\n\t\t\tvar geometry = this.geometry;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\t// we assume non-indexed geometry\n\n\t\t\t\tif ( geometry.index === null ) {\n\n\t\t\t\t\tvar positionAttribute = geometry.attributes.position;\n\t\t\t\t\tvar lineDistances = [];\n\n\t\t\t\t\tfor ( var i = 0, l = positionAttribute.count; i < l; i += 2 ) {\n\n\t\t\t\t\t\t_start$1.fromBufferAttribute( positionAttribute, i );\n\t\t\t\t\t\t_end$1.fromBufferAttribute( positionAttribute, i + 1 );\n\n\t\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute( 'lineDistance', new Float32BufferAttribute( lineDistances, 1 ) );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tconsole.warn( 'THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.' );\n\n\t\t\t\t}\n\n\t\t\t} else if ( geometry.isGeometry ) {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\t\t\t\tvar lineDistances = geometry.lineDistances;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i += 2 ) {\n\n\t\t\t\t\t_start$1.copy( vertices[ i ] );\n\t\t\t\t\t_end$1.copy( vertices[ i + 1 ] );\n\n\t\t\t\t\tlineDistances[ i ] = ( i === 0 ) ? 0 : lineDistances[ i - 1 ];\n\t\t\t\t\tlineDistances[ i + 1 ] = lineDistances[ i ] + _start$1.distanceTo( _end$1 );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mgreter / http://github.com/mgreter\n\t */\n\n\tfunction LineLoop( geometry, material ) {\n\n\t\tLine.call( this, geometry, material );\n\n\t\tthis.type = 'LineLoop';\n\n\t}\n\n\tLineLoop.prototype = Object.assign( Object.create( Line.prototype ), {\n\n\t\tconstructor: LineLoop,\n\n\t\tisLineLoop: true,\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *  map: new THREE.Texture( <Image> ),\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  size: <float>,\n\t *  sizeAttenuation: <bool>\n\t *\n\t *  morphTargets: <bool>\n\t * }\n\t */\n\n\tfunction PointsMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'PointsMaterial';\n\n\t\tthis.color = new Color( 0xffffff );\n\n\t\tthis.map = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.size = 1;\n\t\tthis.sizeAttenuation = true;\n\n\t\tthis.morphTargets = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tPointsMaterial.prototype = Object.create( Material.prototype );\n\tPointsMaterial.prototype.constructor = PointsMaterial;\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tPointsMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.size = source.size;\n\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\n\t\tthis.morphTargets = source.morphTargets;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tvar _inverseMatrix$2 = new Matrix4();\n\tvar _ray$2 = new Ray();\n\tvar _sphere$3 = new Sphere();\n\tvar _position$1 = new Vector3();\n\n\tfunction Points( geometry, material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Points';\n\n\t\tthis.geometry = geometry !== undefined ? geometry : new BufferGeometry();\n\t\tthis.material = material !== undefined ? material : new PointsMaterial( { color: Math.random() * 0xffffff } );\n\n\t\tthis.updateMorphTargets();\n\n\t}\n\n\tPoints.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Points,\n\n\t\tisPoints: true,\n\n\t\traycast: function ( raycaster, intersects ) {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar matrixWorld = this.matrixWorld;\n\t\t\tvar threshold = raycaster.params.Points.threshold;\n\n\t\t\t// Checking boundingSphere distance to ray\n\n\t\t\tif ( geometry.boundingSphere === null ) { geometry.computeBoundingSphere(); }\n\n\t\t\t_sphere$3.copy( geometry.boundingSphere );\n\t\t\t_sphere$3.applyMatrix4( matrixWorld );\n\t\t\t_sphere$3.radius += threshold;\n\n\t\t\tif ( raycaster.ray.intersectsSphere( _sphere$3 ) === false ) { return; }\n\n\t\t\t//\n\n\t\t\t_inverseMatrix$2.getInverse( matrixWorld );\n\t\t\t_ray$2.copy( raycaster.ray ).applyMatrix4( _inverseMatrix$2 );\n\n\t\t\tvar localThreshold = threshold / ( ( this.scale.x + this.scale.y + this.scale.z ) / 3 );\n\t\t\tvar localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar index = geometry.index;\n\t\t\t\tvar attributes = geometry.attributes;\n\t\t\t\tvar positions = attributes.position.array;\n\n\t\t\t\tif ( index !== null ) {\n\n\t\t\t\t\tvar indices = index.array;\n\n\t\t\t\t\tfor ( var i = 0, il = indices.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar a = indices[ i ];\n\n\t\t\t\t\t\t_position$1.fromArray( positions, a * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, a, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfor ( var i = 0, l = positions.length / 3; i < l; i ++ ) {\n\n\t\t\t\t\t\t_position$1.fromArray( positions, i * 3 );\n\n\t\t\t\t\t\ttestPoint( _position$1, i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar vertices = geometry.vertices;\n\n\t\t\t\tfor ( var i = 0, l = vertices.length; i < l; i ++ ) {\n\n\t\t\t\t\ttestPoint( vertices[ i ], i, localThresholdSq, matrixWorld, raycaster, intersects, this );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tupdateMorphTargets: function () {\n\n\t\t\tvar geometry = this.geometry;\n\t\t\tvar m, ml, name;\n\n\t\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\t\tvar morphAttributes = geometry.morphAttributes;\n\t\t\t\tvar keys = Object.keys( morphAttributes );\n\n\t\t\t\tif ( keys.length > 0 ) {\n\n\t\t\t\t\tvar morphAttribute = morphAttributes[ keys[ 0 ] ];\n\n\t\t\t\t\tif ( morphAttribute !== undefined ) {\n\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor ( m = 0, ml = morphAttribute.length; m < ml; m ++ ) {\n\n\t\t\t\t\t\t\tname = morphAttribute[ m ].name || String( m );\n\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push( 0 );\n\t\t\t\t\t\t\tthis.morphTargetDictionary[ name ] = m;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\tvar morphTargets = geometry.morphTargets;\n\n\t\t\t\tif ( morphTargets !== undefined && morphTargets.length > 0 ) {\n\n\t\t\t\t\tconsole.error( 'THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.' );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor( this.geometry, this.material ).copy( this );\n\n\t\t}\n\n\t} );\n\n\tfunction testPoint( point, index, localThresholdSq, matrixWorld, raycaster, intersects, object ) {\n\n\t\tvar rayPointDistanceSq = _ray$2.distanceSqToPoint( point );\n\n\t\tif ( rayPointDistanceSq < localThresholdSq ) {\n\n\t\t\tvar intersectPoint = new Vector3();\n\n\t\t\t_ray$2.closestPointToPoint( point, intersectPoint );\n\t\t\tintersectPoint.applyMatrix4( matrixWorld );\n\n\t\t\tvar distance = raycaster.ray.origin.distanceTo( intersectPoint );\n\n\t\t\tif ( distance < raycaster.near || distance > raycaster.far ) { return; }\n\n\t\t\tintersects.push( {\n\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt( rayPointDistanceSq ),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\n\t\t\t} );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction VideoTexture( video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.format = format !== undefined ? format : RGBFormat;\n\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tVideoTexture.prototype = Object.assign( Object.create( Texture.prototype ), {\n\n\t\tconstructor: VideoTexture,\n\n\t\tisVideoTexture: true,\n\n\t\tupdate: function () {\n\n\t\t\tvar video = this.image;\n\n\t\t\tif ( video.readyState >= video.HAVE_CURRENT_DATA ) {\n\n\t\t\t\tthis.needsUpdate = true;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction CompressedTexture( mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding ) {\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding );\n\n\t\tthis.image = { width: width, height: height };\n\t\tthis.mipmaps = mipmaps;\n\n\t\t// no flipping for cube textures\n\t\t// (also flipping doesn't work for compressed textures )\n\n\t\tthis.flipY = false;\n\n\t\t// can't generate mipmaps for compressed textures\n\t\t// mips must be embedded in DDS files\n\n\t\tthis.generateMipmaps = false;\n\n\t}\n\n\tCompressedTexture.prototype = Object.create( Texture.prototype );\n\tCompressedTexture.prototype.constructor = CompressedTexture;\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction CanvasTexture( canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy ) {\n\n\t\tTexture.call( this, canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.needsUpdate = true;\n\n\t}\n\n\tCanvasTexture.prototype = Object.create( Texture.prototype );\n\tCanvasTexture.prototype.constructor = CanvasTexture;\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\t/**\n\t * @author Matt DesLauriers / @mattdesl\n\t * @author atix / arthursilber.de\n\t */\n\n\tfunction DepthTexture( width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format ) {\n\n\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\tif ( format !== DepthFormat && format !== DepthStencilFormat ) {\n\n\t\t\tthrow new Error( 'DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat' );\n\n\t\t}\n\n\t\tif ( type === undefined && format === DepthFormat ) { type = UnsignedShortType; }\n\t\tif ( type === undefined && format === DepthStencilFormat ) { type = UnsignedInt248Type; }\n\n\t\tTexture.call( this, null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy );\n\n\t\tthis.image = { width: width, height: height };\n\n\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\n\t\tthis.flipY = false;\n\t\tthis.generateMipmaps\t= false;\n\n\t}\n\n\tDepthTexture.prototype = Object.create( Texture.prototype );\n\tDepthTexture.prototype.constructor = DepthTexture;\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction WireframeGeometry( geometry ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'WireframeGeometry';\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar i, j, l, o, ol;\n\t\tvar edge = [ 0, 0 ], edges = {}, e, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\t\tvar vertex;\n\n\t\t// different logic for Geometry and BufferGeometry\n\n\t\tif ( geometry && geometry.isGeometry ) {\n\n\t\t\t// create a data structure that contains all edges without duplicates\n\n\t\t\tvar faces = geometry.faces;\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// generate vertices\n\n\t\t\tfor ( key in edges ) {\n\n\t\t\t\te = edges[ key ];\n\n\t\t\t\tvertex = geometry.vertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = geometry.vertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t} else if ( geometry && geometry.isBufferGeometry ) {\n\n\t\t\tvar position, indices, groups;\n\t\t\tvar group, start, count;\n\t\t\tvar index1, index2;\n\n\t\t\tvertex = new Vector3();\n\n\t\t\tif ( geometry.index !== null ) {\n\n\t\t\t\t// indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\t\t\t\tindices = geometry.index;\n\t\t\t\tgroups = geometry.groups;\n\n\t\t\t\tif ( groups.length === 0 ) {\n\n\t\t\t\t\tgroups = [ { start: 0, count: indices.count, materialIndex: 0 } ];\n\n\t\t\t\t}\n\n\t\t\t\t// create a data structure that contains all eges without duplicates\n\n\t\t\t\tfor ( o = 0, ol = groups.length; o < ol; ++ o ) {\n\n\t\t\t\t\tgroup = groups[ o ];\n\n\t\t\t\t\tstart = group.start;\n\t\t\t\t\tcount = group.count;\n\n\t\t\t\t\tfor ( i = start, l = ( start + count ); i < l; i += 3 ) {\n\n\t\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t\tedge1 = indices.getX( i + j );\n\t\t\t\t\t\t\tedge2 = indices.getX( i + ( j + 1 ) % 3 );\n\t\t\t\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 ); // sorting prevents duplicates\n\t\t\t\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ] };\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// generate vertices\n\n\t\t\t\tfor ( key in edges ) {\n\n\t\t\t\t\te = edges[ key ];\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index1 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\tvertex.fromBufferAttribute( position, e.index2 );\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// non-indexed BufferGeometry\n\n\t\t\t\tposition = geometry.attributes.position;\n\n\t\t\t\tfor ( i = 0, l = ( position.count / 3 ); i < l; i ++ ) {\n\n\t\t\t\t\tfor ( j = 0; j < 3; j ++ ) {\n\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\n\t\t\t\t\t\tindex1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index1 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t\tindex2 = 3 * i + ( ( j + 1 ) % 3 );\n\t\t\t\t\t\tvertex.fromBufferAttribute( position, index2 );\n\t\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tWireframeGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tWireframeGeometry.prototype.constructor = WireframeGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout http://prideout.net/blog/?p=44\n\t */\n\n\t// ParametricGeometry\n\n\tfunction ParametricGeometry( func, slices, stacks ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ParametricGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ParametricBufferGeometry( func, slices, stacks ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tParametricGeometry.prototype = Object.create( Geometry.prototype );\n\tParametricGeometry.prototype.constructor = ParametricGeometry;\n\n\t// ParametricBufferGeometry\n\n\tfunction ParametricBufferGeometry( func, slices, stacks ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ParametricBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tfunc: func,\n\t\t\tslices: slices,\n\t\t\tstacks: stacks\n\t\t};\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\tvar EPS = 0.00001;\n\n\t\tvar normal = new Vector3();\n\n\t\tvar p0 = new Vector3(), p1 = new Vector3();\n\t\tvar pu = new Vector3(), pv = new Vector3();\n\n\t\tvar i, j;\n\n\t\tif ( func.length < 3 ) {\n\n\t\t\tconsole.error( 'THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.' );\n\n\t\t}\n\n\t\t// generate vertices, normals and uvs\n\n\t\tvar sliceCount = slices + 1;\n\n\t\tfor ( i = 0; i <= stacks; i ++ ) {\n\n\t\t\tvar v = i / stacks;\n\n\t\t\tfor ( j = 0; j <= slices; j ++ ) {\n\n\t\t\t\tvar u = j / slices;\n\n\t\t\t\t// vertex\n\n\t\t\t\tfunc( u, v, p0 );\n\t\t\t\tvertices.push( p0.x, p0.y, p0.z );\n\n\t\t\t\t// normal\n\n\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\tif ( u - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u - EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u + EPS, v, p1 );\n\t\t\t\t\tpu.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\tif ( v - EPS >= 0 ) {\n\n\t\t\t\t\tfunc( u, v - EPS, p1 );\n\t\t\t\t\tpv.subVectors( p0, p1 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\tfunc( u, v + EPS, p1 );\n\t\t\t\t\tpv.subVectors( p1, p0 );\n\n\t\t\t\t}\n\n\t\t\t\t// cross product of tangent vectors returns surface normal\n\n\t\t\t\tnormal.crossVectors( pu, pv ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u, v );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( i = 0; i < stacks; i ++ ) {\n\n\t\t\tfor ( j = 0; j < slices; j ++ ) {\n\n\t\t\t\tvar a = i * sliceCount + j;\n\t\t\t\tvar b = i * sliceCount + j + 1;\n\t\t\t\tvar c = ( i + 1 ) * sliceCount + j + 1;\n\t\t\t\tvar d = ( i + 1 ) * sliceCount + j;\n\n\t\t\t\t// faces one and two\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tParametricBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tParametricBufferGeometry.prototype.constructor = ParametricBufferGeometry;\n\n\t/**\n\t * @author clockworkgeek / https://github.com/clockworkgeek\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// PolyhedronGeometry\n\n\tfunction PolyhedronGeometry( vertices, indices, radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new PolyhedronBufferGeometry( vertices, indices, radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tPolyhedronGeometry.prototype = Object.create( Geometry.prototype );\n\tPolyhedronGeometry.prototype.constructor = PolyhedronGeometry;\n\n\t// PolyhedronBufferGeometry\n\n\tfunction PolyhedronBufferGeometry( vertices, indices, radius, detail ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'PolyhedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tvertices: vertices,\n\t\t\tindices: indices,\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tdetail = detail || 0;\n\n\t\t// default buffer data\n\n\t\tvar vertexBuffer = [];\n\t\tvar uvBuffer = [];\n\n\t\t// the subdivision creates the vertex buffer data\n\n\t\tsubdivide( detail );\n\n\t\t// all vertices should lie on a conceptual sphere with a given radius\n\n\t\tapplyRadius( radius );\n\n\t\t// finally, create the uv data\n\n\t\tgenerateUVs();\n\n\t\t// build non-indexed geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertexBuffer, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( vertexBuffer.slice(), 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvBuffer, 2 ) );\n\n\t\tif ( detail === 0 ) {\n\n\t\t\tthis.computeVertexNormals(); // flat normals\n\n\t\t} else {\n\n\t\t\tthis.normalizeNormals(); // smooth normals\n\n\t\t}\n\n\t\t// helper functions\n\n\t\tfunction subdivide( detail ) {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\t// iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\tfor ( var i = 0; i < indices.length; i += 3 ) {\n\n\t\t\t\t// get the vertices of the face\n\n\t\t\t\tgetVertexByIndex( indices[ i + 0 ], a );\n\t\t\t\tgetVertexByIndex( indices[ i + 1 ], b );\n\t\t\t\tgetVertexByIndex( indices[ i + 2 ], c );\n\n\t\t\t\t// perform subdivision\n\n\t\t\t\tsubdivideFace( a, b, c, detail );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction subdivideFace( a, b, c, detail ) {\n\n\t\t\tvar cols = Math.pow( 2, detail );\n\n\t\t\t// we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\tvar v = [];\n\n\t\t\tvar i, j;\n\n\t\t\t// construct all of the vertices for this subdivision\n\n\t\t\tfor ( i = 0; i <= cols; i ++ ) {\n\n\t\t\t\tv[ i ] = [];\n\n\t\t\t\tvar aj = a.clone().lerp( c, i / cols );\n\t\t\t\tvar bj = b.clone().lerp( c, i / cols );\n\n\t\t\t\tvar rows = cols - i;\n\n\t\t\t\tfor ( j = 0; j <= rows; j ++ ) {\n\n\t\t\t\t\tif ( j === 0 && i === cols ) {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tv[ i ][ j ] = aj.clone().lerp( bj, j / rows );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// construct all of the faces\n\n\t\t\tfor ( i = 0; i < cols; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j < 2 * ( cols - i ) - 1; j ++ ) {\n\n\t\t\t\t\tvar k = Math.floor( j / 2 );\n\n\t\t\t\t\tif ( j % 2 === 0 ) {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\t\t\t\t\t\tpushVertex( v[ i ][ k ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tpushVertex( v[ i ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k + 1 ] );\n\t\t\t\t\t\tpushVertex( v[ i + 1 ][ k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction applyRadius( radius ) {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\t// iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvertex.normalize().multiplyScalar( radius );\n\n\t\t\t\tvertexBuffer[ i + 0 ] = vertex.x;\n\t\t\t\tvertexBuffer[ i + 1 ] = vertex.y;\n\t\t\t\tvertexBuffer[ i + 2 ] = vertex.z;\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tfor ( var i = 0; i < vertexBuffer.length; i += 3 ) {\n\n\t\t\t\tvertex.x = vertexBuffer[ i + 0 ];\n\t\t\t\tvertex.y = vertexBuffer[ i + 1 ];\n\t\t\t\tvertex.z = vertexBuffer[ i + 2 ];\n\n\t\t\t\tvar u = azimuth( vertex ) / 2 / Math.PI + 0.5;\n\t\t\t\tvar v = inclination( vertex ) / Math.PI + 0.5;\n\t\t\t\tuvBuffer.push( u, 1 - v );\n\n\t\t\t}\n\n\t\t\tcorrectUVs();\n\n\t\t\tcorrectSeam();\n\n\t\t}\n\n\t\tfunction correctSeam() {\n\n\t\t\t// handle case when face straddles the seam, see #3269\n\n\t\t\tfor ( var i = 0; i < uvBuffer.length; i += 6 ) {\n\n\t\t\t\t// uv data of a single face\n\n\t\t\t\tvar x0 = uvBuffer[ i + 0 ];\n\t\t\t\tvar x1 = uvBuffer[ i + 2 ];\n\t\t\t\tvar x2 = uvBuffer[ i + 4 ];\n\n\t\t\t\tvar max = Math.max( x0, x1, x2 );\n\t\t\t\tvar min = Math.min( x0, x1, x2 );\n\n\t\t\t\t// 0.9 is somewhat arbitrary\n\n\t\t\t\tif ( max > 0.9 && min < 0.1 ) {\n\n\t\t\t\t\tif ( x0 < 0.2 ) { uvBuffer[ i + 0 ] += 1; }\n\t\t\t\t\tif ( x1 < 0.2 ) { uvBuffer[ i + 2 ] += 1; }\n\t\t\t\t\tif ( x2 < 0.2 ) { uvBuffer[ i + 4 ] += 1; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction pushVertex( vertex ) {\n\n\t\t\tvertexBuffer.push( vertex.x, vertex.y, vertex.z );\n\n\t\t}\n\n\t\tfunction getVertexByIndex( index, vertex ) {\n\n\t\t\tvar stride = index * 3;\n\n\t\t\tvertex.x = vertices[ stride + 0 ];\n\t\t\tvertex.y = vertices[ stride + 1 ];\n\t\t\tvertex.z = vertices[ stride + 2 ];\n\n\t\t}\n\n\t\tfunction correctUVs() {\n\n\t\t\tvar a = new Vector3();\n\t\t\tvar b = new Vector3();\n\t\t\tvar c = new Vector3();\n\n\t\t\tvar centroid = new Vector3();\n\n\t\t\tvar uvA = new Vector2();\n\t\t\tvar uvB = new Vector2();\n\t\t\tvar uvC = new Vector2();\n\n\t\t\tfor ( var i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6 ) {\n\n\t\t\t\ta.set( vertexBuffer[ i + 0 ], vertexBuffer[ i + 1 ], vertexBuffer[ i + 2 ] );\n\t\t\t\tb.set( vertexBuffer[ i + 3 ], vertexBuffer[ i + 4 ], vertexBuffer[ i + 5 ] );\n\t\t\t\tc.set( vertexBuffer[ i + 6 ], vertexBuffer[ i + 7 ], vertexBuffer[ i + 8 ] );\n\n\t\t\t\tuvA.set( uvBuffer[ j + 0 ], uvBuffer[ j + 1 ] );\n\t\t\t\tuvB.set( uvBuffer[ j + 2 ], uvBuffer[ j + 3 ] );\n\t\t\t\tuvC.set( uvBuffer[ j + 4 ], uvBuffer[ j + 5 ] );\n\n\t\t\t\tcentroid.copy( a ).add( b ).add( c ).divideScalar( 3 );\n\n\t\t\t\tvar azi = azimuth( centroid );\n\n\t\t\t\tcorrectUV( uvA, j + 0, a, azi );\n\t\t\t\tcorrectUV( uvB, j + 2, b, azi );\n\t\t\t\tcorrectUV( uvC, j + 4, c, azi );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction correctUV( uv, stride, vector, azimuth ) {\n\n\t\t\tif ( ( azimuth < 0 ) && ( uv.x === 1 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = uv.x - 1;\n\n\t\t\t}\n\n\t\t\tif ( ( vector.x === 0 ) && ( vector.z === 0 ) ) {\n\n\t\t\t\tuvBuffer[ stride ] = azimuth / 2 / Math.PI + 0.5;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// Angle around the Y axis, counter-clockwise when looking from above.\n\n\t\tfunction azimuth( vector ) {\n\n\t\t\treturn Math.atan2( vector.z, - vector.x );\n\n\t\t}\n\n\n\t\t// Angle above the XZ plane.\n\n\t\tfunction inclination( vector ) {\n\n\t\t\treturn Math.atan2( - vector.y, Math.sqrt( ( vector.x * vector.x ) + ( vector.z * vector.z ) ) );\n\n\t\t}\n\n\t}\n\n\tPolyhedronBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tPolyhedronBufferGeometry.prototype.constructor = PolyhedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TetrahedronGeometry\n\n\tfunction TetrahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TetrahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TetrahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTetrahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tTetrahedronGeometry.prototype.constructor = TetrahedronGeometry;\n\n\t// TetrahedronBufferGeometry\n\n\tfunction TetrahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 1, 1, \t- 1, - 1, 1, \t- 1, 1, - 1, \t1, - 1, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t2, 1, 0, \t0, 3, 2,\t1, 3, 0,\t2, 3, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'TetrahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tTetrahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tTetrahedronBufferGeometry.prototype.constructor = TetrahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// OctahedronGeometry\n\n\tfunction OctahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'OctahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new OctahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tOctahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tOctahedronGeometry.prototype.constructor = OctahedronGeometry;\n\n\t// OctahedronBufferGeometry\n\n\tfunction OctahedronBufferGeometry( radius, detail ) {\n\n\t\tvar vertices = [\n\t\t\t1, 0, 0, \t- 1, 0, 0,\t0, 1, 0,\n\t\t\t0, - 1, 0, \t0, 0, 1,\t0, 0, - 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t0, 2, 4,\t0, 4, 3,\t0, 3, 5,\n\t\t\t0, 5, 2,\t1, 2, 5,\t1, 5, 3,\n\t\t\t1, 3, 4,\t1, 4, 2\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'OctahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tOctahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tOctahedronBufferGeometry.prototype.constructor = OctahedronBufferGeometry;\n\n\t/**\n\t * @author timothypratley / https://github.com/timothypratley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// IcosahedronGeometry\n\n\tfunction IcosahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'IcosahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new IcosahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tIcosahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tIcosahedronGeometry.prototype.constructor = IcosahedronGeometry;\n\n\t// IcosahedronBufferGeometry\n\n\tfunction IcosahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\n\t\tvar vertices = [\n\t\t\t- 1, t, 0, \t1, t, 0, \t- 1, - t, 0, \t1, - t, 0,\n\t\t\t 0, - 1, t, \t0, 1, t,\t0, - 1, - t, \t0, 1, - t,\n\t\t\t t, 0, - 1, \tt, 0, 1, \t- t, 0, - 1, \t- t, 0, 1\n\t\t];\n\n\t\tvar indices = [\n\t\t\t 0, 11, 5, \t0, 5, 1, \t0, 1, 7, \t0, 7, 10, \t0, 10, 11,\n\t\t\t 1, 5, 9, \t5, 11, 4,\t11, 10, 2,\t10, 7, 6,\t7, 1, 8,\n\t\t\t 3, 9, 4, \t3, 4, 2,\t3, 2, 6,\t3, 6, 8,\t3, 8, 9,\n\t\t\t 4, 9, 5, \t2, 4, 11,\t6, 2, 10,\t8, 6, 7,\t9, 8, 1\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'IcosahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tIcosahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tIcosahedronBufferGeometry.prototype.constructor = IcosahedronBufferGeometry;\n\n\t/**\n\t * @author Abe Pazos / https://hamoid.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// DodecahedronGeometry\n\n\tfunction DodecahedronGeometry( radius, detail ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'DodecahedronGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t\tthis.fromBufferGeometry( new DodecahedronBufferGeometry( radius, detail ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tDodecahedronGeometry.prototype = Object.create( Geometry.prototype );\n\tDodecahedronGeometry.prototype.constructor = DodecahedronGeometry;\n\n\t// DodecahedronBufferGeometry\n\n\tfunction DodecahedronBufferGeometry( radius, detail ) {\n\n\t\tvar t = ( 1 + Math.sqrt( 5 ) ) / 2;\n\t\tvar r = 1 / t;\n\n\t\tvar vertices = [\n\n\t\t\t// (±1, ±1, ±1)\n\t\t\t- 1, - 1, - 1,\t- 1, - 1, 1,\n\t\t\t- 1, 1, - 1, - 1, 1, 1,\n\t\t\t1, - 1, - 1, 1, - 1, 1,\n\t\t\t1, 1, - 1, 1, 1, 1,\n\n\t\t\t// (0, ±1/φ, ±φ)\n\t\t\t 0, - r, - t, 0, - r, t,\n\t\t\t 0, r, - t, 0, r, t,\n\n\t\t\t// (±1/φ, ±φ, 0)\n\t\t\t- r, - t, 0, - r, t, 0,\n\t\t\t r, - t, 0, r, t, 0,\n\n\t\t\t// (±φ, 0, ±1/φ)\n\t\t\t- t, 0, - r, t, 0, - r,\n\t\t\t- t, 0, r, t, 0, r\n\t\t];\n\n\t\tvar indices = [\n\t\t\t3, 11, 7, \t3, 7, 15, \t3, 15, 13,\n\t\t\t7, 19, 17, \t7, 17, 6, \t7, 6, 15,\n\t\t\t17, 4, 8, \t17, 8, 10, \t17, 10, 6,\n\t\t\t8, 0, 16, \t8, 16, 2, \t8, 2, 10,\n\t\t\t0, 12, 1, \t0, 1, 18, \t0, 18, 16,\n\t\t\t6, 10, 2, \t6, 2, 13, \t6, 13, 15,\n\t\t\t2, 16, 18, \t2, 18, 3, \t2, 3, 13,\n\t\t\t18, 1, 9, \t18, 9, 11, \t18, 11, 3,\n\t\t\t4, 14, 12, \t4, 12, 0, \t4, 0, 8,\n\t\t\t11, 9, 5, \t11, 5, 19, \t11, 19, 7,\n\t\t\t19, 5, 14, \t19, 14, 4, \t19, 4, 17,\n\t\t\t1, 12, 14, \t1, 14, 5, \t1, 5, 9\n\t\t];\n\n\t\tPolyhedronBufferGeometry.call( this, vertices, indices, radius, detail );\n\n\t\tthis.type = 'DodecahedronBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tdetail: detail\n\t\t};\n\n\t}\n\n\tDodecahedronBufferGeometry.prototype = Object.create( PolyhedronBufferGeometry.prototype );\n\tDodecahedronBufferGeometry.prototype.constructor = DodecahedronBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode / https://github.com/oosmoxiecode\n\t * @author WestLangley / https://github.com/WestLangley\n\t * @author zz85 / https://github.com/zz85\n\t * @author miningold / https://github.com/miningold\n\t * @author jonobr1 / https://github.com/jonobr1\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t */\n\n\t// TubeGeometry\n\n\tfunction TubeGeometry( path, tubularSegments, radius, radialSegments, closed, taper ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TubeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\tif ( taper !== undefined ) { console.warn( 'THREE.TubeGeometry: taper has been removed.' ); }\n\n\t\tvar bufferGeometry = new TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = bufferGeometry.tangents;\n\t\tthis.normals = bufferGeometry.normals;\n\t\tthis.binormals = bufferGeometry.binormals;\n\n\t\t// create geometry\n\n\t\tthis.fromBufferGeometry( bufferGeometry );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTubeGeometry.prototype = Object.create( Geometry.prototype );\n\tTubeGeometry.prototype.constructor = TubeGeometry;\n\n\t// TubeBufferGeometry\n\n\tfunction TubeBufferGeometry( path, tubularSegments, radius, radialSegments, closed ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TubeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpath: path,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradius: radius,\n\t\t\tradialSegments: radialSegments,\n\t\t\tclosed: closed\n\t\t};\n\n\t\ttubularSegments = tubularSegments || 64;\n\t\tradius = radius || 1;\n\t\tradialSegments = radialSegments || 8;\n\t\tclosed = closed || false;\n\n\t\tvar frames = path.computeFrenetFrames( tubularSegments, closed );\n\n\t\t// expose internals\n\n\t\tthis.tangents = frames.tangents;\n\t\tthis.normals = frames.normals;\n\t\tthis.binormals = frames.binormals;\n\n\t\t// helper variables\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar P = new Vector3();\n\n\t\tvar i, j;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\t\tvar indices = [];\n\n\t\t// create buffer data\n\n\t\tgenerateBufferData();\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// functions\n\n\t\tfunction generateBufferData() {\n\n\t\t\tfor ( i = 0; i < tubularSegments; i ++ ) {\n\n\t\t\t\tgenerateSegment( i );\n\n\t\t\t}\n\n\t\t\t// if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t// at the regular position on the given path\n\t\t\t//\n\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\t\t\tgenerateSegment( ( closed === false ) ? tubularSegments : 0 );\n\n\t\t\t// uvs are generated in a separate function.\n\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\tgenerateUVs();\n\n\t\t\t// finally create faces\n\n\t\t\tgenerateIndices();\n\n\t\t}\n\n\t\tfunction generateSegment( i ) {\n\n\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\n\t\t\tP = path.getPointAt( i / tubularSegments, P );\n\n\t\t\t// retrieve corresponding normal and binormal\n\n\t\t\tvar N = frames.normals[ i ];\n\t\t\tvar B = frames.binormals[ i ];\n\n\t\t\t// generate normals and vertices for the current segment\n\n\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\tvar sin = Math.sin( v );\n\t\t\t\tvar cos = - Math.cos( v );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.x = ( cos * N.x + sin * B.x );\n\t\t\t\tnormal.y = ( cos * N.y + sin * B.y );\n\t\t\t\tnormal.z = ( cos * N.z + sin * B.z );\n\t\t\t\tnormal.normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\tvertex.z = P.z + radius * normal.z;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateIndices() {\n\n\t\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\tfunction generateUVs() {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\tuv.y = j / radialSegments;\n\n\t\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tTubeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTubeBufferGeometry.prototype.constructor = TubeBufferGeometry;\n\n\tTubeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tdata.path = this.parameters.path.toJSON();\n\n\t\treturn data;\n\n\t};\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * based on http://www.blackpawn.com/texts/pqtorus/\n\t */\n\n\t// TorusKnotGeometry\n\n\tfunction TorusKnotGeometry( radius, tube, tubularSegments, radialSegments, p, q, heightScale ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tif ( heightScale !== undefined ) { console.warn( 'THREE.TorusKnotGeometry: heightScale has been deprecated. Use .scale( x, y, z ) instead.' ); }\n\n\t\tthis.fromBufferGeometry( new TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusKnotGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusKnotGeometry.prototype.constructor = TorusKnotGeometry;\n\n\t// TorusKnotBufferGeometry\n\n\tfunction TorusKnotBufferGeometry( radius, tube, tubularSegments, radialSegments, p, q ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusKnotBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tradialSegments: radialSegments,\n\t\t\tp: p,\n\t\t\tq: q\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 64;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\tp = p || 2;\n\t\tq = q || 3;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, j;\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar P1 = new Vector3();\n\t\tvar P2 = new Vector3();\n\n\t\tvar B = new Vector3();\n\t\tvar T = new Vector3();\n\t\tvar N = new Vector3();\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( i = 0; i <= tubularSegments; ++ i ) {\n\n\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\n\t\t\tvar u = i / tubularSegments * p * Math.PI * 2;\n\n\t\t\t// now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\tcalculatePositionOnCurve( u, p, q, radius, P1 );\n\t\t\tcalculatePositionOnCurve( u + 0.01, p, q, radius, P2 );\n\n\t\t\t// calculate orthonormal basis\n\n\t\t\tT.subVectors( P2, P1 );\n\t\t\tN.addVectors( P2, P1 );\n\t\t\tB.crossVectors( T, N );\n\t\t\tN.crossVectors( B, T );\n\n\t\t\t// normalize B, N. T can be ignored, we don't use it\n\n\t\t\tB.normalize();\n\t\t\tN.normalize();\n\n\t\t\tfor ( j = 0; j <= radialSegments; ++ j ) {\n\n\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\t\t\t\tvar cx = - tube * Math.cos( v );\n\t\t\t\tvar cy = tube * Math.sin( v );\n\n\t\t\t\t// now calculate the final vertex position.\n\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\tvertex.x = P1.x + ( cx * N.x + cy * B.x );\n\t\t\t\tvertex.y = P1.y + ( cx * N.y + cy * B.y );\n\t\t\t\tvertex.z = P1.z + ( cx * N.z + cy * B.z );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\tnormal.subVectors( vertex, P1 ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= tubularSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= radialSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( radialSegments + 1 ) * ( j - 1 ) + ( i - 1 );\n\t\t\t\tvar b = ( radialSegments + 1 ) * j + ( i - 1 );\n\t\t\t\tvar c = ( radialSegments + 1 ) * j + i;\n\t\t\t\tvar d = ( radialSegments + 1 ) * ( j - 1 ) + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// this function calculates the current position on the torus curve\n\n\t\tfunction calculatePositionOnCurve( u, p, q, radius, position ) {\n\n\t\t\tvar cu = Math.cos( u );\n\t\t\tvar su = Math.sin( u );\n\t\t\tvar quOverP = q / p * u;\n\t\t\tvar cs = Math.cos( quOverP );\n\n\t\t\tposition.x = radius * ( 2 + cs ) * 0.5 * cu;\n\t\t\tposition.y = radius * ( 2 + cs ) * su * 0.5;\n\t\t\tposition.z = radius * Math.sin( quOverP ) * 0.5;\n\n\t\t}\n\n\t}\n\n\tTorusKnotBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusKnotBufferGeometry.prototype.constructor = TorusKnotBufferGeometry;\n\n\t/**\n\t * @author oosmoxiecode\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// TorusGeometry\n\n\tfunction TorusGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TorusGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTorusGeometry.prototype = Object.create( Geometry.prototype );\n\tTorusGeometry.prototype.constructor = TorusGeometry;\n\n\t// TorusBufferGeometry\n\n\tfunction TorusBufferGeometry( radius, tube, radialSegments, tubularSegments, arc ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'TorusBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\ttube: tube,\n\t\t\tradialSegments: radialSegments,\n\t\t\ttubularSegments: tubularSegments,\n\t\t\tarc: arc\n\t\t};\n\n\t\tradius = radius || 1;\n\t\ttube = tube || 0.4;\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\ttubularSegments = Math.floor( tubularSegments ) || 6;\n\t\tarc = arc || Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar center = new Vector3();\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= tubularSegments; i ++ ) {\n\n\t\t\t\tvar u = i / tubularSegments * arc;\n\t\t\t\tvar v = j / radialSegments * Math.PI * 2;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = ( radius + tube * Math.cos( v ) ) * Math.cos( u );\n\t\t\t\tvertex.y = ( radius + tube * Math.cos( v ) ) * Math.sin( u );\n\t\t\t\tvertex.z = tube * Math.sin( v );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tcenter.x = radius * Math.cos( u );\n\t\t\t\tcenter.y = radius * Math.sin( u );\n\t\t\t\tnormal.subVectors( vertex, center ).normalize();\n\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( i / tubularSegments );\n\t\t\t\tuvs.push( j / radialSegments );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate indices\n\n\t\tfor ( j = 1; j <= radialSegments; j ++ ) {\n\n\t\t\tfor ( i = 1; i <= tubularSegments; i ++ ) {\n\n\t\t\t\t// indices\n\n\t\t\t\tvar a = ( tubularSegments + 1 ) * j + i - 1;\n\t\t\t\tvar b = ( tubularSegments + 1 ) * ( j - 1 ) + i - 1;\n\t\t\t\tvar c = ( tubularSegments + 1 ) * ( j - 1 ) + i;\n\t\t\t\tvar d = ( tubularSegments + 1 ) * j + i;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tTorusBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tTorusBufferGeometry.prototype.constructor = TorusBufferGeometry;\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * Port from https://github.com/mapbox/earcut (v2.1.5)\n\t */\n\n\tvar Earcut = {\n\n\t\ttriangulate: function ( data, holeIndices, dim ) {\n\n\t\t\tdim = dim || 2;\n\n\t\t\tvar hasHoles = holeIndices && holeIndices.length,\n\t\t\t\touterLen = hasHoles ? holeIndices[ 0 ] * dim : data.length,\n\t\t\t\touterNode = linkedList( data, 0, outerLen, dim, true ),\n\t\t\t\ttriangles = [];\n\n\t\t\tif ( ! outerNode || outerNode.next === outerNode.prev ) { return triangles; }\n\n\t\t\tvar minX, minY, maxX, maxY, x, y, invSize;\n\n\t\t\tif ( hasHoles ) { outerNode = eliminateHoles( data, holeIndices, outerNode, dim ); }\n\n\t\t\t// if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\t\t\tif ( data.length > 80 * dim ) {\n\n\t\t\t\tminX = maxX = data[ 0 ];\n\t\t\t\tminY = maxY = data[ 1 ];\n\n\t\t\t\tfor ( var i = dim; i < outerLen; i += dim ) {\n\n\t\t\t\t\tx = data[ i ];\n\t\t\t\t\ty = data[ i + 1 ];\n\t\t\t\t\tif ( x < minX ) { minX = x; }\n\t\t\t\t\tif ( y < minY ) { minY = y; }\n\t\t\t\t\tif ( x > maxX ) { maxX = x; }\n\t\t\t\t\tif ( y > maxY ) { maxY = y; }\n\n\t\t\t\t}\n\n\t\t\t\t// minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\t\t\t\tinvSize = Math.max( maxX - minX, maxY - minY );\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\n\t\t\t}\n\n\t\t\tearcutLinked( outerNode, triangles, dim, minX, minY, invSize );\n\n\t\t\treturn triangles;\n\n\t\t}\n\n\t};\n\n\t// create a circular doubly linked list from polygon points in the specified winding order\n\tfunction linkedList( data, start, end, dim, clockwise ) {\n\n\t\tvar i, last;\n\n\t\tif ( clockwise === ( signedArea( data, start, end, dim ) > 0 ) ) {\n\n\t\t\tfor ( i = start; i < end; i += dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t} else {\n\n\t\t\tfor ( i = end - dim; i >= start; i -= dim ) { last = insertNode( i, data[ i ], data[ i + 1 ], last ); }\n\n\t\t}\n\n\t\tif ( last && equals( last, last.next ) ) {\n\n\t\t\tremoveNode( last );\n\t\t\tlast = last.next;\n\n\t\t}\n\n\t\treturn last;\n\n\t}\n\n\t// eliminate colinear or duplicate points\n\tfunction filterPoints( start, end ) {\n\n\t\tif ( ! start ) { return start; }\n\t\tif ( ! end ) { end = start; }\n\n\t\tvar p = start,\n\t\t\tagain;\n\t\tdo {\n\n\t\t\tagain = false;\n\n\t\t\tif ( ! p.steiner && ( equals( p, p.next ) || area( p.prev, p, p.next ) === 0 ) ) {\n\n\t\t\t\tremoveNode( p );\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif ( p === p.next ) { break; }\n\t\t\t\tagain = true;\n\n\t\t\t} else {\n\n\t\t\t\tp = p.next;\n\n\t\t\t}\n\n\t\t} while ( again || p !== end );\n\n\t\treturn end;\n\n\t}\n\n\t// main ear slicing loop which triangulates a polygon (given as a linked list)\n\tfunction earcutLinked( ear, triangles, dim, minX, minY, invSize, pass ) {\n\n\t\tif ( ! ear ) { return; }\n\n\t\t// interlink polygon nodes in z-order\n\t\tif ( ! pass && invSize ) { indexCurve( ear, minX, minY, invSize ); }\n\n\t\tvar stop = ear,\n\t\t\tprev, next;\n\n\t\t// iterate through ears, slicing them one by one\n\t\twhile ( ear.prev !== ear.next ) {\n\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif ( invSize ? isEarHashed( ear, minX, minY, invSize ) : isEar( ear ) ) {\n\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push( prev.i / dim );\n\t\t\t\ttriangles.push( ear.i / dim );\n\t\t\t\ttriangles.push( next.i / dim );\n\n\t\t\t\tremoveNode( ear );\n\n\t\t\t\t// skipping the next vertex leads to less sliver triangles\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\n\t\t\t\tcontinue;\n\n\t\t\t}\n\n\t\t\tear = next;\n\n\t\t\t// if we looped through the whole remaining polygon and can't find any more ears\n\t\t\tif ( ear === stop ) {\n\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif ( ! pass ) {\n\n\t\t\t\t\tearcutLinked( filterPoints( ear ), triangles, dim, minX, minY, invSize, 1 );\n\n\t\t\t\t\t// if this didn't work, try curing all small self-intersections locally\n\n\t\t\t\t} else if ( pass === 1 ) {\n\n\t\t\t\t\tear = cureLocalIntersections( ear, triangles, dim );\n\t\t\t\t\tearcutLinked( ear, triangles, dim, minX, minY, invSize, 2 );\n\n\t\t\t\t\t// as a last resort, try splitting the remaining polygon into two\n\n\t\t\t\t} else if ( pass === 2 ) {\n\n\t\t\t\t\tsplitEarcut( ear, triangles, dim, minX, minY, invSize );\n\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t// check whether a polygon node forms a valid ear with adjacent nodes\n\tfunction isEar( ear ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// now make sure we don't have other points inside the potential ear\n\t\tvar p = ear.next.next;\n\n\t\twhile ( p !== ear.prev ) {\n\n\t\t\tif ( pointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\tfunction isEarHashed( ear, minX, minY, invSize ) {\n\n\t\tvar a = ear.prev,\n\t\t\tb = ear,\n\t\t\tc = ear.next;\n\n\t\tif ( area( a, b, c ) >= 0 ) { return false; } // reflex, can't be an ear\n\n\t\t// triangle bbox; min & max are calculated like this for speed\n\t\tvar minTX = a.x < b.x ? ( a.x < c.x ? a.x : c.x ) : ( b.x < c.x ? b.x : c.x ),\n\t\t\tminTY = a.y < b.y ? ( a.y < c.y ? a.y : c.y ) : ( b.y < c.y ? b.y : c.y ),\n\t\t\tmaxTX = a.x > b.x ? ( a.x > c.x ? a.x : c.x ) : ( b.x > c.x ? b.x : c.x ),\n\t\t\tmaxTY = a.y > b.y ? ( a.y > c.y ? a.y : c.y ) : ( b.y > c.y ? b.y : c.y );\n\n\t\t// z-order range for the current triangle bbox;\n\t\tvar minZ = zOrder( minTX, minTY, minX, minY, invSize ),\n\t\t\tmaxZ = zOrder( maxTX, maxTY, minX, minY, invSize );\n\n\t\tvar p = ear.prevZ,\n\t\t\tn = ear.nextZ;\n\n\t\t// look for points inside the triangle in both directions\n\t\twhile ( p && p.z >= minZ && n && n.z <= maxZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\t// look for remaining points in decreasing z-order\n\t\twhile ( p && p.z >= minZ ) {\n\n\t\t\tif ( p !== ear.prev && p !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y ) &&\n\t\t\t\tarea( p.prev, p, p.next ) >= 0 ) { return false; }\n\t\t\tp = p.prevZ;\n\n\t\t}\n\n\t\t// look for remaining points in increasing z-order\n\t\twhile ( n && n.z <= maxZ ) {\n\n\t\t\tif ( n !== ear.prev && n !== ear.next &&\n\t\t\t\tpointInTriangle( a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y ) &&\n\t\t\t\tarea( n.prev, n, n.next ) >= 0 ) { return false; }\n\t\t\tn = n.nextZ;\n\n\t\t}\n\n\t\treturn true;\n\n\t}\n\n\t// go through all polygon nodes and cure small local self-intersections\n\tfunction cureLocalIntersections( start, triangles, dim ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tvar a = p.prev,\n\t\t\t\tb = p.next.next;\n\n\t\t\tif ( ! equals( a, b ) && intersects( a, p, p.next, b ) && locallyInside( a, b ) && locallyInside( b, a ) ) {\n\n\t\t\t\ttriangles.push( a.i / dim );\n\t\t\t\ttriangles.push( p.i / dim );\n\t\t\t\ttriangles.push( b.i / dim );\n\n\t\t\t\t// remove two nodes involved\n\t\t\t\tremoveNode( p );\n\t\t\t\tremoveNode( p.next );\n\n\t\t\t\tp = start = b;\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn p;\n\n\t}\n\n\t// try splitting polygon into two and triangulate them independently\n\tfunction splitEarcut( start, triangles, dim, minX, minY, invSize ) {\n\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tvar a = start;\n\t\tdo {\n\n\t\t\tvar b = a.next.next;\n\t\t\twhile ( b !== a.prev ) {\n\n\t\t\t\tif ( a.i !== b.i && isValidDiagonal( a, b ) ) {\n\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tvar c = splitPolygon( a, b );\n\n\t\t\t\t\t// filter colinear points around the cuts\n\t\t\t\t\ta = filterPoints( a, a.next );\n\t\t\t\t\tc = filterPoints( c, c.next );\n\n\t\t\t\t\t// run earcut on each half\n\t\t\t\t\tearcutLinked( a, triangles, dim, minX, minY, invSize );\n\t\t\t\t\tearcutLinked( c, triangles, dim, minX, minY, invSize );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\n\t\t\t}\n\n\t\t\ta = a.next;\n\n\t\t} while ( a !== start );\n\n\t}\n\n\t// link every hole into the outer loop, producing a single-ring polygon without holes\n\tfunction eliminateHoles( data, holeIndices, outerNode, dim ) {\n\n\t\tvar queue = [],\n\t\t\ti, len, start, end, list;\n\n\t\tfor ( i = 0, len = holeIndices.length; i < len; i ++ ) {\n\n\t\t\tstart = holeIndices[ i ] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[ i + 1 ] * dim : data.length;\n\t\t\tlist = linkedList( data, start, end, dim, false );\n\t\t\tif ( list === list.next ) { list.steiner = true; }\n\t\t\tqueue.push( getLeftmost( list ) );\n\n\t\t}\n\n\t\tqueue.sort( compareX );\n\n\t\t// process holes from left to right\n\t\tfor ( i = 0; i < queue.length; i ++ ) {\n\n\t\t\teliminateHole( queue[ i ], outerNode );\n\t\t\touterNode = filterPoints( outerNode, outerNode.next );\n\n\t\t}\n\n\t\treturn outerNode;\n\n\t}\n\n\tfunction compareX( a, b ) {\n\n\t\treturn a.x - b.x;\n\n\t}\n\n\t// find a bridge between vertices that connects hole with an outer ring and and link it\n\tfunction eliminateHole( hole, outerNode ) {\n\n\t\touterNode = findHoleBridge( hole, outerNode );\n\t\tif ( outerNode ) {\n\n\t\t\tvar b = splitPolygon( outerNode, hole );\n\t\t\tfilterPoints( b, b.next );\n\n\t\t}\n\n\t}\n\n\t// David Eberly's algorithm for finding a bridge between hole and outer polygon\n\tfunction findHoleBridge( hole, outerNode ) {\n\n\t\tvar p = outerNode,\n\t\t\thx = hole.x,\n\t\t\thy = hole.y,\n\t\t\tqx = - Infinity,\n\t\t\tm;\n\n\t\t// find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\t\tdo {\n\n\t\t\tif ( hy <= p.y && hy >= p.next.y && p.next.y !== p.y ) {\n\n\t\t\t\tvar x = p.x + ( hy - p.y ) * ( p.next.x - p.x ) / ( p.next.y - p.y );\n\t\t\t\tif ( x <= hx && x > qx ) {\n\n\t\t\t\t\tqx = x;\n\t\t\t\t\tif ( x === hx ) {\n\n\t\t\t\t\t\tif ( hy === p.y ) { return p; }\n\t\t\t\t\t\tif ( hy === p.next.y ) { return p.next; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t} while ( p !== outerNode );\n\n\t\tif ( ! m ) { return null; }\n\n\t\tif ( hx === qx ) { return m.prev; } // hole touches outer segment; pick lower endpoint\n\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tvar stop = m,\n\t\t\tmx = m.x,\n\t\t\tmy = m.y,\n\t\t\ttanMin = Infinity,\n\t\t\ttan;\n\n\t\tp = m.next;\n\n\t\twhile ( p !== stop ) {\n\n\t\t\tif ( hx >= p.x && p.x >= mx && hx !== p.x &&\n\t\t\t\t\tpointInTriangle( hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y ) ) {\n\n\t\t\t\ttan = Math.abs( hy - p.y ) / ( hx - p.x ); // tangential\n\n\t\t\t\tif ( ( tan < tanMin || ( tan === tanMin && p.x > m.x ) ) && locallyInside( p, hole ) ) {\n\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tp = p.next;\n\n\t\t}\n\n\t\treturn m;\n\n\t}\n\n\t// interlink polygon nodes in z-order\n\tfunction indexCurve( start, minX, minY, invSize ) {\n\n\t\tvar p = start;\n\t\tdo {\n\n\t\t\tif ( p.z === null ) { p.z = zOrder( p.x, p.y, minX, minY, invSize ); }\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\n\t\tsortLinked( p );\n\n\t}\n\n\t// Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\tfunction sortLinked( list ) {\n\n\t\tvar i, p, q, e, tail, numMerges, pSize, qSize,\n\t\t\tinSize = 1;\n\n\t\tdo {\n\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile ( p ) {\n\n\t\t\t\tnumMerges ++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\t\t\t\tfor ( i = 0; i < inSize; i ++ ) {\n\n\t\t\t\t\tpSize ++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif ( ! q ) { break; }\n\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile ( pSize > 0 || ( qSize > 0 && q ) ) {\n\n\t\t\t\t\tif ( pSize !== 0 && ( qSize === 0 || ! q || p.z <= q.z ) ) {\n\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize --;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize --;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( tail ) { tail.nextZ = e; }\n\t\t\t\t\telse { list = e; }\n\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\n\t\t} while ( numMerges > 1 );\n\n\t\treturn list;\n\n\t}\n\n\t// z-order of a point given coords and inverse of the longer side of data bbox\n\tfunction zOrder( x, y, minX, minY, invSize ) {\n\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * ( x - minX ) * invSize;\n\t\ty = 32767 * ( y - minY ) * invSize;\n\n\t\tx = ( x | ( x << 8 ) ) & 0x00FF00FF;\n\t\tx = ( x | ( x << 4 ) ) & 0x0F0F0F0F;\n\t\tx = ( x | ( x << 2 ) ) & 0x33333333;\n\t\tx = ( x | ( x << 1 ) ) & 0x55555555;\n\n\t\ty = ( y | ( y << 8 ) ) & 0x00FF00FF;\n\t\ty = ( y | ( y << 4 ) ) & 0x0F0F0F0F;\n\t\ty = ( y | ( y << 2 ) ) & 0x33333333;\n\t\ty = ( y | ( y << 1 ) ) & 0x55555555;\n\n\t\treturn x | ( y << 1 );\n\n\t}\n\n\t// find the leftmost node of a polygon ring\n\tfunction getLeftmost( start ) {\n\n\t\tvar p = start,\n\t\t\tleftmost = start;\n\t\tdo {\n\n\t\t\tif ( p.x < leftmost.x || ( p.x === leftmost.x && p.y < leftmost.y ) ) { leftmost = p; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== start );\n\n\t\treturn leftmost;\n\n\t}\n\n\t// check if a point lies within a convex triangle\n\tfunction pointInTriangle( ax, ay, bx, by, cx, cy, px, py ) {\n\n\t\treturn ( cx - px ) * ( ay - py ) - ( ax - px ) * ( cy - py ) >= 0 &&\n\t\t\t   ( ax - px ) * ( by - py ) - ( bx - px ) * ( ay - py ) >= 0 &&\n\t\t\t   ( bx - px ) * ( cy - py ) - ( cx - px ) * ( by - py ) >= 0;\n\n\t}\n\n\t// check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\tfunction isValidDiagonal( a, b ) {\n\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && ! intersectsPolygon( a, b ) &&\n\t\t\t   locallyInside( a, b ) && locallyInside( b, a ) && middleInside( a, b );\n\n\t}\n\n\t// signed area of a triangle\n\tfunction area( p, q, r ) {\n\n\t\treturn ( q.y - p.y ) * ( r.x - q.x ) - ( q.x - p.x ) * ( r.y - q.y );\n\n\t}\n\n\t// check if two points are equal\n\tfunction equals( p1, p2 ) {\n\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\n\t}\n\n\t// check if two segments intersect\n\tfunction intersects( p1, q1, p2, q2 ) {\n\n\t\tif ( ( equals( p1, p2 ) && equals( q1, q2 ) ) ||\n\t\t\t( equals( p1, q2 ) && equals( p2, q1 ) ) ) { return true; }\n\t\treturn area( p1, q1, p2 ) > 0 !== area( p1, q1, q2 ) > 0 &&\n\t\t\t   area( p2, q2, p1 ) > 0 !== area( p2, q2, q1 ) > 0;\n\n\t}\n\n\t// check if a polygon diagonal intersects any polygon segments\n\tfunction intersectsPolygon( a, b ) {\n\n\t\tvar p = a;\n\t\tdo {\n\n\t\t\tif ( p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i &&\n\t\t\t\t\tintersects( p, p.next, a, b ) ) { return true; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn false;\n\n\t}\n\n\t// check if a polygon diagonal is locally inside the polygon\n\tfunction locallyInside( a, b ) {\n\n\t\treturn area( a.prev, a, a.next ) < 0 ?\n\t\t\tarea( a, b, a.next ) >= 0 && area( a, a.prev, b ) >= 0 :\n\t\t\tarea( a, b, a.prev ) < 0 || area( a, a.next, b ) < 0;\n\n\t}\n\n\t// check if the middle point of a polygon diagonal is inside the polygon\n\tfunction middleInside( a, b ) {\n\n\t\tvar p = a,\n\t\t\tinside = false,\n\t\t\tpx = ( a.x + b.x ) / 2,\n\t\t\tpy = ( a.y + b.y ) / 2;\n\t\tdo {\n\n\t\t\tif ( ( ( p.y > py ) !== ( p.next.y > py ) ) && p.next.y !== p.y &&\n\t\t\t\t\t( px < ( p.next.x - p.x ) * ( py - p.y ) / ( p.next.y - p.y ) + p.x ) )\n\t\t\t\t{ inside = ! inside; }\n\t\t\tp = p.next;\n\n\t\t} while ( p !== a );\n\n\t\treturn inside;\n\n\t}\n\n\t// link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\tfunction splitPolygon( a, b ) {\n\n\t\tvar a2 = new Node( a.i, a.x, a.y ),\n\t\t\tb2 = new Node( b.i, b.x, b.y ),\n\t\t\tan = a.next,\n\t\t\tbp = b.prev;\n\n\t\ta.next = b;\n\t\tb.prev = a;\n\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\n\t\treturn b2;\n\n\t}\n\n\t// create a node and optionally link it with previous one (in a circular doubly linked list)\n\tfunction insertNode( i, x, y, last ) {\n\n\t\tvar p = new Node( i, x, y );\n\n\t\tif ( ! last ) {\n\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\n\t\t} else {\n\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\n\t\t}\n\n\t\treturn p;\n\n\t}\n\n\tfunction removeNode( p ) {\n\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\n\t\tif ( p.prevZ ) { p.prevZ.nextZ = p.nextZ; }\n\t\tif ( p.nextZ ) { p.nextZ.prevZ = p.prevZ; }\n\n\t}\n\n\tfunction Node( i, x, y ) {\n\n\t\t// vertex index in coordinates array\n\t\tthis.i = i;\n\n\t\t// vertex coordinates\n\t\tthis.x = x;\n\t\tthis.y = y;\n\n\t\t// previous and next vertex nodes in a polygon ring\n\t\tthis.prev = null;\n\t\tthis.next = null;\n\n\t\t// z-order curve value\n\t\tthis.z = null;\n\n\t\t// previous and next nodes in z-order\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null;\n\n\t\t// indicates whether this is a steiner point\n\t\tthis.steiner = false;\n\n\t}\n\n\tfunction signedArea( data, start, end, dim ) {\n\n\t\tvar sum = 0;\n\t\tfor ( var i = start, j = end - dim; i < end; i += dim ) {\n\n\t\t\tsum += ( data[ j ] - data[ i ] ) * ( data[ i + 1 ] + data[ j + 1 ] );\n\t\t\tj = i;\n\n\t\t}\n\n\t\treturn sum;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t */\n\n\tvar ShapeUtils = {\n\n\t\t// calculate area of the contour polygon\n\n\t\tarea: function ( contour ) {\n\n\t\t\tvar n = contour.length;\n\t\t\tvar a = 0.0;\n\n\t\t\tfor ( var p = n - 1, q = 0; q < n; p = q ++ ) {\n\n\t\t\t\ta += contour[ p ].x * contour[ q ].y - contour[ q ].x * contour[ p ].y;\n\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\n\t\t},\n\n\t\tisClockWise: function ( pts ) {\n\n\t\t\treturn ShapeUtils.area( pts ) < 0;\n\n\t\t},\n\n\t\ttriangulateShape: function ( contour, holes ) {\n\n\t\t\tvar vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\t\t\tvar holeIndices = []; // array of hole indices\n\t\t\tvar faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts( contour );\n\t\t\taddContour( vertices, contour );\n\n\t\t\t//\n\n\t\t\tvar holeIndex = contour.length;\n\n\t\t\tholes.forEach( removeDupEndPts );\n\n\t\t\tfor ( var i = 0; i < holes.length; i ++ ) {\n\n\t\t\t\tholeIndices.push( holeIndex );\n\t\t\t\tholeIndex += holes[ i ].length;\n\t\t\t\taddContour( vertices, holes[ i ] );\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar triangles = Earcut.triangulate( vertices, holeIndices );\n\n\t\t\t//\n\n\t\t\tfor ( var i = 0; i < triangles.length; i += 3 ) {\n\n\t\t\t\tfaces.push( triangles.slice( i, i + 3 ) );\n\n\t\t\t}\n\n\t\t\treturn faces;\n\n\t\t}\n\n\t};\n\n\tfunction removeDupEndPts( points ) {\n\n\t\tvar l = points.length;\n\n\t\tif ( l > 2 && points[ l - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\tpoints.pop();\n\n\t\t}\n\n\t}\n\n\tfunction addContour( vertices, contour ) {\n\n\t\tfor ( var i = 0; i < contour.length; i ++ ) {\n\n\t\t\tvertices.push( contour[ i ].x );\n\t\t\tvertices.push( contour[ i ].y );\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *  curveSegments: <int>, // number of points on the curves\n\t *  steps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *  depth: <float>, // Depth to extrude the shape\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into the original shape bevel goes\n\t *  bevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float>, // how far from shape outline does bevel start\n\t *  bevelSegments: <int>, // number of bevel layers\n\t *\n\t *  extrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *  UVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\t// ExtrudeGeometry\n\n\tfunction ExtrudeGeometry( shapes, options ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ExtrudeBufferGeometry( shapes, options ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tExtrudeGeometry.prototype = Object.create( Geometry.prototype );\n\tExtrudeGeometry.prototype.constructor = ExtrudeGeometry;\n\n\tExtrudeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t// ExtrudeBufferGeometry\n\n\tfunction ExtrudeBufferGeometry( shapes, options ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ExtrudeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\toptions: options\n\t\t};\n\n\t\tshapes = Array.isArray( shapes ) ? shapes : [ shapes ];\n\n\t\tvar scope = this;\n\n\t\tvar verticesArray = [];\n\t\tvar uvArray = [];\n\n\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\tvar shape = shapes[ i ];\n\t\t\taddShape( shape );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( verticesArray, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvArray, 2 ) );\n\n\t\tthis.computeVertexNormals();\n\n\t\t// functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar placeholder = [];\n\n\t\t\t// options\n\n\t\t\tvar curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\tvar steps = options.steps !== undefined ? options.steps : 1;\n\t\t\tvar depth = options.depth !== undefined ? options.depth : 100;\n\n\t\t\tvar bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\tvar bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\tvar bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\tvar bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\tvar bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\n\t\t\tvar extrudePath = options.extrudePath;\n\n\t\t\tvar uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator;\n\n\t\t\t// deprecated options\n\n\t\t\tif ( options.amount !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.ExtrudeBufferGeometry: amount has been renamed to depth.' );\n\t\t\t\tdepth = options.amount;\n\n\t\t\t}\n\n\t\t\t//\n\n\t\t\tvar extrudePts, extrudeByPath = false;\n\t\t\tvar splineTube, binormal, normal, position2;\n\n\t\t\tif ( extrudePath ) {\n\n\t\t\t\textrudePts = extrudePath.getSpacedPoints( steps );\n\n\t\t\t\textrudeByPath = true;\n\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\n\t\t\t\t// SETUP TNB variables\n\n\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\tsplineTube = extrudePath.computeFrenetFrames( steps, false );\n\n\t\t\t\t// console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\tbinormal = new Vector3();\n\t\t\t\tnormal = new Vector3();\n\t\t\t\tposition2 = new Vector3();\n\n\t\t\t}\n\n\t\t\t// Safeguards if bevels are not enabled\n\n\t\t\tif ( ! bevelEnabled ) {\n\n\t\t\t\tbevelSegments = 0;\n\t\t\t\tbevelThickness = 0;\n\t\t\t\tbevelSize = 0;\n\t\t\t\tbevelOffset = 0;\n\n\t\t\t}\n\n\t\t\t// Variables initialization\n\n\t\t\tvar ahole, h, hl; // looping of holes\n\n\t\t\tvar shapePoints = shape.extractPoints( curveSegments );\n\n\t\t\tvar vertices = shapePoints.shape;\n\t\t\tvar holes = shapePoints.holes;\n\n\t\t\tvar reverse = ! ShapeUtils.isClockWise( vertices );\n\n\t\t\tif ( reverse ) {\n\n\t\t\t\tvertices = vertices.reverse();\n\n\t\t\t\t// Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\n\t\t\t\t\tif ( ShapeUtils.isClockWise( ahole ) ) {\n\n\t\t\t\t\t\tholes[ h ] = ahole.reverse();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( vertices, holes );\n\n\t\t\t/* Vertices */\n\n\t\t\tvar contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\tvertices = vertices.concat( ahole );\n\n\t\t\t}\n\n\n\t\t\tfunction scalePt2( pt, vec, size ) {\n\n\t\t\t\tif ( ! vec ) { console.error( \"THREE.ExtrudeGeometry: vec does not exist\" ); }\n\n\t\t\t\treturn vec.clone().multiplyScalar( size ).add( pt );\n\n\t\t\t}\n\n\t\t\tvar b, bs, t, z,\n\t\t\t\tvert, vlen = vertices.length,\n\t\t\t\tface, flen = faces.length;\n\n\n\t\t\t// Find directions for point movement\n\n\n\t\t\tfunction getBevelVec( inPt, inPrev, inNext ) {\n\n\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t//   shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t//\n\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t//  adjacent edges of inPt at a distance of 1 unit on the left side.\n\n\t\t\t\tvar v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\n\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\tvar v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\tvar v_next_x = inNext.x - inPt.x,\n\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\n\t\t\t\tvar v_prev_lensq = ( v_prev_x * v_prev_x + v_prev_y * v_prev_y );\n\n\t\t\t\t// check for collinear edges\n\t\t\t\tvar collinear0 = ( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\tif ( Math.abs( collinear0 ) > Number.EPSILON ) {\n\n\t\t\t\t\t// not collinear\n\n\t\t\t\t\t// length of vectors for normalizing\n\n\t\t\t\t\tvar v_prev_len = Math.sqrt( v_prev_lensq );\n\t\t\t\t\tvar v_next_len = Math.sqrt( v_next_x * v_next_x + v_next_y * v_next_y );\n\n\t\t\t\t\t// shift adjacent points by unit vectors to the left\n\n\t\t\t\t\tvar ptPrevShift_x = ( inPrev.x - v_prev_y / v_prev_len );\n\t\t\t\t\tvar ptPrevShift_y = ( inPrev.y + v_prev_x / v_prev_len );\n\n\t\t\t\t\tvar ptNextShift_x = ( inNext.x - v_next_y / v_next_len );\n\t\t\t\t\tvar ptNextShift_y = ( inNext.y + v_next_x / v_next_len );\n\n\t\t\t\t\t// scaling factor for v_prev to intersection point\n\n\t\t\t\t\tvar sf = ( ( ptNextShift_x - ptPrevShift_x ) * v_next_y -\n\t\t\t\t\t\t\t( ptNextShift_y - ptPrevShift_y ) * v_next_x ) /\n\t\t\t\t\t\t( v_prev_x * v_next_y - v_prev_y * v_next_x );\n\n\t\t\t\t\t// vector from inPt to intersection point\n\n\t\t\t\t\tv_trans_x = ( ptPrevShift_x + v_prev_x * sf - inPt.x );\n\t\t\t\t\tv_trans_y = ( ptPrevShift_y + v_prev_y * sf - inPt.y );\n\n\t\t\t\t\t// Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t//  but prevent crazy spikes\n\t\t\t\t\tvar v_trans_lensq = ( v_trans_x * v_trans_x + v_trans_y * v_trans_y );\n\t\t\t\t\tif ( v_trans_lensq <= 2 ) {\n\n\t\t\t\t\t\treturn new Vector2( v_trans_x, v_trans_y );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_trans_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// handle special case of collinear edges\n\n\t\t\t\t\tvar direction_eq = false; // assumes: opposite\n\t\t\t\t\tif ( v_prev_x > Number.EPSILON ) {\n\n\t\t\t\t\t\tif ( v_next_x > Number.EPSILON ) {\n\n\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( v_prev_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\tif ( v_next_x < - Number.EPSILON ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tif ( Math.sign( v_prev_y ) === Math.sign( v_next_y ) ) {\n\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( direction_eq ) {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\tv_trans_x = - v_prev_y;\n\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\tshrink_by = Math.sqrt( v_prev_lensq / 2 );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn new Vector2( v_trans_x / shrink_by, v_trans_y / shrink_by );\n\n\t\t\t}\n\n\n\t\t\tvar contourMovements = [];\n\n\t\t\tfor ( var i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\tif ( j === il ) { j = 0; }\n\t\t\t\tif ( k === il ) { k = 0; }\n\n\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\tcontourMovements[ i ] = getBevelVec( contour[ i ], contour[ j ], contour[ k ] );\n\n\t\t\t}\n\n\t\t\tvar holesMovements = [],\n\t\t\t\toneHoleMovements, verticesMovements = contourMovements.concat();\n\n\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\tahole = holes[ h ];\n\n\t\t\t\toneHoleMovements = [];\n\n\t\t\t\tfor ( i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i ++, j ++, k ++ ) {\n\n\t\t\t\t\tif ( j === il ) { j = 0; }\n\t\t\t\t\tif ( k === il ) { k = 0; }\n\n\t\t\t\t\t//  (j)---(i)---(k)\n\t\t\t\t\toneHoleMovements[ i ] = getBevelVec( ahole[ i ], ahole[ j ], ahole[ k ] );\n\n\t\t\t\t}\n\n\t\t\t\tholesMovements.push( oneHoleMovements );\n\t\t\t\tverticesMovements = verticesMovements.concat( oneHoleMovements );\n\n\t\t\t}\n\n\n\t\t\t// Loop bevelSegments, 1 for the front, 1 for the back\n\n\t\t\tfor ( b = 0; b < bevelSegments; b ++ ) {\n\n\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\n\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tv( vert.x, vert.y, - z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tbs = bevelSize + bevelOffset;\n\n\t\t\t// Back facing vertices\n\n\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\tv( vert.x, vert.y, 0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\n\t\t\t\t\tnormal.copy( splineTube.normals[ 0 ] ).multiplyScalar( vert.x );\n\t\t\t\t\tbinormal.copy( splineTube.binormals[ 0 ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\tposition2.copy( extrudePts[ 0 ] ).add( normal ).add( binormal );\n\n\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Add stepped vertices...\n\t\t\t// Including front facing vertices\n\n\t\t\tvar s;\n\n\t\t\tfor ( s = 1; s <= steps; s ++ ) {\n\n\t\t\t\tfor ( i = 0; i < vlen; i ++ ) {\n\n\t\t\t\t\tvert = bevelEnabled ? scalePt2( vertices[ i ], verticesMovements[ i ], bs ) : vertices[ i ];\n\n\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\tv( vert.x, vert.y, depth / steps * s );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\n\t\t\t\t\t\tnormal.copy( splineTube.normals[ s ] ).multiplyScalar( vert.x );\n\t\t\t\t\t\tbinormal.copy( splineTube.binormals[ s ] ).multiplyScalar( vert.y );\n\n\t\t\t\t\t\tposition2.copy( extrudePts[ s ] ).add( normal ).add( binormal );\n\n\t\t\t\t\t\tv( position2.x, position2.y, position2.z );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\n\t\t\t// Add bevel segments planes\n\n\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\t\t\tfor ( b = bevelSegments - 1; b >= 0; b -- ) {\n\n\t\t\t\tt = b / bevelSegments;\n\t\t\t\tz = bevelThickness * Math.cos( t * Math.PI / 2 );\n\t\t\t\tbs = bevelSize * Math.sin( t * Math.PI / 2 ) + bevelOffset;\n\n\t\t\t\t// contract shape\n\n\t\t\t\tfor ( i = 0, il = contour.length; i < il; i ++ ) {\n\n\t\t\t\t\tvert = scalePt2( contour[ i ], contourMovements[ i ], bs );\n\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t}\n\n\t\t\t\t// expand holes\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\toneHoleMovements = holesMovements[ h ];\n\n\t\t\t\t\tfor ( i = 0, il = ahole.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvert = scalePt2( ahole[ i ], oneHoleMovements[ i ], bs );\n\n\t\t\t\t\t\tif ( ! extrudeByPath ) {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y, depth + z );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tv( vert.x, vert.y + extrudePts[ steps - 1 ].y, extrudePts[ steps - 1 ].x + z );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t/* Faces */\n\n\t\t\t// Top and bottom faces\n\n\t\t\tbuildLidFaces();\n\n\t\t\t// Sides faces\n\n\t\t\tbuildSideFaces();\n\n\n\t\t\t/////  Internal functions\n\n\t\t\tfunction buildLidFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\n\t\t\t\tif ( bevelEnabled ) {\n\n\t\t\t\t\tvar layer = 0; // steps + 1\n\t\t\t\t\tvar offset = vlen * layer;\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ] + offset, face[ 1 ] + offset, face[ 0 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\toffset = vlen * layer;\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + offset, face[ 1 ] + offset, face[ 2 ] + offset );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// Bottom faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 2 ], face[ 1 ], face[ 0 ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Top faces\n\n\t\t\t\t\tfor ( i = 0; i < flen; i ++ ) {\n\n\t\t\t\t\t\tface = faces[ i ];\n\t\t\t\t\t\tf3( face[ 0 ] + vlen * steps, face[ 1 ] + vlen * steps, face[ 2 ] + vlen * steps );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 0 );\n\n\t\t\t}\n\n\t\t\t// Create faces for the z-sides of the shape\n\n\t\t\tfunction buildSideFaces() {\n\n\t\t\t\tvar start = verticesArray.length / 3;\n\t\t\t\tvar layeroffset = 0;\n\t\t\t\tsidewalls( contour, layeroffset );\n\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\tfor ( h = 0, hl = holes.length; h < hl; h ++ ) {\n\n\t\t\t\t\tahole = holes[ h ];\n\t\t\t\t\tsidewalls( ahole, layeroffset );\n\n\t\t\t\t\t//, true\n\t\t\t\t\tlayeroffset += ahole.length;\n\n\t\t\t\t}\n\n\n\t\t\t\tscope.addGroup( start, verticesArray.length / 3 - start, 1 );\n\n\n\t\t\t}\n\n\t\t\tfunction sidewalls( contour, layeroffset ) {\n\n\t\t\t\tvar j, k;\n\t\t\t\ti = contour.length;\n\n\t\t\t\twhile ( -- i >= 0 ) {\n\n\t\t\t\t\tj = i;\n\t\t\t\t\tk = i - 1;\n\t\t\t\t\tif ( k < 0 ) { k = contour.length - 1; }\n\n\t\t\t\t\t//console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\tvar s = 0,\n\t\t\t\t\t\tsl = steps + bevelSegments * 2;\n\n\t\t\t\t\tfor ( s = 0; s < sl; s ++ ) {\n\n\t\t\t\t\t\tvar slen1 = vlen * s;\n\t\t\t\t\t\tvar slen2 = vlen * ( s + 1 );\n\n\t\t\t\t\t\tvar a = layeroffset + j + slen1,\n\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\n\t\t\t\t\t\tf4( a, b, c, d );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tfunction v( x, y, z ) {\n\n\t\t\t\tplaceholder.push( x );\n\t\t\t\tplaceholder.push( y );\n\t\t\t\tplaceholder.push( z );\n\n\t\t\t}\n\n\n\t\t\tfunction f3( a, b, c ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateTopUV( scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\n\t\t\t}\n\n\t\t\tfunction f4( a, b, c, d ) {\n\n\t\t\t\taddVertex( a );\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( d );\n\n\t\t\t\taddVertex( b );\n\t\t\t\taddVertex( c );\n\t\t\t\taddVertex( d );\n\n\n\t\t\t\tvar nextIndex = verticesArray.length / 3;\n\t\t\t\tvar uvs = uvgen.generateSideWallUV( scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1 );\n\n\t\t\t\taddUV( uvs[ 0 ] );\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t\taddUV( uvs[ 1 ] );\n\t\t\t\taddUV( uvs[ 2 ] );\n\t\t\t\taddUV( uvs[ 3 ] );\n\n\t\t\t}\n\n\t\t\tfunction addVertex( index ) {\n\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 0 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 1 ] );\n\t\t\t\tverticesArray.push( placeholder[ index * 3 + 2 ] );\n\n\t\t\t}\n\n\n\t\t\tfunction addUV( vector2 ) {\n\n\t\t\t\tuvArray.push( vector2.x );\n\t\t\t\tuvArray.push( vector2.y );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tExtrudeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tExtrudeBufferGeometry.prototype.constructor = ExtrudeBufferGeometry;\n\n\tExtrudeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\t\tvar options = this.parameters.options;\n\n\t\treturn toJSON( shapes, options, data );\n\n\t};\n\n\t//\n\n\tvar WorldUVGenerator = {\n\n\t\tgenerateTopUV: function ( geometry, vertices, indexA, indexB, indexC ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\n\t\t\treturn [\n\t\t\t\tnew Vector2( a_x, a_y ),\n\t\t\t\tnew Vector2( b_x, b_y ),\n\t\t\t\tnew Vector2( c_x, c_y )\n\t\t\t];\n\n\t\t},\n\n\t\tgenerateSideWallUV: function ( geometry, vertices, indexA, indexB, indexC, indexD ) {\n\n\t\t\tvar a_x = vertices[ indexA * 3 ];\n\t\t\tvar a_y = vertices[ indexA * 3 + 1 ];\n\t\t\tvar a_z = vertices[ indexA * 3 + 2 ];\n\t\t\tvar b_x = vertices[ indexB * 3 ];\n\t\t\tvar b_y = vertices[ indexB * 3 + 1 ];\n\t\t\tvar b_z = vertices[ indexB * 3 + 2 ];\n\t\t\tvar c_x = vertices[ indexC * 3 ];\n\t\t\tvar c_y = vertices[ indexC * 3 + 1 ];\n\t\t\tvar c_z = vertices[ indexC * 3 + 2 ];\n\t\t\tvar d_x = vertices[ indexD * 3 ];\n\t\t\tvar d_y = vertices[ indexD * 3 + 1 ];\n\t\t\tvar d_z = vertices[ indexD * 3 + 2 ];\n\n\t\t\tif ( Math.abs( a_y - b_y ) < 0.01 ) {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_x, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_x, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_x, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_x, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t} else {\n\n\t\t\t\treturn [\n\t\t\t\t\tnew Vector2( a_y, 1 - a_z ),\n\t\t\t\t\tnew Vector2( b_y, 1 - b_z ),\n\t\t\t\t\tnew Vector2( c_y, 1 - c_z ),\n\t\t\t\t\tnew Vector2( d_y, 1 - d_z )\n\t\t\t\t];\n\n\t\t\t}\n\n\t\t}\n\t};\n\n\tfunction toJSON( shapes, options, data ) {\n\n\t\t//\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\t//\n\n\t\tif ( options.extrudePath !== undefined ) { data.options.extrudePath = options.extrudePath.toJSON(); }\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *  font: <THREE.Font>, // font\n\t *\n\t *  size: <float>, // size of the text\n\t *  height: <float>, // thickness to extrude text\n\t *  curveSegments: <int>, // number of points on the curves\n\t *\n\t *  bevelEnabled: <bool>, // turn on bevel\n\t *  bevelThickness: <float>, // how deep into text bevel goes\n\t *  bevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *  bevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\t// TextGeometry\n\n\tfunction TextGeometry( text, parameters ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'TextGeometry';\n\n\t\tthis.parameters = {\n\t\t\ttext: text,\n\t\t\tparameters: parameters\n\t\t};\n\n\t\tthis.fromBufferGeometry( new TextBufferGeometry( text, parameters ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tTextGeometry.prototype = Object.create( Geometry.prototype );\n\tTextGeometry.prototype.constructor = TextGeometry;\n\n\t// TextBufferGeometry\n\n\tfunction TextBufferGeometry( text, parameters ) {\n\n\t\tparameters = parameters || {};\n\n\t\tvar font = parameters.font;\n\n\t\tif ( ! ( font && font.isFont ) ) {\n\n\t\t\tconsole.error( 'THREE.TextGeometry: font parameter is not an instance of THREE.Font.' );\n\t\t\treturn new Geometry();\n\n\t\t}\n\n\t\tvar shapes = font.generateShapes( text, parameters.size );\n\n\t\t// translate parameters to ExtrudeGeometry API\n\n\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50;\n\n\t\t// defaults\n\n\t\tif ( parameters.bevelThickness === undefined ) { parameters.bevelThickness = 10; }\n\t\tif ( parameters.bevelSize === undefined ) { parameters.bevelSize = 8; }\n\t\tif ( parameters.bevelEnabled === undefined ) { parameters.bevelEnabled = false; }\n\n\t\tExtrudeBufferGeometry.call( this, shapes, parameters );\n\n\t\tthis.type = 'TextBufferGeometry';\n\n\t}\n\n\tTextBufferGeometry.prototype = Object.create( ExtrudeBufferGeometry.prototype );\n\tTextBufferGeometry.prototype.constructor = TextBufferGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// SphereGeometry\n\n\tfunction SphereGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'SphereGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tSphereGeometry.prototype = Object.create( Geometry.prototype );\n\tSphereGeometry.prototype.constructor = SphereGeometry;\n\n\t// SphereBufferGeometry\n\n\tfunction SphereBufferGeometry( radius, widthSegments, heightSegments, phiStart, phiLength, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'SphereBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\twidthSegments: widthSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\n\t\twidthSegments = Math.max( 3, Math.floor( widthSegments ) || 8 );\n\t\theightSegments = Math.max( 2, Math.floor( heightSegments ) || 6 );\n\n\t\tphiStart = phiStart !== undefined ? phiStart : 0;\n\t\tphiLength = phiLength !== undefined ? phiLength : Math.PI * 2;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI;\n\n\t\tvar thetaEnd = Math.min( thetaStart + thetaLength, Math.PI );\n\n\t\tvar ix, iy;\n\n\t\tvar index = 0;\n\t\tvar grid = [];\n\n\t\tvar vertex = new Vector3();\n\t\tvar normal = new Vector3();\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( iy = 0; iy <= heightSegments; iy ++ ) {\n\n\t\t\tvar verticesRow = [];\n\n\t\t\tvar v = iy / heightSegments;\n\n\t\t\t// special case for the poles\n\n\t\t\tvar uOffset = 0;\n\n\t\t\tif ( iy == 0 && thetaStart == 0 ) {\n\n\t\t\t\tuOffset = 0.5 / widthSegments;\n\n\t\t\t} else if ( iy == heightSegments && thetaEnd == Math.PI ) {\n\n\t\t\t\tuOffset = - 0.5 / widthSegments;\n\n\t\t\t}\n\n\t\t\tfor ( ix = 0; ix <= widthSegments; ix ++ ) {\n\n\t\t\t\tvar u = ix / widthSegments;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = - radius * Math.cos( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\t\t\t\tvertex.y = radius * Math.cos( thetaStart + v * thetaLength );\n\t\t\t\tvertex.z = radius * Math.sin( phiStart + u * phiLength ) * Math.sin( thetaStart + v * thetaLength );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormal.copy( vertex ).normalize();\n\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( u + uOffset, 1 - v );\n\n\t\t\t\tverticesRow.push( index ++ );\n\n\t\t\t}\n\n\t\t\tgrid.push( verticesRow );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( iy = 0; iy < heightSegments; iy ++ ) {\n\n\t\t\tfor ( ix = 0; ix < widthSegments; ix ++ ) {\n\n\t\t\t\tvar a = grid[ iy ][ ix + 1 ];\n\t\t\t\tvar b = grid[ iy ][ ix ];\n\t\t\t\tvar c = grid[ iy + 1 ][ ix ];\n\t\t\t\tvar d = grid[ iy + 1 ][ ix + 1 ];\n\n\t\t\t\tif ( iy !== 0 || thetaStart > 0 ) { indices.push( a, b, d ); }\n\t\t\t\tif ( iy !== heightSegments - 1 || thetaEnd < Math.PI ) { indices.push( b, c, d ); }\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tSphereBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tSphereBufferGeometry.prototype.constructor = SphereBufferGeometry;\n\n\t/**\n\t * @author Kaleb Murphy\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// RingGeometry\n\n\tfunction RingGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'RingGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tRingGeometry.prototype = Object.create( Geometry.prototype );\n\tRingGeometry.prototype.constructor = RingGeometry;\n\n\t// RingBufferGeometry\n\n\tfunction RingBufferGeometry( innerRadius, outerRadius, thetaSegments, phiSegments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'RingBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tinnerRadius: innerRadius,\n\t\t\touterRadius: outerRadius,\n\t\t\tthetaSegments: thetaSegments,\n\t\t\tphiSegments: phiSegments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tinnerRadius = innerRadius || 0.5;\n\t\touterRadius = outerRadius || 1;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\tthetaSegments = thetaSegments !== undefined ? Math.max( 3, thetaSegments ) : 8;\n\t\tphiSegments = phiSegments !== undefined ? Math.max( 1, phiSegments ) : 1;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// some helper variables\n\n\t\tvar segment;\n\t\tvar radius = innerRadius;\n\t\tvar radiusStep = ( ( outerRadius - innerRadius ) / phiSegments );\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar j, i;\n\n\t\t// generate vertices, normals and uvs\n\n\t\tfor ( j = 0; j <= phiSegments; j ++ ) {\n\n\t\t\tfor ( i = 0; i <= thetaSegments; i ++ ) {\n\n\t\t\t\t// values are generate from the inside of the ring to the outside\n\n\t\t\t\tsegment = thetaStart + i / thetaSegments * thetaLength;\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( vertex.x / outerRadius + 1 ) / 2;\n\t\t\t\tuv.y = ( vertex.y / outerRadius + 1 ) / 2;\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t}\n\n\t\t\t// increase the radius for next row of vertices\n\n\t\t\tradius += radiusStep;\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( j = 0; j < phiSegments; j ++ ) {\n\n\t\t\tvar thetaSegmentLevel = j * ( thetaSegments + 1 );\n\n\t\t\tfor ( i = 0; i < thetaSegments; i ++ ) {\n\n\t\t\t\tsegment = i + thetaSegmentLevel;\n\n\t\t\t\tvar a = segment;\n\t\t\t\tvar b = segment + thetaSegments + 1;\n\t\t\t\tvar c = segment + thetaSegments + 2;\n\t\t\t\tvar d = segment + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tRingBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tRingBufferGeometry.prototype.constructor = RingBufferGeometry;\n\n\t/**\n\t * @author zz85 / https://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// LatheGeometry\n\n\tfunction LatheGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'LatheGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new LatheBufferGeometry( points, segments, phiStart, phiLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tLatheGeometry.prototype = Object.create( Geometry.prototype );\n\tLatheGeometry.prototype.constructor = LatheGeometry;\n\n\t// LatheBufferGeometry\n\n\tfunction LatheBufferGeometry( points, segments, phiStart, phiLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'LatheBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tpoints: points,\n\t\t\tsegments: segments,\n\t\t\tphiStart: phiStart,\n\t\t\tphiLength: phiLength\n\t\t};\n\n\t\tsegments = Math.floor( segments ) || 12;\n\t\tphiStart = phiStart || 0;\n\t\tphiLength = phiLength || Math.PI * 2;\n\n\t\t// clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\tphiLength = _Math.clamp( phiLength, 0, Math.PI * 2 );\n\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar base;\n\t\tvar inverseSegments = 1.0 / segments;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\t\tvar i, j;\n\n\t\t// generate vertices and uvs\n\n\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\tvar phi = phiStart + i * inverseSegments * phiLength;\n\n\t\t\tvar sin = Math.sin( phi );\n\t\t\tvar cos = Math.cos( phi );\n\n\t\t\tfor ( j = 0; j <= ( points.length - 1 ); j ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = points[ j ].x * sin;\n\t\t\t\tvertex.y = points[ j ].y;\n\t\t\t\tvertex.z = points[ j ].x * cos;\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = i / segments;\n\t\t\t\tuv.y = j / ( points.length - 1 );\n\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\n\t\t\t}\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 0; i < segments; i ++ ) {\n\n\t\t\tfor ( j = 0; j < ( points.length - 1 ); j ++ ) {\n\n\t\t\t\tbase = j + i * points.length;\n\n\t\t\t\tvar a = base;\n\t\t\t\tvar b = base + points.length;\n\t\t\t\tvar c = base + points.length + 1;\n\t\t\t\tvar d = base + 1;\n\n\t\t\t\t// faces\n\n\t\t\t\tindices.push( a, b, d );\n\t\t\t\tindices.push( b, c, d );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\t// generate normals\n\n\t\tthis.computeVertexNormals();\n\n\t\t// if the geometry is closed, we need to average the normals along the seam.\n\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\tif ( phiLength === Math.PI * 2 ) {\n\n\t\t\tvar normals = this.attributes.normal.array;\n\t\t\tvar n1 = new Vector3();\n\t\t\tvar n2 = new Vector3();\n\t\t\tvar n = new Vector3();\n\n\t\t\t// this is the buffer offset for the last line of vertices\n\n\t\t\tbase = segments * points.length * 3;\n\n\t\t\tfor ( i = 0, j = 0; i < points.length; i ++, j += 3 ) {\n\n\t\t\t\t// select the normal of the vertex in the first line\n\n\t\t\t\tn1.x = normals[ j + 0 ];\n\t\t\t\tn1.y = normals[ j + 1 ];\n\t\t\t\tn1.z = normals[ j + 2 ];\n\n\t\t\t\t// select the normal of the vertex in the last line\n\n\t\t\t\tn2.x = normals[ base + j + 0 ];\n\t\t\t\tn2.y = normals[ base + j + 1 ];\n\t\t\t\tn2.z = normals[ base + j + 2 ];\n\n\t\t\t\t// average normals\n\n\t\t\t\tn.addVectors( n1, n2 ).normalize();\n\n\t\t\t\t// assign the new values to both normals\n\n\t\t\t\tnormals[ j + 0 ] = normals[ base + j + 0 ] = n.x;\n\t\t\t\tnormals[ j + 1 ] = normals[ base + j + 1 ] = n.y;\n\t\t\t\tnormals[ j + 2 ] = normals[ base + j + 2 ] = n.z;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tLatheBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tLatheBufferGeometry.prototype.constructor = LatheBufferGeometry;\n\n\t/**\n\t * @author jonobr1 / http://jonobr1.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// ShapeGeometry\n\n\tfunction ShapeGeometry( shapes, curveSegments ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'ShapeGeometry';\n\n\t\tif ( typeof curveSegments === 'object' ) {\n\n\t\t\tconsole.warn( 'THREE.ShapeGeometry: Options parameter has been removed.' );\n\n\t\t\tcurveSegments = curveSegments.curveSegments;\n\n\t\t}\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tthis.fromBufferGeometry( new ShapeBufferGeometry( shapes, curveSegments ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tShapeGeometry.prototype = Object.create( Geometry.prototype );\n\tShapeGeometry.prototype.constructor = ShapeGeometry;\n\n\tShapeGeometry.prototype.toJSON = function () {\n\n\t\tvar data = Geometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t// ShapeBufferGeometry\n\n\tfunction ShapeBufferGeometry( shapes, curveSegments ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'ShapeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tshapes: shapes,\n\t\t\tcurveSegments: curveSegments\n\t\t};\n\n\t\tcurveSegments = curveSegments || 12;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar groupStart = 0;\n\t\tvar groupCount = 0;\n\n\t\t// allow single and array values for \"shapes\" parameter\n\n\t\tif ( Array.isArray( shapes ) === false ) {\n\n\t\t\taddShape( shapes );\n\n\t\t} else {\n\n\t\t\tfor ( var i = 0; i < shapes.length; i ++ ) {\n\n\t\t\t\taddShape( shapes[ i ] );\n\n\t\t\t\tthis.addGroup( groupStart, groupCount, i ); // enables MultiMaterial support\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t\tgroupCount = 0;\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\n\t\t// helper functions\n\n\t\tfunction addShape( shape ) {\n\n\t\t\tvar i, l, shapeHole;\n\n\t\t\tvar indexOffset = vertices.length / 3;\n\t\t\tvar points = shape.extractPoints( curveSegments );\n\n\t\t\tvar shapeVertices = points.shape;\n\t\t\tvar shapeHoles = points.holes;\n\n\t\t\t// check direction of vertices\n\n\t\t\tif ( ShapeUtils.isClockWise( shapeVertices ) === false ) {\n\n\t\t\t\tshapeVertices = shapeVertices.reverse();\n\n\t\t\t}\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\n\t\t\t\tif ( ShapeUtils.isClockWise( shapeHole ) === true ) {\n\n\t\t\t\t\tshapeHoles[ i ] = shapeHole.reverse();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar faces = ShapeUtils.triangulateShape( shapeVertices, shapeHoles );\n\n\t\t\t// join vertices of inner and outer paths to a single array\n\n\t\t\tfor ( i = 0, l = shapeHoles.length; i < l; i ++ ) {\n\n\t\t\t\tshapeHole = shapeHoles[ i ];\n\t\t\t\tshapeVertices = shapeVertices.concat( shapeHole );\n\n\t\t\t}\n\n\t\t\t// vertices, normals, uvs\n\n\t\t\tfor ( i = 0, l = shapeVertices.length; i < l; i ++ ) {\n\n\t\t\t\tvar vertex = shapeVertices[ i ];\n\n\t\t\t\tvertices.push( vertex.x, vertex.y, 0 );\n\t\t\t\tnormals.push( 0, 0, 1 );\n\t\t\t\tuvs.push( vertex.x, vertex.y ); // world uvs\n\n\t\t\t}\n\n\t\t\t// incides\n\n\t\t\tfor ( i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tvar a = face[ 0 ] + indexOffset;\n\t\t\t\tvar b = face[ 1 ] + indexOffset;\n\t\t\t\tvar c = face[ 2 ] + indexOffset;\n\n\t\t\t\tindices.push( a, b, c );\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tShapeBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tShapeBufferGeometry.prototype.constructor = ShapeBufferGeometry;\n\n\tShapeBufferGeometry.prototype.toJSON = function () {\n\n\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\tvar shapes = this.parameters.shapes;\n\n\t\treturn toJSON$1( shapes, data );\n\n\t};\n\n\t//\n\n\tfunction toJSON$1( shapes, data ) {\n\n\t\tdata.shapes = [];\n\n\t\tif ( Array.isArray( shapes ) ) {\n\n\t\t\tfor ( var i = 0, l = shapes.length; i < l; i ++ ) {\n\n\t\t\t\tvar shape = shapes[ i ];\n\n\t\t\t\tdata.shapes.push( shape.uuid );\n\n\t\t\t}\n\n\t\t} else {\n\n\t\t\tdata.shapes.push( shapes.uuid );\n\n\t\t}\n\n\t\treturn data;\n\n\t}\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tfunction EdgesGeometry( geometry, thresholdAngle ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'EdgesGeometry';\n\n\t\tthis.parameters = {\n\t\t\tthresholdAngle: thresholdAngle\n\t\t};\n\n\t\tthresholdAngle = ( thresholdAngle !== undefined ) ? thresholdAngle : 1;\n\n\t\t// buffer\n\n\t\tvar vertices = [];\n\n\t\t// helper variables\n\n\t\tvar thresholdDot = Math.cos( _Math.DEG2RAD * thresholdAngle );\n\t\tvar edge = [ 0, 0 ], edges = {}, edge1, edge2;\n\t\tvar key, keys = [ 'a', 'b', 'c' ];\n\n\t\t// prepare source geometry\n\n\t\tvar geometry2;\n\n\t\tif ( geometry.isBufferGeometry ) {\n\n\t\t\tgeometry2 = new Geometry();\n\t\t\tgeometry2.fromBufferGeometry( geometry );\n\n\t\t} else {\n\n\t\t\tgeometry2 = geometry.clone();\n\n\t\t}\n\n\t\tgeometry2.mergeVertices();\n\t\tgeometry2.computeFaceNormals();\n\n\t\tvar sourceVertices = geometry2.vertices;\n\t\tvar faces = geometry2.faces;\n\n\t\t// now create a data structure where each entry represents an edge with its adjoining faces\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tfor ( var j = 0; j < 3; j ++ ) {\n\n\t\t\t\tedge1 = face[ keys[ j ] ];\n\t\t\t\tedge2 = face[ keys[ ( j + 1 ) % 3 ] ];\n\t\t\t\tedge[ 0 ] = Math.min( edge1, edge2 );\n\t\t\t\tedge[ 1 ] = Math.max( edge1, edge2 );\n\n\t\t\t\tkey = edge[ 0 ] + ',' + edge[ 1 ];\n\n\t\t\t\tif ( edges[ key ] === undefined ) {\n\n\t\t\t\t\tedges[ key ] = { index1: edge[ 0 ], index2: edge[ 1 ], face1: i, face2: undefined };\n\n\t\t\t\t} else {\n\n\t\t\t\t\tedges[ key ].face2 = i;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\t// generate vertices\n\n\t\tfor ( key in edges ) {\n\n\t\t\tvar e = edges[ key ];\n\n\t\t\t// an edge is only rendered if the angle (in degrees) between the face normals of the adjoining faces exceeds this value. default = 1 degree.\n\n\t\t\tif ( e.face2 === undefined || faces[ e.face1 ].normal.dot( faces[ e.face2 ].normal ) <= thresholdDot ) {\n\n\t\t\t\tvar vertex = sourceVertices[ e.index1 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\tvertex = sourceVertices[ e.index2 ];\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t}\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\n\t}\n\n\tEdgesGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tEdgesGeometry.prototype.constructor = EdgesGeometry;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\t// CylinderGeometry\n\n\tfunction CylinderGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CylinderGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCylinderGeometry.prototype = Object.create( Geometry.prototype );\n\tCylinderGeometry.prototype.constructor = CylinderGeometry;\n\n\t// CylinderBufferGeometry\n\n\tfunction CylinderBufferGeometry( radiusTop, radiusBottom, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CylinderBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradiusTop: radiusTop,\n\t\t\tradiusBottom: radiusBottom,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tvar scope = this;\n\n\t\tradiusTop = radiusTop !== undefined ? radiusTop : 1;\n\t\tradiusBottom = radiusBottom !== undefined ? radiusBottom : 1;\n\t\theight = height || 1;\n\n\t\tradialSegments = Math.floor( radialSegments ) || 8;\n\t\theightSegments = Math.floor( heightSegments ) || 1;\n\n\t\topenEnded = openEnded !== undefined ? openEnded : false;\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0.0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar index = 0;\n\t\tvar indexArray = [];\n\t\tvar halfHeight = height / 2;\n\t\tvar groupStart = 0;\n\n\t\t// generate geometry\n\n\t\tgenerateTorso();\n\n\t\tif ( openEnded === false ) {\n\n\t\t\tif ( radiusTop > 0 ) { generateCap( true ); }\n\t\t\tif ( radiusBottom > 0 ) { generateCap( false ); }\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t\tfunction generateTorso() {\n\n\t\t\tvar x, y;\n\t\t\tvar normal = new Vector3();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\t// this will be used to calculate the normal\n\t\t\tvar slope = ( radiusBottom - radiusTop ) / height;\n\n\t\t\t// generate vertices, normals and uvs\n\n\t\t\tfor ( y = 0; y <= heightSegments; y ++ ) {\n\n\t\t\t\tvar indexRow = [];\n\n\t\t\t\tvar v = y / heightSegments;\n\n\t\t\t\t// calculate the radius of the current row\n\n\t\t\t\tvar radius = v * ( radiusBottom - radiusTop ) + radiusTop;\n\n\t\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\t\tvar u = x / radialSegments;\n\n\t\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\t\tvar sinTheta = Math.sin( theta );\n\t\t\t\t\tvar cosTheta = Math.cos( theta );\n\n\t\t\t\t\t// vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = - v * height + halfHeight;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t\t// normal\n\n\t\t\t\t\tnormal.set( sinTheta, slope, cosTheta ).normalize();\n\t\t\t\t\tnormals.push( normal.x, normal.y, normal.z );\n\n\t\t\t\t\t// uv\n\n\t\t\t\t\tuvs.push( u, 1 - v );\n\n\t\t\t\t\t// save index of vertex in respective row\n\n\t\t\t\t\tindexRow.push( index ++ );\n\n\t\t\t\t}\n\n\t\t\t\t// now save vertices of the row in our index array\n\n\t\t\t\tindexArray.push( indexRow );\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tfor ( y = 0; y < heightSegments; y ++ ) {\n\n\t\t\t\t\t// we use the index array to access the correct indices\n\n\t\t\t\t\tvar a = indexArray[ y ][ x ];\n\t\t\t\t\tvar b = indexArray[ y + 1 ][ x ];\n\t\t\t\t\tvar c = indexArray[ y + 1 ][ x + 1 ];\n\t\t\t\t\tvar d = indexArray[ y ][ x + 1 ];\n\n\t\t\t\t\t// faces\n\n\t\t\t\t\tindices.push( a, b, d );\n\t\t\t\t\tindices.push( b, c, d );\n\n\t\t\t\t\t// update group counter\n\n\t\t\t\t\tgroupCount += 6;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, 0 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t\tfunction generateCap( top ) {\n\n\t\t\tvar x, centerIndexStart, centerIndexEnd;\n\n\t\t\tvar uv = new Vector2();\n\t\t\tvar vertex = new Vector3();\n\n\t\t\tvar groupCount = 0;\n\n\t\t\tvar radius = ( top === true ) ? radiusTop : radiusBottom;\n\t\t\tvar sign = ( top === true ) ? 1 : - 1;\n\n\t\t\t// save the index of the first center vertex\n\t\t\tcenterIndexStart = index;\n\n\t\t\t// first we generate the center vertex data of the cap.\n\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\tfor ( x = 1; x <= radialSegments; x ++ ) {\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertices.push( 0, halfHeight * sign, 0 );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuvs.push( 0.5, 0.5 );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// save the index of the last center vertex\n\n\t\t\tcenterIndexEnd = index;\n\n\t\t\t// now we generate the surrounding vertices, normals and uvs\n\n\t\t\tfor ( x = 0; x <= radialSegments; x ++ ) {\n\n\t\t\t\tvar u = x / radialSegments;\n\t\t\t\tvar theta = u * thetaLength + thetaStart;\n\n\t\t\t\tvar cosTheta = Math.cos( theta );\n\t\t\t\tvar sinTheta = Math.sin( theta );\n\n\t\t\t\t// vertex\n\n\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t\t// normal\n\n\t\t\t\tnormals.push( 0, sign, 0 );\n\n\t\t\t\t// uv\n\n\t\t\t\tuv.x = ( cosTheta * 0.5 ) + 0.5;\n\t\t\t\tuv.y = ( sinTheta * 0.5 * sign ) + 0.5;\n\t\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t\t\t// increase index\n\n\t\t\t\tindex ++;\n\n\t\t\t}\n\n\t\t\t// generate indices\n\n\t\t\tfor ( x = 0; x < radialSegments; x ++ ) {\n\n\t\t\t\tvar c = centerIndexStart + x;\n\t\t\t\tvar i = centerIndexEnd + x;\n\n\t\t\t\tif ( top === true ) {\n\n\t\t\t\t\t// face top\n\n\t\t\t\t\tindices.push( i, i + 1, c );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// face bottom\n\n\t\t\t\t\tindices.push( i + 1, i, c );\n\n\t\t\t\t}\n\n\t\t\t\tgroupCount += 3;\n\n\t\t\t}\n\n\t\t\t// add a group to the geometry. this will ensure multi material support\n\n\t\t\tscope.addGroup( groupStart, groupCount, top === true ? 1 : 2 );\n\n\t\t\t// calculate new start value for groups\n\n\t\t\tgroupStart += groupCount;\n\n\t\t}\n\n\t}\n\n\tCylinderBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCylinderBufferGeometry.prototype.constructor = CylinderBufferGeometry;\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\t// ConeGeometry\n\n\tfunction ConeGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeGeometry.prototype = Object.create( CylinderGeometry.prototype );\n\tConeGeometry.prototype.constructor = ConeGeometry;\n\n\t// ConeBufferGeometry\n\n\tfunction ConeBufferGeometry( radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength ) {\n\n\t\tCylinderBufferGeometry.call( this, 0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength );\n\n\t\tthis.type = 'ConeBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\theight: height,\n\t\t\tradialSegments: radialSegments,\n\t\t\theightSegments: heightSegments,\n\t\t\topenEnded: openEnded,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t}\n\n\tConeBufferGeometry.prototype = Object.create( CylinderBufferGeometry.prototype );\n\tConeBufferGeometry.prototype.constructor = ConeBufferGeometry;\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t * @author Mugen87 / https://github.com/Mugen87\n\t * @author hughes\n\t */\n\n\t// CircleGeometry\n\n\tfunction CircleGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tGeometry.call( this );\n\n\t\tthis.type = 'CircleGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tthis.fromBufferGeometry( new CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) );\n\t\tthis.mergeVertices();\n\n\t}\n\n\tCircleGeometry.prototype = Object.create( Geometry.prototype );\n\tCircleGeometry.prototype.constructor = CircleGeometry;\n\n\t// CircleBufferGeometry\n\n\tfunction CircleBufferGeometry( radius, segments, thetaStart, thetaLength ) {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'CircleBufferGeometry';\n\n\t\tthis.parameters = {\n\t\t\tradius: radius,\n\t\t\tsegments: segments,\n\t\t\tthetaStart: thetaStart,\n\t\t\tthetaLength: thetaLength\n\t\t};\n\n\t\tradius = radius || 1;\n\t\tsegments = segments !== undefined ? Math.max( 3, segments ) : 8;\n\n\t\tthetaStart = thetaStart !== undefined ? thetaStart : 0;\n\t\tthetaLength = thetaLength !== undefined ? thetaLength : Math.PI * 2;\n\n\t\t// buffers\n\n\t\tvar indices = [];\n\t\tvar vertices = [];\n\t\tvar normals = [];\n\t\tvar uvs = [];\n\n\t\t// helper variables\n\n\t\tvar i, s;\n\t\tvar vertex = new Vector3();\n\t\tvar uv = new Vector2();\n\n\t\t// center point\n\n\t\tvertices.push( 0, 0, 0 );\n\t\tnormals.push( 0, 0, 1 );\n\t\tuvs.push( 0.5, 0.5 );\n\n\t\tfor ( s = 0, i = 3; s <= segments; s ++, i += 3 ) {\n\n\t\t\tvar segment = thetaStart + s / segments * thetaLength;\n\n\t\t\t// vertex\n\n\t\t\tvertex.x = radius * Math.cos( segment );\n\t\t\tvertex.y = radius * Math.sin( segment );\n\n\t\t\tvertices.push( vertex.x, vertex.y, vertex.z );\n\n\t\t\t// normal\n\n\t\t\tnormals.push( 0, 0, 1 );\n\n\t\t\t// uvs\n\n\t\t\tuv.x = ( vertices[ i ] / radius + 1 ) / 2;\n\t\t\tuv.y = ( vertices[ i + 1 ] / radius + 1 ) / 2;\n\n\t\t\tuvs.push( uv.x, uv.y );\n\n\t\t}\n\n\t\t// indices\n\n\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\tindices.push( i, i + 1, 0 );\n\n\t\t}\n\n\t\t// build geometry\n\n\t\tthis.setIndex( indices );\n\t\tthis.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tthis.setAttribute( 'normal', new Float32BufferAttribute( normals, 3 ) );\n\t\tthis.setAttribute( 'uv', new Float32BufferAttribute( uvs, 2 ) );\n\n\t}\n\n\tCircleBufferGeometry.prototype = Object.create( BufferGeometry.prototype );\n\tCircleBufferGeometry.prototype.constructor = CircleBufferGeometry;\n\n\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tWireframeGeometry: WireframeGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricBufferGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronBufferGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronBufferGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronBufferGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronBufferGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronBufferGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeBufferGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotBufferGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusBufferGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextBufferGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereBufferGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingBufferGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneBufferGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheBufferGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeBufferGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeBufferGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeBufferGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderBufferGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleBufferGeometry,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxBufferGeometry\n\t});\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * parameters = {\n\t *  color: <THREE.Color>\n\t * }\n\t */\n\n\tfunction ShadowMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'ShadowMaterial';\n\n\t\tthis.color = new Color( 0x000000 );\n\t\tthis.transparent = true;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tShadowMaterial.prototype = Object.create( Material.prototype );\n\tShadowMaterial.prototype.constructor = ShadowMaterial;\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tShadowMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction RawShaderMaterial( parameters ) {\n\n\t\tShaderMaterial.call( this, parameters );\n\n\t\tthis.type = 'RawShaderMaterial';\n\n\t}\n\n\tRawShaderMaterial.prototype = Object.create( ShaderMaterial.prototype );\n\tRawShaderMaterial.prototype.constructor = RawShaderMaterial;\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  roughness: <float>,\n\t *  metalness: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  roughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  metalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  envMapIntensity: <float>\n\t *\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshStandardMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.type = 'MeshStandardMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.roughness = 0.5;\n\t\tthis.metalness = 0.5;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.roughnessMap = null;\n\n\t\tthis.metalnessMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.envMapIntensity = 1.0;\n\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshStandardMaterial.prototype = Object.create( Material.prototype );\n\tMeshStandardMaterial.prototype.constructor = MeshStandardMaterial;\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\tMeshStandardMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'STANDARD': '' };\n\n\t\tthis.color.copy( source.color );\n\t\tthis.roughness = source.roughness;\n\t\tthis.metalness = source.metalness;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.roughnessMap = source.roughnessMap;\n\n\t\tthis.metalnessMap = source.metalnessMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.envMapIntensity = source.envMapIntensity;\n\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  reflectivity: <float>\n\t *  clearcoat: <float>\n\t *  clearcoatRoughness: <float>\n\t *\n\t *  sheen: <Color>\n\t *\n\t *  clearcoatNormalScale: <Vector2>,\n\t *  clearcoatNormalMap: new THREE.Texture( <Image> ),\n\t * }\n\t */\n\n\tfunction MeshPhysicalMaterial( parameters ) {\n\n\t\tMeshStandardMaterial.call( this );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.type = 'MeshPhysicalMaterial';\n\n\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\tthis.clearcoat = 0.0;\n\t\tthis.clearcoatRoughness = 0.0;\n\n\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\tthis.clearcoatNormalScale = new Vector2( 1, 1 );\n\t\tthis.clearcoatNormalMap = null;\n\n\t\tthis.transparency = 0.0;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhysicalMaterial.prototype = Object.create( MeshStandardMaterial.prototype );\n\tMeshPhysicalMaterial.prototype.constructor = MeshPhysicalMaterial;\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\tMeshPhysicalMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshStandardMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = {\n\n\t\t\t'STANDARD': '',\n\t\t\t'PHYSICAL': ''\n\n\t\t};\n\n\t\tthis.reflectivity = source.reflectivity;\n\n\t\tthis.clearcoat = source.clearcoat;\n\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\n\t\tif ( source.sheen ) { this.sheen = ( this.sheen || new Color() ).copy( source.sheen ); }\n\t\telse { this.sheen = null; }\n\n\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\tthis.clearcoatNormalScale.copy( source.clearcoatNormalScale );\n\n\t\tthis.transparency = source.transparency;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  specular: <hex>,\n\t *  shininess: <float>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.MultiplyOperation,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshPhongMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshPhongMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\t\tthis.specular = new Color( 0x111111 );\n\t\tthis.shininess = 30;\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshPhongMaterial.prototype = Object.create( Material.prototype );\n\tMeshPhongMaterial.prototype.constructor = MeshPhongMaterial;\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\tMeshPhongMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\t\tthis.specular.copy( source.specular );\n\t\tthis.shininess = source.shininess;\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author takahirox / http://github.com/takahirox\n\t *\n\t * parameters = {\n\t *  gradientMap: new THREE.Texture( <Image> )\n\t * }\n\t */\n\n\tfunction MeshToonMaterial( parameters ) {\n\n\t\tMeshPhongMaterial.call( this );\n\n\t\tthis.defines = { 'TOON': '' };\n\n\t\tthis.type = 'MeshToonMaterial';\n\n\t\tthis.gradientMap = null;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshToonMaterial.prototype = Object.create( MeshPhongMaterial.prototype );\n\tMeshToonMaterial.prototype.constructor = MeshToonMaterial;\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\tMeshToonMaterial.prototype.copy = function ( source ) {\n\n\t\tMeshPhongMaterial.prototype.copy.call( this, source );\n\n\t\tthis.gradientMap = source.gradientMap;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  opacity: <float>,\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshNormalMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshNormalMaterial';\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\n\t\tthis.fog = false;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshNormalMaterial.prototype = Object.create( Material.prototype );\n\tMeshNormalMaterial.prototype.constructor = MeshNormalMaterial;\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\tMeshNormalMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  lightMap: new THREE.Texture( <Image> ),\n\t *  lightMapIntensity: <float>\n\t *\n\t *  aoMap: new THREE.Texture( <Image> ),\n\t *  aoMapIntensity: <float>\n\t *\n\t *  emissive: <hex>,\n\t *  emissiveIntensity: <float>\n\t *  emissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *  specularMap: new THREE.Texture( <Image> ),\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  envMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *  combine: THREE.Multiply,\n\t *  reflectivity: <float>,\n\t *  refractionRatio: <float>,\n\t *\n\t *  wireframe: <boolean>,\n\t *  wireframeLinewidth: <float>,\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshLambertMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.type = 'MeshLambertMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.map = null;\n\n\t\tthis.lightMap = null;\n\t\tthis.lightMapIntensity = 1.0;\n\n\t\tthis.aoMap = null;\n\t\tthis.aoMapIntensity = 1.0;\n\n\t\tthis.emissive = new Color( 0x000000 );\n\t\tthis.emissiveIntensity = 1.0;\n\t\tthis.emissiveMap = null;\n\n\t\tthis.specularMap = null;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.envMap = null;\n\t\tthis.combine = MultiplyOperation;\n\t\tthis.reflectivity = 1;\n\t\tthis.refractionRatio = 0.98;\n\n\t\tthis.wireframe = false;\n\t\tthis.wireframeLinewidth = 1;\n\t\tthis.wireframeLinecap = 'round';\n\t\tthis.wireframeLinejoin = 'round';\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshLambertMaterial.prototype = Object.create( Material.prototype );\n\tMeshLambertMaterial.prototype.constructor = MeshLambertMaterial;\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\tMeshLambertMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.map = source.map;\n\n\t\tthis.lightMap = source.lightMap;\n\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\n\t\tthis.aoMap = source.aoMap;\n\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\n\t\tthis.emissive.copy( source.emissive );\n\t\tthis.emissiveMap = source.emissiveMap;\n\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\n\t\tthis.specularMap = source.specularMap;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.envMap = source.envMap;\n\t\tthis.combine = source.combine;\n\t\tthis.reflectivity = source.reflectivity;\n\t\tthis.refractionRatio = source.refractionRatio;\n\n\t\tthis.wireframe = source.wireframe;\n\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  matcap: new THREE.Texture( <Image> ),\n\t *\n\t *  map: new THREE.Texture( <Image> ),\n\t *\n\t *  bumpMap: new THREE.Texture( <Image> ),\n\t *  bumpScale: <float>,\n\t *\n\t *  normalMap: new THREE.Texture( <Image> ),\n\t *  normalMapType: THREE.TangentSpaceNormalMap,\n\t *  normalScale: <Vector2>,\n\t *\n\t *  displacementMap: new THREE.Texture( <Image> ),\n\t *  displacementScale: <float>,\n\t *  displacementBias: <float>,\n\t *\n\t *  alphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *  skinning: <bool>,\n\t *  morphTargets: <bool>,\n\t *  morphNormals: <bool>\n\t * }\n\t */\n\n\tfunction MeshMatcapMaterial( parameters ) {\n\n\t\tMaterial.call( this );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.type = 'MeshMatcapMaterial';\n\n\t\tthis.color = new Color( 0xffffff ); // diffuse\n\n\t\tthis.matcap = null;\n\n\t\tthis.map = null;\n\n\t\tthis.bumpMap = null;\n\t\tthis.bumpScale = 1;\n\n\t\tthis.normalMap = null;\n\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\tthis.normalScale = new Vector2( 1, 1 );\n\n\t\tthis.displacementMap = null;\n\t\tthis.displacementScale = 1;\n\t\tthis.displacementBias = 0;\n\n\t\tthis.alphaMap = null;\n\n\t\tthis.skinning = false;\n\t\tthis.morphTargets = false;\n\t\tthis.morphNormals = false;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tMeshMatcapMaterial.prototype = Object.create( Material.prototype );\n\tMeshMatcapMaterial.prototype.constructor = MeshMatcapMaterial;\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\tMeshMatcapMaterial.prototype.copy = function ( source ) {\n\n\t\tMaterial.prototype.copy.call( this, source );\n\n\t\tthis.defines = { 'MATCAP': '' };\n\n\t\tthis.color.copy( source.color );\n\n\t\tthis.matcap = source.matcap;\n\n\t\tthis.map = source.map;\n\n\t\tthis.bumpMap = source.bumpMap;\n\t\tthis.bumpScale = source.bumpScale;\n\n\t\tthis.normalMap = source.normalMap;\n\t\tthis.normalMapType = source.normalMapType;\n\t\tthis.normalScale.copy( source.normalScale );\n\n\t\tthis.displacementMap = source.displacementMap;\n\t\tthis.displacementScale = source.displacementScale;\n\t\tthis.displacementBias = source.displacementBias;\n\n\t\tthis.alphaMap = source.alphaMap;\n\n\t\tthis.skinning = source.skinning;\n\t\tthis.morphTargets = source.morphTargets;\n\t\tthis.morphNormals = source.morphNormals;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t *\n\t * parameters = {\n\t *  color: <hex>,\n\t *  opacity: <float>,\n\t *\n\t *  linewidth: <float>,\n\t *\n\t *  scale: <float>,\n\t *  dashSize: <float>,\n\t *  gapSize: <float>\n\t * }\n\t */\n\n\tfunction LineDashedMaterial( parameters ) {\n\n\t\tLineBasicMaterial.call( this );\n\n\t\tthis.type = 'LineDashedMaterial';\n\n\t\tthis.scale = 1;\n\t\tthis.dashSize = 3;\n\t\tthis.gapSize = 1;\n\n\t\tthis.setValues( parameters );\n\n\t}\n\n\tLineDashedMaterial.prototype = Object.create( LineBasicMaterial.prototype );\n\tLineDashedMaterial.prototype.constructor = LineDashedMaterial;\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tLineDashedMaterial.prototype.copy = function ( source ) {\n\n\t\tLineBasicMaterial.prototype.copy.call( this, source );\n\n\t\tthis.scale = source.scale;\n\t\tthis.dashSize = source.dashSize;\n\t\tthis.gapSize = source.gapSize;\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\t/**\n\t * @author tschw\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tvar AnimationUtils = {\n\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function ( array, from, to ) {\n\n\t\t\tif ( AnimationUtils.isTypedArray( array ) ) {\n\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor( array.subarray( from, to !== undefined ? to : array.length ) );\n\n\t\t\t}\n\n\t\t\treturn array.slice( from, to );\n\n\t\t},\n\n\t\t// converts an array to a specific type\n\t\tconvertArray: function ( array, type, forceClone ) {\n\n\t\t\tif ( ! array || // let 'undefined' and 'null' pass\n\t\t\t\t! forceClone && array.constructor === type ) { return array; }\n\n\t\t\tif ( typeof type.BYTES_PER_ELEMENT === 'number' ) {\n\n\t\t\t\treturn new type( array ); // create typed array\n\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call( array ); // create Array\n\n\t\t},\n\n\t\tisTypedArray: function ( object ) {\n\n\t\t\treturn ArrayBuffer.isView( object ) &&\n\t\t\t\t! ( object instanceof DataView );\n\n\t\t},\n\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function ( times ) {\n\n\t\t\tfunction compareTime( i, j ) {\n\n\t\t\t\treturn times[ i ] - times[ j ];\n\n\t\t\t}\n\n\t\t\tvar n = times.length;\n\t\t\tvar result = new Array( n );\n\t\t\tfor ( var i = 0; i !== n; ++ i ) { result[ i ] = i; }\n\n\t\t\tresult.sort( compareTime );\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function ( values, stride, order ) {\n\n\t\t\tvar nValues = values.length;\n\t\t\tvar result = new values.constructor( nValues );\n\n\t\t\tfor ( var i = 0, dstOffset = 0; dstOffset !== nValues; ++ i ) {\n\n\t\t\t\tvar srcOffset = order[ i ] * stride;\n\n\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tresult[ dstOffset ++ ] = values[ srcOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function ( jsonKeys, times, values, valuePropertyName ) {\n\n\t\t\tvar i = 1, key = jsonKeys[ 0 ];\n\n\t\t\twhile ( key !== undefined && key[ valuePropertyName ] === undefined ) {\n\n\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t}\n\n\t\t\tif ( key === undefined ) { return; } // no data\n\n\t\t\tvar value = key[ valuePropertyName ];\n\t\t\tif ( value === undefined ) { return; } // no data\n\n\t\t\tif ( Array.isArray( value ) ) {\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push.apply( values, value ); // push all elements\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else if ( value.toArray !== undefined ) {\n\n\t\t\t\t// ...assume THREE.Math-ish\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalue.toArray( values, values.length );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t} else {\n\n\t\t\t\t// otherwise push as-is\n\n\t\t\t\tdo {\n\n\t\t\t\t\tvalue = key[ valuePropertyName ];\n\n\t\t\t\t\tif ( value !== undefined ) {\n\n\t\t\t\t\t\ttimes.push( key.time );\n\t\t\t\t\t\tvalues.push( value );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[ i ++ ];\n\n\t\t\t\t} while ( key !== undefined );\n\n\t\t\t}\n\n\t\t},\n\n\t\tsubclip: function ( sourceClip, name, startFrame, endFrame, fps ) {\n\n\t\t\tfps = fps || 30;\n\n\t\t\tvar clip = sourceClip.clone();\n\n\t\t\tclip.name = name;\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tvar track = clip.tracks[ i ];\n\t\t\t\tvar valueSize = track.getValueSize();\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\tfor ( var j = 0; j < track.times.length; ++ j ) {\n\n\t\t\t\t\tvar frame = track.times[ j ] * fps;\n\n\t\t\t\t\tif ( frame < startFrame || frame >= endFrame ) { continue; }\n\n\t\t\t\t\ttimes.push( track.times[ j ] );\n\n\t\t\t\t\tfor ( var k = 0; k < valueSize; ++ k ) {\n\n\t\t\t\t\t\tvalues.push( track.values[ j * valueSize + k ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( times.length === 0 ) { continue; }\n\n\t\t\t\ttrack.times = AnimationUtils.convertArray( times, track.times.constructor );\n\t\t\t\ttrack.values = AnimationUtils.convertArray( values, track.values.constructor );\n\n\t\t\t\ttracks.push( track );\n\n\t\t\t}\n\n\t\t\tclip.tracks = tracks;\n\n\t\t\t// find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tvar minStartTime = Infinity;\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tif ( minStartTime > clip.tracks[ i ].times[ 0 ] ) {\n\n\t\t\t\t\tminStartTime = clip.tracks[ i ].times[ 0 ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// shift all tracks such that clip begins at t=0\n\n\t\t\tfor ( var i = 0; i < clip.tracks.length; ++ i ) {\n\n\t\t\t\tclip.tracks[ i ].shift( - 1 * minStartTime );\n\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t * @author tschw\n\t */\n\n\tfunction Interpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tthis.parameterPositions = parameterPositions;\n\t\tthis._cachedIndex = 0;\n\n\t\tthis.resultBuffer = resultBuffer !== undefined ?\n\t\t\tresultBuffer : new sampleValues.constructor( sampleSize );\n\t\tthis.sampleValues = sampleValues;\n\t\tthis.valueSize = sampleSize;\n\n\t}\n\n\tObject.assign( Interpolant.prototype, {\n\n\t\tevaluate: function ( t ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\ti1 = this._cachedIndex,\n\n\t\t\t\tt1 = pp[ i1 ],\n\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\tvalidate_interval: {\n\n\t\t\t\tseek: {\n\n\t\t\t\t\tvar right;\n\n\t\t\t\t\tlinear_scan: {\n\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if ( ! ( t < t1 ) ) {\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 + 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\t\t\t\tif ( t < t0 ) { break forward_scan; }\n\n\t\t\t\t\t\t\t\t\t// after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t, t0 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[ ++ i1 ];\n\n\t\t\t\t\t\t\t\tif ( t < t1 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the right side of the index\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\t\t\t\t\t\tif ( ! ( t >= t0 ) ) {\n\n\t\t\t\t\t\t\t// looping?\n\n\t\t\t\t\t\t\tvar t1global = pp[ 1 ];\n\n\t\t\t\t\t\t\tif ( t < t1global ) {\n\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\t\t\t\t\t\t\t\tt0 = t1global;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// linear reverse scan\n\n\t\t\t\t\t\t\tfor ( var giveUpAt = i1 - 2; ; ) {\n\n\t\t\t\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\t\t\t\t// before start\n\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif ( i1 === giveUpAt ) { break; } // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[ -- i1 - 1 ];\n\n\t\t\t\t\t\t\t\tif ( t >= t0 ) {\n\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t// prepare binary search on the left side of the index\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// the interval is valid\n\n\t\t\t\t\t\tbreak validate_interval;\n\n\t\t\t\t\t} // linear scan\n\n\t\t\t\t\t// binary search\n\n\t\t\t\t\twhile ( i1 < right ) {\n\n\t\t\t\t\t\tvar mid = ( i1 + right ) >>> 1;\n\n\t\t\t\t\t\tif ( t < pp[ mid ] ) {\n\n\t\t\t\t\t\t\tright = mid;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\ti1 = mid + 1;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[ i1 ];\n\t\t\t\t\tt0 = pp[ i1 - 1 ];\n\n\t\t\t\t\t// check boundary cases, again\n\n\t\t\t\t\tif ( t0 === undefined ) {\n\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_( 0, t, t1 );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( t1 === undefined ) {\n\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_( i1 - 1, t0, t );\n\n\t\t\t\t\t}\n\n\t\t\t\t} // seek\n\n\t\t\t\tthis._cachedIndex = i1;\n\n\t\t\t\tthis.intervalChanged_( i1, t0, t1 );\n\n\t\t\t} // validate_interval\n\n\t\t\treturn this.interpolate_( i1, t0, t, t1 );\n\n\t\t},\n\n\t\tsettings: null, // optional, subclass-specific settings structure\n\t\t// Note: The indirection allows central control of many interpolants.\n\n\t\t// --- Protected interface\n\n\t\tDefaultSettings_: {},\n\n\t\tgetSettings_: function () {\n\n\t\t\treturn this.settings || this.DefaultSettings_;\n\n\t\t},\n\n\t\tcopySampleValue_: function ( index ) {\n\n\t\t\t// copies a sample value to the result buffer\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = index * stride;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] = values[ offset + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t},\n\n\t\t// Template methods for derived classes:\n\n\t\tinterpolate_: function ( /* i1, t0, t, t1 */ ) {\n\n\t\t\tthrow new Error( 'call to abstract method' );\n\t\t\t// implementations shall return this.resultBuffer\n\n\t\t},\n\n\t\tintervalChanged_: function ( /* i1, t0, t1 */ ) {\n\n\t\t\t// empty\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( Interpolant.prototype, {\n\n\t\t//( 0, t, t0 ), returns this.resultBuffer\n\t\tbeforeStart_: Interpolant.prototype.copySampleValue_,\n\n\t\t//( N-1, tN-1, t ), returns this.resultBuffer\n\t\tafterEnd_: Interpolant.prototype.copySampleValue_,\n\n\t} );\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction CubicInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t\tthis._weightPrev = - 0;\n\t\tthis._offsetPrev = - 0;\n\t\tthis._weightNext = - 0;\n\t\tthis._offsetNext = - 0;\n\n\t}\n\n\tCubicInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: CubicInterpolant,\n\n\t\tDefaultSettings_: {\n\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\n\t\t},\n\n\t\tintervalChanged_: function ( i1, t0, t1 ) {\n\n\t\t\tvar pp = this.parameterPositions,\n\t\t\t\tiPrev = i1 - 2,\n\t\t\t\tiNext = i1 + 1,\n\n\t\t\t\ttPrev = pp[ iPrev ],\n\t\t\t\ttNext = pp[ iNext ];\n\n\t\t\tif ( tPrev === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingStart ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[ iPrev ] - pp[ iPrev + 1 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tNext === undefined ) {\n\n\t\t\t\tswitch ( this.getSettings_().endingEnd ) {\n\n\t\t\t\t\tcase ZeroSlopeEnding:\n\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[ 1 ] - pp[ 0 ];\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault: // ZeroCurvatureEnding\n\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar halfDt = ( t1 - t0 ) * 0.5,\n\t\t\t\tstride = this.valueSize;\n\n\t\t\tthis._weightPrev = halfDt / ( t0 - tPrev );\n\t\t\tthis._weightNext = halfDt / ( tNext - t1 );\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\n\t\t},\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\to1 = i1 * stride,\t\to0 = o1 - stride,\n\t\t\t\toP = this._offsetPrev, \toN = this._offsetNext,\n\t\t\t\twP = this._weightPrev,\twN = this._weightNext,\n\n\t\t\t\tp = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tpp = p * p,\n\t\t\t\tppp = pp * p;\n\n\t\t\t// evaluate polynomials\n\n\t\t\tvar sP = - wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tvar s0 = ( 1 + wP ) * ppp + ( - 1.5 - 2 * wP ) * pp + ( - 0.5 + wP ) * p + 1;\n\t\t\tvar s1 = ( - 1 - wN ) * ppp + ( 1.5 + wN ) * pp + 0.5 * p;\n\t\t\tvar sN = wN * ppp - wN * pp;\n\n\t\t\t// combine data linearly\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tsP * values[ oP + i ] +\n\t\t\t\t\t\ts0 * values[ o0 + i ] +\n\t\t\t\t\t\ts1 * values[ o1 + i ] +\n\t\t\t\t\t\tsN * values[ oN + i ];\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author tschw\n\t */\n\n\tfunction LinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: LinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset1 = i1 * stride,\n\t\t\t\toffset0 = offset1 - stride,\n\n\t\t\t\tweight1 = ( t - t0 ) / ( t1 - t0 ),\n\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tresult[ i ] =\n\t\t\t\t\t\tvalues[ offset0 + i ] * weight0 +\n\t\t\t\t\t\tvalues[ offset1 + i ] * weight1;\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction DiscreteInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tDiscreteInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: DiscreteInterpolant,\n\n\t\tinterpolate_: function ( i1 /*, t0, t, t1 */ ) {\n\n\t\t\treturn this.copySampleValue_( i1 - 1 );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A timed sequence of keyframes for a specific property.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction KeyframeTrack( name, times, values, interpolation ) {\n\n\t\tif ( name === undefined ) { throw new Error( 'THREE.KeyframeTrack: track name is undefined' ); }\n\t\tif ( times === undefined || times.length === 0 ) { throw new Error( 'THREE.KeyframeTrack: no keyframes in track named ' + name ); }\n\n\t\tthis.name = name;\n\n\t\tthis.times = AnimationUtils.convertArray( times, this.TimeBufferType );\n\t\tthis.values = AnimationUtils.convertArray( values, this.ValueBufferType );\n\n\t\tthis.setInterpolation( interpolation || this.DefaultInterpolation );\n\n\t}\n\n\t// Static methods\n\n\tObject.assign( KeyframeTrack, {\n\n\t\t// Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\t\ttoJSON: function ( track ) {\n\n\t\t\tvar trackType = track.constructor;\n\n\t\t\tvar json;\n\n\t\t\t// derived classes can define a static toJSON method\n\t\t\tif ( trackType.toJSON !== undefined ) {\n\n\t\t\t\tjson = trackType.toJSON( track );\n\n\t\t\t} else {\n\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray( track.times, Array ),\n\t\t\t\t\t'values': AnimationUtils.convertArray( track.values, Array )\n\n\t\t\t\t};\n\n\t\t\t\tvar interpolation = track.getInterpolation();\n\n\t\t\t\tif ( interpolation !== track.DefaultInterpolation ) {\n\n\t\t\t\t\tjson.interpolation = interpolation;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( KeyframeTrack.prototype, {\n\n\t\tconstructor: KeyframeTrack,\n\n\t\tTimeBufferType: Float32Array,\n\n\t\tValueBufferType: Float32Array,\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodDiscrete: function ( result ) {\n\n\t\t\treturn new DiscreteInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new LinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: function ( result ) {\n\n\t\t\treturn new CubicInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tsetInterpolation: function ( interpolation ) {\n\n\t\t\tvar factoryMethod;\n\n\t\t\tswitch ( interpolation ) {\n\n\t\t\t\tcase InterpolateDiscrete:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tif ( factoryMethod === undefined ) {\n\n\t\t\t\tvar message = \"unsupported interpolation for \" +\n\t\t\t\t\tthis.ValueTypeName + \" keyframe track named \" + this.name;\n\n\t\t\t\tif ( this.createInterpolant === undefined ) {\n\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif ( interpolation !== this.DefaultInterpolation ) {\n\n\t\t\t\t\t\tthis.setInterpolation( this.DefaultInterpolation );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthrow new Error( message ); // fatal, in this case\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tconsole.warn( 'THREE.KeyframeTrack:', message );\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetInterpolation: function () {\n\n\t\t\tswitch ( this.createInterpolant ) {\n\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\n\t\t\t\t\treturn InterpolateSmooth;\n\n\t\t\t}\n\n\t\t},\n\n\t\tgetValueSize: function () {\n\n\t\t\treturn this.values.length / this.times.length;\n\n\t\t},\n\n\t\t// move all keyframes either forwards or backwards in time\n\t\tshift: function ( timeOffset ) {\n\n\t\t\tif ( timeOffset !== 0.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] += timeOffset;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\t\tscale: function ( timeScale ) {\n\n\t\t\tif ( timeScale !== 1.0 ) {\n\n\t\t\t\tvar times = this.times;\n\n\t\t\t\tfor ( var i = 0, n = times.length; i !== n; ++ i ) {\n\n\t\t\t\t\ttimes[ i ] *= timeScale;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\t\ttrim: function ( startTime, endTime ) {\n\n\t\t\tvar times = this.times,\n\t\t\t\tnKeys = times.length,\n\t\t\t\tfrom = 0,\n\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile ( from !== nKeys && times[ from ] < startTime ) {\n\n\t\t\t\t++ from;\n\n\t\t\t}\n\n\t\t\twhile ( to !== - 1 && times[ to ] > endTime ) {\n\n\t\t\t\t-- to;\n\n\t\t\t}\n\n\t\t\t++ to; // inclusive -> exclusive bound\n\n\t\t\tif ( from !== 0 || to !== nKeys ) {\n\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif ( from >= to ) { to = Math.max( to, 1 ), from = to - 1; }\n\n\t\t\t\tvar stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, from, to );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( this.values, from * stride, to * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tvar valueSize = this.getValueSize();\n\t\t\tif ( valueSize - Math.floor( valueSize ) !== 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Invalid value size in track.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\n\t\t\t\tnKeys = times.length;\n\n\t\t\tif ( nKeys === 0 ) {\n\n\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Track is empty.', this );\n\t\t\t\tvalid = false;\n\n\t\t\t}\n\n\t\t\tvar prevTime = null;\n\n\t\t\tfor ( var i = 0; i !== nKeys; i ++ ) {\n\n\t\t\t\tvar currTime = times[ i ];\n\n\t\t\t\tif ( typeof currTime === 'number' && isNaN( currTime ) ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tif ( prevTime !== null && prevTime > currTime ) {\n\n\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime );\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\n\t\t\t}\n\n\t\t\tif ( values !== undefined ) {\n\n\t\t\t\tif ( AnimationUtils.isTypedArray( values ) ) {\n\n\t\t\t\t\tfor ( var i = 0, n = values.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tvar value = values[ i ];\n\n\t\t\t\t\t\tif ( isNaN( value ) ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.KeyframeTrack: Value is not a valid number.', this, i, value );\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\t// removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\t\toptimize: function () {\n\n\t\t\tvar times = this.times,\n\t\t\t\tvalues = this.values,\n\t\t\t\tstride = this.getValueSize(),\n\n\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\n\t\t\t\twriteIndex = 1,\n\t\t\t\tlastIndex = times.length - 1;\n\n\t\t\tfor ( var i = 1; i < lastIndex; ++ i ) {\n\n\t\t\t\tvar keep = false;\n\n\t\t\t\tvar time = times[ i ];\n\t\t\t\tvar timeNext = times[ i + 1 ];\n\n\t\t\t\t// remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif ( time !== timeNext && ( i !== 1 || time !== time[ 0 ] ) ) {\n\n\t\t\t\t\tif ( ! smoothInterpolation ) {\n\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\n\t\t\t\t\t\tvar offset = i * stride,\n\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvar value = values[ offset + j ];\n\n\t\t\t\t\t\t\tif ( value !== values[ offsetP + j ] ||\n\t\t\t\t\t\t\t\tvalue !== values[ offsetN + j ] ) {\n\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tkeep = true;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\t// in-place compaction\n\n\t\t\t\tif ( keep ) {\n\n\t\t\t\t\tif ( i !== writeIndex ) {\n\n\t\t\t\t\t\ttimes[ writeIndex ] = times[ i ];\n\n\t\t\t\t\t\tvar readOffset = i * stride,\n\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor ( var j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t++ writeIndex;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// flush last keyframe (compaction looks ahead)\n\n\t\t\tif ( lastIndex > 0 ) {\n\n\t\t\t\ttimes[ writeIndex ] = times[ lastIndex ];\n\n\t\t\t\tfor ( var readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++ j ) {\n\n\t\t\t\t\tvalues[ writeOffset + j ] = values[ readOffset + j ];\n\n\t\t\t\t}\n\n\t\t\t\t++ writeIndex;\n\n\t\t\t}\n\n\t\t\tif ( writeIndex !== times.length ) {\n\n\t\t\t\tthis.times = AnimationUtils.arraySlice( times, 0, writeIndex );\n\t\t\t\tthis.values = AnimationUtils.arraySlice( values, 0, writeIndex * stride );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar times = AnimationUtils.arraySlice( this.times, 0 );\n\t\t\tvar values = AnimationUtils.arraySlice( this.values, 0 );\n\n\t\t\tvar TypedKeyframeTrack = this.constructor;\n\t\t\tvar track = new TypedKeyframeTrack( this.name, times, values );\n\n\t\t\t// Interpolant argument to constructor is not saved, so copy the factory method directly.\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\n\t\t\treturn track;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of Boolean keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction BooleanKeyframeTrack( name, times, values ) {\n\n\t\tKeyframeTrack.call( this, name, times, values );\n\n\t}\n\n\tBooleanKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: BooleanKeyframeTrack,\n\n\t\tValueTypeName: 'bool',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t\t// Note: Actually this track could have a optimized / compressed\n\t\t// representation of a single value and a custom interpolant that\n\t\t// computes \"firstValue ^ isOdd( index )\".\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of keyframe values that represent color.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction ColorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tColorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: ColorKeyframeTrack,\n\n\t\tValueTypeName: 'color'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t\t// Note: Very basic implementation and nothing special yet.\n\t\t// However, this is the place for color space parameterization.\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of numeric keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction NumberKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tNumberKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: NumberKeyframeTrack,\n\n\t\tValueTypeName: 'number'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction QuaternionLinearInterpolant( parameterPositions, sampleValues, sampleSize, resultBuffer ) {\n\n\t\tInterpolant.call( this, parameterPositions, sampleValues, sampleSize, resultBuffer );\n\n\t}\n\n\tQuaternionLinearInterpolant.prototype = Object.assign( Object.create( Interpolant.prototype ), {\n\n\t\tconstructor: QuaternionLinearInterpolant,\n\n\t\tinterpolate_: function ( i1, t0, t, t1 ) {\n\n\t\t\tvar result = this.resultBuffer,\n\t\t\t\tvalues = this.sampleValues,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toffset = i1 * stride,\n\n\t\t\t\talpha = ( t - t0 ) / ( t1 - t0 );\n\n\t\t\tfor ( var end = offset + stride; offset !== end; offset += 4 ) {\n\n\t\t\t\tQuaternion.slerpFlat( result, 0, values, offset - stride, values, offset, alpha );\n\n\t\t\t}\n\n\t\t\treturn result;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of quaternion keyframe values.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction QuaternionKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: QuaternionKeyframeTrack,\n\n\t\tValueTypeName: 'quaternion',\n\n\t\t// ValueBufferType is inherited\n\n\t\tDefaultInterpolation: InterpolateLinear,\n\n\t\tInterpolantFactoryMethodLinear: function ( result ) {\n\n\t\t\treturn new QuaternionLinearInterpolant( this.times, this.values, this.getValueSize(), result );\n\n\t\t},\n\n\t\tInterpolantFactoryMethodSmooth: undefined // not yet implemented\n\n\t} );\n\n\t/**\n\t *\n\t * A Track that interpolates Strings\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction StringKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tStringKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: StringKeyframeTrack,\n\n\t\tValueTypeName: 'string',\n\t\tValueBufferType: Array,\n\n\t\tDefaultInterpolation: InterpolateDiscrete,\n\n\t\tInterpolantFactoryMethodLinear: undefined,\n\n\t\tInterpolantFactoryMethodSmooth: undefined\n\n\t} );\n\n\t/**\n\t *\n\t * A Track of vectored keyframe values.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction VectorKeyframeTrack( name, times, values, interpolation ) {\n\n\t\tKeyframeTrack.call( this, name, times, values, interpolation );\n\n\t}\n\n\tVectorKeyframeTrack.prototype = Object.assign( Object.create( KeyframeTrack.prototype ), {\n\n\t\tconstructor: VectorKeyframeTrack,\n\n\t\tValueTypeName: 'vector'\n\n\t\t// ValueBufferType is inherited\n\n\t\t// DefaultInterpolation is inherited\n\n\t} );\n\n\t/**\n\t *\n\t * Reusable set of Tracks that represent an animation.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t */\n\n\tfunction AnimationClip( name, duration, tracks ) {\n\n\t\tthis.name = name;\n\t\tthis.tracks = tracks;\n\t\tthis.duration = ( duration !== undefined ) ? duration : - 1;\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// this means it should figure out its duration by scanning the tracks\n\t\tif ( this.duration < 0 ) {\n\n\t\t\tthis.resetDuration();\n\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName( typeName ) {\n\n\t\tswitch ( typeName.toLowerCase() ) {\n\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\n\t\t\t\treturn StringKeyframeTrack;\n\n\t\t}\n\n\t\tthrow new Error( 'THREE.KeyframeTrack: Unsupported typeName: ' + typeName );\n\n\t}\n\n\tfunction parseKeyframeTrack( json ) {\n\n\t\tif ( json.type === undefined ) {\n\n\t\t\tthrow new Error( 'THREE.KeyframeTrack: track type undefined, can not parse' );\n\n\t\t}\n\n\t\tvar trackType = getTrackTypeForValueTypeName( json.type );\n\n\t\tif ( json.times === undefined ) {\n\n\t\t\tvar times = [], values = [];\n\n\t\t\tAnimationUtils.flattenJSON( json.keys, times, values, 'value' );\n\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\n\t\t}\n\n\t\t// derived classes can define a static parse method\n\t\tif ( trackType.parse !== undefined ) {\n\n\t\t\treturn trackType.parse( json );\n\n\t\t} else {\n\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType( json.name, json.times, json.values, json.interpolation );\n\n\t\t}\n\n\t}\n\n\tObject.assign( AnimationClip, {\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\tframeTime = 1.0 / ( json.fps || 1.0 );\n\n\t\t\tfor ( var i = 0, n = jsonTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( parseKeyframeTrack( jsonTracks[ i ] ).scale( frameTime ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( json.name, json.duration, tracks );\n\n\t\t},\n\n\t\ttoJSON: function ( clip ) {\n\n\t\t\tvar tracks = [],\n\t\t\t\tclipTracks = clip.tracks;\n\n\t\t\tvar json = {\n\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid\n\n\t\t\t};\n\n\t\t\tfor ( var i = 0, n = clipTracks.length; i !== n; ++ i ) {\n\n\t\t\t\ttracks.push( KeyframeTrack.toJSON( clipTracks[ i ] ) );\n\n\t\t\t}\n\n\t\t\treturn json;\n\n\t\t},\n\n\t\tCreateFromMorphTargetSequence: function ( name, morphTargetSequence, fps, noLoop ) {\n\n\t\t\tvar numMorphTargets = morphTargetSequence.length;\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < numMorphTargets; i ++ ) {\n\n\t\t\t\tvar times = [];\n\t\t\t\tvar values = [];\n\n\t\t\t\ttimes.push(\n\t\t\t\t\t( i + numMorphTargets - 1 ) % numMorphTargets,\n\t\t\t\t\ti,\n\t\t\t\t\t( i + 1 ) % numMorphTargets );\n\n\t\t\t\tvalues.push( 0, 1, 0 );\n\n\t\t\t\tvar order = AnimationUtils.getKeyframeOrder( times );\n\t\t\t\ttimes = AnimationUtils.sortedArray( times, 1, order );\n\t\t\t\tvalues = AnimationUtils.sortedArray( values, 1, order );\n\n\t\t\t\t// if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\t\t\t\tif ( ! noLoop && times[ 0 ] === 0 ) {\n\n\t\t\t\t\ttimes.push( numMorphTargets );\n\t\t\t\t\tvalues.push( values[ 0 ] );\n\n\t\t\t\t}\n\n\t\t\t\ttracks.push(\n\t\t\t\t\tnew NumberKeyframeTrack(\n\t\t\t\t\t\t'.morphTargetInfluences[' + morphTargetSequence[ i ].name + ']',\n\t\t\t\t\t\ttimes, values\n\t\t\t\t\t).scale( 1.0 / fps ) );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( name, - 1, tracks );\n\n\t\t},\n\n\t\tfindByName: function ( objectOrClipArray, name ) {\n\n\t\t\tvar clipArray = objectOrClipArray;\n\n\t\t\tif ( ! Array.isArray( objectOrClipArray ) ) {\n\n\t\t\t\tvar o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < clipArray.length; i ++ ) {\n\n\t\t\t\tif ( clipArray[ i ].name === name ) {\n\n\t\t\t\t\treturn clipArray[ i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\tCreateClipsFromMorphTargetSequences: function ( morphTargets, fps, noLoop ) {\n\n\t\t\tvar animationToMorphTargets = {};\n\n\t\t\t// tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\t\t\tvar pattern = /^([\\w-]*?)([\\d]+)$/;\n\n\t\t\t// sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\t\t\tfor ( var i = 0, il = morphTargets.length; i < il; i ++ ) {\n\n\t\t\t\tvar morphTarget = morphTargets[ i ];\n\t\t\t\tvar parts = morphTarget.name.match( pattern );\n\n\t\t\t\tif ( parts && parts.length > 1 ) {\n\n\t\t\t\t\tvar name = parts[ 1 ];\n\n\t\t\t\t\tvar animationMorphTargets = animationToMorphTargets[ name ];\n\t\t\t\t\tif ( ! animationMorphTargets ) {\n\n\t\t\t\t\t\tanimationToMorphTargets[ name ] = animationMorphTargets = [];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push( morphTarget );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar clips = [];\n\n\t\t\tfor ( var name in animationToMorphTargets ) {\n\n\t\t\t\tclips.push( AnimationClip.CreateFromMorphTargetSequence( name, animationToMorphTargets[ name ], fps, noLoop ) );\n\n\t\t\t}\n\n\t\t\treturn clips;\n\n\t\t},\n\n\t\t// parse the animation.hierarchy format\n\t\tparseAnimation: function ( animation, bones ) {\n\n\t\t\tif ( ! animation ) {\n\n\t\t\t\tconsole.error( 'THREE.AnimationClip: No animation in JSONLoader data.' );\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar addNonemptyTrack = function ( trackType, trackName, animationKeys, propertyName, destTracks ) {\n\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif ( animationKeys.length !== 0 ) {\n\n\t\t\t\t\tvar times = [];\n\t\t\t\t\tvar values = [];\n\n\t\t\t\t\tAnimationUtils.flattenJSON( animationKeys, times, values, propertyName );\n\n\t\t\t\t\t// empty keys are filtered out, so check again\n\t\t\t\t\tif ( times.length !== 0 ) {\n\n\t\t\t\t\t\tdestTracks.push( new trackType( trackName, times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t\tvar tracks = [];\n\n\t\t\tvar clipName = animation.name || 'default';\n\t\t\t// automatic length determination in AnimationClip.\n\t\t\tvar duration = animation.length || - 1;\n\t\t\tvar fps = animation.fps || 30;\n\n\t\t\tvar hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor ( var h = 0; h < hierarchyTracks.length; h ++ ) {\n\n\t\t\t\tvar animationKeys = hierarchyTracks[ h ].keys;\n\n\t\t\t\t// skip empty tracks\n\t\t\t\tif ( ! animationKeys || animationKeys.length === 0 ) { continue; }\n\n\t\t\t\t// process morph targets\n\t\t\t\tif ( animationKeys[ 0 ].morphTargets ) {\n\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tvar morphTargetNames = {};\n\n\t\t\t\t\tfor ( var k = 0; k < animationKeys.length; k ++ ) {\n\n\t\t\t\t\t\tif ( animationKeys[ k ].morphTargets ) {\n\n\t\t\t\t\t\t\tfor ( var m = 0; m < animationKeys[ k ].morphTargets.length; m ++ ) {\n\n\t\t\t\t\t\t\t\tmorphTargetNames[ animationKeys[ k ].morphTargets[ m ] ] = - 1;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\t\t\t\t\tfor ( var morphTargetName in morphTargetNames ) {\n\n\t\t\t\t\t\tvar times = [];\n\t\t\t\t\t\tvar values = [];\n\n\t\t\t\t\t\tfor ( var m = 0; m !== animationKeys[ k ].morphTargets.length; ++ m ) {\n\n\t\t\t\t\t\t\tvar animationKey = animationKeys[ k ];\n\n\t\t\t\t\t\t\ttimes.push( animationKey.time );\n\t\t\t\t\t\t\tvalues.push( ( animationKey.morphTarget === morphTargetName ) ? 1 : 0 );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push( new NumberKeyframeTrack( '.morphTargetInfluence[' + morphTargetName + ']', times, values ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * ( fps || 1.0 );\n\n\t\t\t\t} else {\n\n\t\t\t\t\t// ...assume skeletal animation\n\n\t\t\t\t\tvar boneName = '.bones[' + bones[ h ].name + ']';\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.position',\n\t\t\t\t\t\tanimationKeys, 'pos', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tQuaternionKeyframeTrack, boneName + '.quaternion',\n\t\t\t\t\t\tanimationKeys, 'rot', tracks );\n\n\t\t\t\t\taddNonemptyTrack(\n\t\t\t\t\t\tVectorKeyframeTrack, boneName + '.scale',\n\t\t\t\t\t\tanimationKeys, 'scl', tracks );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( tracks.length === 0 ) {\n\n\t\t\t\treturn null;\n\n\t\t\t}\n\n\t\t\tvar clip = new AnimationClip( clipName, duration, tracks );\n\n\t\t\treturn clip;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( AnimationClip.prototype, {\n\n\t\tresetDuration: function () {\n\n\t\t\tvar tracks = this.tracks, duration = 0;\n\n\t\t\tfor ( var i = 0, n = tracks.length; i !== n; ++ i ) {\n\n\t\t\t\tvar track = this.tracks[ i ];\n\n\t\t\t\tduration = Math.max( duration, track.times[ track.times.length - 1 ] );\n\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttrim: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].trim( 0, this.duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tvalidate: function () {\n\n\t\t\tvar valid = true;\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tvalid = valid && this.tracks[ i ].validate();\n\n\t\t\t}\n\n\t\t\treturn valid;\n\n\t\t},\n\n\t\toptimize: function () {\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\tthis.tracks[ i ].optimize();\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\tvar tracks = [];\n\n\t\t\tfor ( var i = 0; i < this.tracks.length; i ++ ) {\n\n\t\t\t\ttracks.push( this.tracks[ i ].clone() );\n\n\t\t\t}\n\n\t\t\treturn new AnimationClip( this.name, this.duration, tracks );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar Cache = {\n\n\t\tenabled: false,\n\n\t\tfiles: {},\n\n\t\tadd: function ( key, file ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[ key ] = file;\n\n\t\t},\n\n\t\tget: function ( key ) {\n\n\t\t\tif ( this.enabled === false ) { return; }\n\n\t\t\t// console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[ key ];\n\n\t\t},\n\n\t\tremove: function ( key ) {\n\n\t\t\tdelete this.files[ key ];\n\n\t\t},\n\n\t\tclear: function () {\n\n\t\t\tthis.files = {};\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LoadingManager( onLoad, onProgress, onError ) {\n\n\t\tvar scope = this;\n\n\t\tvar isLoading = false;\n\t\tvar itemsLoaded = 0;\n\t\tvar itemsTotal = 0;\n\t\tvar urlModifier = undefined;\n\t\tvar handlers = [];\n\n\t\t// Refer to #5689 for the reason why we don't set .onStart\n\t\t// in the constructor\n\n\t\tthis.onStart = undefined;\n\t\tthis.onLoad = onLoad;\n\t\tthis.onProgress = onProgress;\n\t\tthis.onError = onError;\n\n\t\tthis.itemStart = function ( url ) {\n\n\t\t\titemsTotal ++;\n\n\t\t\tif ( isLoading === false ) {\n\n\t\t\t\tif ( scope.onStart !== undefined ) {\n\n\t\t\t\t\tscope.onStart( url, itemsLoaded, itemsTotal );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tisLoading = true;\n\n\t\t};\n\n\t\tthis.itemEnd = function ( url ) {\n\n\t\t\titemsLoaded ++;\n\n\t\t\tif ( scope.onProgress !== undefined ) {\n\n\t\t\t\tscope.onProgress( url, itemsLoaded, itemsTotal );\n\n\t\t\t}\n\n\t\t\tif ( itemsLoaded === itemsTotal ) {\n\n\t\t\t\tisLoading = false;\n\n\t\t\t\tif ( scope.onLoad !== undefined ) {\n\n\t\t\t\t\tscope.onLoad();\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.itemError = function ( url ) {\n\n\t\t\tif ( scope.onError !== undefined ) {\n\n\t\t\t\tscope.onError( url );\n\n\t\t\t}\n\n\t\t};\n\n\t\tthis.resolveURL = function ( url ) {\n\n\t\t\tif ( urlModifier ) {\n\n\t\t\t\treturn urlModifier( url );\n\n\t\t\t}\n\n\t\t\treturn url;\n\n\t\t};\n\n\t\tthis.setURLModifier = function ( transform ) {\n\n\t\t\turlModifier = transform;\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.addHandler = function ( regex, loader ) {\n\n\t\t\thandlers.push( regex, loader );\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.removeHandler = function ( regex ) {\n\n\t\t\tvar index = handlers.indexOf( regex );\n\n\t\t\tif ( index !== - 1 ) {\n\n\t\t\t\thandlers.splice( index, 2 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t};\n\n\t\tthis.getHandler = function ( file ) {\n\n\t\t\tfor ( var i = 0, l = handlers.length; i < l; i += 2 ) {\n\n\t\t\t\tvar regex = handlers[ i ];\n\t\t\t\tvar loader = handlers[ i + 1 ];\n\n\t\t\t\tif ( regex.global ) { regex.lastIndex = 0; } // see #17920\n\n\t\t\t\tif ( regex.test( file ) ) {\n\n\t\t\t\t\treturn loader;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t};\n\n\t}\n\n\tvar DefaultLoadingManager = new LoadingManager();\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Loader( manager ) {\n\n\t\tthis.manager = ( manager !== undefined ) ? manager : DefaultLoadingManager;\n\n\t\tthis.crossOrigin = 'anonymous';\n\t\tthis.path = '';\n\t\tthis.resourcePath = '';\n\n\t}\n\n\tObject.assign( Loader.prototype, {\n\n\t\tload: function ( /* url, onLoad, onProgress, onError */ ) {},\n\n\t\tparse: function ( /* data */ ) {},\n\n\t\tsetCrossOrigin: function ( crossOrigin ) {\n\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetPath: function ( path ) {\n\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetResourcePath: function ( resourcePath ) {\n\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar loading = {};\n\n\tfunction FileLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFileLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FileLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\t// Check if request is duplicate\n\n\t\t\tif ( loading[ url ] !== undefined ) {\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// Check for data: URI\n\t\t\tvar dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tvar dataUriRegexResult = url.match( dataUriRegex );\n\n\t\t\t// Safari can not handle Data URIs through XMLHttpRequest so process manually\n\t\t\tif ( dataUriRegexResult ) {\n\n\t\t\t\tvar mimeType = dataUriRegexResult[ 1 ];\n\t\t\t\tvar isBase64 = !! dataUriRegexResult[ 2 ];\n\t\t\t\tvar data = dataUriRegexResult[ 3 ];\n\n\t\t\t\tdata = decodeURIComponent( data );\n\n\t\t\t\tif ( isBase64 ) { data = atob( data ); }\n\n\t\t\t\ttry {\n\n\t\t\t\t\tvar response;\n\t\t\t\t\tvar responseType = ( this.responseType || '' ).toLowerCase();\n\n\t\t\t\t\tswitch ( responseType ) {\n\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\n\t\t\t\t\t\t\tvar view = new Uint8Array( data.length );\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\t\t\t\t\tview[ i ] = data.charCodeAt( i );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif ( responseType === 'blob' ) {\n\n\t\t\t\t\t\t\t\tresponse = new Blob( [ view.buffer ], { type: mimeType } );\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\n\t\t\t\t\t\t\tvar parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString( data, mimeType );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\n\t\t\t\t\t\t\tresponse = JSON.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault: // 'text' or other\n\n\t\t\t\t\t\t\tresponse = data;\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( response ); }\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\t\tif ( onError ) { onError( error ); }\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}, 0 );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// Initialise array for duplicate requests\n\n\t\t\t\tloading[ url ] = [];\n\n\t\t\t\tloading[ url ].push( {\n\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\n\t\t\t\t} );\n\n\t\t\t\tvar request = new XMLHttpRequest();\n\n\t\t\t\trequest.open( 'GET', url, true );\n\n\t\t\t\trequest.addEventListener( 'load', function ( event ) {\n\n\t\t\t\t\tvar response = this.response;\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tif ( this.status === 200 || this.status === 0 ) {\n\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\n\t\t\t\t\t\tif ( this.status === 0 ) { console.warn( 'THREE.FileLoader: HTTP Status 0 received.' ); }\n\n\t\t\t\t\t\t// Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\t\t\t\t\t\tCache.add( url, response );\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onLoad ) { callback.onLoad( response ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'progress', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onProgress ) { callback.onProgress( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'error', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\trequest.addEventListener( 'abort', function ( event ) {\n\n\t\t\t\t\tvar callbacks = loading[ url ];\n\n\t\t\t\t\tdelete loading[ url ];\n\n\t\t\t\t\tfor ( var i = 0, il = callbacks.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar callback = callbacks[ i ];\n\t\t\t\t\t\tif ( callback.onError ) { callback.onError( event ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, false );\n\n\t\t\t\tif ( this.responseType !== undefined ) { request.responseType = this.responseType; }\n\t\t\t\tif ( this.withCredentials !== undefined ) { request.withCredentials = this.withCredentials; }\n\n\t\t\t\tif ( request.overrideMimeType ) { request.overrideMimeType( this.mimeType !== undefined ? this.mimeType : 'text/plain' ); }\n\n\t\t\t\tfor ( var header in this.requestHeader ) {\n\n\t\t\t\t\trequest.setRequestHeader( header, this.requestHeader[ header ] );\n\n\t\t\t\t}\n\n\t\t\t\trequest.send( null );\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\treturn request;\n\n\t\t},\n\n\t\tsetResponseType: function ( value ) {\n\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetWithCredentials: function ( value ) {\n\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMimeType: function ( value ) {\n\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetRequestHeader: function ( value ) {\n\n\t\t\tthis.requestHeader = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io/\n\t */\n\n\tfunction AnimationLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAnimationLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AnimationLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar clip = AnimationClip.parse( json[ i ] );\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t *\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction CompressedTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCompressedTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CompressedTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar images = [];\n\n\t\t\tvar texture = new CompressedTexture();\n\t\t\ttexture.image = images;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( url[ i ], function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\timages[ i ] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\tif ( texDatas.mipmapCount === 1 )\n\t\t\t\t\t\t\t{ texture.minFilter = LinearFilter; }\n\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\tvar loaded = 0;\n\n\t\t\t\tfor ( var i = 0, il = url.length; i < il; ++ i ) {\n\n\t\t\t\t\tloadTexture( i );\n\n\t\t\t\t}\n\n\t\t\t} else {\n\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\n\t\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t\tvar texDatas = scope.parse( buffer, true );\n\n\t\t\t\t\tif ( texDatas.isCubemap ) {\n\n\t\t\t\t\t\tvar faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor ( var f = 0; f < faces; f ++ ) {\n\n\t\t\t\t\t\t\timages[ f ] = { mipmaps: [] };\n\n\t\t\t\t\t\t\tfor ( var i = 0; i < texDatas.mipmapCount; i ++ ) {\n\n\t\t\t\t\t\t\t\timages[ f ].mipmaps.push( texDatas.mipmaps[ f * texDatas.mipmapCount + i ] );\n\t\t\t\t\t\t\t\timages[ f ].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[ f ].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[ f ].height = texDatas.height;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( texDatas.mipmapCount === 1 ) {\n\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t}, onProgress, onError );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Nikos M. / https://github.com/foo123/\n\t *\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tfunction DataTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tDataTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: DataTextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar texture = new DataTexture();\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\tvar texData = scope.parse( buffer );\n\n\t\t\t\tif ( ! texData ) { return; }\n\n\t\t\t\tif ( texData.image !== undefined ) {\n\n\t\t\t\t\ttexture.image = texData.image;\n\n\t\t\t\t} else if ( texData.data !== undefined ) {\n\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif ( texData.format !== undefined ) {\n\n\t\t\t\t\ttexture.format = texData.format;\n\n\t\t\t\t}\n\t\t\t\tif ( texData.type !== undefined ) {\n\n\t\t\t\t\ttexture.type = texData.type;\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmaps !== undefined ) {\n\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\n\t\t\t\t}\n\n\t\t\t\tif ( texData.mipmapCount === 1 ) {\n\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad ) { onLoad( texture, texData ); }\n\n\t\t\t}, onProgress, onError );\n\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ImageLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tImageLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tvar image = document.createElementNS( 'http://www.w3.org/1999/xhtml', 'img' );\n\n\t\t\tfunction onImageLoad() {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tCache.add( url, this );\n\n\t\t\t\tif ( onLoad ) { onLoad( this ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\tfunction onImageError( event ) {\n\n\t\t\t\timage.removeEventListener( 'load', onImageLoad, false );\n\t\t\t\timage.removeEventListener( 'error', onImageError, false );\n\n\t\t\t\tif ( onError ) { onError( event ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t}\n\n\t\t\timage.addEventListener( 'load', onImageLoad, false );\n\t\t\timage.addEventListener( 'error', onImageError, false );\n\n\t\t\tif ( url.substr( 0, 5 ) !== 'data:' ) {\n\n\t\t\t\tif ( this.crossOrigin !== undefined ) { image.crossOrigin = this.crossOrigin; }\n\n\t\t\t}\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t\timage.src = url;\n\n\t\t\treturn image;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction CubeTextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tCubeTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: CubeTextureLoader,\n\n\t\tload: function ( urls, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new CubeTexture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tvar loaded = 0;\n\n\t\t\tfunction loadTexture( i ) {\n\n\t\t\t\tloader.load( urls[ i ], function ( image ) {\n\n\t\t\t\t\ttexture.images[ i ] = image;\n\n\t\t\t\t\tloaded ++;\n\n\t\t\t\t\tif ( loaded === 6 ) {\n\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\t\tif ( onLoad ) { onLoad( texture ); }\n\n\t\t\t\t\t}\n\n\t\t\t\t}, undefined, onError );\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i < urls.length; ++ i ) {\n\n\t\t\t\tloadTexture( i );\n\n\t\t\t}\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction TextureLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tTextureLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: TextureLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar texture = new Texture();\n\n\t\t\tvar loader = new ImageLoader( this.manager );\n\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\t\t\tloader.setPath( this.path );\n\n\t\t\tloader.load( url, function ( image ) {\n\n\t\t\t\ttexture.image = image;\n\n\t\t\t\t// JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\t\t\t\tvar isJPEG = url.search( /\\.jpe?g($|\\?)/i ) > 0 || url.search( /^data\\:image\\/jpeg/ ) === 0;\n\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif ( onLoad !== undefined ) {\n\n\t\t\t\t\tonLoad( texture );\n\n\t\t\t\t}\n\n\t\t\t}, onProgress, onError );\n\n\t\t\treturn texture;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Extensible curve object\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tAbstract Curve base class\n\t **************************************************************/\n\n\tfunction Curve() {\n\n\t\tthis.type = 'Curve';\n\n\t\tthis.arcLengthDivisions = 200;\n\n\t}\n\n\tObject.assign( Curve.prototype, {\n\n\t\t// Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\t\tgetPoint: function ( /* t, optionalTarget */ ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .getPoint() not implemented.' );\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\t\tgetPointAt: function ( u, optionalTarget ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getPoint( t, optionalTarget );\n\n\t\t},\n\n\t\t// Get sequence of points using getPoint( t )\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get sequence of points using getPointAt( u )\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 5; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var d = 0; d <= divisions; d ++ ) {\n\n\t\t\t\tpoints.push( this.getPointAt( d / divisions ) );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\t// Get total curve arc length\n\n\t\tgetLength: function () {\n\n\t\t\tvar lengths = this.getLengths();\n\t\t\treturn lengths[ lengths.length - 1 ];\n\n\t\t},\n\n\t\t// Get list of cumulative segment lengths\n\n\t\tgetLengths: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = this.arcLengthDivisions; }\n\n\t\t\tif ( this.cacheArcLengths &&\n\t\t\t\t( this.cacheArcLengths.length === divisions + 1 ) &&\n\t\t\t\t! this.needsUpdate ) {\n\n\t\t\t\treturn this.cacheArcLengths;\n\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\n\t\t\tvar cache = [];\n\t\t\tvar current, last = this.getPoint( 0 );\n\t\t\tvar p, sum = 0;\n\n\t\t\tcache.push( 0 );\n\n\t\t\tfor ( p = 1; p <= divisions; p ++ ) {\n\n\t\t\t\tcurrent = this.getPoint( p / divisions );\n\t\t\t\tsum += current.distanceTo( last );\n\t\t\t\tcache.push( sum );\n\t\t\t\tlast = current;\n\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\n\t\t},\n\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\n\t\t},\n\n\t\t// Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\t\tgetUtoTmapping: function ( u, distance ) {\n\n\t\t\tvar arcLengths = this.getLengths();\n\n\t\t\tvar i = 0, il = arcLengths.length;\n\n\t\t\tvar targetArcLength; // The targeted u distance value to get\n\n\t\t\tif ( distance ) {\n\n\t\t\t\ttargetArcLength = distance;\n\n\t\t\t} else {\n\n\t\t\t\ttargetArcLength = u * arcLengths[ il - 1 ];\n\n\t\t\t}\n\n\t\t\t// binary search for the index with largest value smaller than target u distance\n\n\t\t\tvar low = 0, high = il - 1, comparison;\n\n\t\t\twhile ( low <= high ) {\n\n\t\t\t\ti = Math.floor( low + ( high - low ) / 2 ); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[ i ] - targetArcLength;\n\n\t\t\t\tif ( comparison < 0 ) {\n\n\t\t\t\t\tlow = i + 1;\n\n\t\t\t\t} else if ( comparison > 0 ) {\n\n\t\t\t\t\thigh = i - 1;\n\n\t\t\t\t} else {\n\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak;\n\n\t\t\t\t\t// DONE\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif ( arcLengths[ i ] === targetArcLength ) {\n\n\t\t\t\treturn i / ( il - 1 );\n\n\t\t\t}\n\n\t\t\t// we could get finer grain at lengths, or use simple interpolation between two points\n\n\t\t\tvar lengthBefore = arcLengths[ i ];\n\t\t\tvar lengthAfter = arcLengths[ i + 1 ];\n\n\t\t\tvar segmentLength = lengthAfter - lengthBefore;\n\n\t\t\t// determine where we are between the 'before' and 'after' points\n\n\t\t\tvar segmentFraction = ( targetArcLength - lengthBefore ) / segmentLength;\n\n\t\t\t// add that fractional amount to t\n\n\t\t\tvar t = ( i + segmentFraction ) / ( il - 1 );\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\t// Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\t\tgetTangent: function ( t ) {\n\n\t\t\tvar delta = 0.0001;\n\t\t\tvar t1 = t - delta;\n\t\t\tvar t2 = t + delta;\n\n\t\t\t// Capping in case of danger\n\n\t\t\tif ( t1 < 0 ) { t1 = 0; }\n\t\t\tif ( t2 > 1 ) { t2 = 1; }\n\n\t\t\tvar pt1 = this.getPoint( t1 );\n\t\t\tvar pt2 = this.getPoint( t2 );\n\n\t\t\tvar vec = pt2.clone().sub( pt1 );\n\t\t\treturn vec.normalize();\n\n\t\t},\n\n\t\tgetTangentAt: function ( u ) {\n\n\t\t\tvar t = this.getUtoTmapping( u );\n\t\t\treturn this.getTangent( t );\n\n\t\t},\n\n\t\tcomputeFrenetFrames: function ( segments, closed ) {\n\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\n\t\t\tvar normal = new Vector3();\n\n\t\t\tvar tangents = [];\n\t\t\tvar normals = [];\n\t\t\tvar binormals = [];\n\n\t\t\tvar vec = new Vector3();\n\t\t\tvar mat = new Matrix4();\n\n\t\t\tvar i, u, theta;\n\n\t\t\t// compute the tangent vectors for each segment on the curve\n\n\t\t\tfor ( i = 0; i <= segments; i ++ ) {\n\n\t\t\t\tu = i / segments;\n\n\t\t\t\ttangents[ i ] = this.getTangentAt( u );\n\t\t\t\ttangents[ i ].normalize();\n\n\t\t\t}\n\n\t\t\t// select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\t\t\tnormals[ 0 ] = new Vector3();\n\t\t\tbinormals[ 0 ] = new Vector3();\n\t\t\tvar min = Number.MAX_VALUE;\n\t\t\tvar tx = Math.abs( tangents[ 0 ].x );\n\t\t\tvar ty = Math.abs( tangents[ 0 ].y );\n\t\t\tvar tz = Math.abs( tangents[ 0 ].z );\n\n\t\t\tif ( tx <= min ) {\n\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set( 1, 0, 0 );\n\n\t\t\t}\n\n\t\t\tif ( ty <= min ) {\n\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set( 0, 1, 0 );\n\n\t\t\t}\n\n\t\t\tif ( tz <= min ) {\n\n\t\t\t\tnormal.set( 0, 0, 1 );\n\n\t\t\t}\n\n\t\t\tvec.crossVectors( tangents[ 0 ], normal ).normalize();\n\n\t\t\tnormals[ 0 ].crossVectors( tangents[ 0 ], vec );\n\t\t\tbinormals[ 0 ].crossVectors( tangents[ 0 ], normals[ 0 ] );\n\n\n\t\t\t// compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\tnormals[ i ] = normals[ i - 1 ].clone();\n\n\t\t\t\tbinormals[ i ] = binormals[ i - 1 ].clone();\n\n\t\t\t\tvec.crossVectors( tangents[ i - 1 ], tangents[ i ] );\n\n\t\t\t\tif ( vec.length() > Number.EPSILON ) {\n\n\t\t\t\t\tvec.normalize();\n\n\t\t\t\t\ttheta = Math.acos( _Math.clamp( tangents[ i - 1 ].dot( tangents[ i ] ), - 1, 1 ) ); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( vec, theta ) );\n\n\t\t\t\t}\n\n\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t}\n\n\t\t\t// if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\t\t\tif ( closed === true ) {\n\n\t\t\t\ttheta = Math.acos( _Math.clamp( normals[ 0 ].dot( normals[ segments ] ), - 1, 1 ) );\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif ( tangents[ 0 ].dot( vec.crossVectors( normals[ 0 ], normals[ segments ] ) ) > 0 ) {\n\n\t\t\t\t\ttheta = - theta;\n\n\t\t\t\t}\n\n\t\t\t\tfor ( i = 1; i <= segments; i ++ ) {\n\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[ i ].applyMatrix4( mat.makeRotationAxis( tangents[ i ], theta * i ) );\n\t\t\t\t\tbinormals[ i ].crossVectors( tangents[ i ], normals[ i ] );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'EllipseCurve';\n\n\t\tthis.aX = aX || 0;\n\t\tthis.aY = aY || 0;\n\n\t\tthis.xRadius = xRadius || 1;\n\t\tthis.yRadius = yRadius || 1;\n\n\t\tthis.aStartAngle = aStartAngle || 0;\n\t\tthis.aEndAngle = aEndAngle || 2 * Math.PI;\n\n\t\tthis.aClockwise = aClockwise || false;\n\n\t\tthis.aRotation = aRotation || 0;\n\n\t}\n\n\tEllipseCurve.prototype = Object.create( Curve.prototype );\n\tEllipseCurve.prototype.constructor = EllipseCurve;\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tEllipseCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar twoPi = Math.PI * 2;\n\t\tvar deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\tvar samePoints = Math.abs( deltaAngle ) < Number.EPSILON;\n\n\t\t// ensures that deltaAngle is 0 .. 2 PI\n\t\twhile ( deltaAngle < 0 ) { deltaAngle += twoPi; }\n\t\twhile ( deltaAngle > twoPi ) { deltaAngle -= twoPi; }\n\n\t\tif ( deltaAngle < Number.EPSILON ) {\n\n\t\t\tif ( samePoints ) {\n\n\t\t\t\tdeltaAngle = 0;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tif ( this.aClockwise === true && ! samePoints ) {\n\n\t\t\tif ( deltaAngle === twoPi ) {\n\n\t\t\t\tdeltaAngle = - twoPi;\n\n\t\t\t} else {\n\n\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar angle = this.aStartAngle + t * deltaAngle;\n\t\tvar x = this.aX + this.xRadius * Math.cos( angle );\n\t\tvar y = this.aY + this.yRadius * Math.sin( angle );\n\n\t\tif ( this.aRotation !== 0 ) {\n\n\t\t\tvar cos = Math.cos( this.aRotation );\n\t\t\tvar sin = Math.sin( this.aRotation );\n\n\t\t\tvar tx = x - this.aX;\n\t\t\tvar ty = y - this.aY;\n\n\t\t\t// Rotate the point about the center of the ellipse.\n\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\ty = tx * sin + ty * cos + this.aY;\n\n\t\t}\n\n\t\treturn point.set( x, y );\n\n\t};\n\n\tEllipseCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.aX = source.aX;\n\t\tthis.aY = source.aY;\n\n\t\tthis.xRadius = source.xRadius;\n\t\tthis.yRadius = source.yRadius;\n\n\t\tthis.aStartAngle = source.aStartAngle;\n\t\tthis.aEndAngle = source.aEndAngle;\n\n\t\tthis.aClockwise = source.aClockwise;\n\n\t\tthis.aRotation = source.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\n\tEllipseCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.aX = this.aX;\n\t\tdata.aY = this.aY;\n\n\t\tdata.xRadius = this.xRadius;\n\t\tdata.yRadius = this.yRadius;\n\n\t\tdata.aStartAngle = this.aStartAngle;\n\t\tdata.aEndAngle = this.aEndAngle;\n\n\t\tdata.aClockwise = this.aClockwise;\n\n\t\tdata.aRotation = this.aRotation;\n\n\t\treturn data;\n\n\t};\n\n\tEllipseCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.aX = json.aX;\n\t\tthis.aY = json.aY;\n\n\t\tthis.xRadius = json.xRadius;\n\t\tthis.yRadius = json.yRadius;\n\n\t\tthis.aStartAngle = json.aStartAngle;\n\t\tthis.aEndAngle = json.aEndAngle;\n\n\t\tthis.aClockwise = json.aClockwise;\n\n\t\tthis.aRotation = json.aRotation;\n\n\t\treturn this;\n\n\t};\n\n\tfunction ArcCurve( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\tEllipseCurve.call( this, aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\tthis.type = 'ArcCurve';\n\n\t}\n\n\tArcCurve.prototype = Object.create( EllipseCurve.prototype );\n\tArcCurve.prototype.constructor = ArcCurve;\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * @author zz85 https://github.com/zz85\n\t *\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\n\t\tvar c0 = 0, c1 = 0, c2 = 0, c3 = 0;\n\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *   p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *   p(0) = x0, p(1) = x1\n\t\t *  and\n\t\t *   p'(0) = t0, p'(1) = t1.\n\t\t */\n\t\tfunction init( x0, x1, t0, t1 ) {\n\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = - 3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\n\t\t}\n\n\t\treturn {\n\n\t\t\tinitCatmullRom: function ( x0, x1, x2, x3, tension ) {\n\n\t\t\t\tinit( x1, x2, tension * ( x2 - x0 ), tension * ( x3 - x1 ) );\n\n\t\t\t},\n\n\t\t\tinitNonuniformCatmullRom: function ( x0, x1, x2, x3, dt0, dt1, dt2 ) {\n\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tvar t1 = ( x1 - x0 ) / dt0 - ( x2 - x0 ) / ( dt0 + dt1 ) + ( x2 - x1 ) / dt1;\n\t\t\t\tvar t2 = ( x2 - x1 ) / dt1 - ( x3 - x1 ) / ( dt1 + dt2 ) + ( x3 - x2 ) / dt2;\n\n\t\t\t\t// rescale tangents for parametrization in [0,1]\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\n\t\t\t\tinit( x1, x2, t1, t2 );\n\n\t\t\t},\n\n\t\t\tcalc: function ( t ) {\n\n\t\t\t\tvar t2 = t * t;\n\t\t\t\tvar t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\t//\n\n\tvar tmp = new Vector3();\n\tvar px = new CubicPoly(), py = new CubicPoly(), pz = new CubicPoly();\n\n\tfunction CatmullRomCurve3( points, closed, curveType, tension ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CatmullRomCurve3';\n\n\t\tthis.points = points || [];\n\t\tthis.closed = closed || false;\n\t\tthis.curveType = curveType || 'centripetal';\n\t\tthis.tension = tension || 0.5;\n\n\t}\n\n\tCatmullRomCurve3.prototype = Object.create( Curve.prototype );\n\tCatmullRomCurve3.prototype.constructor = CatmullRomCurve3;\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\tCatmullRomCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar points = this.points;\n\t\tvar l = points.length;\n\n\t\tvar p = ( l - ( this.closed ? 0 : 1 ) ) * t;\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tif ( this.closed ) {\n\n\t\t\tintPoint += intPoint > 0 ? 0 : ( Math.floor( Math.abs( intPoint ) / l ) + 1 ) * l;\n\n\t\t} else if ( weight === 0 && intPoint === l - 1 ) {\n\n\t\t\tintPoint = l - 2;\n\t\t\tweight = 1;\n\n\t\t}\n\n\t\tvar p0, p1, p2, p3; // 4 points\n\n\t\tif ( this.closed || intPoint > 0 ) {\n\n\t\t\tp0 = points[ ( intPoint - 1 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate first point\n\t\t\ttmp.subVectors( points[ 0 ], points[ 1 ] ).add( points[ 0 ] );\n\t\t\tp0 = tmp;\n\n\t\t}\n\n\t\tp1 = points[ intPoint % l ];\n\t\tp2 = points[ ( intPoint + 1 ) % l ];\n\n\t\tif ( this.closed || intPoint + 2 < l ) {\n\n\t\t\tp3 = points[ ( intPoint + 2 ) % l ];\n\n\t\t} else {\n\n\t\t\t// extrapolate last point\n\t\t\ttmp.subVectors( points[ l - 1 ], points[ l - 2 ] ).add( points[ l - 1 ] );\n\t\t\tp3 = tmp;\n\n\t\t}\n\n\t\tif ( this.curveType === 'centripetal' || this.curveType === 'chordal' ) {\n\n\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\tvar pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\tvar dt0 = Math.pow( p0.distanceToSquared( p1 ), pow );\n\t\t\tvar dt1 = Math.pow( p1.distanceToSquared( p2 ), pow );\n\t\t\tvar dt2 = Math.pow( p2.distanceToSquared( p3 ), pow );\n\n\t\t\t// safety check for repeated points\n\t\t\tif ( dt1 < 1e-4 ) { dt1 = 1.0; }\n\t\t\tif ( dt0 < 1e-4 ) { dt0 = dt1; }\n\t\t\tif ( dt2 < 1e-4 ) { dt2 = dt1; }\n\n\t\t\tpx.initNonuniformCatmullRom( p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2 );\n\t\t\tpy.initNonuniformCatmullRom( p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2 );\n\t\t\tpz.initNonuniformCatmullRom( p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2 );\n\n\t\t} else if ( this.curveType === 'catmullrom' ) {\n\n\t\t\tpx.initCatmullRom( p0.x, p1.x, p2.x, p3.x, this.tension );\n\t\t\tpy.initCatmullRom( p0.y, p1.y, p2.y, p3.y, this.tension );\n\t\t\tpz.initCatmullRom( p0.z, p1.z, p2.z, p3.z, this.tension );\n\n\t\t}\n\n\t\tpoint.set(\n\t\t\tpx.calc( weight ),\n\t\t\tpy.calc( weight ),\n\t\t\tpz.calc( weight )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCatmullRomCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\tthis.closed = source.closed;\n\t\tthis.curveType = source.curveType;\n\t\tthis.tension = source.tension;\n\n\t\treturn this;\n\n\t};\n\n\tCatmullRomCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\tdata.closed = this.closed;\n\t\tdata.curveType = this.curveType;\n\t\tdata.tension = this.tension;\n\n\t\treturn data;\n\n\t};\n\n\tCatmullRomCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector3().fromArray( point ) );\n\n\t\t}\n\n\t\tthis.closed = json.closed;\n\t\tthis.curveType = json.curveType;\n\t\tthis.tension = json.tension;\n\n\t\treturn this;\n\n\t};\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\n\tfunction CatmullRom( t, p0, p1, p2, p3 ) {\n\n\t\tvar v0 = ( p2 - p0 ) * 0.5;\n\t\tvar v1 = ( p3 - p1 ) * 0.5;\n\t\tvar t2 = t * t;\n\t\tvar t3 = t * t2;\n\t\treturn ( 2 * p1 - 2 * p2 + v0 + v1 ) * t3 + ( - 3 * p1 + 3 * p2 - 2 * v0 - v1 ) * t2 + v0 * t + p1;\n\n\t}\n\n\t//\n\n\tfunction QuadraticBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * p;\n\n\t}\n\n\tfunction QuadraticBezierP1( t, p ) {\n\n\t\treturn 2 * ( 1 - t ) * t * p;\n\n\t}\n\n\tfunction QuadraticBezierP2( t, p ) {\n\n\t\treturn t * t * p;\n\n\t}\n\n\tfunction QuadraticBezier( t, p0, p1, p2 ) {\n\n\t\treturn QuadraticBezierP0( t, p0 ) + QuadraticBezierP1( t, p1 ) +\n\t\t\tQuadraticBezierP2( t, p2 );\n\n\t}\n\n\t//\n\n\tfunction CubicBezierP0( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn k * k * k * p;\n\n\t}\n\n\tfunction CubicBezierP1( t, p ) {\n\n\t\tvar k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\n\t}\n\n\tfunction CubicBezierP2( t, p ) {\n\n\t\treturn 3 * ( 1 - t ) * t * t * p;\n\n\t}\n\n\tfunction CubicBezierP3( t, p ) {\n\n\t\treturn t * t * t * p;\n\n\t}\n\n\tfunction CubicBezier( t, p0, p1, p2, p3 ) {\n\n\t\treturn CubicBezierP0( t, p0 ) + CubicBezierP1( t, p1 ) + CubicBezierP2( t, p2 ) +\n\t\t\tCubicBezierP3( t, p3 );\n\n\t}\n\n\tfunction CubicBezierCurve( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\t\tthis.v3 = v3 || new Vector2();\n\n\t}\n\n\tCubicBezierCurve.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve.prototype.constructor = CubicBezierCurve;\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tCubicBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction CubicBezierCurve3( v0, v1, v2, v3 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CubicBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\t\tthis.v3 = v3 || new Vector3();\n\n\t}\n\n\tCubicBezierCurve3.prototype = Object.create( Curve.prototype );\n\tCubicBezierCurve3.prototype.constructor = CubicBezierCurve3;\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tCubicBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2, v3 = this.v3;\n\n\t\tpoint.set(\n\t\t\tCubicBezier( t, v0.x, v1.x, v2.x, v3.x ),\n\t\t\tCubicBezier( t, v0.y, v1.y, v2.y, v3.y ),\n\t\t\tCubicBezier( t, v0.z, v1.z, v2.z, v3.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tCubicBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\t\tthis.v3.copy( source.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tCubicBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\t\tdata.v3 = this.v3.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tCubicBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\t\tthis.v3.fromArray( json.v3 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve';\n\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tLineCurve.prototype = Object.create( Curve.prototype );\n\tLineCurve.prototype.constructor = LineCurve;\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tLineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve.prototype.getTangent = function ( /* t */ ) {\n\n\t\tvar tangent = this.v2.clone().sub( this.v1 );\n\n\t\treturn tangent.normalize();\n\n\t};\n\n\tLineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction LineCurve3( v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'LineCurve3';\n\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tLineCurve3.prototype = Object.create( Curve.prototype );\n\tLineCurve3.prototype.constructor = LineCurve3;\n\n\tLineCurve3.prototype.isLineCurve3 = true;\n\n\tLineCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tif ( t === 1 ) {\n\n\t\t\tpoint.copy( this.v2 );\n\n\t\t} else {\n\n\t\t\tpoint.copy( this.v2 ).sub( this.v1 );\n\t\t\tpoint.multiplyScalar( t ).add( this.v1 );\n\n\t\t}\n\n\t\treturn point;\n\n\t};\n\n\t// Line curve is linear, so we can overwrite default getPointAt\n\n\tLineCurve3.prototype.getPointAt = function ( u, optionalTarget ) {\n\n\t\treturn this.getPoint( u, optionalTarget );\n\n\t};\n\n\tLineCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tLineCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tLineCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve';\n\n\t\tthis.v0 = v0 || new Vector2();\n\t\tthis.v1 = v1 || new Vector2();\n\t\tthis.v2 = v2 || new Vector2();\n\n\t}\n\n\tQuadraticBezierCurve.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve.prototype.constructor = QuadraticBezierCurve;\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tQuadraticBezierCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction QuadraticBezierCurve3( v0, v1, v2 ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'QuadraticBezierCurve3';\n\n\t\tthis.v0 = v0 || new Vector3();\n\t\tthis.v1 = v1 || new Vector3();\n\t\tthis.v2 = v2 || new Vector3();\n\n\t}\n\n\tQuadraticBezierCurve3.prototype = Object.create( Curve.prototype );\n\tQuadraticBezierCurve3.prototype.constructor = QuadraticBezierCurve3;\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tQuadraticBezierCurve3.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector3();\n\n\t\tvar v0 = this.v0, v1 = this.v1, v2 = this.v2;\n\n\t\tpoint.set(\n\t\t\tQuadraticBezier( t, v0.x, v1.x, v2.x ),\n\t\t\tQuadraticBezier( t, v0.y, v1.y, v2.y ),\n\t\t\tQuadraticBezier( t, v0.z, v1.z, v2.z )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.v0.copy( source.v0 );\n\t\tthis.v1.copy( source.v1 );\n\t\tthis.v2.copy( source.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.v0 = this.v0.toArray();\n\t\tdata.v1 = this.v1.toArray();\n\t\tdata.v2 = this.v2.toArray();\n\n\t\treturn data;\n\n\t};\n\n\tQuadraticBezierCurve3.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.v0.fromArray( json.v0 );\n\t\tthis.v1.fromArray( json.v1 );\n\t\tthis.v2.fromArray( json.v2 );\n\n\t\treturn this;\n\n\t};\n\n\tfunction SplineCurve( points /* array of Vector2 */ ) {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'SplineCurve';\n\n\t\tthis.points = points || [];\n\n\t}\n\n\tSplineCurve.prototype = Object.create( Curve.prototype );\n\tSplineCurve.prototype.constructor = SplineCurve;\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tSplineCurve.prototype.getPoint = function ( t, optionalTarget ) {\n\n\t\tvar point = optionalTarget || new Vector2();\n\n\t\tvar points = this.points;\n\t\tvar p = ( points.length - 1 ) * t;\n\n\t\tvar intPoint = Math.floor( p );\n\t\tvar weight = p - intPoint;\n\n\t\tvar p0 = points[ intPoint === 0 ? intPoint : intPoint - 1 ];\n\t\tvar p1 = points[ intPoint ];\n\t\tvar p2 = points[ intPoint > points.length - 2 ? points.length - 1 : intPoint + 1 ];\n\t\tvar p3 = points[ intPoint > points.length - 3 ? points.length - 1 : intPoint + 2 ];\n\n\t\tpoint.set(\n\t\t\tCatmullRom( weight, p0.x, p1.x, p2.x, p3.x ),\n\t\t\tCatmullRom( weight, p0.y, p1.y, p2.y, p3.y )\n\t\t);\n\n\t\treturn point;\n\n\t};\n\n\tSplineCurve.prototype.copy = function ( source ) {\n\n\t\tCurve.prototype.copy.call( this, source );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = source.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = source.points[ i ];\n\n\t\t\tthis.points.push( point.clone() );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\tSplineCurve.prototype.toJSON = function () {\n\n\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\tdata.points = [];\n\n\t\tfor ( var i = 0, l = this.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = this.points[ i ];\n\t\t\tdata.points.push( point.toArray() );\n\n\t\t}\n\n\t\treturn data;\n\n\t};\n\n\tSplineCurve.prototype.fromJSON = function ( json ) {\n\n\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\tthis.points = [];\n\n\t\tfor ( var i = 0, l = json.points.length; i < l; i ++ ) {\n\n\t\t\tvar point = json.points[ i ];\n\t\t\tthis.points.push( new Vector2().fromArray( point ) );\n\n\t\t}\n\n\t\treturn this;\n\n\t};\n\n\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t *\n\t **/\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *  curves, but retains the api of a curve\n\t **************************************************************/\n\n\tfunction CurvePath() {\n\n\t\tCurve.call( this );\n\n\t\tthis.type = 'CurvePath';\n\n\t\tthis.curves = [];\n\t\tthis.autoClose = false; // Automatically closes the path\n\n\t}\n\n\tCurvePath.prototype = Object.assign( Object.create( Curve.prototype ), {\n\n\t\tconstructor: CurvePath,\n\n\t\tadd: function ( curve ) {\n\n\t\t\tthis.curves.push( curve );\n\n\t\t},\n\n\t\tclosePath: function () {\n\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tvar startPoint = this.curves[ 0 ].getPoint( 0 );\n\t\t\tvar endPoint = this.curves[ this.curves.length - 1 ].getPoint( 1 );\n\n\t\t\tif ( ! startPoint.equals( endPoint ) ) {\n\n\t\t\t\tthis.curves.push( new LineCurve( endPoint, startPoint ) );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\t\tgetPoint: function ( t ) {\n\n\t\t\tvar d = t * this.getLength();\n\t\t\tvar curveLengths = this.getCurveLengths();\n\t\t\tvar i = 0;\n\n\t\t\t// To think about boundaries points.\n\n\t\t\twhile ( i < curveLengths.length ) {\n\n\t\t\t\tif ( curveLengths[ i ] >= d ) {\n\n\t\t\t\t\tvar diff = curveLengths[ i ] - d;\n\t\t\t\t\tvar curve = this.curves[ i ];\n\n\t\t\t\t\tvar segmentLength = curve.getLength();\n\t\t\t\t\tvar u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\n\t\t\t\t\treturn curve.getPointAt( u );\n\n\t\t\t\t}\n\n\t\t\t\ti ++;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t\t// loop where sum != 0, sum > d , sum+1 <d\n\n\t\t},\n\n\t\t// We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\t\tgetLength: function () {\n\n\t\t\tvar lens = this.getCurveLengths();\n\t\t\treturn lens[ lens.length - 1 ];\n\n\t\t},\n\n\t\t// cacheLengths must be recalculated.\n\t\tupdateArcLengths: function () {\n\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\n\t\t},\n\n\t\t// Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\t\tgetCurveLengths: function () {\n\n\t\t\t// We use cache values if curves and cache array are same length\n\n\t\t\tif ( this.cacheLengths && this.cacheLengths.length === this.curves.length ) {\n\n\t\t\t\treturn this.cacheLengths;\n\n\t\t\t}\n\n\t\t\t// Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\t\t\tvar lengths = [], sums = 0;\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tsums += this.curves[ i ].getLength();\n\t\t\t\tlengths.push( sums );\n\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\n\t\t\treturn lengths;\n\n\t\t},\n\n\t\tgetSpacedPoints: function ( divisions ) {\n\n\t\t\tif ( divisions === undefined ) { divisions = 40; }\n\n\t\t\tvar points = [];\n\n\t\t\tfor ( var i = 0; i <= divisions; i ++ ) {\n\n\t\t\t\tpoints.push( this.getPoint( i / divisions ) );\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tgetPoints: function ( divisions ) {\n\n\t\t\tdivisions = divisions || 12;\n\n\t\t\tvar points = [], last;\n\n\t\t\tfor ( var i = 0, curves = this.curves; i < curves.length; i ++ ) {\n\n\t\t\t\tvar curve = curves[ i ];\n\t\t\t\tvar resolution = ( curve && curve.isEllipseCurve ) ? divisions * 2\n\t\t\t\t\t: ( curve && ( curve.isLineCurve || curve.isLineCurve3 ) ) ? 1\n\t\t\t\t\t\t: ( curve && curve.isSplineCurve ) ? divisions * curve.points.length\n\t\t\t\t\t\t\t: divisions;\n\n\t\t\t\tvar pts = curve.getPoints( resolution );\n\n\t\t\t\tfor ( var j = 0; j < pts.length; j ++ ) {\n\n\t\t\t\t\tvar point = pts[ j ];\n\n\t\t\t\t\tif ( last && last.equals( point ) ) { continue; } // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push( point );\n\t\t\t\t\tlast = point;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( this.autoClose && points.length > 1 && ! points[ points.length - 1 ].equals( points[ 0 ] ) ) {\n\n\t\t\t\tpoints.push( points[ 0 ] );\n\n\t\t\t}\n\n\t\t\treturn points;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurve.prototype.copy.call( this, source );\n\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = source.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = source.curves[ i ];\n\n\t\t\t\tthis.curves.push( curve.clone() );\n\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Curve.prototype.toJSON.call( this );\n\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor ( var i = 0, l = this.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = this.curves[ i ];\n\t\t\t\tdata.curves.push( curve.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurve.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor ( var i = 0, l = json.curves.length; i < l; i ++ ) {\n\n\t\t\t\tvar curve = json.curves[ i ];\n\t\t\t\tthis.curves.push( new Curves[ curve.type ]().fromJSON( curve ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Creates free form 2d path using series of points, lines or curves.\n\t **/\n\n\tfunction Path( points ) {\n\n\t\tCurvePath.call( this );\n\n\t\tthis.type = 'Path';\n\n\t\tthis.currentPoint = new Vector2();\n\n\t\tif ( points ) {\n\n\t\t\tthis.setFromPoints( points );\n\n\t\t}\n\n\t}\n\n\tPath.prototype = Object.assign( Object.create( CurvePath.prototype ), {\n\n\t\tconstructor: Path,\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.moveTo( points[ 0 ].x, points[ 0 ].y );\n\n\t\t\tfor ( var i = 1, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tthis.lineTo( points[ i ].x, points[ i ].y );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPoint.set( x, y ); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tvar curve = new LineCurve( this.currentPoint.clone(), new Vector2( x, y ) );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tvar curve = new QuadraticBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCPx, aCPy ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tvar curve = new CubicBezierCurve(\n\t\t\t\tthis.currentPoint.clone(),\n\t\t\t\tnew Vector2( aCP1x, aCP1y ),\n\t\t\t\tnew Vector2( aCP2x, aCP2y ),\n\t\t\t\tnew Vector2( aX, aY )\n\t\t\t);\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.set( aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts /*Array of Vector*/ ) {\n\n\t\t\tvar npts = [ this.currentPoint.clone() ].concat( pts );\n\n\t\t\tvar curve = new SplineCurve( npts );\n\t\t\tthis.curves.push( curve );\n\n\t\t\tthis.currentPoint.copy( pts[ pts.length - 1 ] );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absarc( aX + x0, aY + y0, aRadius,\n\t\t\t\taStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsarc: function ( aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise ) {\n\n\t\t\tthis.absellipse( aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar x0 = this.currentPoint.x;\n\t\t\tvar y0 = this.currentPoint.y;\n\n\t\t\tthis.absellipse( aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tabsellipse: function ( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation ) {\n\n\t\t\tvar curve = new EllipseCurve( aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation );\n\n\t\t\tif ( this.curves.length > 0 ) {\n\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tvar firstPoint = curve.getPoint( 0 );\n\n\t\t\t\tif ( ! firstPoint.equals( this.currentPoint ) ) {\n\n\t\t\t\t\tthis.lineTo( firstPoint.x, firstPoint.y );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis.curves.push( curve );\n\n\t\t\tvar lastPoint = curve.getPoint( 1 );\n\t\t\tthis.currentPoint.copy( lastPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tCurvePath.prototype.copy.call( this, source );\n\n\t\t\tthis.currentPoint.copy( source.currentPoint );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = CurvePath.prototype.toJSON.call( this );\n\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tCurvePath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.currentPoint.fromArray( json.currentPoint );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * Defines a 2d shape plane using paths.\n\t **/\n\n\t// STEP 1 Create a path.\n\t// STEP 2 Turn path into shape.\n\t// STEP 3 ExtrudeGeometry takes in Shape/Shapes\n\t// STEP 3a - Extract points from each shape, turn to vertices\n\t// STEP 3b - Triangulate each shape, add faces.\n\n\tfunction Shape( points ) {\n\n\t\tPath.call( this, points );\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\tthis.type = 'Shape';\n\n\t\tthis.holes = [];\n\n\t}\n\n\tShape.prototype = Object.assign( Object.create( Path.prototype ), {\n\n\t\tconstructor: Shape,\n\n\t\tgetPointsHoles: function ( divisions ) {\n\n\t\t\tvar holesPts = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tholesPts[ i ] = this.holes[ i ].getPoints( divisions );\n\n\t\t\t}\n\n\t\t\treturn holesPts;\n\n\t\t},\n\n\t\t// get points of shape and holes (keypoints based on segments parameter)\n\n\t\textractPoints: function ( divisions ) {\n\n\t\t\treturn {\n\n\t\t\t\tshape: this.getPoints( divisions ),\n\t\t\t\tholes: this.getPointsHoles( divisions )\n\n\t\t\t};\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tPath.prototype.copy.call( this, source );\n\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = source.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = source.holes[ i ];\n\n\t\t\t\tthis.holes.push( hole.clone() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = Path.prototype.toJSON.call( this );\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor ( var i = 0, l = this.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = this.holes[ i ];\n\t\t\t\tdata.holes.push( hole.toJSON() );\n\n\t\t\t}\n\n\t\t\treturn data;\n\n\t\t},\n\n\t\tfromJSON: function ( json ) {\n\n\t\t\tPath.prototype.fromJSON.call( this, json );\n\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor ( var i = 0, l = json.holes.length; i < l; i ++ ) {\n\n\t\t\t\tvar hole = json.holes[ i ];\n\t\t\t\tthis.holes.push( new Path().fromJSON( hole ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Light( color, intensity ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Light';\n\n\t\tthis.color = new Color( color );\n\t\tthis.intensity = intensity !== undefined ? intensity : 1;\n\n\t\tthis.receiveShadow = undefined;\n\n\t}\n\n\tLight.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Light,\n\n\t\tisLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tObject3D.prototype.copy.call( this, source );\n\n\t\t\tthis.color.copy( source.color );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\n\t\t\tif ( this.groundColor !== undefined ) { data.object.groundColor = this.groundColor.getHex(); }\n\n\t\t\tif ( this.distance !== undefined ) { data.object.distance = this.distance; }\n\t\t\tif ( this.angle !== undefined ) { data.object.angle = this.angle; }\n\t\t\tif ( this.decay !== undefined ) { data.object.decay = this.decay; }\n\t\t\tif ( this.penumbra !== undefined ) { data.object.penumbra = this.penumbra; }\n\n\t\t\tif ( this.shadow !== undefined ) { data.object.shadow = this.shadow.toJSON(); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction HemisphereLight( skyColor, groundColor, intensity ) {\n\n\t\tLight.call( this, skyColor, intensity );\n\n\t\tthis.type = 'HemisphereLight';\n\n\t\tthis.castShadow = undefined;\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.groundColor = new Color( groundColor );\n\n\t}\n\n\tHemisphereLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: HemisphereLight,\n\n\t\tisHemisphereLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.groundColor.copy( source.groundColor );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction LightShadow( camera ) {\n\n\t\tthis.camera = camera;\n\n\t\tthis.bias = 0;\n\t\tthis.radius = 1;\n\n\t\tthis.mapSize = new Vector2( 512, 512 );\n\n\t\tthis.map = null;\n\t\tthis.mapPass = null;\n\t\tthis.matrix = new Matrix4();\n\n\t\tthis._frustum = new Frustum();\n\t\tthis._frameExtents = new Vector2( 1, 1 );\n\n\t\tthis._viewportCount = 1;\n\n\t\tthis._viewports = [\n\n\t\t\tnew Vector4( 0, 0, 1, 1 )\n\n\t\t];\n\n\t}\n\n\tObject.assign( LightShadow.prototype, {\n\n\t\t_projScreenMatrix: new Matrix4(),\n\n\t\t_lightPositionWorld: new Vector3(),\n\n\t\t_lookTarget: new Vector3(),\n\n\t\tgetViewportCount: function () {\n\n\t\t\treturn this._viewportCount;\n\n\t\t},\n\n\t\tgetFrustum: function () {\n\n\t\t\treturn this._frustum;\n\n\t\t},\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar shadowCamera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tshadowCamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.setFromMatrixPosition( light.target.matrixWorld );\n\t\t\tshadowCamera.lookAt( lookTarget );\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\tprojScreenMatrix.multiplyMatrices( shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\t\tshadowMatrix.set(\n\t\t\t\t0.5, 0.0, 0.0, 0.5,\n\t\t\t\t0.0, 0.5, 0.0, 0.5,\n\t\t\t\t0.0, 0.0, 0.5, 0.5,\n\t\t\t\t0.0, 0.0, 0.0, 1.0\n\t\t\t);\n\n\t\t\tshadowMatrix.multiply( shadowCamera.projectionMatrix );\n\t\t\tshadowMatrix.multiply( shadowCamera.matrixWorldInverse );\n\n\t\t},\n\n\t\tgetViewport: function ( viewportIndex ) {\n\n\t\t\treturn this._viewports[ viewportIndex ];\n\n\t\t},\n\n\t\tgetFrameExtents: function () {\n\n\t\t\treturn this._frameExtents;\n\n\t\t},\n\n\t\tcopy: function ( source ) {\n\n\t\t\tthis.camera = source.camera.clone();\n\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\n\t\t\tthis.mapSize.copy( source.mapSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar object = {};\n\n\t\t\tif ( this.bias !== 0 ) { object.bias = this.bias; }\n\t\t\tif ( this.radius !== 1 ) { object.radius = this.radius; }\n\t\t\tif ( this.mapSize.x !== 512 || this.mapSize.y !== 512 ) { object.mapSize = this.mapSize.toArray(); }\n\n\t\t\tobject.camera = this.camera.toJSON( false ).object;\n\t\t\tdelete object.camera.matrix;\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction SpotLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 50, 1, 0.5, 500 ) );\n\n\t}\n\n\tSpotLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: SpotLightShadow,\n\n\t\tisSpotLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tvar camera = this.camera;\n\n\t\t\tvar fov = _Math.RAD2DEG * 2 * light.angle;\n\t\t\tvar aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tvar far = light.distance || camera.far;\n\n\t\t\tif ( fov !== camera.fov || aspect !== camera.aspect || far !== camera.far ) {\n\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\n\t\t\t}\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction SpotLight( color, intensity, distance, angle, penumbra, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'SpotLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / Math.PI;\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.angle = ( angle !== undefined ) ? angle : Math.PI / 3;\n\t\tthis.penumbra = ( penumbra !== undefined ) ? penumbra : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new SpotLightShadow();\n\n\t}\n\n\tSpotLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: SpotLight,\n\n\t\tisSpotLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\tfunction PointLightShadow() {\n\n\t\tLightShadow.call( this, new PerspectiveCamera( 90, 1, 0.5, 500 ) );\n\n\t\tthis._frameExtents = new Vector2( 4, 2 );\n\n\t\tthis._viewportCount = 6;\n\n\t\tthis._viewports = [\n\t\t\t// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//  xzXZ\n\t\t\t//   y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\n\t\t\t// positive X\n\t\t\tnew Vector4( 2, 1, 1, 1 ),\n\t\t\t// negative X\n\t\t\tnew Vector4( 0, 1, 1, 1 ),\n\t\t\t// positive Z\n\t\t\tnew Vector4( 3, 1, 1, 1 ),\n\t\t\t// negative Z\n\t\t\tnew Vector4( 1, 1, 1, 1 ),\n\t\t\t// positive Y\n\t\t\tnew Vector4( 3, 0, 1, 1 ),\n\t\t\t// negative Y\n\t\t\tnew Vector4( 1, 0, 1, 1 )\n\t\t];\n\n\t\tthis._cubeDirections = [\n\t\t\tnew Vector3( 1, 0, 0 ), new Vector3( - 1, 0, 0 ), new Vector3( 0, 0, 1 ),\n\t\t\tnew Vector3( 0, 0, - 1 ), new Vector3( 0, 1, 0 ), new Vector3( 0, - 1, 0 )\n\t\t];\n\n\t\tthis._cubeUps = [\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ), new Vector3( 0, 1, 0 ),\n\t\t\tnew Vector3( 0, 1, 0 ), new Vector3( 0, 0, 1 ),\tnew Vector3( 0, 0, - 1 )\n\t\t];\n\n\t}\n\n\tPointLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: PointLightShadow,\n\n\t\tisPointLightShadow: true,\n\n\t\tupdateMatrices: function ( light, viewportIndex ) {\n\n\t\t\tif ( viewportIndex === undefined ) { viewportIndex = 0; }\n\n\t\t\tvar camera = this.camera,\n\t\t\t\tshadowMatrix = this.matrix,\n\t\t\t\tlightPositionWorld = this._lightPositionWorld,\n\t\t\t\tlookTarget = this._lookTarget,\n\t\t\t\tprojScreenMatrix = this._projScreenMatrix;\n\n\t\t\tlightPositionWorld.setFromMatrixPosition( light.matrixWorld );\n\t\t\tcamera.position.copy( lightPositionWorld );\n\n\t\t\tlookTarget.copy( camera.position );\n\t\t\tlookTarget.add( this._cubeDirections[ viewportIndex ] );\n\t\t\tcamera.up.copy( this._cubeUps[ viewportIndex ] );\n\t\t\tcamera.lookAt( lookTarget );\n\t\t\tcamera.updateMatrixWorld();\n\n\t\t\tshadowMatrix.makeTranslation( - lightPositionWorld.x, - lightPositionWorld.y, - lightPositionWorld.z );\n\n\t\t\tprojScreenMatrix.multiplyMatrices( camera.projectionMatrix, camera.matrixWorldInverse );\n\t\t\tthis._frustum.setFromMatrix( projScreenMatrix );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction PointLight( color, intensity, distance, decay ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'PointLight';\n\n\t\tObject.defineProperty( this, 'power', {\n\t\t\tget: function () {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\treturn this.intensity * 4 * Math.PI;\n\n\t\t\t},\n\t\t\tset: function ( power ) {\n\n\t\t\t\t// intensity = power per solid angle.\n\t\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\t\tthis.intensity = power / ( 4 * Math.PI );\n\n\t\t\t}\n\t\t} );\n\n\t\tthis.distance = ( distance !== undefined ) ? distance : 0;\n\t\tthis.decay = ( decay !== undefined ) ? decay : 1;\t// for physically correct lights, should be 2.\n\n\t\tthis.shadow = new PointLightShadow();\n\n\t}\n\n\tPointLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: PointLight,\n\n\t\tisPointLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author arose / http://github.com/arose\n\t */\n\n\tfunction OrthographicCamera( left, right, top, bottom, near, far ) {\n\n\t\tCamera.call( this );\n\n\t\tthis.type = 'OrthographicCamera';\n\n\t\tthis.zoom = 1;\n\t\tthis.view = null;\n\n\t\tthis.left = ( left !== undefined ) ? left : - 1;\n\t\tthis.right = ( right !== undefined ) ? right : 1;\n\t\tthis.top = ( top !== undefined ) ? top : 1;\n\t\tthis.bottom = ( bottom !== undefined ) ? bottom : - 1;\n\n\t\tthis.near = ( near !== undefined ) ? near : 0.1;\n\t\tthis.far = ( far !== undefined ) ? far : 2000;\n\n\t\tthis.updateProjectionMatrix();\n\n\t}\n\n\tOrthographicCamera.prototype = Object.assign( Object.create( Camera.prototype ), {\n\n\t\tconstructor: OrthographicCamera,\n\n\t\tisOrthographicCamera: true,\n\n\t\tcopy: function ( source, recursive ) {\n\n\t\t\tCamera.prototype.copy.call( this, source, recursive );\n\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign( {}, source.view );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetViewOffset: function ( fullWidth, fullHeight, x, y, width, height ) {\n\n\t\t\tif ( this.view === null ) {\n\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tclearViewOffset: function () {\n\n\t\t\tif ( this.view !== null ) {\n\n\t\t\t\tthis.view.enabled = false;\n\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\n\t\t},\n\n\t\tupdateProjectionMatrix: function () {\n\n\t\t\tvar dx = ( this.right - this.left ) / ( 2 * this.zoom );\n\t\t\tvar dy = ( this.top - this.bottom ) / ( 2 * this.zoom );\n\t\t\tvar cx = ( this.right + this.left ) / 2;\n\t\t\tvar cy = ( this.top + this.bottom ) / 2;\n\n\t\t\tvar left = cx - dx;\n\t\t\tvar right = cx + dx;\n\t\t\tvar top = cy + dy;\n\t\t\tvar bottom = cy - dy;\n\n\t\t\tif ( this.view !== null && this.view.enabled ) {\n\n\t\t\t\tvar zoomW = this.zoom / ( this.view.width / this.view.fullWidth );\n\t\t\t\tvar zoomH = this.zoom / ( this.view.height / this.view.fullHeight );\n\t\t\t\tvar scaleW = ( this.right - this.left ) / this.view.width;\n\t\t\t\tvar scaleH = ( this.top - this.bottom ) / this.view.height;\n\n\t\t\t\tleft += scaleW * ( this.view.offsetX / zoomW );\n\t\t\t\tright = left + scaleW * ( this.view.width / zoomW );\n\t\t\t\ttop -= scaleH * ( this.view.offsetY / zoomH );\n\t\t\t\tbottom = top - scaleH * ( this.view.height / zoomH );\n\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic( left, right, top, bottom, this.near, this.far );\n\n\t\t\tthis.projectionMatrixInverse.getInverse( this.projectionMatrix );\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Object3D.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\n\t\t\tif ( this.view !== null ) { data.object.view = Object.assign( {}, this.view ); }\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction DirectionalLightShadow() {\n\n\t\tLightShadow.call( this, new OrthographicCamera( - 5, 5, 5, - 5, 0.5, 500 ) );\n\n\t}\n\n\tDirectionalLightShadow.prototype = Object.assign( Object.create( LightShadow.prototype ), {\n\n\t\tconstructor: DirectionalLightShadow,\n\n\t\tisDirectionalLightShadow: true,\n\n\t\tupdateMatrices: function ( light ) {\n\n\t\t\tLightShadow.prototype.updateMatrices.call( this, light );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction DirectionalLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'DirectionalLight';\n\n\t\tthis.position.copy( Object3D.DefaultUp );\n\t\tthis.updateMatrix();\n\n\t\tthis.target = new Object3D();\n\n\t\tthis.shadow = new DirectionalLightShadow();\n\n\t}\n\n\tDirectionalLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: DirectionalLight,\n\n\t\tisDirectionalLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.target = source.target.clone();\n\n\t\t\tthis.shadow = source.shadow.clone();\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AmbientLight( color, intensity ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'AmbientLight';\n\n\t\tthis.castShadow = undefined;\n\n\t}\n\n\tAmbientLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: AmbientLight,\n\n\t\tisAmbientLight: true\n\n\t} );\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t */\n\n\tfunction RectAreaLight( color, intensity, width, height ) {\n\n\t\tLight.call( this, color, intensity );\n\n\t\tthis.type = 'RectAreaLight';\n\n\t\tthis.width = ( width !== undefined ) ? width : 10;\n\t\tthis.height = ( height !== undefined ) ? height : 10;\n\n\t}\n\n\tRectAreaLight.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: RectAreaLight,\n\n\t\tisRectAreaLight: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction MaterialLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.textures = {};\n\n\t}\n\n\tMaterialLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: MaterialLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar textures = this.textures;\n\n\t\t\tfunction getTexture( name ) {\n\n\t\t\t\tif ( textures[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.MaterialLoader: Undefined texture', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn textures[ name ];\n\n\t\t\t}\n\n\t\t\tvar material = new Materials[ json.type ]();\n\n\t\t\tif ( json.uuid !== undefined ) { material.uuid = json.uuid; }\n\t\t\tif ( json.name !== undefined ) { material.name = json.name; }\n\t\t\tif ( json.color !== undefined ) { material.color.setHex( json.color ); }\n\t\t\tif ( json.roughness !== undefined ) { material.roughness = json.roughness; }\n\t\t\tif ( json.metalness !== undefined ) { material.metalness = json.metalness; }\n\t\t\tif ( json.sheen !== undefined ) { material.sheen = new Color().setHex( json.sheen ); }\n\t\t\tif ( json.emissive !== undefined ) { material.emissive.setHex( json.emissive ); }\n\t\t\tif ( json.specular !== undefined ) { material.specular.setHex( json.specular ); }\n\t\t\tif ( json.shininess !== undefined ) { material.shininess = json.shininess; }\n\t\t\tif ( json.clearcoat !== undefined ) { material.clearcoat = json.clearcoat; }\n\t\t\tif ( json.clearcoatRoughness !== undefined ) { material.clearcoatRoughness = json.clearcoatRoughness; }\n\t\t\tif ( json.vertexColors !== undefined ) { material.vertexColors = json.vertexColors; }\n\t\t\tif ( json.fog !== undefined ) { material.fog = json.fog; }\n\t\t\tif ( json.flatShading !== undefined ) { material.flatShading = json.flatShading; }\n\t\t\tif ( json.blending !== undefined ) { material.blending = json.blending; }\n\t\t\tif ( json.combine !== undefined ) { material.combine = json.combine; }\n\t\t\tif ( json.side !== undefined ) { material.side = json.side; }\n\t\t\tif ( json.opacity !== undefined ) { material.opacity = json.opacity; }\n\t\t\tif ( json.transparent !== undefined ) { material.transparent = json.transparent; }\n\t\t\tif ( json.alphaTest !== undefined ) { material.alphaTest = json.alphaTest; }\n\t\t\tif ( json.depthTest !== undefined ) { material.depthTest = json.depthTest; }\n\t\t\tif ( json.depthWrite !== undefined ) { material.depthWrite = json.depthWrite; }\n\t\t\tif ( json.colorWrite !== undefined ) { material.colorWrite = json.colorWrite; }\n\n\t\t\tif ( json.stencilWrite !== undefined ) { material.stencilWrite = json.stencilWrite; }\n\t\t\tif ( json.stencilWriteMask !== undefined ) { material.stencilWriteMask = json.stencilWriteMask; }\n\t\t\tif ( json.stencilFunc !== undefined ) { material.stencilFunc = json.stencilFunc; }\n\t\t\tif ( json.stencilRef !== undefined ) { material.stencilRef = json.stencilRef; }\n\t\t\tif ( json.stencilFuncMask !== undefined ) { material.stencilFuncMask = json.stencilFuncMask; }\n\t\t\tif ( json.stencilFail !== undefined ) { material.stencilFail = json.stencilFail; }\n\t\t\tif ( json.stencilZFail !== undefined ) { material.stencilZFail = json.stencilZFail; }\n\t\t\tif ( json.stencilZPass !== undefined ) { material.stencilZPass = json.stencilZPass; }\n\n\t\t\tif ( json.wireframe !== undefined ) { material.wireframe = json.wireframe; }\n\t\t\tif ( json.wireframeLinewidth !== undefined ) { material.wireframeLinewidth = json.wireframeLinewidth; }\n\t\t\tif ( json.wireframeLinecap !== undefined ) { material.wireframeLinecap = json.wireframeLinecap; }\n\t\t\tif ( json.wireframeLinejoin !== undefined ) { material.wireframeLinejoin = json.wireframeLinejoin; }\n\n\t\t\tif ( json.rotation !== undefined ) { material.rotation = json.rotation; }\n\n\t\t\tif ( json.linewidth !== 1 ) { material.linewidth = json.linewidth; }\n\t\t\tif ( json.dashSize !== undefined ) { material.dashSize = json.dashSize; }\n\t\t\tif ( json.gapSize !== undefined ) { material.gapSize = json.gapSize; }\n\t\t\tif ( json.scale !== undefined ) { material.scale = json.scale; }\n\n\t\t\tif ( json.polygonOffset !== undefined ) { material.polygonOffset = json.polygonOffset; }\n\t\t\tif ( json.polygonOffsetFactor !== undefined ) { material.polygonOffsetFactor = json.polygonOffsetFactor; }\n\t\t\tif ( json.polygonOffsetUnits !== undefined ) { material.polygonOffsetUnits = json.polygonOffsetUnits; }\n\n\t\t\tif ( json.skinning !== undefined ) { material.skinning = json.skinning; }\n\t\t\tif ( json.morphTargets !== undefined ) { material.morphTargets = json.morphTargets; }\n\t\t\tif ( json.morphNormals !== undefined ) { material.morphNormals = json.morphNormals; }\n\t\t\tif ( json.dithering !== undefined ) { material.dithering = json.dithering; }\n\n\t\t\tif ( json.visible !== undefined ) { material.visible = json.visible; }\n\n\t\t\tif ( json.toneMapped !== undefined ) { material.toneMapped = json.toneMapped; }\n\n\t\t\tif ( json.userData !== undefined ) { material.userData = json.userData; }\n\n\t\t\t// Shader Material\n\n\t\t\tif ( json.uniforms !== undefined ) {\n\n\t\t\t\tfor ( var name in json.uniforms ) {\n\n\t\t\t\t\tvar uniform = json.uniforms[ name ];\n\n\t\t\t\t\tmaterial.uniforms[ name ] = {};\n\n\t\t\t\t\tswitch ( uniform.type ) {\n\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = getTexture( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Color().setHex( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector2().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector3().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Vector4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix3().fromArray( uniform.value );\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = new Matrix4().fromArray( uniform.value );\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[ name ].value = uniform.value;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( json.defines !== undefined ) { material.defines = json.defines; }\n\t\t\tif ( json.vertexShader !== undefined ) { material.vertexShader = json.vertexShader; }\n\t\t\tif ( json.fragmentShader !== undefined ) { material.fragmentShader = json.fragmentShader; }\n\n\t\t\tif ( json.extensions !== undefined ) {\n\n\t\t\t\tfor ( var key in json.extensions ) {\n\n\t\t\t\t\tmaterial.extensions[ key ] = json.extensions[ key ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// Deprecated\n\n\t\t\tif ( json.shading !== undefined ) { material.flatShading = json.shading === 1; } // THREE.FlatShading\n\n\t\t\t// for PointsMaterial\n\n\t\t\tif ( json.size !== undefined ) { material.size = json.size; }\n\t\t\tif ( json.sizeAttenuation !== undefined ) { material.sizeAttenuation = json.sizeAttenuation; }\n\n\t\t\t// maps\n\n\t\t\tif ( json.map !== undefined ) { material.map = getTexture( json.map ); }\n\t\t\tif ( json.matcap !== undefined ) { material.matcap = getTexture( json.matcap ); }\n\n\t\t\tif ( json.alphaMap !== undefined ) {\n\n\t\t\t\tmaterial.alphaMap = getTexture( json.alphaMap );\n\t\t\t\tmaterial.transparent = true;\n\n\t\t\t}\n\n\t\t\tif ( json.bumpMap !== undefined ) { material.bumpMap = getTexture( json.bumpMap ); }\n\t\t\tif ( json.bumpScale !== undefined ) { material.bumpScale = json.bumpScale; }\n\n\t\t\tif ( json.normalMap !== undefined ) { material.normalMap = getTexture( json.normalMap ); }\n\t\t\tif ( json.normalMapType !== undefined ) { material.normalMapType = json.normalMapType; }\n\t\t\tif ( json.normalScale !== undefined ) {\n\n\t\t\t\tvar normalScale = json.normalScale;\n\n\t\t\t\tif ( Array.isArray( normalScale ) === false ) {\n\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\n\t\t\t\t\tnormalScale = [ normalScale, normalScale ];\n\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray( normalScale );\n\n\t\t\t}\n\n\t\t\tif ( json.displacementMap !== undefined ) { material.displacementMap = getTexture( json.displacementMap ); }\n\t\t\tif ( json.displacementScale !== undefined ) { material.displacementScale = json.displacementScale; }\n\t\t\tif ( json.displacementBias !== undefined ) { material.displacementBias = json.displacementBias; }\n\n\t\t\tif ( json.roughnessMap !== undefined ) { material.roughnessMap = getTexture( json.roughnessMap ); }\n\t\t\tif ( json.metalnessMap !== undefined ) { material.metalnessMap = getTexture( json.metalnessMap ); }\n\n\t\t\tif ( json.emissiveMap !== undefined ) { material.emissiveMap = getTexture( json.emissiveMap ); }\n\t\t\tif ( json.emissiveIntensity !== undefined ) { material.emissiveIntensity = json.emissiveIntensity; }\n\n\t\t\tif ( json.specularMap !== undefined ) { material.specularMap = getTexture( json.specularMap ); }\n\n\t\t\tif ( json.envMap !== undefined ) { material.envMap = getTexture( json.envMap ); }\n\t\t\tif ( json.envMapIntensity !== undefined ) { material.envMapIntensity = json.envMapIntensity; }\n\n\t\t\tif ( json.reflectivity !== undefined ) { material.reflectivity = json.reflectivity; }\n\t\t\tif ( json.refractionRatio !== undefined ) { material.refractionRatio = json.refractionRatio; }\n\n\t\t\tif ( json.lightMap !== undefined ) { material.lightMap = getTexture( json.lightMap ); }\n\t\t\tif ( json.lightMapIntensity !== undefined ) { material.lightMapIntensity = json.lightMapIntensity; }\n\n\t\t\tif ( json.aoMap !== undefined ) { material.aoMap = getTexture( json.aoMap ); }\n\t\t\tif ( json.aoMapIntensity !== undefined ) { material.aoMapIntensity = json.aoMapIntensity; }\n\n\t\t\tif ( json.gradientMap !== undefined ) { material.gradientMap = getTexture( json.gradientMap ); }\n\n\t\t\tif ( json.clearcoatNormalMap !== undefined ) { material.clearcoatNormalMap = getTexture( json.clearcoatNormalMap ); }\n\t\t\tif ( json.clearcoatNormalScale !== undefined ) { material.clearcoatNormalScale = new Vector2().fromArray( json.clearcoatNormalScale ); }\n\n\t\t\treturn material;\n\n\t\t},\n\n\t\tsetTextures: function ( value ) {\n\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Don McCurdy / https://www.donmccurdy.com\n\t */\n\n\tvar LoaderUtils = {\n\n\t\tdecodeText: function ( array ) {\n\n\t\t\tif ( typeof TextDecoder !== 'undefined' ) {\n\n\t\t\t\treturn new TextDecoder().decode( array );\n\n\t\t\t}\n\n\t\t\t// Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\t\t\tvar s = '';\n\n\t\t\tfor ( var i = 0, il = array.length; i < il; i ++ ) {\n\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode( array[ i ] );\n\n\t\t\t}\n\n\t\t\ttry {\n\n\t\t\t\t// merges multi-byte utf-8 characters.\n\n\t\t\t\treturn decodeURIComponent( escape( s ) );\n\n\t\t\t} catch ( e ) { // see #16358\n\n\t\t\t\treturn s;\n\n\t\t\t}\n\n\t\t},\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tvar index = url.lastIndexOf( '/' );\n\n\t\t\tif ( index === - 1 ) { return './'; }\n\n\t\t\treturn url.substr( 0, index + 1 );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferGeometry() {\n\n\t\tBufferGeometry.call( this );\n\n\t\tthis.type = 'InstancedBufferGeometry';\n\t\tthis.maxInstancedCount = undefined;\n\n\t}\n\n\tInstancedBufferGeometry.prototype = Object.assign( Object.create( BufferGeometry.prototype ), {\n\n\t\tconstructor: InstancedBufferGeometry,\n\n\t\tisInstancedBufferGeometry: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferGeometry.prototype.copy.call( this, source );\n\n\t\t\tthis.maxInstancedCount = source.maxInstancedCount;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\ttoJSON: function () {\n\n\t\t\tvar data = BufferGeometry.prototype.toJSON.call( this );\n\n\t\t\tdata.maxInstancedCount = this.maxInstancedCount;\n\n\t\t\tdata.isInstancedBufferGeometry = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedBufferAttribute( array, itemSize, normalized, meshPerAttribute ) {\n\n\t\tif ( typeof ( normalized ) === 'number' ) {\n\n\t\t\tmeshPerAttribute = normalized;\n\n\t\t\tnormalized = false;\n\n\t\t\tconsole.error( 'THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.' );\n\n\t\t}\n\n\t\tBufferAttribute.call( this, array, itemSize, normalized );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedBufferAttribute.prototype = Object.assign( Object.create( BufferAttribute.prototype ), {\n\n\t\tconstructor: InstancedBufferAttribute,\n\n\t\tisInstancedBufferAttribute: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tBufferAttribute.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ()\t{\n\n\t\t\tvar data = BufferAttribute.prototype.toJSON.call( this );\n\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\n\t\t\tdata.isInstancedBufferAttribute = true;\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction BufferGeometryLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tBufferGeometryLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: BufferGeometryLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( scope.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tonLoad( scope.parse( JSON.parse( text ) ) );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\tvar geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\n\t\t\tvar index = json.data.index;\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ index.type ]( index.array );\n\t\t\t\tgeometry.setIndex( new BufferAttribute( typedArray, 1 ) );\n\n\t\t\t}\n\n\t\t\tvar attributes = json.data.attributes;\n\n\t\t\tfor ( var key in attributes ) {\n\n\t\t\t\tvar attribute = attributes[ key ];\n\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\t\t\t\tvar bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\tvar bufferAttribute = new bufferAttributeConstr( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\tif ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }\n\t\t\t\tgeometry.setAttribute( key, bufferAttribute );\n\n\t\t\t}\n\n\t\t\tvar morphAttributes = json.data.morphAttributes;\n\n\t\t\tif ( morphAttributes ) {\n\n\t\t\t\tfor ( var key in morphAttributes ) {\n\n\t\t\t\t\tvar attributeArray = morphAttributes[ key ];\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, il = attributeArray.length; i < il; i ++ ) {\n\n\t\t\t\t\t\tvar attribute = attributeArray[ i ];\n\t\t\t\t\t\tvar typedArray = new TYPED_ARRAYS[ attribute.type ]( attribute.array );\n\n\t\t\t\t\t\tvar bufferAttribute = new BufferAttribute( typedArray, attribute.itemSize, attribute.normalized );\n\t\t\t\t\t\tif ( attribute.name !== undefined ) { bufferAttribute.name = attribute.name; }\n\t\t\t\t\t\tarray.push( bufferAttribute );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[ key ] = array;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif ( morphTargetsRelative ) {\n\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\n\t\t\t}\n\n\t\t\tvar groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif ( groups !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, n = groups.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar group = groups[ i ];\n\n\t\t\t\t\tgeometry.addGroup( group.start, group.count, group.materialIndex );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar boundingSphere = json.data.boundingSphere;\n\n\t\t\tif ( boundingSphere !== undefined ) {\n\n\t\t\t\tvar center = new Vector3();\n\n\t\t\t\tif ( boundingSphere.center !== undefined ) {\n\n\t\t\t\t\tcenter.fromArray( boundingSphere.center );\n\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere( center, boundingSphere.radius );\n\n\t\t\t}\n\n\t\t\tif ( json.name ) { geometry.name = json.name; }\n\t\t\tif ( json.userData ) { geometry.userData = json.userData; }\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\tvar TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\t// Workaround for IE11 pre KB2929437. See #11440\n\t\tUint8ClampedArray: typeof Uint8ClampedArray !== 'undefined' ? Uint8ClampedArray : Uint8Array,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction ObjectLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tObjectLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ObjectLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar path = ( this.path === '' ) ? LoaderUtils.extractUrlBase( url ) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\n\t\t\tvar loader = new FileLoader( scope.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json = null;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( error ) {\n\n\t\t\t\t\tif ( onError !== undefined ) { onError( error ); }\n\n\t\t\t\t\tconsole.error( 'THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message );\n\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tvar metadata = json.metadata;\n\n\t\t\t\tif ( metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry' ) {\n\n\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: Can\\'t load ' + url );\n\t\t\t\t\treturn;\n\n\t\t\t\t}\n\n\t\t\t\tscope.parse( json, onLoad );\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json, onLoad ) {\n\n\t\t\tvar shapes = this.parseShape( json.shapes );\n\t\t\tvar geometries = this.parseGeometries( json.geometries, shapes );\n\n\t\t\tvar images = this.parseImages( json.images, function () {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t} );\n\n\t\t\tvar textures = this.parseTextures( json.textures, images );\n\t\t\tvar materials = this.parseMaterials( json.materials, textures );\n\n\t\t\tvar object = this.parseObject( json.object, geometries, materials );\n\n\t\t\tif ( json.animations ) {\n\n\t\t\t\tobject.animations = this.parseAnimations( json.animations );\n\n\t\t\t}\n\n\t\t\tif ( json.images === undefined || json.images.length === 0 ) {\n\n\t\t\t\tif ( onLoad !== undefined ) { onLoad( object ); }\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t},\n\n\t\tparseShape: function ( json ) {\n\n\t\t\tvar shapes = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar shape = new Shape().fromJSON( json[ i ] );\n\n\t\t\t\t\tshapes[ shape.uuid ] = shape;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t},\n\n\t\tparseGeometries: function ( json, shapes ) {\n\n\t\t\tvar geometries = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar geometry;\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tswitch ( data.type ) {\n\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\tcase 'CubeGeometry': // backwards compatible\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.width,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.depth,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.depthSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radiusTop,\n\t\t\t\t\t\t\t\tdata.radiusBottom,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.height,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.openEnded,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.widthSegments,\n\t\t\t\t\t\t\t\tdata.heightSegments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.detail\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.innerRadius,\n\t\t\t\t\t\t\t\tdata.outerRadius,\n\t\t\t\t\t\t\t\tdata.thetaSegments,\n\t\t\t\t\t\t\t\tdata.phiSegments,\n\t\t\t\t\t\t\t\tdata.thetaStart,\n\t\t\t\t\t\t\t\tdata.thetaLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.arc\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.tube,\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.p,\n\t\t\t\t\t\t\t\tdata.q\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tnew Curves[ data.path.type ]().fromJSON( data.path ),\n\t\t\t\t\t\t\t\tdata.tubularSegments,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.radialSegments,\n\t\t\t\t\t\t\t\tdata.closed\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.points,\n\t\t\t\t\t\t\t\tdata.segments,\n\t\t\t\t\t\t\t\tdata.phiStart,\n\t\t\t\t\t\t\t\tdata.phiLength\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tdata.vertices,\n\t\t\t\t\t\t\t\tdata.indices,\n\t\t\t\t\t\t\t\tdata.radius,\n\t\t\t\t\t\t\t\tdata.details\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.curveSegments\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\n\t\t\t\t\t\t\tvar geometryShapes = [];\n\n\t\t\t\t\t\t\tfor ( var j = 0, jl = data.shapes.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\t\tvar shape = shapes[ data.shapes[ j ] ];\n\n\t\t\t\t\t\t\t\tgeometryShapes.push( shape );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tvar extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif ( extrudePath !== undefined ) {\n\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[ extrudePath.type ]().fromJSON( extrudePath );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[ data.type ](\n\t\t\t\t\t\t\t\tgeometryShapes,\n\t\t\t\t\t\t\t\tdata.options\n\t\t\t\t\t\t\t);\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse( data );\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\n\t\t\t\t\t\t\tif ( 'THREE' in window && 'LegacyJSONLoader' in THREE ) {\n\n\t\t\t\t\t\t\t\tvar geometryLoader = new THREE.LegacyJSONLoader();\n\t\t\t\t\t\t\t\tgeometry = geometryLoader.parse( data, this.resourcePath ).geometry;\n\n\n\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\tconsole.error( 'THREE.ObjectLoader: You have to import LegacyJSONLoader in order load geometry data of type \"Geometry\".' );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"' );\n\n\t\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { geometry.name = data.name; }\n\t\t\t\t\tif ( geometry.isBufferGeometry === true && data.userData !== undefined ) { geometry.userData = data.userData; }\n\n\t\t\t\t\tgeometries[ data.uuid ] = geometry;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn geometries;\n\n\t\t},\n\n\t\tparseMaterials: function ( json, textures ) {\n\n\t\t\tvar cache = {}; // MultiMaterial\n\t\t\tvar materials = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tvar loader = new MaterialLoader();\n\t\t\t\tloader.setTextures( textures );\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.type === 'MultiMaterial' ) {\n\n\t\t\t\t\t\t// Deprecated\n\n\t\t\t\t\t\tvar array = [];\n\n\t\t\t\t\t\tfor ( var j = 0; j < data.materials.length; j ++ ) {\n\n\t\t\t\t\t\t\tvar material = data.materials[ j ];\n\n\t\t\t\t\t\t\tif ( cache[ material.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\t\tcache[ material.uuid ] = loader.parse( material );\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push( cache[ material.uuid ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = array;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( cache[ data.uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tcache[ data.uuid ] = loader.parse( data );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[ data.uuid ] = cache[ data.uuid ];\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn materials;\n\n\t\t},\n\n\t\tparseAnimations: function ( json ) {\n\n\t\t\tvar animations = [];\n\n\t\t\tfor ( var i = 0; i < json.length; i ++ ) {\n\n\t\t\t\tvar data = json[ i ];\n\n\t\t\t\tvar clip = AnimationClip.parse( data );\n\n\t\t\t\tif ( data.uuid !== undefined ) { clip.uuid = data.uuid; }\n\n\t\t\t\tanimations.push( clip );\n\n\t\t\t}\n\n\t\t\treturn animations;\n\n\t\t},\n\n\t\tparseImages: function ( json, onLoad ) {\n\n\t\t\tvar scope = this;\n\t\t\tvar images = {};\n\n\t\t\tfunction loadImage( url ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\treturn loader.load( url, function () {\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, undefined, function () {\n\n\t\t\t\t\tscope.manager.itemError( url );\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t} );\n\n\t\t\t}\n\n\t\t\tif ( json !== undefined && json.length > 0 ) {\n\n\t\t\t\tvar manager = new LoadingManager( onLoad );\n\n\t\t\t\tvar loader = new ImageLoader( manager );\n\t\t\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\t\t\tfor ( var i = 0, il = json.length; i < il; i ++ ) {\n\n\t\t\t\t\tvar image = json[ i ];\n\t\t\t\t\tvar url = image.url;\n\n\t\t\t\t\tif ( Array.isArray( url ) ) {\n\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\n\t\t\t\t\t\timages[ image.uuid ] = [];\n\n\t\t\t\t\t\tfor ( var j = 0, jl = url.length; j < jl; j ++ ) {\n\n\t\t\t\t\t\t\tvar currentUrl = url[ j ];\n\n\t\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( currentUrl ) ? currentUrl : scope.resourcePath + currentUrl;\n\n\t\t\t\t\t\t\timages[ image.uuid ].push( loadImage( path ) );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// load single image\n\n\t\t\t\t\t\tvar path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test( image.url ) ? image.url : scope.resourcePath + image.url;\n\n\t\t\t\t\t\timages[ image.uuid ] = loadImage( path );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn images;\n\n\t\t},\n\n\t\tparseTextures: function ( json, images ) {\n\n\t\t\tfunction parseConstant( value, type ) {\n\n\t\t\t\tif ( typeof value === 'number' ) { return value; }\n\n\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value );\n\n\t\t\t\treturn type[ value ];\n\n\t\t\t}\n\n\t\t\tvar textures = {};\n\n\t\t\tif ( json !== undefined ) {\n\n\t\t\t\tfor ( var i = 0, l = json.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar data = json[ i ];\n\n\t\t\t\t\tif ( data.image === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: No \"image\" specified for', data.uuid );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( images[ data.image ] === undefined ) {\n\n\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined image', data.image );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar texture;\n\n\t\t\t\t\tif ( Array.isArray( images[ data.image ] ) ) {\n\n\t\t\t\t\t\ttexture = new CubeTexture( images[ data.image ] );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\ttexture = new Texture( images[ data.image ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\n\t\t\t\t\tif ( data.name !== undefined ) { texture.name = data.name; }\n\n\t\t\t\t\tif ( data.mapping !== undefined ) { texture.mapping = parseConstant( data.mapping, TEXTURE_MAPPING ); }\n\n\t\t\t\t\tif ( data.offset !== undefined ) { texture.offset.fromArray( data.offset ); }\n\t\t\t\t\tif ( data.repeat !== undefined ) { texture.repeat.fromArray( data.repeat ); }\n\t\t\t\t\tif ( data.center !== undefined ) { texture.center.fromArray( data.center ); }\n\t\t\t\t\tif ( data.rotation !== undefined ) { texture.rotation = data.rotation; }\n\n\t\t\t\t\tif ( data.wrap !== undefined ) {\n\n\t\t\t\t\t\ttexture.wrapS = parseConstant( data.wrap[ 0 ], TEXTURE_WRAPPING );\n\t\t\t\t\t\ttexture.wrapT = parseConstant( data.wrap[ 1 ], TEXTURE_WRAPPING );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.format !== undefined ) { texture.format = data.format; }\n\t\t\t\t\tif ( data.type !== undefined ) { texture.type = data.type; }\n\t\t\t\t\tif ( data.encoding !== undefined ) { texture.encoding = data.encoding; }\n\n\t\t\t\t\tif ( data.minFilter !== undefined ) { texture.minFilter = parseConstant( data.minFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.magFilter !== undefined ) { texture.magFilter = parseConstant( data.magFilter, TEXTURE_FILTER ); }\n\t\t\t\t\tif ( data.anisotropy !== undefined ) { texture.anisotropy = data.anisotropy; }\n\n\t\t\t\t\tif ( data.flipY !== undefined ) { texture.flipY = data.flipY; }\n\n\t\t\t\t\tif ( data.premultiplyAlpha !== undefined ) { texture.premultiplyAlpha = data.premultiplyAlpha; }\n\t\t\t\t\tif ( data.unpackAlignment !== undefined ) { texture.unpackAlignment = data.unpackAlignment; }\n\n\t\t\t\t\ttextures[ data.uuid ] = texture;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn textures;\n\n\t\t},\n\n\t\tparseObject: function ( data, geometries, materials ) {\n\n\t\t\tvar object;\n\n\t\t\tfunction getGeometry( name ) {\n\n\t\t\t\tif ( geometries[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined geometry', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn geometries[ name ];\n\n\t\t\t}\n\n\t\t\tfunction getMaterial( name ) {\n\n\t\t\t\tif ( name === undefined ) { return undefined; }\n\n\t\t\t\tif ( Array.isArray( name ) ) {\n\n\t\t\t\t\tvar array = [];\n\n\t\t\t\t\tfor ( var i = 0, l = name.length; i < l; i ++ ) {\n\n\t\t\t\t\t\tvar uuid = name[ i ];\n\n\t\t\t\t\t\tif ( materials[ uuid ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', uuid );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push( materials[ uuid ] );\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\n\t\t\t\t}\n\n\t\t\t\tif ( materials[ name ] === undefined ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader: Undefined material', name );\n\n\t\t\t\t}\n\n\t\t\t\treturn materials[ name ];\n\n\t\t\t}\n\n\t\t\tswitch ( data.type ) {\n\n\t\t\t\tcase 'Scene':\n\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif ( data.background !== undefined ) {\n\n\t\t\t\t\t\tif ( Number.isInteger( data.background ) ) {\n\n\t\t\t\t\t\t\tobject.background = new Color( data.background );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( data.fog !== undefined ) {\n\n\t\t\t\t\t\tif ( data.fog.type === 'Fog' ) {\n\n\t\t\t\t\t\t\tobject.fog = new Fog( data.fog.color, data.fog.near, data.fog.far );\n\n\t\t\t\t\t\t} else if ( data.fog.type === 'FogExp2' ) {\n\n\t\t\t\t\t\t\tobject.fog = new FogExp2( data.fog.color, data.fog.density );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\n\t\t\t\t\tobject = new PerspectiveCamera( data.fov, data.aspect, data.near, data.far );\n\n\t\t\t\t\tif ( data.focus !== undefined ) { object.focus = data.focus; }\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.filmGauge !== undefined ) { object.filmGauge = data.filmGauge; }\n\t\t\t\t\tif ( data.filmOffset !== undefined ) { object.filmOffset = data.filmOffset; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\n\t\t\t\t\tobject = new OrthographicCamera( data.left, data.right, data.top, data.bottom, data.near, data.far );\n\n\t\t\t\t\tif ( data.zoom !== undefined ) { object.zoom = data.zoom; }\n\t\t\t\t\tif ( data.view !== undefined ) { object.view = Object.assign( {}, data.view ); }\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\n\t\t\t\t\tobject = new AmbientLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\n\t\t\t\t\tobject = new DirectionalLight( data.color, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\n\t\t\t\t\tobject = new PointLight( data.color, data.intensity, data.distance, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\n\t\t\t\t\tobject = new RectAreaLight( data.color, data.intensity, data.width, data.height );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\n\t\t\t\t\tobject = new SpotLight( data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\n\t\t\t\t\tobject = new HemisphereLight( data.color, data.groundColor, data.intensity );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\n\t\t\t\t\tconsole.warn( 'THREE.ObjectLoader.parseObject() does not support SkinnedMesh yet.' );\n\n\t\t\t\tcase 'Mesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\n\t\t\t\t\tif ( geometry.bones && geometry.bones.length > 0 ) {\n\n\t\t\t\t\t\tobject = new SkinnedMesh( geometry, material );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tobject = new Mesh( geometry, material );\n\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\n\t\t\t\t\tvar geometry = getGeometry( data.geometry );\n\t\t\t\t\tvar material = getMaterial( data.material );\n\t\t\t\t\tvar count = data.count;\n\t\t\t\t\tvar instanceMatrix = data.instanceMatrix;\n\n\t\t\t\t\tobject = new InstancedMesh( geometry, material, count );\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute( new Float32Array( instanceMatrix.array ), 16 );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\n\t\t\t\t\tobject = new LOD();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\n\t\t\t\t\tobject = new Line( getGeometry( data.geometry ), getMaterial( data.material ), data.mode );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\n\t\t\t\t\tobject = new LineLoop( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\n\t\t\t\t\tobject = new LineSegments( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\n\t\t\t\t\tobject = new Points( getGeometry( data.geometry ), getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\n\t\t\t\t\tobject = new Sprite( getMaterial( data.material ) );\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\n\t\t\t\t\tobject = new Group();\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\n\t\t\t\t\tobject = new Object3D();\n\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\n\t\t\tif ( data.name !== undefined ) { object.name = data.name; }\n\n\t\t\tif ( data.matrix !== undefined ) {\n\n\t\t\t\tobject.matrix.fromArray( data.matrix );\n\n\t\t\t\tif ( data.matrixAutoUpdate !== undefined ) { object.matrixAutoUpdate = data.matrixAutoUpdate; }\n\t\t\t\tif ( object.matrixAutoUpdate ) { object.matrix.decompose( object.position, object.quaternion, object.scale ); }\n\n\t\t\t} else {\n\n\t\t\t\tif ( data.position !== undefined ) { object.position.fromArray( data.position ); }\n\t\t\t\tif ( data.rotation !== undefined ) { object.rotation.fromArray( data.rotation ); }\n\t\t\t\tif ( data.quaternion !== undefined ) { object.quaternion.fromArray( data.quaternion ); }\n\t\t\t\tif ( data.scale !== undefined ) { object.scale.fromArray( data.scale ); }\n\n\t\t\t}\n\n\t\t\tif ( data.castShadow !== undefined ) { object.castShadow = data.castShadow; }\n\t\t\tif ( data.receiveShadow !== undefined ) { object.receiveShadow = data.receiveShadow; }\n\n\t\t\tif ( data.shadow ) {\n\n\t\t\t\tif ( data.shadow.bias !== undefined ) { object.shadow.bias = data.shadow.bias; }\n\t\t\t\tif ( data.shadow.radius !== undefined ) { object.shadow.radius = data.shadow.radius; }\n\t\t\t\tif ( data.shadow.mapSize !== undefined ) { object.shadow.mapSize.fromArray( data.shadow.mapSize ); }\n\t\t\t\tif ( data.shadow.camera !== undefined ) { object.shadow.camera = this.parseObject( data.shadow.camera ); }\n\n\t\t\t}\n\n\t\t\tif ( data.visible !== undefined ) { object.visible = data.visible; }\n\t\t\tif ( data.frustumCulled !== undefined ) { object.frustumCulled = data.frustumCulled; }\n\t\t\tif ( data.renderOrder !== undefined ) { object.renderOrder = data.renderOrder; }\n\t\t\tif ( data.userData !== undefined ) { object.userData = data.userData; }\n\t\t\tif ( data.layers !== undefined ) { object.layers.mask = data.layers; }\n\n\t\t\tif ( data.drawMode !== undefined ) { object.setDrawMode( data.drawMode ); }\n\n\t\t\tif ( data.children !== undefined ) {\n\n\t\t\t\tvar children = data.children;\n\n\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\tobject.add( this.parseObject( children[ i ], geometries, materials ) );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( data.type === 'LOD' ) {\n\n\t\t\t\tif ( data.autoUpdate !== undefined ) { object.autoUpdate = data.autoUpdate; }\n\n\t\t\t\tvar levels = data.levels;\n\n\t\t\t\tfor ( var l = 0; l < levels.length; l ++ ) {\n\n\t\t\t\t\tvar level = levels[ l ];\n\t\t\t\t\tvar child = object.getObjectByProperty( 'uuid', level.object );\n\n\t\t\t\t\tif ( child !== undefined ) {\n\n\t\t\t\t\t\tobject.addLevel( child, level.distance );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn object;\n\n\t\t}\n\n\t} );\n\n\tvar TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tSphericalReflectionMapping: SphericalReflectionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\n\tvar TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\n\tvar TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\t/**\n\t * @author thespite / http://clicktorelease.com/\n\t */\n\n\n\tfunction ImageBitmapLoader( manager ) {\n\n\t\tif ( typeof createImageBitmap === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: createImageBitmap() not supported.' );\n\n\t\t}\n\n\t\tif ( typeof fetch === 'undefined' ) {\n\n\t\t\tconsole.warn( 'THREE.ImageBitmapLoader: fetch() not supported.' );\n\n\t\t}\n\n\t\tLoader.call( this, manager );\n\n\t\tthis.options = undefined;\n\n\t}\n\n\tImageBitmapLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: ImageBitmapLoader,\n\n\t\tsetOptions: function setOptions( options ) {\n\n\t\t\tthis.options = options;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tif ( url === undefined ) { url = ''; }\n\n\t\t\tif ( this.path !== undefined ) { url = this.path + url; }\n\n\t\t\turl = this.manager.resolveURL( url );\n\n\t\t\tvar scope = this;\n\n\t\t\tvar cached = Cache.get( url );\n\n\t\t\tif ( cached !== undefined ) {\n\n\t\t\t\tscope.manager.itemStart( url );\n\n\t\t\t\tsetTimeout( function () {\n\n\t\t\t\t\tif ( onLoad ) { onLoad( cached ); }\n\n\t\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t\t}, 0 );\n\n\t\t\t\treturn cached;\n\n\t\t\t}\n\n\t\t\tfetch( url ).then( function ( res ) {\n\n\t\t\t\treturn res.blob();\n\n\t\t\t} ).then( function ( blob ) {\n\n\t\t\t\tif ( scope.options === undefined ) {\n\n\t\t\t\t\t// Workaround for FireFox. It causes an error if you pass options.\n\t\t\t\t\treturn createImageBitmap( blob );\n\n\t\t\t\t} else {\n\n\t\t\t\t\treturn createImageBitmap( blob, scope.options );\n\n\t\t\t\t}\n\n\t\t\t} ).then( function ( imageBitmap ) {\n\n\t\t\t\tCache.add( url, imageBitmap );\n\n\t\t\t\tif ( onLoad ) { onLoad( imageBitmap ); }\n\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} ).catch( function ( e ) {\n\n\t\t\t\tif ( onError ) { onError( e ); }\n\n\t\t\t\tscope.manager.itemError( url );\n\t\t\t\tscope.manager.itemEnd( url );\n\n\t\t\t} );\n\n\t\t\tscope.manager.itemStart( url );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * minimal class for proxing functions to Path. Replaces old \"extractSubpaths()\"\n\t **/\n\n\tfunction ShapePath() {\n\n\t\tthis.type = 'ShapePath';\n\n\t\tthis.color = new Color();\n\n\t\tthis.subPaths = [];\n\t\tthis.currentPath = null;\n\n\t}\n\n\tObject.assign( ShapePath.prototype, {\n\n\t\tmoveTo: function ( x, y ) {\n\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push( this.currentPath );\n\t\t\tthis.currentPath.moveTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlineTo: function ( x, y ) {\n\n\t\t\tthis.currentPath.lineTo( x, y );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tquadraticCurveTo: function ( aCPx, aCPy, aX, aY ) {\n\n\t\t\tthis.currentPath.quadraticCurveTo( aCPx, aCPy, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tbezierCurveTo: function ( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY ) {\n\n\t\t\tthis.currentPath.bezierCurveTo( aCP1x, aCP1y, aCP2x, aCP2y, aX, aY );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsplineThru: function ( pts ) {\n\n\t\t\tthis.currentPath.splineThru( pts );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoShapes: function ( isCCW, noHoles ) {\n\n\t\t\tfunction toShapesNoHoles( inSubpaths ) {\n\n\t\t\t\tvar shapes = [];\n\n\t\t\t\tfor ( var i = 0, l = inSubpaths.length; i < l; i ++ ) {\n\n\t\t\t\t\tvar tmpPath = inSubpaths[ i ];\n\n\t\t\t\t\tvar tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\n\t\t\t\t\tshapes.push( tmpShape );\n\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon( inPt, inPolygon ) {\n\n\t\t\t\tvar polyLen = inPolygon.length;\n\n\t\t\t\t// inPt on polygon contour => immediate success    or\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//  with the horizontal line through inPt, left of inPt\n\t\t\t\t//  not counting lowerY endpoints of edges and whole edges on that line\n\t\t\t\tvar inside = false;\n\t\t\t\tfor ( var p = polyLen - 1, q = 0; q < polyLen; p = q ++ ) {\n\n\t\t\t\t\tvar edgeLowPt = inPolygon[ p ];\n\t\t\t\t\tvar edgeHighPt = inPolygon[ q ];\n\n\t\t\t\t\tvar edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tvar edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif ( Math.abs( edgeDy ) > Number.EPSILON ) {\n\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif ( edgeDy < 0 ) {\n\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[ q ]; edgeDx = - edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[ p ]; edgeDy = - edgeDy;\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ( inPt.y < edgeLowPt.y ) || ( inPt.y > edgeHighPt.y ) ) \t\t{ continue; }\n\n\t\t\t\t\t\tif ( inPt.y === edgeLowPt.y ) {\n\n\t\t\t\t\t\t\tif ( inPt.x === edgeLowPt.x )\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tvar perpEdge = edgeDy * ( inPt.x - edgeLowPt.x ) - edgeDx * ( inPt.y - edgeLowPt.y );\n\t\t\t\t\t\t\tif ( perpEdge === 0 )\t\t\t\t{ return\ttrue; }\t\t// inPt is on contour ?\n\t\t\t\t\t\t\tif ( perpEdge < 0 ) \t\t\t\t{ continue; }\n\t\t\t\t\t\t\tinside = ! inside;\t\t// true intersection left of inPt\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif ( inPt.y !== edgeLowPt.y ) \t\t{ continue; }\t\t\t// parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\t\t\t\t\t\tif ( ( ( edgeHighPt.x <= inPt.x ) && ( inPt.x <= edgeLowPt.x ) ) ||\n\t\t\t\t\t\t\t ( ( edgeLowPt.x <= inPt.x ) && ( inPt.x <= edgeHighPt.x ) ) )\t\t{ return\ttrue; }\t// inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\treturn\tinside;\n\n\t\t\t}\n\n\t\t\tvar isClockWise = ShapeUtils.isClockWise;\n\n\t\t\tvar subPaths = this.subPaths;\n\t\t\tif ( subPaths.length === 0 ) { return []; }\n\n\t\t\tif ( noHoles === true )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tvar solid, tmpPath, tmpShape, shapes = [];\n\n\t\t\tif ( subPaths.length === 1 ) {\n\n\t\t\t\ttmpPath = subPaths[ 0 ];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\treturn shapes;\n\n\t\t\t}\n\n\t\t\tvar holesFirst = ! isClockWise( subPaths[ 0 ].getPoints() );\n\t\t\tholesFirst = isCCW ? ! holesFirst : holesFirst;\n\n\t\t\t// console.log(\"Holes first\", holesFirst);\n\n\t\t\tvar betterShapeHoles = [];\n\t\t\tvar newShapes = [];\n\t\t\tvar newShapeHoles = [];\n\t\t\tvar mainIdx = 0;\n\t\t\tvar tmpPoints;\n\n\t\t\tnewShapes[ mainIdx ] = undefined;\n\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\tfor ( var i = 0, l = subPaths.length; i < l; i ++ ) {\n\n\t\t\t\ttmpPath = subPaths[ i ];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise( tmpPoints );\n\t\t\t\tsolid = isCCW ? ! solid : solid;\n\n\t\t\t\tif ( solid ) {\n\n\t\t\t\t\tif ( ( ! holesFirst ) && ( newShapes[ mainIdx ] ) )\t{ mainIdx ++; }\n\n\t\t\t\t\tnewShapes[ mainIdx ] = { s: new Shape(), p: tmpPoints };\n\t\t\t\t\tnewShapes[ mainIdx ].s.curves = tmpPath.curves;\n\n\t\t\t\t\tif ( holesFirst )\t{ mainIdx ++; }\n\t\t\t\t\tnewShapeHoles[ mainIdx ] = [];\n\n\t\t\t\t\t//console.log('cw', i);\n\n\t\t\t\t} else {\n\n\t\t\t\t\tnewShapeHoles[ mainIdx ].push( { h: tmpPath, p: tmpPoints[ 0 ] } );\n\n\t\t\t\t\t//console.log('ccw', i);\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// only Holes? -> probably all Shapes with wrong orientation\n\t\t\tif ( ! newShapes[ 0 ] )\t{ return\ttoShapesNoHoles( subPaths ); }\n\n\n\t\t\tif ( newShapes.length > 1 ) {\n\n\t\t\t\tvar ambiguous = false;\n\t\t\t\tvar toChange = [];\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tbetterShapeHoles[ sIdx ] = [];\n\n\t\t\t\t}\n\n\t\t\t\tfor ( var sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx ++ ) {\n\n\t\t\t\t\tvar sho = newShapeHoles[ sIdx ];\n\n\t\t\t\t\tfor ( var hIdx = 0; hIdx < sho.length; hIdx ++ ) {\n\n\t\t\t\t\t\tvar ho = sho[ hIdx ];\n\t\t\t\t\t\tvar hole_unassigned = true;\n\n\t\t\t\t\t\tfor ( var s2Idx = 0; s2Idx < newShapes.length; s2Idx ++ ) {\n\n\t\t\t\t\t\t\tif ( isPointInsidePolygon( ho.p, newShapes[ s2Idx ].p ) ) {\n\n\t\t\t\t\t\t\t\tif ( sIdx !== s2Idx )\t{ toChange.push( { froms: sIdx, tos: s2Idx, hole: hIdx } ); }\n\t\t\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[ s2Idx ].push( ho );\n\n\t\t\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( hole_unassigned ) {\n\n\t\t\t\t\t\t\tbetterShapeHoles[ sIdx ].push( ho );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t\t// console.log(\"ambiguous: \", ambiguous);\n\t\t\t\tif ( toChange.length > 0 ) {\n\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif ( ! ambiguous )\t{ newShapeHoles = betterShapeHoles; }\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar tmpHoles;\n\n\t\t\tfor ( var i = 0, il = newShapes.length; i < il; i ++ ) {\n\n\t\t\t\ttmpShape = newShapes[ i ].s;\n\t\t\t\tshapes.push( tmpShape );\n\t\t\t\ttmpHoles = newShapeHoles[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = tmpHoles.length; j < jl; j ++ ) {\n\n\t\t\t\t\ttmpShape.holes.push( tmpHoles[ j ].h );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t//console.log(\"shape\", shapes);\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author zz85 / http://www.lab4games.net/zz85/blog\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\n\tfunction Font( data ) {\n\n\t\tthis.type = 'Font';\n\n\t\tthis.data = data;\n\n\t}\n\n\tObject.assign( Font.prototype, {\n\n\t\tisFont: true,\n\n\t\tgenerateShapes: function ( text, size ) {\n\n\t\t\tif ( size === undefined ) { size = 100; }\n\n\t\t\tvar shapes = [];\n\t\t\tvar paths = createPaths( text, size, this.data );\n\n\t\t\tfor ( var p = 0, pl = paths.length; p < pl; p ++ ) {\n\n\t\t\t\tArray.prototype.push.apply( shapes, paths[ p ].toShapes() );\n\n\t\t\t}\n\n\t\t\treturn shapes;\n\n\t\t}\n\n\t} );\n\n\tfunction createPaths( text, size, data ) {\n\n\t\tvar chars = Array.from ? Array.from( text ) : String( text ).split( '' ); // see #13988\n\t\tvar scale = size / data.resolution;\n\t\tvar line_height = ( data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness ) * scale;\n\n\t\tvar paths = [];\n\n\t\tvar offsetX = 0, offsetY = 0;\n\n\t\tfor ( var i = 0; i < chars.length; i ++ ) {\n\n\t\t\tvar char = chars[ i ];\n\n\t\t\tif ( char === '\\n' ) {\n\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\n\t\t\t} else {\n\n\t\t\t\tvar ret = createPath( char, scale, offsetX, offsetY, data );\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push( ret.path );\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn paths;\n\n\t}\n\n\tfunction createPath( char, scale, offsetX, offsetY, data ) {\n\n\t\tvar glyph = data.glyphs[ char ] || data.glyphs[ '?' ];\n\n\t\tif ( ! glyph ) {\n\n\t\t\tconsole.error( 'THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.' );\n\n\t\t\treturn;\n\n\t\t}\n\n\t\tvar path = new ShapePath();\n\n\t\tvar x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif ( glyph.o ) {\n\n\t\t\tvar outline = glyph._cachedOutline || ( glyph._cachedOutline = glyph.o.split( ' ' ) );\n\n\t\t\tfor ( var i = 0, l = outline.length; i < l; ) {\n\n\t\t\t\tvar action = outline[ i ++ ];\n\n\t\t\t\tswitch ( action ) {\n\n\t\t\t\t\tcase 'm': // moveTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.moveTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l': // lineTo\n\n\t\t\t\t\t\tx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\ty = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.lineTo( x, y );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q': // quadraticCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.quadraticCurveTo( cpx1, cpy1, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b': // bezierCurveTo\n\n\t\t\t\t\t\tcpx = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[ i ++ ] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[ i ++ ] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[ i ++ ] * scale + offsetY;\n\n\t\t\t\t\t\tpath.bezierCurveTo( cpx1, cpy1, cpx2, cpy2, cpx, cpy );\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t}\n\n\t\treturn { offsetX: glyph.ha * scale, path: path };\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction FontLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tFontLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: FontLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar scope = this;\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( text ) {\n\n\t\t\t\tvar json;\n\n\t\t\t\ttry {\n\n\t\t\t\t\tjson = JSON.parse( text );\n\n\t\t\t\t} catch ( e ) {\n\n\t\t\t\t\tconsole.warn( 'THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.' );\n\t\t\t\t\tjson = JSON.parse( text.substring( 65, text.length - 2 ) );\n\n\t\t\t\t}\n\n\t\t\t\tvar font = scope.parse( json );\n\n\t\t\t\tif ( onLoad ) { onLoad( font ); }\n\n\t\t\t}, onProgress, onError );\n\n\t\t},\n\n\t\tparse: function ( json ) {\n\n\t\t\treturn new Font( json );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _context;\n\n\tvar AudioContext = {\n\n\t\tgetContext: function () {\n\n\t\t\tif ( _context === undefined ) {\n\n\t\t\t\t_context = new ( window.AudioContext || window.webkitAudioContext )();\n\n\t\t\t}\n\n\t\t\treturn _context;\n\n\t\t},\n\n\t\tsetContext: function ( value ) {\n\n\t\t\t_context = value;\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction AudioLoader( manager ) {\n\n\t\tLoader.call( this, manager );\n\n\t}\n\n\tAudioLoader.prototype = Object.assign( Object.create( Loader.prototype ), {\n\n\t\tconstructor: AudioLoader,\n\n\t\tload: function ( url, onLoad, onProgress, onError ) {\n\n\t\t\tvar loader = new FileLoader( this.manager );\n\t\t\tloader.setResponseType( 'arraybuffer' );\n\t\t\tloader.setPath( this.path );\n\t\t\tloader.load( url, function ( buffer ) {\n\n\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\tvar bufferCopy = buffer.slice( 0 );\n\n\t\t\t\tvar context = AudioContext.getContext();\n\t\t\t\tcontext.decodeAudioData( bufferCopy, function ( audioBuffer ) {\n\n\t\t\t\t\tonLoad( audioBuffer );\n\n\t\t\t\t} );\n\n\t\t\t}, onProgress, onError );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Primary reference:\n\t *   https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *   https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\n\t// 3-band SH defined by 9 coefficients\n\n\tfunction SphericalHarmonics3() {\n\n\t\tthis.coefficients = [];\n\n\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\tthis.coefficients.push( new Vector3() );\n\n\t\t}\n\n\t}\n\n\tObject.assign( SphericalHarmonics3.prototype, {\n\n\t\tisSphericalHarmonics3: true,\n\n\t\tset: function ( coefficients ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].copy( coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tzero: function () {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].set( 0, 0, 0 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\t\tgetAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.282095 );\n\n\t\t\t// band 1\n\t\t\ttarget.addScale( coeff[ 1 ], 0.488603 * y );\n\t\t\ttarget.addScale( coeff[ 2 ], 0.488603 * z );\n\t\t\ttarget.addScale( coeff[ 3 ], 0.488603 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScale( coeff[ 4 ], 1.092548 * ( x * y ) );\n\t\t\ttarget.addScale( coeff[ 5 ], 1.092548 * ( y * z ) );\n\t\t\ttarget.addScale( coeff[ 6 ], 0.315392 * ( 3.0 * z * z - 1.0 ) );\n\t\t\ttarget.addScale( coeff[ 7 ], 1.092548 * ( x * z ) );\n\t\t\ttarget.addScale( coeff[ 8 ], 0.546274 * ( x * x - y * y ) );\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\t// get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t\tgetIrradianceAt: function ( normal, target ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\tvar coeff = this.coefficients;\n\n\t\t\t// band 0\n\t\t\ttarget.copy( coeff[ 0 ] ).multiplyScalar( 0.886227 ); // π * 0.282095\n\n\t\t\t// band 1\n\t\t\ttarget.addScale( coeff[ 1 ], 2.0 * 0.511664 * y ); // ( 2 * π / 3 ) * 0.488603\n\t\t\ttarget.addScale( coeff[ 2 ], 2.0 * 0.511664 * z );\n\t\t\ttarget.addScale( coeff[ 3 ], 2.0 * 0.511664 * x );\n\n\t\t\t// band 2\n\t\t\ttarget.addScale( coeff[ 4 ], 2.0 * 0.429043 * x * y ); // ( π / 4 ) * 1.092548\n\t\t\ttarget.addScale( coeff[ 5 ], 2.0 * 0.429043 * y * z );\n\t\t\ttarget.addScale( coeff[ 6 ], 0.743125 * z * z - 0.247708 ); // ( π / 4 ) * 0.315392 * 3\n\t\t\ttarget.addScale( coeff[ 7 ], 2.0 * 0.429043 * x * z );\n\t\t\ttarget.addScale( coeff[ 8 ], 0.429043 * ( x * x - y * y ) ); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\n\t\t},\n\n\t\tadd: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].add( sh.coefficients[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\n\t\tscale: function ( s ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].multiplyScalar( s );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tlerp: function ( sh, alpha ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tthis.coefficients[ i ].lerp( sh.coefficients[ i ], alpha );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( sh ) {\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tif ( ! this.coefficients[ i ].equals( sh.coefficients[ i ] ) ) {\n\n\t\t\t\t\treturn false;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn true;\n\n\t\t},\n\n\t\tcopy: function ( sh ) {\n\n\t\t\treturn this.set( sh.coefficients );\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tfromArray: function ( array, offset ) {\n\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].fromArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoArray: function ( array, offset ) {\n\n\t\t\tif ( array === undefined ) { array = []; }\n\t\t\tif ( offset === undefined ) { offset = 0; }\n\n\t\t\tvar coefficients = this.coefficients;\n\n\t\t\tfor ( var i = 0; i < 9; i ++ ) {\n\n\t\t\t\tcoefficients[ i ].toArray( array, offset + ( i * 3 ) );\n\n\t\t\t}\n\n\t\t\treturn array;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( SphericalHarmonics3, {\n\n\t\t// evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\t\tgetBasisAt: function ( normal, shBasis ) {\n\n\t\t\t// normal is assumed to be unit length\n\n\t\t\tvar x = normal.x, y = normal.y, z = normal.z;\n\n\t\t\t// band 0\n\t\t\tshBasis[ 0 ] = 0.282095;\n\n\t\t\t// band 1\n\t\t\tshBasis[ 1 ] = 0.488603 * y;\n\t\t\tshBasis[ 2 ] = 0.488603 * z;\n\t\t\tshBasis[ 3 ] = 0.488603 * x;\n\n\t\t\t// band 2\n\t\t\tshBasis[ 4 ] = 1.092548 * x * y;\n\t\t\tshBasis[ 5 ] = 1.092548 * y * z;\n\t\t\tshBasis[ 6 ] = 0.315392 * ( 3 * z * z - 1 );\n\t\t\tshBasis[ 7 ] = 1.092548 * x * z;\n\t\t\tshBasis[ 8 ] = 0.546274 * ( x * x - y * y );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * A LightProbe is a source of indirect-diffuse light\n\t */\n\n\tfunction LightProbe( sh, intensity ) {\n\n\t\tLight.call( this, undefined, intensity );\n\n\t\tthis.sh = ( sh !== undefined ) ? sh : new SphericalHarmonics3();\n\n\t}\n\n\tLightProbe.prototype = Object.assign( Object.create( Light.prototype ), {\n\n\t\tconstructor: LightProbe,\n\n\t\tisLightProbe: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLight.prototype.copy.call( this, source );\n\n\t\t\tthis.sh.copy( source.sh );\n\t\t\tthis.intensity = source.intensity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = Light.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction HemisphereLightProbe( skyColor, groundColor, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( skyColor );\n\t\tvar color2 = new Color().set( groundColor );\n\n\t\tvar sky = new Vector3( color1.r, color1.g, color1.b );\n\t\tvar ground = new Vector3( color2.r, color2.g, color2.b );\n\n\t\t// without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\t\tvar c0 = Math.sqrt( Math.PI );\n\t\tvar c1 = c0 * Math.sqrt( 0.75 );\n\n\t\tthis.sh.coefficients[ 0 ].copy( sky ).add( ground ).multiplyScalar( c0 );\n\t\tthis.sh.coefficients[ 1 ].copy( sky ).sub( ground ).multiplyScalar( c1 );\n\n\t}\n\n\tHemisphereLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: HemisphereLightProbe,\n\n\t\tisHemisphereLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying colors not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction AmbientLightProbe( color, intensity ) {\n\n\t\tLightProbe.call( this, undefined, intensity );\n\n\t\tvar color1 = new Color().set( color );\n\n\t\t// without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\t\tthis.sh.coefficients[ 0 ].set( color1.r, color1.g, color1.b ).multiplyScalar( 2 * Math.sqrt( Math.PI ) );\n\n\t}\n\n\tAmbientLightProbe.prototype = Object.assign( Object.create( LightProbe.prototype ), {\n\n\t\tconstructor: AmbientLightProbe,\n\n\t\tisAmbientLightProbe: true,\n\n\t\tcopy: function ( source ) { // modifying color not currently supported\n\n\t\t\tLightProbe.prototype.copy.call( this, source );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttoJSON: function ( meta ) {\n\n\t\t\tvar data = LightProbe.prototype.toJSON.call( this, meta );\n\n\t\t\t// data.sh = this.sh.toArray(); // todo\n\n\t\t\treturn data;\n\n\t\t}\n\n\t} );\n\n\tvar _eyeRight = new Matrix4();\n\tvar _eyeLeft = new Matrix4();\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction StereoCamera() {\n\n\t\tthis.type = 'StereoCamera';\n\n\t\tthis.aspect = 1;\n\n\t\tthis.eyeSep = 0.064;\n\n\t\tthis.cameraL = new PerspectiveCamera();\n\t\tthis.cameraL.layers.enable( 1 );\n\t\tthis.cameraL.matrixAutoUpdate = false;\n\n\t\tthis.cameraR = new PerspectiveCamera();\n\t\tthis.cameraR.layers.enable( 2 );\n\t\tthis.cameraR.matrixAutoUpdate = false;\n\n\t\tthis._cache = {\n\t\t\tfocus: null,\n\t\t\tfov: null,\n\t\t\taspect: null,\n\t\t\tnear: null,\n\t\t\tfar: null,\n\t\t\tzoom: null,\n\t\t\teyeSep: null\n\t\t};\n\n\t}\n\n\tObject.assign( StereoCamera.prototype, {\n\n\t\tupdate: function ( camera ) {\n\n\t\t\tvar cache = this._cache;\n\n\t\t\tvar needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov ||\n\t\t\t\tcache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near ||\n\t\t\t\tcache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif ( needsUpdate ) {\n\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep;\n\n\t\t\t\t// Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tvar projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tvar eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tvar eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tvar ymax = ( cache.near * Math.tan( _Math.DEG2RAD * cache.fov * 0.5 ) ) / cache.zoom;\n\t\t\t\tvar xmin, xmax;\n\n\t\t\t\t// translate xOffset\n\n\t\t\t\t_eyeLeft.elements[ 12 ] = - eyeSepHalf;\n\t\t\t\t_eyeRight.elements[ 12 ] = eyeSepHalf;\n\n\t\t\t\t// for left eye\n\n\t\t\t\txmin = - ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraL.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t\t// for right eye\n\n\t\t\t\txmin = - ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\n\t\t\t\tprojectionMatrix.elements[ 0 ] = 2 * cache.near / ( xmax - xmin );\n\t\t\t\tprojectionMatrix.elements[ 8 ] = ( xmax + xmin ) / ( xmax - xmin );\n\n\t\t\t\tthis.cameraR.projectionMatrix.copy( projectionMatrix );\n\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeLeft );\n\t\t\tthis.cameraR.matrixWorld.copy( camera.matrixWorld ).multiply( _eyeRight );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction Clock( autoStart ) {\n\n\t\tthis.autoStart = ( autoStart !== undefined ) ? autoStart : true;\n\n\t\tthis.startTime = 0;\n\t\tthis.oldTime = 0;\n\t\tthis.elapsedTime = 0;\n\n\t\tthis.running = false;\n\n\t}\n\n\tObject.assign( Clock.prototype, {\n\n\t\tstart: function () {\n\n\t\t\tthis.startTime = ( typeof performance === 'undefined' ? Date : performance ).now(); // see #10732\n\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\n\t\t},\n\n\t\tgetElapsedTime: function () {\n\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\n\t\t},\n\n\t\tgetDelta: function () {\n\n\t\t\tvar diff = 0;\n\n\t\t\tif ( this.autoStart && ! this.running ) {\n\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\n\t\t\t}\n\n\t\t\tif ( this.running ) {\n\n\t\t\t\tvar newTime = ( typeof performance === 'undefined' ? Date : performance ).now();\n\n\t\t\t\tdiff = ( newTime - this.oldTime ) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\n\t\t\t\tthis.elapsedTime += diff;\n\n\t\t\t}\n\n\t\t\treturn diff;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$2 = new Vector3();\n\tvar _quaternion$3 = new Quaternion();\n\tvar _scale$1 = new Vector3();\n\tvar _orientation = new Vector3();\n\n\tfunction AudioListener() {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'AudioListener';\n\n\t\tthis.context = AudioContext.getContext();\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( this.context.destination );\n\n\t\tthis.filter = null;\n\n\t\tthis.timeDelta = 0;\n\n\t\t// private\n\n\t\tthis._clock = new Clock();\n\n\t}\n\n\tAudioListener.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: AudioListener,\n\n\t\tgetInput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tremoveFilter: function ( ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\t\t\t\tthis.gain.connect( this.context.destination );\n\t\t\t\tthis.filter = null;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.filter;\n\n\t\t},\n\n\t\tsetFilter: function ( value ) {\n\n\t\t\tif ( this.filter !== null ) {\n\n\t\t\t\tthis.gain.disconnect( this.filter );\n\t\t\t\tthis.filter.disconnect( this.context.destination );\n\n\t\t\t} else {\n\n\t\t\t\tthis.gain.disconnect( this.context.destination );\n\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect( this.filter );\n\t\t\tthis.filter.connect( this.context.destination );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMasterVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetMasterVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tvar listener = this.context.listener;\n\t\t\tvar up = this.up;\n\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\n\t\t\tthis.matrixWorld.decompose( _position$2, _quaternion$3, _scale$1 );\n\n\t\t\t_orientation.set( 0, 0, - 1 ).applyQuaternion( _quaternion$3 );\n\n\t\t\tif ( listener.positionX ) {\n\n\t\t\t\t// code path for Chrome (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.timeDelta;\n\n\t\t\t\tlistener.positionX.linearRampToValueAtTime( _position$2.x, endTime );\n\t\t\t\tlistener.positionY.linearRampToValueAtTime( _position$2.y, endTime );\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime( _position$2.z, endTime );\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime( _orientation.x, endTime );\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime( _orientation.y, endTime );\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime( _orientation.z, endTime );\n\t\t\t\tlistener.upX.linearRampToValueAtTime( up.x, endTime );\n\t\t\t\tlistener.upY.linearRampToValueAtTime( up.y, endTime );\n\t\t\t\tlistener.upZ.linearRampToValueAtTime( up.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tlistener.setPosition( _position$2.x, _position$2.y, _position$2.z );\n\t\t\t\tlistener.setOrientation( _orientation.x, _orientation.y, _orientation.z, up.x, up.y, up.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Reece Aaron Lecrivain / http://reecenotes.com/\n\t */\n\n\tfunction Audio( listener ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.type = 'Audio';\n\n\t\tthis.listener = listener;\n\t\tthis.context = listener.context;\n\n\t\tthis.gain = this.context.createGain();\n\t\tthis.gain.connect( listener.getInput() );\n\n\t\tthis.autoplay = false;\n\n\t\tthis.buffer = null;\n\t\tthis.detune = 0;\n\t\tthis.loop = false;\n\t\tthis.loopStart = 0;\n\t\tthis.loopEnd = 0;\n\t\tthis.offset = 0;\n\t\tthis.duration = undefined;\n\t\tthis.playbackRate = 1;\n\t\tthis.isPlaying = false;\n\t\tthis.hasPlaybackControl = true;\n\t\tthis.sourceType = 'empty';\n\n\t\tthis._startedAt = 0;\n\t\tthis._pausedAt = 0;\n\n\t\tthis.filters = [];\n\n\t}\n\n\tAudio.prototype = Object.assign( Object.create( Object3D.prototype ), {\n\n\t\tconstructor: Audio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.gain;\n\n\t\t},\n\n\t\tsetNodeSource: function ( audioNode ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaElementSource: function ( mediaElement ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource( mediaElement );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetMediaStreamSource: function ( mediaStream ) {\n\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource( mediaStream );\n\t\t\tthis.connect();\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetBuffer: function ( audioBuffer ) {\n\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\n\t\t\tif ( this.autoplay ) { this.play(); }\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tplay: function ( delay ) {\n\n\t\t\tif ( delay === undefined ) { delay = 0; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: Audio is already playing.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\n\t\t\tvar source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind( this );\n\t\t\tsource.start( this._startedAt, this._pausedAt + this.offset, this.duration );\n\n\t\t\tthis.isPlaying = true;\n\n\t\t\tthis.source = source;\n\n\t\t\tthis.setDetune( this.detune );\n\t\t\tthis.setPlaybackRate( this.playbackRate );\n\n\t\t\treturn this.connect();\n\n\t\t},\n\n\t\tpause: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis._pausedAt = ( this.context.currentTime - this._startedAt ) * this.playbackRate;\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\n\t\t\t\tthis.isPlaying = false;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis._pausedAt = 0;\n\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.connect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].connect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].connect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.connect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tdisconnect: function () {\n\n\t\t\tif ( this.filters.length > 0 ) {\n\n\t\t\t\tthis.source.disconnect( this.filters[ 0 ] );\n\n\t\t\t\tfor ( var i = 1, l = this.filters.length; i < l; i ++ ) {\n\n\t\t\t\t\tthis.filters[ i - 1 ].disconnect( this.filters[ i ] );\n\n\t\t\t\t}\n\n\t\t\t\tthis.filters[ this.filters.length - 1 ].disconnect( this.getOutput() );\n\n\t\t\t} else {\n\n\t\t\t\tthis.source.disconnect( this.getOutput() );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetFilters: function () {\n\n\t\t\treturn this.filters;\n\n\t\t},\n\n\t\tsetFilters: function ( value ) {\n\n\t\t\tif ( ! value ) { value = []; }\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value;\n\t\t\t\tthis.connect();\n\n\t\t\t} else {\n\n\t\t\t\tthis.filters = value;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDetune: function ( value ) {\n\n\t\t\tthis.detune = value;\n\n\t\t\tif ( this.source.detune === undefined ) { return; } // only set detune when available\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.detune.setTargetAtTime( this.detune, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDetune: function () {\n\n\t\t\treturn this.detune;\n\n\t\t},\n\n\t\tgetFilter: function () {\n\n\t\t\treturn this.getFilters()[ 0 ];\n\n\t\t},\n\n\t\tsetFilter: function ( filter ) {\n\n\t\t\treturn this.setFilters( filter ? [ filter ] : [] );\n\n\t\t},\n\n\t\tsetPlaybackRate: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.playbackRate.setTargetAtTime( this.playbackRate, this.context.currentTime, 0.01 );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetPlaybackRate: function () {\n\n\t\t\treturn this.playbackRate;\n\n\t\t},\n\n\t\tonEnded: function () {\n\n\t\t\tthis.isPlaying = false;\n\n\t\t},\n\n\t\tgetLoop: function () {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn false;\n\n\t\t\t}\n\n\t\t\treturn this.loop;\n\n\t\t},\n\n\t\tsetLoop: function ( value ) {\n\n\t\t\tif ( this.hasPlaybackControl === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: this Audio has no playback control.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif ( this.isPlaying === true ) {\n\n\t\t\t\tthis.source.loop = this.loop;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopStart: function ( value ) {\n\n\t\t\tthis.loopStart = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoopEnd: function ( value ) {\n\n\t\t\tthis.loopEnd = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetVolume: function () {\n\n\t\t\treturn this.gain.gain.value;\n\n\t\t},\n\n\t\tsetVolume: function ( value ) {\n\n\t\t\tthis.gain.gain.setTargetAtTime( value, this.context.currentTime, 0.01 );\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tvar _position$3 = new Vector3();\n\tvar _quaternion$4 = new Quaternion();\n\tvar _scale$2 = new Vector3();\n\tvar _orientation$1 = new Vector3();\n\n\tfunction PositionalAudio( listener ) {\n\n\t\tAudio.call( this, listener );\n\n\t\tthis.panner = this.context.createPanner();\n\t\tthis.panner.panningModel = 'HRTF';\n\t\tthis.panner.connect( this.gain );\n\n\t}\n\n\tPositionalAudio.prototype = Object.assign( Object.create( Audio.prototype ), {\n\n\t\tconstructor: PositionalAudio,\n\n\t\tgetOutput: function () {\n\n\t\t\treturn this.panner;\n\n\t\t},\n\n\t\tgetRefDistance: function () {\n\n\t\t\treturn this.panner.refDistance;\n\n\t\t},\n\n\t\tsetRefDistance: function ( value ) {\n\n\t\t\tthis.panner.refDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetRolloffFactor: function () {\n\n\t\t\treturn this.panner.rolloffFactor;\n\n\t\t},\n\n\t\tsetRolloffFactor: function ( value ) {\n\n\t\t\tthis.panner.rolloffFactor = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetDistanceModel: function () {\n\n\t\t\treturn this.panner.distanceModel;\n\n\t\t},\n\n\t\tsetDistanceModel: function ( value ) {\n\n\t\t\tthis.panner.distanceModel = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetMaxDistance: function () {\n\n\t\t\treturn this.panner.maxDistance;\n\n\t\t},\n\n\t\tsetMaxDistance: function ( value ) {\n\n\t\t\tthis.panner.maxDistance = value;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetDirectionalCone: function ( coneInnerAngle, coneOuterAngle, coneOuterGain ) {\n\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tupdateMatrixWorld: function ( force ) {\n\n\t\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t\t\tif ( this.hasPlaybackControl === true && this.isPlaying === false ) { return; }\n\n\t\t\tthis.matrixWorld.decompose( _position$3, _quaternion$4, _scale$2 );\n\n\t\t\t_orientation$1.set( 0, 0, 1 ).applyQuaternion( _quaternion$4 );\n\n\t\t\tvar panner = this.panner;\n\n\t\t\tif ( panner.positionX ) {\n\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\n\t\t\t\tvar endTime = this.context.currentTime + this.listener.timeDelta;\n\n\t\t\t\tpanner.positionX.linearRampToValueAtTime( _position$3.x, endTime );\n\t\t\t\tpanner.positionY.linearRampToValueAtTime( _position$3.y, endTime );\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime( _position$3.z, endTime );\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime( _orientation$1.x, endTime );\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime( _orientation$1.y, endTime );\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime( _orientation$1.z, endTime );\n\n\t\t\t} else {\n\n\t\t\t\tpanner.setPosition( _position$3.x, _position$3.y, _position$3.z );\n\t\t\t\tpanner.setOrientation( _orientation$1.x, _orientation$1.y, _orientation$1.z );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AudioAnalyser( audio, fftSize ) {\n\n\t\tthis.analyser = audio.context.createAnalyser();\n\t\tthis.analyser.fftSize = fftSize !== undefined ? fftSize : 2048;\n\n\t\tthis.data = new Uint8Array( this.analyser.frequencyBinCount );\n\n\t\taudio.getOutput().connect( this.analyser );\n\n\t}\n\n\tObject.assign( AudioAnalyser.prototype, {\n\n\t\tgetFrequencyData: function () {\n\n\t\t\tthis.analyser.getByteFrequencyData( this.data );\n\n\t\t\treturn this.data;\n\n\t\t},\n\n\t\tgetAverageFrequency: function () {\n\n\t\t\tvar value = 0, data = this.getFrequencyData();\n\n\t\t\tfor ( var i = 0; i < data.length; i ++ ) {\n\n\t\t\t\tvalue += data[ i ];\n\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Buffered scene graph property that allows weighted accumulation.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction PropertyMixer( binding, typeName, valueSize ) {\n\n\t\tthis.binding = binding;\n\t\tthis.valueSize = valueSize;\n\n\t\tvar bufferType = Float64Array,\n\t\t\tmixFunction;\n\n\t\tswitch ( typeName ) {\n\n\t\t\tcase 'quaternion':\n\t\t\t\tmixFunction = this._slerp;\n\t\t\t\tbreak;\n\n\t\t\tcase 'string':\n\t\t\tcase 'bool':\n\t\t\t\tbufferType = Array;\n\t\t\t\tmixFunction = this._select;\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tmixFunction = this._lerp;\n\n\t\t}\n\n\t\tthis.buffer = new bufferType( valueSize * 4 );\n\t\t// layout: [ incoming | accu0 | accu1 | orig ]\n\t\t//\n\t\t// interpolators can use .buffer as their .result\n\t\t// the data then goes to 'incoming'\n\t\t//\n\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t// the cumulative result and are compared to detect\n\t\t// changes\n\t\t//\n\t\t// 'orig' stores the original state of the property\n\n\t\tthis._mixBufferRegion = mixFunction;\n\n\t\tthis.cumulativeWeight = 0;\n\n\t\tthis.useCount = 0;\n\t\tthis.referenceCount = 0;\n\n\t}\n\n\tObject.assign( PropertyMixer.prototype, {\n\n\t\t// accumulate data in the 'incoming' region into 'accu<i>'\n\t\taccumulate: function ( accuIndex, weight ) {\n\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tcurrentWeight = this.cumulativeWeight;\n\n\t\t\tif ( currentWeight === 0 ) {\n\n\t\t\t\t// accuN := incoming * weight\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset + i ] = buffer[ i ];\n\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\n\t\t\t} else {\n\n\t\t\t\t// accuN := accuN + incoming * weight\n\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tvar mix = weight / currentWeight;\n\t\t\t\tthis._mixBufferRegion( buffer, offset, 0, mix, stride );\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\n\t\t},\n\n\t\t// apply the state of 'accu<i>' to the binding when accus differ\n\t\tapply: function ( accuIndex ) {\n\n\t\t\tvar stride = this.valueSize,\n\t\t\t\tbuffer = this.buffer,\n\t\t\t\toffset = accuIndex * stride + stride,\n\n\t\t\t\tweight = this.cumulativeWeight,\n\n\t\t\t\tbinding = this.binding;\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t\tif ( weight < 1 ) {\n\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\n\t\t\t\tvar originalValueOffset = stride * 3;\n\n\t\t\t\tthis._mixBufferRegion(\n\t\t\t\t\tbuffer, offset, originalValueOffset, 1 - weight, stride );\n\n\t\t\t}\n\n\t\t\tfor ( var i = stride, e = stride + stride; i !== e; ++ i ) {\n\n\t\t\t\tif ( buffer[ i ] !== buffer[ i + stride ] ) {\n\n\t\t\t\t\t// value has changed -> update scene graph\n\n\t\t\t\t\tbinding.setValue( buffer, offset );\n\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remember the state of the bound property and copy it to both accus\n\t\tsaveOriginalState: function () {\n\n\t\t\tvar binding = this.binding;\n\n\t\t\tvar buffer = this.buffer,\n\t\t\t\tstride = this.valueSize,\n\n\t\t\t\toriginalValueOffset = stride * 3;\n\n\t\t\tbinding.getValue( buffer, originalValueOffset );\n\n\t\t\t// accu[0..1] := orig -- initially detect changes against the original\n\t\t\tfor ( var i = stride, e = originalValueOffset; i !== e; ++ i ) {\n\n\t\t\t\tbuffer[ i ] = buffer[ originalValueOffset + ( i % stride ) ];\n\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = 0;\n\n\t\t},\n\n\t\t// apply the state previously taken via 'saveOriginalState' to the binding\n\t\trestoreOriginalState: function () {\n\n\t\t\tvar originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue( this.buffer, originalValueOffset );\n\n\t\t},\n\n\n\t\t// mix functions\n\n\t\t_select: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tif ( t >= 0.5 ) {\n\n\t\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\t\tbuffer[ dstOffset + i ] = buffer[ srcOffset + i ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_slerp: function ( buffer, dstOffset, srcOffset, t ) {\n\n\t\t\tQuaternion.slerpFlat( buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t );\n\n\t\t},\n\n\t\t_lerp: function ( buffer, dstOffset, srcOffset, t, stride ) {\n\n\t\t\tvar s = 1 - t;\n\n\t\t\tfor ( var i = 0; i !== stride; ++ i ) {\n\n\t\t\t\tvar j = dstOffset + i;\n\n\t\t\t\tbuffer[ j ] = buffer[ j ] * s + buffer[ srcOffset + i ] * t;\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * A reference to a real property in the scene graph.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tvar _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\tvar _reservedRe = new RegExp( '[' + _RESERVED_CHARS_RE + ']', 'g' );\n\n\t// Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\tvar _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\tvar _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace( '\\\\.', '' ) + ']';\n\n\t// Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\tvar _directoryRe = /((?:WC+[\\/:])*)/.source.replace( 'WC', _wordChar );\n\n\t// Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\tvar _nodeRe = /(WCOD+)?/.source.replace( 'WCOD', _wordCharOrDot );\n\n\t// Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\tvar _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace( 'WC', _wordChar );\n\n\t// Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\tvar _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace( 'WC', _wordChar );\n\n\tvar _trackRe = new RegExp( ''\n\t\t+ '^'\n\t\t+ _directoryRe\n\t\t+ _nodeRe\n\t\t+ _objectRe\n\t\t+ _propertyRe\n\t\t+ '$'\n\t);\n\n\tvar _supportedObjectNames = [ 'material', 'materials', 'bones' ];\n\n\tfunction Composite( targetGroup, path, optionalParsedPath ) {\n\n\t\tvar parsedPath = optionalParsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis._targetGroup = targetGroup;\n\t\tthis._bindings = targetGroup.subscribe_( path, parsedPath );\n\n\t}\n\n\tObject.assign( Composite.prototype, {\n\n\t\tgetValue: function ( array, offset ) {\n\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tvar firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\tbinding = this._bindings[ firstValidIndex ];\n\n\t\t\t// and only call .getValue on the first\n\t\t\tif ( binding !== undefined ) { binding.getValue( array, offset ); }\n\n\t\t},\n\n\t\tsetValue: function ( array, offset ) {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].setValue( array, offset );\n\n\t\t\t}\n\n\t\t},\n\n\t\tbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].bind();\n\n\t\t\t}\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tvar bindings = this._bindings;\n\n\t\t\tfor ( var i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tbindings[ i ].unbind();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\n\tfunction PropertyBinding( rootNode, path, parsedPath ) {\n\n\t\tthis.path = path;\n\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName( path );\n\n\t\tthis.node = PropertyBinding.findNode( rootNode, this.parsedPath.nodeName ) || rootNode;\n\n\t\tthis.rootNode = rootNode;\n\n\t}\n\n\tObject.assign( PropertyBinding, {\n\n\t\tComposite: Composite,\n\n\t\tcreate: function ( root, path, parsedPath ) {\n\n\t\t\tif ( ! ( root && root.isAnimationObjectGroup ) ) {\n\n\t\t\t\treturn new PropertyBinding( root, path, parsedPath );\n\n\t\t\t} else {\n\n\t\t\t\treturn new PropertyBinding.Composite( root, path, parsedPath );\n\n\t\t\t}\n\n\t\t},\n\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\t\tsanitizeNodeName: function ( name ) {\n\n\t\t\treturn name.replace( /\\s/g, '_' ).replace( _reservedRe, '' );\n\n\t\t},\n\n\t\tparseTrackName: function ( trackName ) {\n\n\t\t\tvar matches = _trackRe.exec( trackName );\n\n\t\t\tif ( ! matches ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: Cannot parse trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\tvar results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[ 2 ],\n\t\t\t\tobjectName: matches[ 3 ],\n\t\t\t\tobjectIndex: matches[ 4 ],\n\t\t\t\tpropertyName: matches[ 5 ], // required\n\t\t\t\tpropertyIndex: matches[ 6 ]\n\t\t\t};\n\n\t\t\tvar lastDot = results.nodeName && results.nodeName.lastIndexOf( '.' );\n\n\t\t\tif ( lastDot !== undefined && lastDot !== - 1 ) {\n\n\t\t\t\tvar objectName = results.nodeName.substring( lastDot + 1 );\n\n\t\t\t\t// Object names must be checked against a whitelist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\t\t\t\tif ( _supportedObjectNames.indexOf( objectName ) !== - 1 ) {\n\n\t\t\t\t\tresults.nodeName = results.nodeName.substring( 0, lastDot );\n\t\t\t\t\tresults.objectName = objectName;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tif ( results.propertyName === null || results.propertyName.length === 0 ) {\n\n\t\t\t\tthrow new Error( 'PropertyBinding: can not parse propertyName from trackName: ' + trackName );\n\n\t\t\t}\n\n\t\t\treturn results;\n\n\t\t},\n\n\t\tfindNode: function ( root, nodeName ) {\n\n\t\t\tif ( ! nodeName || nodeName === \"\" || nodeName === \"root\" || nodeName === \".\" || nodeName === - 1 || nodeName === root.name || nodeName === root.uuid ) {\n\n\t\t\t\treturn root;\n\n\t\t\t}\n\n\t\t\t// search into skeleton bones.\n\t\t\tif ( root.skeleton ) {\n\n\t\t\t\tvar bone = root.skeleton.getBoneByName( nodeName );\n\n\t\t\t\tif ( bone !== undefined ) {\n\n\t\t\t\t\treturn bone;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// search into node subtree.\n\t\t\tif ( root.children ) {\n\n\t\t\t\tvar searchNodeSubtree = function ( children ) {\n\n\t\t\t\t\tfor ( var i = 0; i < children.length; i ++ ) {\n\n\t\t\t\t\t\tvar childNode = children[ i ];\n\n\t\t\t\t\t\tif ( childNode.name === nodeName || childNode.uuid === nodeName ) {\n\n\t\t\t\t\t\t\treturn childNode;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tvar result = searchNodeSubtree( childNode.children );\n\n\t\t\t\t\t\tif ( result ) { return result; }\n\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\n\t\t\t\t};\n\n\t\t\t\tvar subTreeNode = searchNodeSubtree( root.children );\n\n\t\t\t\tif ( subTreeNode ) {\n\n\t\t\t\t\treturn subTreeNode;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t}\n\n\t} );\n\n\tObject.assign( PropertyBinding.prototype, { // prototype, continued\n\n\t\t// these are used to \"bind\" a nonexistent property\n\t\t_getValue_unavailable: function () {},\n\t\t_setValue_unavailable: function () {},\n\n\t\tBindingType: {\n\t\t\tDirect: 0,\n\t\t\tEntireArray: 1,\n\t\t\tArrayElement: 2,\n\t\t\tHasFromToArray: 3\n\t\t},\n\n\t\tVersioning: {\n\t\t\tNone: 0,\n\t\t\tNeedsUpdate: 1,\n\t\t\tMatrixWorldNeedsUpdate: 2\n\t\t},\n\n\t\tGetterByBindingType: [\n\n\t\t\tfunction getValue_direct( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.node[ this.propertyName ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_array( buffer, offset ) {\n\n\t\t\t\tvar source = this.resolvedProperty;\n\n\t\t\t\tfor ( var i = 0, n = source.length; i !== n; ++ i ) {\n\n\t\t\t\t\tbuffer[ offset ++ ] = source[ i ];\n\n\t\t\t\t}\n\n\t\t\t},\n\n\t\t\tfunction getValue_arrayElement( buffer, offset ) {\n\n\t\t\t\tbuffer[ offset ] = this.resolvedProperty[ this.propertyIndex ];\n\n\t\t\t},\n\n\t\t\tfunction getValue_toArray( buffer, offset ) {\n\n\t\t\t\tthis.resolvedProperty.toArray( buffer, offset );\n\n\t\t\t}\n\n\t\t],\n\n\t\tSetterByBindingTypeAndVersioning: [\n\n\t\t\t[\n\t\t\t\t// Direct\n\n\t\t\t\tfunction setValue_direct( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_direct_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.targetObject[ this.propertyName ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// EntireArray\n\n\t\t\t\tfunction setValue_array( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_array_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tvar dest = this.resolvedProperty;\n\n\t\t\t\t\tfor ( var i = 0, n = dest.length; i !== n; ++ i ) {\n\n\t\t\t\t\t\tdest[ i ] = buffer[ offset ++ ];\n\n\t\t\t\t\t}\n\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// ArrayElement\n\n\t\t\t\tfunction setValue_arrayElement( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_arrayElement_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty[ this.propertyIndex ] = buffer[ offset ];\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t], [\n\n\t\t\t\t// HasToFromArray\n\n\t\t\t\tfunction setValue_fromArray( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.needsUpdate = true;\n\n\t\t\t\t},\n\n\t\t\t\tfunction setValue_fromArray_setMatrixWorldNeedsUpdate( buffer, offset ) {\n\n\t\t\t\t\tthis.resolvedProperty.fromArray( buffer, offset );\n\t\t\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\n\t\t\t\t}\n\n\t\t\t]\n\n\t\t],\n\n\t\tgetValue: function getValue_unbound( targetArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.getValue( targetArray, offset );\n\n\t\t\t// Note: This class uses a State pattern on a per-method basis:\n\t\t\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t\t\t// prototype version of these methods with one that represents\n\t\t\t// the bound state. When the property is not found, the methods\n\t\t\t// become no-ops.\n\n\t\t},\n\n\t\tsetValue: function getValue_unbound( sourceArray, offset ) {\n\n\t\t\tthis.bind();\n\t\t\tthis.setValue( sourceArray, offset );\n\n\t\t},\n\n\t\t// create getter / setter pair for a property in the scene graph\n\t\tbind: function () {\n\n\t\t\tvar targetObject = this.node,\n\t\t\t\tparsedPath = this.parsedPath,\n\n\t\t\t\tobjectName = parsedPath.objectName,\n\t\t\t\tpropertyName = parsedPath.propertyName,\n\t\t\t\tpropertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\ttargetObject = PropertyBinding.findNode( this.rootNode, parsedPath.nodeName ) || this.rootNode;\n\n\t\t\t\tthis.node = targetObject;\n\n\t\t\t}\n\n\t\t\t// set fail state so we can just 'return' on error\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable;\n\n\t\t\t// ensure there is a value node\n\t\t\tif ( ! targetObject ) {\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.' );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tif ( objectName ) {\n\n\t\t\t\tvar objectIndex = parsedPath.objectIndex;\n\n\t\t\t\t// special cases were we need to reach deeper into the hierarchy to get the face materials....\n\t\t\t\tswitch ( objectName ) {\n\n\t\t\t\t\tcase 'materials':\n\n\t\t\t\t\t\tif ( ! targetObject.material ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material as node does not have a material.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif ( ! targetObject.material.materials ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\n\t\t\t\t\t\tif ( ! targetObject.skeleton ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\t// potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones;\n\n\t\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\t\tfor ( var i = 0; i < targetObject.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject[ i ].name === objectIndex ) {\n\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\n\t\t\t\t\t\tif ( targetObject[ objectName ] === undefined ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to objectName of node undefined.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[ objectName ];\n\n\t\t\t\t}\n\n\n\t\t\t\tif ( objectIndex !== undefined ) {\n\n\t\t\t\t\tif ( targetObject[ objectIndex ] === undefined ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[ objectIndex ];\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\t// resolve property\n\t\t\tvar nodeProperty = targetObject[ propertyName ];\n\n\t\t\tif ( nodeProperty === undefined ) {\n\n\t\t\t\tvar nodeName = parsedPath.nodeName;\n\n\t\t\t\tconsole.error( 'THREE.PropertyBinding: Trying to update property for track: ' + nodeName +\n\t\t\t\t\t'.' + propertyName + ' but it wasn\\'t found.', targetObject );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\t// determine versioning scheme\n\t\t\tvar versioning = this.Versioning.None;\n\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif ( targetObject.needsUpdate !== undefined ) { // material\n\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\n\t\t\t} else if ( targetObject.matrixWorldNeedsUpdate !== undefined ) { // node transform\n\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\n\t\t\t}\n\n\t\t\t// determine how the property gets bound\n\t\t\tvar bindingType = this.BindingType.Direct;\n\n\t\t\tif ( propertyIndex !== undefined ) {\n\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\n\t\t\t\tif ( propertyName === \"morphTargetInfluences\" ) {\n\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif ( ! targetObject.geometry ) {\n\n\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this );\n\t\t\t\t\t\treturn;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( targetObject.geometry.isBufferGeometry ) {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphAttributes ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphAttributes.position.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphAttributes.position[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tif ( ! targetObject.geometry.morphTargets ) {\n\n\t\t\t\t\t\t\tconsole.error( 'THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphTargets.', this );\n\t\t\t\t\t\t\treturn;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tfor ( var i = 0; i < this.node.geometry.morphTargets.length; i ++ ) {\n\n\t\t\t\t\t\t\tif ( targetObject.geometry.morphTargets[ i ].name === propertyIndex ) {\n\n\t\t\t\t\t\t\t\tpropertyIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\n\t\t\t} else if ( nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined ) {\n\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else if ( Array.isArray( nodeProperty ) ) {\n\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\n\t\t\t} else {\n\n\t\t\t\tthis.propertyName = propertyName;\n\n\t\t\t}\n\n\t\t\t// select getter / setter\n\t\t\tthis.getValue = this.GetterByBindingType[ bindingType ];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[ bindingType ][ versioning ];\n\n\t\t},\n\n\t\tunbind: function () {\n\n\t\t\tthis.node = null;\n\n\t\t\t// back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\n\t\t}\n\n\t} );\n\n\t//!\\ DECLARE ALIAS AFTER assign prototype !\n\tObject.assign( PropertyBinding.prototype, {\n\n\t\t// initial state of these methods that calls 'bind'\n\t\t_getValue_unbound: PropertyBinding.prototype.getValue,\n\t\t_setValue_unbound: PropertyBinding.prototype.setValue,\n\n\t} );\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *  - Add objects you would otherwise pass as 'root' to the\n\t *    constructor or the .clipAction method of AnimationMixer.\n\t *\n\t *  - Instead pass this object as 'root'.\n\t *\n\t *  - You can also add and remove objects later when the mixer\n\t *    is running.\n\t *\n\t * Note:\n\t *\n\t *    Objects of this class appear as one object to the mixer,\n\t *    so cache control of the individual objects must be done\n\t *    on the group.\n\t *\n\t * Limitation:\n\t *\n\t *  - The animated properties must be compatible among the\n\t *    all objects in the group.\n\t *\n\t *  - A single property can either be controlled through a\n\t *    target group or directly, but not both.\n\t *\n\t * @author tschw\n\t */\n\n\tfunction AnimationObjectGroup() {\n\n\t\tthis.uuid = _Math.generateUUID();\n\n\t\t// cached objects followed by the active ones\n\t\tthis._objects = Array.prototype.slice.call( arguments );\n\n\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t// note: read by PropertyBinding.Composite\n\n\t\tvar indices = {};\n\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\tindices[ arguments[ i ].uuid ] = i;\n\n\t\t}\n\n\t\tthis._paths = []; // inside: string\n\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\tvar scope = this;\n\n\t\tthis.stats = {\n\n\t\t\tobjects: {\n\t\t\t\tget total() {\n\n\t\t\t\t\treturn scope._objects.length;\n\n\t\t\t\t},\n\t\t\t\tget inUse() {\n\n\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\n\t\t\t\t}\n\t\t\t},\n\t\t\tget bindingsPerObject() {\n\n\t\t\t\treturn scope._bindings.length;\n\n\t\t\t}\n\n\t\t};\n\n\t}\n\n\tObject.assign( AnimationObjectGroup.prototype, {\n\n\t\tisAnimationObjectGroup: true,\n\n\t\tadd: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tpaths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length,\n\t\t\t\tknownObject = undefined;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index === undefined ) {\n\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\n\t\t\t\t\tindex = nObjects ++;\n\t\t\t\t\tindicesByUUID[ uuid ] = index;\n\t\t\t\t\tobjects.push( object );\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tbindings[ j ].push( new PropertyBinding( object, paths[ j ], parsedPaths[ j ] ) );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( index < nCachedObjects ) {\n\n\t\t\t\t\tknownObject = objects[ index ];\n\n\t\t\t\t\t// move existing object to the ACTIVE region\n\n\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ];\n\n\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = firstActiveIndex;\n\t\t\t\t\tobjects[ firstActiveIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\n\t\t\t\t\t\tif ( binding === undefined ) {\n\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\n\t\t\t\t\t\t\tbinding = new PropertyBinding( object, paths[ j ], parsedPaths[ j ] );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t} else if ( objects[ index ] !== knownObject ) {\n\n\t\t\t\t\tconsole.error( 'THREE.AnimationObjectGroup: Different objects with the same UUID ' +\n\t\t\t\t\t\t'detected. Clean the caches or recreate your infrastructure when reloading scenes.' );\n\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\tremove: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined && index >= nCachedObjects ) {\n\n\t\t\t\t\t// move existing object into the CACHED region\n\n\t\t\t\t\tvar lastCachedIndex = nCachedObjects ++,\n\t\t\t\t\t\tfirstActiveObject = objects[ lastCachedIndex ];\n\n\t\t\t\t\tindicesByUUID[ firstActiveObject.uuid ] = index;\n\t\t\t\t\tobjects[ index ] = firstActiveObject;\n\n\t\t\t\t\tindicesByUUID[ uuid ] = lastCachedIndex;\n\t\t\t\t\tobjects[ lastCachedIndex ] = object;\n\n\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\tfirstActive = bindingsForPath[ lastCachedIndex ],\n\t\t\t\t\t\t\tbinding = bindingsForPath[ index ];\n\n\t\t\t\t\t\tbindingsForPath[ index ] = firstActive;\n\t\t\t\t\t\tbindingsForPath[ lastCachedIndex ] = binding;\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// remove & forget\n\t\tuncache: function () {\n\n\t\t\tvar objects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = bindings.length;\n\n\t\t\tfor ( var i = 0, n = arguments.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = arguments[ i ],\n\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\tindex = indicesByUUID[ uuid ];\n\n\t\t\t\tif ( index !== undefined ) {\n\n\t\t\t\t\tdelete indicesByUUID[ uuid ];\n\n\t\t\t\t\tif ( index < nCachedObjects ) {\n\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\n\t\t\t\t\t\tvar firstActiveIndex = -- nCachedObjects,\n\t\t\t\t\t\t\tlastCachedObject = objects[ firstActiveIndex ],\n\t\t\t\t\t\t\tlastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\t// last cached object takes this object's place\n\t\t\t\t\t\tindicesByUUID[ lastCachedObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastCachedObject;\n\n\t\t\t\t\t\t// last object goes to the activated slot and pop\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = firstActiveIndex;\n\t\t\t\t\t\tobjects[ firstActiveIndex ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ],\n\t\t\t\t\t\t\t\tlastCached = bindingsForPath[ firstActiveIndex ],\n\t\t\t\t\t\t\t\tlast = bindingsForPath[ lastIndex ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[ firstActiveIndex ] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\n\t\t\t\t\t\tvar lastIndex = -- nObjects,\n\t\t\t\t\t\t\tlastObject = objects[ lastIndex ];\n\n\t\t\t\t\t\tindicesByUUID[ lastObject.uuid ] = index;\n\t\t\t\t\t\tobjects[ index ] = lastObject;\n\t\t\t\t\t\tobjects.pop();\n\n\t\t\t\t\t\t// accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor ( var j = 0, m = nBindings; j !== m; ++ j ) {\n\n\t\t\t\t\t\t\tvar bindingsForPath = bindings[ j ];\n\n\t\t\t\t\t\t\tbindingsForPath[ index ] = bindingsForPath[ lastIndex ];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\n\t\t},\n\n\t\t// Internal interface used by befriended PropertyBinding.Composite:\n\n\t\tsubscribe_: function ( path, parsedPath ) {\n\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ],\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( index !== undefined ) { return bindings[ index ]; }\n\n\t\t\tvar paths = this._paths,\n\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\tobjects = this._objects,\n\t\t\t\tnObjects = objects.length,\n\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\tbindingsForPath = new Array( nObjects );\n\n\t\t\tindex = bindings.length;\n\n\t\t\tindicesByPath[ path ] = index;\n\n\t\t\tpaths.push( path );\n\t\t\tparsedPaths.push( parsedPath );\n\t\t\tbindings.push( bindingsForPath );\n\n\t\t\tfor ( var i = nCachedObjects, n = objects.length; i !== n; ++ i ) {\n\n\t\t\t\tvar object = objects[ i ];\n\t\t\t\tbindingsForPath[ i ] = new PropertyBinding( object, path, parsedPath );\n\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\n\t\t},\n\n\t\tunsubscribe_: function ( path ) {\n\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\n\t\t\tvar indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\tindex = indicesByPath[ path ];\n\n\t\t\tif ( index !== undefined ) {\n\n\t\t\t\tvar paths = this._paths,\n\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\tlastBindings = bindings[ lastBindingsIndex ],\n\t\t\t\t\tlastBindingsPath = path[ lastBindingsIndex ];\n\n\t\t\t\tindicesByPath[ lastBindingsPath ] = index;\n\n\t\t\t\tbindings[ index ] = lastBindings;\n\t\t\t\tbindings.pop();\n\n\t\t\t\tparsedPaths[ index ] = parsedPaths[ lastBindingsIndex ];\n\t\t\t\tparsedPaths.pop();\n\n\t\t\t\tpaths[ index ] = paths[ lastBindingsIndex ];\n\t\t\t\tpaths.pop();\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Action provided by AnimationMixer for scheduling clip playback on specific\n\t * objects.\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t *\n\t */\n\n\tfunction AnimationAction( mixer, clip, localRoot ) {\n\n\t\tthis._mixer = mixer;\n\t\tthis._clip = clip;\n\t\tthis._localRoot = localRoot || null;\n\n\t\tvar tracks = clip.tracks,\n\t\t\tnTracks = tracks.length,\n\t\t\tinterpolants = new Array( nTracks );\n\n\t\tvar interpolantSettings = {\n\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t};\n\n\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\tvar interpolant = tracks[ i ].createInterpolant( null );\n\t\t\tinterpolants[ i ] = interpolant;\n\t\t\tinterpolant.settings = interpolantSettings;\n\n\t\t}\n\n\t\tthis._interpolantSettings = interpolantSettings;\n\n\t\tthis._interpolants = interpolants; // bound by the mixer\n\n\t\t// inside: PropertyMixer (managed by the mixer)\n\t\tthis._propertyBindings = new Array( nTracks );\n\n\t\tthis._cacheIndex = null; // for the memory manager\n\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\tthis._timeScaleInterpolant = null;\n\t\tthis._weightInterpolant = null;\n\n\t\tthis.loop = LoopRepeat;\n\t\tthis._loopCount = - 1;\n\n\t\t// global mixer time when the action is to be started\n\t\t// it's set back to 'null' upon start of the action\n\t\tthis._startTime = null;\n\n\t\t// scaled local time of the action\n\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1;\n\t\tthis._effectiveTimeScale = 1;\n\n\t\tthis.weight = 1;\n\t\tthis._effectiveWeight = 1;\n\n\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\tthis.paused = false; // true -> zero effective time scale\n\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\tthis.clampWhenFinished = false;// keep feeding the last frame?\n\n\t\tthis.zeroSlopeAtStart = true;// for smooth interpolation w/o separate\n\t\tthis.zeroSlopeAtEnd = true;// clips for start, loop and end\n\n\t}\n\n\tObject.assign( AnimationAction.prototype, {\n\n\t\t// State & Scheduling\n\n\t\tplay: function () {\n\n\t\t\tthis._mixer._activateAction( this );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstop: function () {\n\n\t\t\tthis._mixer._deactivateAction( this );\n\n\t\t\treturn this.reset();\n\n\t\t},\n\n\t\treset: function () {\n\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\n\t\t\tthis.time = 0; // restart clip\n\t\t\tthis._loopCount = - 1;// forget previous loops\n\t\t\tthis._startTime = null;// forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\n\t\t},\n\n\t\tisRunning: function () {\n\n\t\t\treturn this.enabled && ! this.paused && this.timeScale !== 0 &&\n\t\t\t\tthis._startTime === null && this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\t// return true when play has been called\n\t\tisScheduled: function () {\n\n\t\t\treturn this._mixer._isActiveAction( this );\n\n\t\t},\n\n\t\tstartAt: function ( time ) {\n\n\t\t\tthis._startTime = time;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetLoop: function ( mode, repetitions ) {\n\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Weight\n\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\t\tsetEffectiveWeight: function ( weight ) {\n\n\t\t\tthis.weight = weight;\n\n\t\t\t// note: same logic as when updated at runtime\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\n\t\t\treturn this.stopFading();\n\n\t\t},\n\n\t\t// return the weight considering fading and .enabled\n\t\tgetEffectiveWeight: function () {\n\n\t\t\treturn this._effectiveWeight;\n\n\t\t},\n\n\t\tfadeIn: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 0, 1 );\n\n\t\t},\n\n\t\tfadeOut: function ( duration ) {\n\n\t\t\treturn this._scheduleFading( duration, 1, 0 );\n\n\t\t},\n\n\t\tcrossFadeFrom: function ( fadeOutAction, duration, warp ) {\n\n\t\t\tfadeOutAction.fadeOut( duration );\n\t\t\tthis.fadeIn( duration );\n\n\t\t\tif ( warp ) {\n\n\t\t\t\tvar fadeInDuration = this._clip.duration,\n\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\n\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\n\t\t\t\tfadeOutAction.warp( 1.0, startEndRatio, duration );\n\t\t\t\tthis.warp( endStartRatio, 1.0, duration );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcrossFadeTo: function ( fadeInAction, duration, warp ) {\n\n\t\t\treturn fadeInAction.crossFadeFrom( this, duration, warp );\n\n\t\t},\n\n\t\tstopFading: function () {\n\n\t\t\tvar weightInterpolant = this._weightInterpolant;\n\n\t\t\tif ( weightInterpolant !== null ) {\n\n\t\t\t\tthis._weightInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( weightInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Time Scale Control\n\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\t\tsetEffectiveTimeScale: function ( timeScale ) {\n\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\t// return the time scale considering warping and .paused\n\t\tgetEffectiveTimeScale: function () {\n\n\t\t\treturn this._effectiveTimeScale;\n\n\t\t},\n\n\t\tsetDuration: function ( duration ) {\n\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\tsyncWith: function ( action ) {\n\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\n\t\t\treturn this.stopWarping();\n\n\t\t},\n\n\t\thalt: function ( duration ) {\n\n\t\t\treturn this.warp( this._effectiveTimeScale, 0, duration );\n\n\t\t},\n\n\t\twarp: function ( startTimeScale, endTimeScale, duration ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._timeScaleInterpolant,\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\ttimes[ 1 ] = now + duration;\n\n\t\t\tvalues[ 0 ] = startTimeScale / timeScale;\n\t\t\tvalues[ 1 ] = endTimeScale / timeScale;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tstopWarping: function () {\n\n\t\t\tvar timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif ( timeScaleInterpolant !== null ) {\n\n\t\t\t\tthis._timeScaleInterpolant = null;\n\t\t\t\tthis._mixer._takeBackControlInterpolant( timeScaleInterpolant );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Object Accessors\n\n\t\tgetMixer: function () {\n\n\t\t\treturn this._mixer;\n\n\t\t},\n\n\t\tgetClip: function () {\n\n\t\t\treturn this._clip;\n\n\t\t},\n\n\t\tgetRoot: function () {\n\n\t\t\treturn this._localRoot || this._mixer._root;\n\n\t\t},\n\n\t\t// Interna\n\n\t\t_update: function ( time, deltaTime, timeDirection, accuIndex ) {\n\n\t\t\t// called by the mixer\n\n\t\t\tif ( ! this.enabled ) {\n\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\n\t\t\t\tthis._updateWeight( time );\n\t\t\t\treturn;\n\n\t\t\t}\n\n\t\t\tvar startTime = this._startTime;\n\n\t\t\tif ( startTime !== null ) {\n\n\t\t\t\t// check for scheduled start of action\n\n\t\t\t\tvar timeRunning = ( time - startTime ) * timeDirection;\n\t\t\t\tif ( timeRunning < 0 || timeDirection === 0 ) {\n\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\n\t\t\t\t}\n\n\t\t\t\t// start\n\n\t\t\t\tthis._startTime = null; // unschedule\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\n\t\t\t}\n\n\t\t\t// apply time scale and advance time\n\n\t\t\tdeltaTime *= this._updateTimeScale( time );\n\t\t\tvar clipTime = this._updateTime( deltaTime );\n\n\t\t\t// note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\t\t\tvar weight = this._updateWeight( time );\n\n\t\t\tif ( weight > 0 ) {\n\n\t\t\t\tvar interpolants = this._interpolants;\n\t\t\t\tvar propertyMixers = this._propertyBindings;\n\n\t\t\t\tfor ( var j = 0, m = interpolants.length; j !== m; ++ j ) {\n\n\t\t\t\t\tinterpolants[ j ].evaluate( clipTime );\n\t\t\t\t\tpropertyMixers[ j ].accumulate( accuIndex, weight );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_updateWeight: function ( time ) {\n\n\t\t\tvar weight = 0;\n\n\t\t\tif ( this.enabled ) {\n\n\t\t\t\tweight = this.weight;\n\t\t\t\tvar interpolant = this._weightInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif ( interpolantValue === 0 ) {\n\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\n\t\t},\n\n\t\t_updateTimeScale: function ( time ) {\n\n\t\t\tvar timeScale = 0;\n\n\t\t\tif ( ! this.paused ) {\n\n\t\t\t\ttimeScale = this.timeScale;\n\n\t\t\t\tvar interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif ( interpolant !== null ) {\n\n\t\t\t\t\tvar interpolantValue = interpolant.evaluate( time )[ 0 ];\n\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif ( time > interpolant.parameterPositions[ 1 ] ) {\n\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif ( timeScale === 0 ) {\n\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\n\t\t},\n\n\t\t_updateTime: function ( deltaTime ) {\n\n\t\t\tvar time = this.time + deltaTime;\n\t\t\tvar duration = this._clip.duration;\n\t\t\tvar loop = this.loop;\n\t\t\tvar loopCount = this._loopCount;\n\n\t\t\tvar pingPong = ( loop === LoopPingPong );\n\n\t\t\tif ( deltaTime === 0 ) {\n\n\t\t\t\tif ( loopCount === - 1 ) { return time; }\n\n\t\t\t\treturn ( pingPong && ( loopCount & 1 ) === 1 ) ? duration - time : time;\n\n\t\t\t}\n\n\t\t\tif ( loop === LoopOnce ) {\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tthis._loopCount = 0;\n\t\t\t\t\tthis._setEndings( true, true, false );\n\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\n\t\t\t\t\tif ( time >= duration ) {\n\n\t\t\t\t\t\ttime = duration;\n\n\t\t\t\t\t} else if ( time < 0 ) {\n\n\t\t\t\t\t\ttime = 0;\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tbreak handle_stop;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? - 1 : 1\n\t\t\t\t\t} );\n\n\t\t\t\t}\n\n\t\t\t} else { // repetitive Repeat or PingPong\n\n\t\t\t\tif ( loopCount === - 1 ) {\n\n\t\t\t\t\t// just started\n\n\t\t\t\t\tif ( deltaTime >= 0 ) {\n\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings( true, this.repetitions === 0, pingPong );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\n\t\t\t\t\t\tthis._setEndings( this.repetitions === 0, true, pingPong );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tif ( time >= duration || time < 0 ) {\n\n\t\t\t\t\t// wrap around\n\n\t\t\t\t\tvar loopDelta = Math.floor( time / duration ); // signed\n\t\t\t\t\ttime -= duration * loopDelta;\n\n\t\t\t\t\tloopCount += Math.abs( loopDelta );\n\n\t\t\t\t\tvar pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif ( pending <= 0 ) {\n\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\n\t\t\t\t\t\tif ( this.clampWhenFinished ) { this.paused = true; }\n\t\t\t\t\t\telse { this.enabled = false; }\n\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'finished', action: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : - 1\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t} else {\n\n\t\t\t\t\t\t// keep running\n\n\t\t\t\t\t\tif ( pending === 1 ) {\n\n\t\t\t\t\t\t\t// entering the last round\n\n\t\t\t\t\t\t\tvar atStart = deltaTime < 0;\n\t\t\t\t\t\t\tthis._setEndings( atStart, ! atStart, pingPong );\n\n\t\t\t\t\t\t} else {\n\n\t\t\t\t\t\t\tthis._setEndings( false, false, pingPong );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent( {\n\t\t\t\t\t\t\ttype: 'loop', action: this, loopDelta: loopDelta\n\t\t\t\t\t\t} );\n\n\t\t\t\t\t}\n\n\t\t\t\t} else {\n\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t}\n\n\t\t\t\tif ( pingPong && ( loopCount & 1 ) === 1 ) {\n\n\t\t\t\t\t// invert time for the \"pong round\"\n\n\t\t\t\t\treturn duration - time;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\treturn time;\n\n\t\t},\n\n\t\t_setEndings: function ( atStart, atEnd, pingPong ) {\n\n\t\t\tvar settings = this._interpolantSettings;\n\n\t\t\tif ( pingPong ) {\n\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\n\t\t\t} else {\n\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\n\t\t\t\tif ( atStart ) {\n\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t\tif ( atEnd ) {\n\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tsettings.endingEnd \t = WrapAroundEnding;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_scheduleFading: function ( duration, weightNow, weightThen ) {\n\n\t\t\tvar mixer = this._mixer, now = mixer.time,\n\t\t\t\tinterpolant = this._weightInterpolant;\n\n\t\t\tif ( interpolant === null ) {\n\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\n\t\t\t}\n\n\t\t\tvar times = interpolant.parameterPositions,\n\t\t\t\tvalues = interpolant.sampleValues;\n\n\t\t\ttimes[ 0 ] = now;\n\t\t\tvalues[ 0 ] = weightNow;\n\t\t\ttimes[ 1 ] = now + duration;\n\t\t\tvalues[ 1 ] = weightThen;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t *\n\t * Player for AnimationClips.\n\t *\n\t *\n\t * @author Ben Houston / http://clara.io/\n\t * @author David Sarno / http://lighthaus.us/\n\t * @author tschw\n\t */\n\n\tfunction AnimationMixer( root ) {\n\n\t\tthis._root = root;\n\t\tthis._initMemoryManager();\n\t\tthis._accuIndex = 0;\n\n\t\tthis.time = 0;\n\n\t\tthis.timeScale = 1.0;\n\n\t}\n\n\tAnimationMixer.prototype = Object.assign( Object.create( EventDispatcher.prototype ), {\n\n\t\tconstructor: AnimationMixer,\n\n\t\t_bindAction: function ( action, prototypeAction ) {\n\n\t\t\tvar root = action._localRoot || this._root,\n\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\tnTracks = tracks.length,\n\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\trootUuid = root.uuid,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingsByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingsByName === undefined ) {\n\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingsByName;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nTracks; ++ i ) {\n\n\t\t\t\tvar track = tracks[ i ],\n\t\t\t\t\ttrackName = track.name,\n\t\t\t\t\tbinding = bindingsByName[ trackName ];\n\n\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t} else {\n\n\t\t\t\t\tbinding = bindings[ i ];\n\n\t\t\t\t\tif ( binding !== undefined ) {\n\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\n\t\t\t\t\t\tif ( binding._cacheIndex === null ) {\n\n\t\t\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tvar path = prototypeAction && prototypeAction.\n\t\t\t\t\t\t_propertyBindings[ i ].binding.parsedPath;\n\n\t\t\t\t\tbinding = new PropertyMixer(\n\t\t\t\t\t\tPropertyBinding.create( root, trackName, path ),\n\t\t\t\t\t\ttrack.ValueTypeName, track.getValueSize() );\n\n\t\t\t\t\t++ binding.referenceCount;\n\t\t\t\t\tthis._addInactiveBinding( binding, rootUuid, trackName );\n\n\t\t\t\t\tbindings[ i ] = binding;\n\n\t\t\t\t}\n\n\t\t\t\tinterpolants[ i ].resultBuffer = binding.buffer;\n\n\t\t\t}\n\n\t\t},\n\n\t\t_activateAction: function ( action ) {\n\n\t\t\tif ( ! this._isActiveAction( action ) ) {\n\n\t\t\t\tif ( action._cacheIndex === null ) {\n\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\n\t\t\t\t\tvar rootUuid = ( action._localRoot || this._root ).uuid,\n\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\t\t\tthis._bindAction( action,\n\t\t\t\t\t\tactionsForClip && actionsForClip.knownActions[ 0 ] );\n\n\t\t\t\t\tthis._addInactiveAction( action, clipUuid, rootUuid );\n\n\t\t\t\t}\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// increment reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( binding.useCount ++ === 0 ) {\n\n\t\t\t\t\t\tthis._lendBinding( binding );\n\t\t\t\t\t\tbinding.saveOriginalState();\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t_deactivateAction: function ( action ) {\n\n\t\t\tif ( this._isActiveAction( action ) ) {\n\n\t\t\t\tvar bindings = action._propertyBindings;\n\n\t\t\t\t// decrement reference counts / sort out state\n\t\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\t\tif ( -- binding.useCount === 0 ) {\n\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\t\tthis._takeBackBinding( binding );\n\n\t\t\t\t\t}\n\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction( action );\n\n\t\t\t}\n\n\t\t},\n\n\t\t// Memory manager\n\n\t\t_initMemoryManager: function () {\n\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\t\t\tthis._nActiveActions = 0;\n\n\t\t\tthis._actionsByClip = {};\n\t\t\t// inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\t\t\tthis._nActiveControlInterpolants = 0;\n\n\t\t\tvar scope = this;\n\n\t\t\tthis.stats = {\n\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._actions.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveActions;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._bindings.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\n\t\t\t\t\t},\n\t\t\t\t\tget inUse() {\n\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t};\n\n\t\t},\n\n\t\t// Memory management for AnimationAction objects\n\n\t\t_isActiveAction: function ( action ) {\n\n\t\t\tvar index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\n\t\t},\n\n\t\t_addInactiveAction: function ( action, clipUuid, rootUuid ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip === undefined ) {\n\n\t\t\t\tactionsForClip = {\n\n\t\t\t\t\tknownActions: [ action ],\n\t\t\t\t\tactionByRoot: {}\n\n\t\t\t\t};\n\n\t\t\t\taction._byClipCacheIndex = 0;\n\n\t\t\t\tactionsByClip[ clipUuid ] = actionsForClip;\n\n\t\t\t} else {\n\n\t\t\t\tvar knownActions = actionsForClip.knownActions;\n\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push( action );\n\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push( action );\n\n\t\t\tactionsForClip.actionByRoot[ rootUuid ] = action;\n\n\t\t},\n\n\t\t_removeInactiveAction: function ( action ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ],\n\t\t\t\tcacheIndex = action._cacheIndex;\n\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\tactions.pop();\n\n\t\t\taction._cacheIndex = null;\n\n\n\t\t\tvar clipUuid = action._clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ],\n\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\n\t\t\t\tlastKnownAction =\n\t\t\t\t\tknownActionsForClip[ knownActionsForClip.length - 1 ],\n\n\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[ byClipCacheIndex ] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\n\t\t\taction._byClipCacheIndex = null;\n\n\n\t\t\tvar actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\trootUuid = ( action._localRoot || this._root ).uuid;\n\n\t\t\tdelete actionByRoot[ rootUuid ];\n\n\t\t\tif ( knownActionsForClip.length === 0 ) {\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t},\n\n\t\t_removeInactiveBindingsForAction: function ( action ) {\n\n\t\t\tvar bindings = action._propertyBindings;\n\t\t\tfor ( var i = 0, n = bindings.length; i !== n; ++ i ) {\n\n\t\t\t\tvar binding = bindings[ i ];\n\n\t\t\t\tif ( -- binding.referenceCount === 0 ) {\n\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendAction: function ( action ) {\n\n\t\t\t// [ active actions |  inactive actions  ]\n\t\t\t// [  active actions >| inactive actions ]\n\t\t\t//                 s        a\n\t\t\t//                  <-swap->\n\t\t\t//                 a        s\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveActions ++,\n\n\t\t\t\tfirstInactiveAction = actions[ lastActiveIndex ];\n\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[ lastActiveIndex ] = action;\n\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = firstInactiveAction;\n\n\t\t},\n\n\t\t_takeBackAction: function ( action ) {\n\n\t\t\t// [  active actions  | inactive actions ]\n\t\t\t// [ active actions |< inactive actions  ]\n\t\t\t//        a        s\n\t\t\t//         <-swap->\n\t\t\t//        s        a\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tprevIndex = action._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveActions,\n\n\t\t\t\tlastActiveAction = actions[ firstInactiveIndex ];\n\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[ firstInactiveIndex ] = action;\n\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[ prevIndex ] = lastActiveAction;\n\n\t\t},\n\n\t\t// Memory management for PropertyMixer objects\n\n\t\t_addInactiveBinding: function ( binding, rootUuid, trackName ) {\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tbindings = this._bindings;\n\n\t\t\tif ( bindingByName === undefined ) {\n\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[ rootUuid ] = bindingByName;\n\n\t\t\t}\n\n\t\t\tbindingByName[ trackName ] = binding;\n\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push( binding );\n\n\t\t},\n\n\t\t_removeInactiveBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tpropBinding = binding.binding,\n\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\ttrackName = propBinding.path,\n\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ],\n\n\t\t\t\tlastInactiveBinding = bindings[ bindings.length - 1 ],\n\t\t\t\tcacheIndex = binding._cacheIndex;\n\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[ cacheIndex ] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\n\t\t\tdelete bindingByName[ trackName ];\n\n\t\t\tif ( Object.keys( bindingByName ).length === 0 ) {\n\n\t\t\t\tdelete bindingsByRoot[ rootUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t_lendBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tlastActiveIndex = this._nActiveBindings ++,\n\n\t\t\t\tfirstInactiveBinding = bindings[ lastActiveIndex ];\n\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[ lastActiveIndex ] = binding;\n\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = firstInactiveBinding;\n\n\t\t},\n\n\t\t_takeBackBinding: function ( binding ) {\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tprevIndex = binding._cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveBindings,\n\n\t\t\t\tlastActiveBinding = bindings[ firstInactiveIndex ];\n\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[ firstInactiveIndex ] = binding;\n\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[ prevIndex ] = lastActiveBinding;\n\n\t\t},\n\n\n\t\t// Memory management of Interpolants for weight and time scale\n\n\t\t_lendControlInterpolant: function () {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants ++,\n\t\t\t\tinterpolant = interpolants[ lastActiveIndex ];\n\n\t\t\tif ( interpolant === undefined ) {\n\n\t\t\t\tinterpolant = new LinearInterpolant(\n\t\t\t\t\tnew Float32Array( 2 ), new Float32Array( 2 ),\n\t\t\t\t\t1, this._controlInterpolantsResultBuffer );\n\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[ lastActiveIndex ] = interpolant;\n\n\t\t\t}\n\n\t\t\treturn interpolant;\n\n\t\t},\n\n\t\t_takeBackControlInterpolant: function ( interpolant ) {\n\n\t\t\tvar interpolants = this._controlInterpolants,\n\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\n\t\t\t\tfirstInactiveIndex = -- this._nActiveControlInterpolants,\n\n\t\t\t\tlastActiveInterpolant = interpolants[ firstInactiveIndex ];\n\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[ firstInactiveIndex ] = interpolant;\n\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[ prevIndex ] = lastActiveInterpolant;\n\n\t\t},\n\n\t\t_controlInterpolantsResultBuffer: new Float32Array( 1 ),\n\n\t\t// return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\t\tclipAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject !== null ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ],\n\t\t\t\tprototypeAction = null;\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\tvar existingAction =\n\t\t\t\t\t\tactionsForClip.actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( existingAction !== undefined ) {\n\n\t\t\t\t\treturn existingAction;\n\n\t\t\t\t}\n\n\t\t\t\t// we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\t\t\t\tprototypeAction = actionsForClip.knownActions[ 0 ];\n\n\t\t\t\t// also, take the clip from the prototype action\n\t\t\t\tif ( clipObject === null )\n\t\t\t\t\t{ clipObject = prototypeAction._clip; }\n\n\t\t\t}\n\n\t\t\t// clip must be known when specified via string\n\t\t\tif ( clipObject === null ) { return null; }\n\n\t\t\t// allocate all resources required to run it\n\t\t\tvar newAction = new AnimationAction( this, clipObject, optionalRoot );\n\n\t\t\tthis._bindAction( newAction, prototypeAction );\n\n\t\t\t// and make the action known to the memory manager\n\t\t\tthis._addInactiveAction( newAction, clipUuid, rootUuid );\n\n\t\t\treturn newAction;\n\n\t\t},\n\n\t\t// get an existing action\n\t\texistingAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar root = optionalRoot || this._root,\n\t\t\t\trootUuid = root.uuid,\n\n\t\t\t\tclipObject = typeof clip === 'string' ?\n\t\t\t\t\tAnimationClip.findByName( root, clip ) : clip,\n\n\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\n\t\t\t\tactionsForClip = this._actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\treturn actionsForClip.actionByRoot[ rootUuid ] || null;\n\n\t\t\t}\n\n\t\t\treturn null;\n\n\t\t},\n\n\t\t// deactivates all previously scheduled actions\n\t\tstopAllAction: function () {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\tbindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._nActiveBindings = 0;\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tactions[ i ].reset();\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].useCount = 0;\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// advance the time and update apply the animation\n\t\tupdate: function ( deltaTime ) {\n\n\t\t\tdeltaTime *= this.timeScale;\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tnActions = this._nActiveActions,\n\n\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\ttimeDirection = Math.sign( deltaTime ),\n\n\t\t\t\taccuIndex = this._accuIndex ^= 1;\n\n\t\t\t// run active actions\n\n\t\t\tfor ( var i = 0; i !== nActions; ++ i ) {\n\n\t\t\t\tvar action = actions[ i ];\n\n\t\t\t\taction._update( time, deltaTime, timeDirection, accuIndex );\n\n\t\t\t}\n\n\t\t\t// update scene graph\n\n\t\t\tvar bindings = this._bindings,\n\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor ( var i = 0; i !== nBindings; ++ i ) {\n\n\t\t\t\tbindings[ i ].apply( accuIndex );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// Allows you to seek to a specific time in an animation.\n\t\tsetTime: function ( timeInSeconds ) {\n\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\t\t\tfor ( var i = 0; i < this._actions.length; i ++ ) {\n\n\t\t\t\tthis._actions[ i ].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\n\t\t\t}\n\n\t\t\treturn this.update( timeInSeconds ); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\n\t\t},\n\n\t\t// return this mixer's root target object\n\t\tgetRoot: function () {\n\n\t\t\treturn this._root;\n\n\t\t},\n\n\t\t// free all resources specific to a particular clip\n\t\tuncacheClip: function ( clip ) {\n\n\t\t\tvar actions = this._actions,\n\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\tactionsForClip = actionsByClip[ clipUuid ];\n\n\t\t\tif ( actionsForClip !== undefined ) {\n\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\n\t\t\t\tvar actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor ( var i = 0, n = actionsToRemove.length; i !== n; ++ i ) {\n\n\t\t\t\t\tvar action = actionsToRemove[ i ];\n\n\t\t\t\t\tthis._deactivateAction( action );\n\n\t\t\t\t\tvar cacheIndex = action._cacheIndex,\n\t\t\t\t\t\tlastInactiveAction = actions[ actions.length - 1 ];\n\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[ cacheIndex ] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction( action );\n\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[ clipUuid ];\n\n\t\t\t}\n\n\t\t},\n\n\t\t// free all resources specific to a particular root target object\n\t\tuncacheRoot: function ( root ) {\n\n\t\t\tvar rootUuid = root.uuid,\n\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor ( var clipUuid in actionsByClip ) {\n\n\t\t\t\tvar actionByRoot = actionsByClip[ clipUuid ].actionByRoot,\n\t\t\t\t\taction = actionByRoot[ rootUuid ];\n\n\t\t\t\tif ( action !== undefined ) {\n\n\t\t\t\t\tthis._deactivateAction( action );\n\t\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t\tvar bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\tbindingByName = bindingsByRoot[ rootUuid ];\n\n\t\t\tif ( bindingByName !== undefined ) {\n\n\t\t\t\tfor ( var trackName in bindingByName ) {\n\n\t\t\t\t\tvar binding = bindingByName[ trackName ];\n\t\t\t\t\tbinding.restoreOriginalState();\n\t\t\t\t\tthis._removeInactiveBinding( binding );\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t},\n\n\t\t// remove a targeted clip from the cache\n\t\tuncacheAction: function ( clip, optionalRoot ) {\n\n\t\t\tvar action = this.existingAction( clip, optionalRoot );\n\n\t\t\tif ( action !== null ) {\n\n\t\t\t\tthis._deactivateAction( action );\n\t\t\t\tthis._removeInactiveAction( action );\n\n\t\t\t}\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Uniform( value ) {\n\n\t\tif ( typeof value === 'string' ) {\n\n\t\t\tconsole.warn( 'THREE.Uniform: Type parameter is no longer needed.' );\n\t\t\tvalue = arguments[ 1 ];\n\n\t\t}\n\n\t\tthis.value = value;\n\n\t}\n\n\tUniform.prototype.clone = function () {\n\n\t\treturn new Uniform( this.value.clone === undefined ? this.value : this.value.clone() );\n\n\t};\n\n\t/**\n\t * @author benaadams / https://twitter.com/ben_a_adams\n\t */\n\n\tfunction InstancedInterleavedBuffer( array, stride, meshPerAttribute ) {\n\n\t\tInterleavedBuffer.call( this, array, stride );\n\n\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype = Object.assign( Object.create( InterleavedBuffer.prototype ), {\n\n\t\tconstructor: InstancedInterleavedBuffer,\n\n\t\tisInstancedInterleavedBuffer: true,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tInterleavedBuffer.prototype.copy.call( this, source );\n\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author bhouston / http://clara.io/\n\t * @author stephomi / http://stephaneginier.com/\n\t */\n\n\tfunction Raycaster( origin, direction, near, far ) {\n\n\t\tthis.ray = new Ray( origin, direction );\n\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\tthis.near = near || 0;\n\t\tthis.far = far || Infinity;\n\t\tthis.camera = null;\n\n\t\tthis.params = {\n\t\t\tMesh: {},\n\t\t\tLine: {},\n\t\t\tLOD: {},\n\t\t\tPoints: { threshold: 1 },\n\t\t\tSprite: {}\n\t\t};\n\n\t\tObject.defineProperties( this.params, {\n\t\t\tPointCloud: {\n\t\t\t\tget: function () {\n\n\t\t\t\t\tconsole.warn( 'THREE.Raycaster: params.PointCloud has been renamed to params.Points.' );\n\t\t\t\t\treturn this.Points;\n\n\t\t\t\t}\n\t\t\t}\n\t\t} );\n\n\t}\n\n\tfunction ascSort( a, b ) {\n\n\t\treturn a.distance - b.distance;\n\n\t}\n\n\tfunction intersectObject( object, raycaster, intersects, recursive ) {\n\n\t\tif ( object.visible === false ) { return; }\n\n\t\tobject.raycast( raycaster, intersects );\n\n\t\tif ( recursive === true ) {\n\n\t\t\tvar children = object.children;\n\n\t\t\tfor ( var i = 0, l = children.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( children[ i ], raycaster, intersects, true );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\tObject.assign( Raycaster.prototype, {\n\n\t\tlinePrecision: 1,\n\n\t\tset: function ( origin, direction ) {\n\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.ray.set( origin, direction );\n\n\t\t},\n\n\t\tsetFromCamera: function ( coords, camera ) {\n\n\t\t\tif ( ( camera && camera.isPerspectiveCamera ) ) {\n\n\t\t\t\tthis.ray.origin.setFromMatrixPosition( camera.matrixWorld );\n\t\t\t\tthis.ray.direction.set( coords.x, coords.y, 0.5 ).unproject( camera ).sub( this.ray.origin ).normalize();\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else if ( ( camera && camera.isOrthographicCamera ) ) {\n\n\t\t\t\tthis.ray.origin.set( coords.x, coords.y, ( camera.near + camera.far ) / ( camera.near - camera.far ) ).unproject( camera ); // set origin in plane of camera\n\t\t\t\tthis.ray.direction.set( 0, 0, - 1 ).transformDirection( camera.matrixWorld );\n\t\t\t\tthis.camera = camera;\n\n\t\t\t} else {\n\n\t\t\t\tconsole.error( 'THREE.Raycaster: Unsupported camera type.' );\n\n\t\t\t}\n\n\t\t},\n\n\t\tintersectObject: function ( object, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tintersectObject( object, this, intersects, recursive );\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t},\n\n\t\tintersectObjects: function ( objects, recursive, optionalTarget ) {\n\n\t\t\tvar intersects = optionalTarget || [];\n\n\t\t\tif ( Array.isArray( objects ) === false ) {\n\n\t\t\t\tconsole.warn( 'THREE.Raycaster.intersectObjects: objects is not an Array.' );\n\t\t\t\treturn intersects;\n\n\t\t\t}\n\n\t\t\tfor ( var i = 0, l = objects.length; i < l; i ++ ) {\n\n\t\t\t\tintersectObject( objects[ i ], this, intersects, recursive );\n\n\t\t\t}\n\n\t\t\tintersects.sort( ascSort );\n\n\t\t\treturn intersects;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tfunction Spherical( radius, phi, theta ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0;\n\t\tthis.phi = ( phi !== undefined ) ? phi : 0; // polar angle\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // azimuthal angle\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Spherical.prototype, {\n\n\t\tset: function ( radius, phi, theta ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\t// restrict phi to be betwee EPS and PI-EPS\n\t\tmakeSafe: function () {\n\n\t\t\tvar EPS = 0.000001;\n\t\t\tthis.phi = Math.max( EPS, Math.min( Math.PI - EPS, this.phi ) );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + y * y + z * z );\n\n\t\t\tif ( this.radius === 0 ) {\n\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\n\t\t\t} else {\n\n\t\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\t\tthis.phi = Math.acos( _Math.clamp( y / this.radius, - 1, 1 ) );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t *\n\t */\n\n\tfunction Cylindrical( radius, theta, y ) {\n\n\t\tthis.radius = ( radius !== undefined ) ? radius : 1.0; // distance from the origin to a point in the x-z plane\n\t\tthis.theta = ( theta !== undefined ) ? theta : 0; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\t\tthis.y = ( y !== undefined ) ? y : 0; // height above the x-z plane\n\n\t\treturn this;\n\n\t}\n\n\tObject.assign( Cylindrical.prototype, {\n\n\t\tset: function ( radius, theta, y ) {\n\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( other ) {\n\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromVector3: function ( v ) {\n\n\t\t\treturn this.setFromCartesianCoords( v.x, v.y, v.z );\n\n\t\t},\n\n\t\tsetFromCartesianCoords: function ( x, y, z ) {\n\n\t\t\tthis.radius = Math.sqrt( x * x + z * z );\n\t\t\tthis.theta = Math.atan2( x, z );\n\t\t\tthis.y = y;\n\n\t\t\treturn this;\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _vector$6 = new Vector2();\n\n\tfunction Box2( min, max ) {\n\n\t\tthis.min = ( min !== undefined ) ? min : new Vector2( + Infinity, + Infinity );\n\t\tthis.max = ( max !== undefined ) ? max : new Vector2( - Infinity, - Infinity );\n\n\t}\n\n\tObject.assign( Box2.prototype, {\n\n\t\tset: function ( min, max ) {\n\n\t\t\tthis.min.copy( min );\n\t\t\tthis.max.copy( max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromPoints: function ( points ) {\n\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor ( var i = 0, il = points.length; i < il; i ++ ) {\n\n\t\t\t\tthis.expandByPoint( points[ i ] );\n\n\t\t\t}\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tsetFromCenterAndSize: function ( center, size ) {\n\n\t\t\tvar halfSize = _vector$6.copy( size ).multiplyScalar( 0.5 );\n\t\t\tthis.min.copy( center ).sub( halfSize );\n\t\t\tthis.max.copy( center ).add( halfSize );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( box ) {\n\n\t\t\tthis.min.copy( box.min );\n\t\t\tthis.max.copy( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tmakeEmpty: function () {\n\n\t\t\tthis.min.x = this.min.y = + Infinity;\n\t\t\tthis.max.x = this.max.y = - Infinity;\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tisEmpty: function () {\n\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\n\t\t\treturn ( this.max.x < this.min.x ) || ( this.max.y < this.min.y );\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.addVectors( this.min, this.max ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tgetSize: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getSize() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set( 0, 0 ) : target.subVectors( this.max, this.min );\n\n\t\t},\n\n\t\texpandByPoint: function ( point ) {\n\n\t\t\tthis.min.min( point );\n\t\t\tthis.max.max( point );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByVector: function ( vector ) {\n\n\t\t\tthis.min.sub( vector );\n\t\t\tthis.max.add( vector );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\texpandByScalar: function ( scalar ) {\n\n\t\t\tthis.min.addScalar( - scalar );\n\t\t\tthis.max.addScalar( scalar );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tcontainsPoint: function ( point ) {\n\n\t\t\treturn point.x < this.min.x || point.x > this.max.x ||\n\t\t\t\tpoint.y < this.min.y || point.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tcontainsBox: function ( box ) {\n\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x &&\n\t\t\t\tthis.min.y <= box.min.y && box.max.y <= this.max.y;\n\n\t\t},\n\n\t\tgetParameter: function ( point, target ) {\n\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .getParameter() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.set(\n\t\t\t\t( point.x - this.min.x ) / ( this.max.x - this.min.x ),\n\t\t\t\t( point.y - this.min.y ) / ( this.max.y - this.min.y )\n\t\t\t);\n\n\t\t},\n\n\t\tintersectsBox: function ( box ) {\n\n\t\t\t// using 4 splitting planes to rule out intersections\n\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x ||\n\t\t\t\tbox.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\n\t\t},\n\n\t\tclampPoint: function ( point, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Box2: .clampPoint() target is now required' );\n\t\t\t\ttarget = new Vector2();\n\n\t\t\t}\n\n\t\t\treturn target.copy( point ).clamp( this.min, this.max );\n\n\t\t},\n\n\t\tdistanceToPoint: function ( point ) {\n\n\t\t\tvar clampedPoint = _vector$6.copy( point ).clamp( this.min, this.max );\n\t\t\treturn clampedPoint.sub( point ).length();\n\n\t\t},\n\n\t\tintersect: function ( box ) {\n\n\t\t\tthis.min.max( box.min );\n\t\t\tthis.max.min( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tunion: function ( box ) {\n\n\t\t\tthis.min.min( box.min );\n\t\t\tthis.max.max( box.max );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\ttranslate: function ( offset ) {\n\n\t\t\tthis.min.add( offset );\n\t\t\tthis.max.add( offset );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( box ) {\n\n\t\t\treturn box.min.equals( this.min ) && box.max.equals( this.max );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author bhouston / http://clara.io\n\t */\n\n\tvar _startP = new Vector3();\n\tvar _startEnd = new Vector3();\n\n\tfunction Line3( start, end ) {\n\n\t\tthis.start = ( start !== undefined ) ? start : new Vector3();\n\t\tthis.end = ( end !== undefined ) ? end : new Vector3();\n\n\t}\n\n\tObject.assign( Line3.prototype, {\n\n\t\tset: function ( start, end ) {\n\n\t\t\tthis.start.copy( start );\n\t\t\tthis.end.copy( end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t},\n\n\t\tcopy: function ( line ) {\n\n\t\t\tthis.start.copy( line.start );\n\t\t\tthis.end.copy( line.end );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tgetCenter: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .getCenter() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.addVectors( this.start, this.end ).multiplyScalar( 0.5 );\n\n\t\t},\n\n\t\tdelta: function ( target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .delta() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn target.subVectors( this.end, this.start );\n\n\t\t},\n\n\t\tdistanceSq: function () {\n\n\t\t\treturn this.start.distanceToSquared( this.end );\n\n\t\t},\n\n\t\tdistance: function () {\n\n\t\t\treturn this.start.distanceTo( this.end );\n\n\t\t},\n\n\t\tat: function ( t, target ) {\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .at() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tclosestPointToPointParameter: function ( point, clampToLine ) {\n\n\t\t\t_startP.subVectors( point, this.start );\n\t\t\t_startEnd.subVectors( this.end, this.start );\n\n\t\t\tvar startEnd2 = _startEnd.dot( _startEnd );\n\t\t\tvar startEnd_startP = _startEnd.dot( _startP );\n\n\t\t\tvar t = startEnd_startP / startEnd2;\n\n\t\t\tif ( clampToLine ) {\n\n\t\t\t\tt = _Math.clamp( t, 0, 1 );\n\n\t\t\t}\n\n\t\t\treturn t;\n\n\t\t},\n\n\t\tclosestPointToPoint: function ( point, clampToLine, target ) {\n\n\t\t\tvar t = this.closestPointToPointParameter( point, clampToLine );\n\n\t\t\tif ( target === undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.Line3: .closestPointToPoint() target is now required' );\n\t\t\t\ttarget = new Vector3();\n\n\t\t\t}\n\n\t\t\treturn this.delta( target ).multiplyScalar( t ).add( this.start );\n\n\t\t},\n\n\t\tapplyMatrix4: function ( matrix ) {\n\n\t\t\tthis.start.applyMatrix4( matrix );\n\t\t\tthis.end.applyMatrix4( matrix );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tequals: function ( line ) {\n\n\t\t\treturn line.start.equals( this.start ) && line.end.equals( this.end );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t */\n\n\tfunction ImmediateRenderObject( material ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.material = material;\n\t\tthis.render = function ( /* renderCallback */ ) {};\n\n\t}\n\n\tImmediateRenderObject.prototype = Object.create( Object3D.prototype );\n\tImmediateRenderObject.prototype.constructor = ImmediateRenderObject;\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$5 = new Vector3();\n\tvar _v2$3 = new Vector3();\n\tvar _normalMatrix$1 = new Matrix3();\n\tvar _keys = [ 'a', 'b', 'c' ];\n\n\tfunction VertexNormalsHelper( object, size, hex, linewidth ) {\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xff0000;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length * 3;\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tnNormals = objGeometry.attributes.normal.count;\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.setAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tVertexNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tVertexNormalsHelper.prototype.constructor = VertexNormalsHelper;\n\n\tVertexNormalsHelper.prototype.update = function () {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix$1.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tvar vertices = objGeometry.vertices;\n\n\t\t\tvar faces = objGeometry.faces;\n\n\t\t\tvar idx = 0;\n\n\t\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\t\tvar face = faces[ i ];\n\n\t\t\t\tfor ( var j = 0, jl = face.vertexNormals.length; j < jl; j ++ ) {\n\n\t\t\t\t\tvar vertex = vertices[ face[ _keys[ j ] ] ];\n\n\t\t\t\t\tvar normal = face.vertexNormals[ j ];\n\n\t\t\t\t\t_v1$5.copy( vertex ).applyMatrix4( matrixWorld );\n\n\t\t\t\t\t_v2$3.copy( normal ).applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\t\t\tidx = idx + 1;\n\n\t\t\t\t}\n\n\t\t\t}\n\n\t\t} else if ( objGeometry && objGeometry.isBufferGeometry ) {\n\n\t\t\tvar objPos = objGeometry.attributes.position;\n\n\t\t\tvar objNorm = objGeometry.attributes.normal;\n\n\t\t\tvar idx = 0;\n\n\t\t\t// for simplicity, ignore index and drawcalls, and render every normal\n\n\t\t\tfor ( var j = 0, jl = objPos.count; j < jl; j ++ ) {\n\n\t\t\t\t_v1$5.set( objPos.getX( j ), objPos.getY( j ), objPos.getZ( j ) ).applyMatrix4( matrixWorld );\n\n\t\t\t\t_v2$3.set( objNorm.getX( j ), objNorm.getY( j ), objNorm.getZ( j ) );\n\n\t\t\t\t_v2$3.applyMatrix3( _normalMatrix$1 ).normalize().multiplyScalar( this.size ).add( _v1$5 );\n\n\t\t\t\tposition.setXYZ( idx, _v1$5.x, _v1$5.y, _v1$5.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t\tposition.setXYZ( idx, _v2$3.x, _v2$3.y, _v2$3.z );\n\n\t\t\t\tidx = idx + 1;\n\n\t\t\t}\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _vector$7 = new Vector3();\n\n\tfunction SpotLightHelper( light, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = [\n\t\t\t0, 0, 0, \t0, 0, 1,\n\t\t\t0, 0, 0, \t1, 0, 1,\n\t\t\t0, 0, 0,\t- 1, 0, 1,\n\t\t\t0, 0, 0, \t0, 1, 1,\n\t\t\t0, 0, 0, \t0, - 1, 1\n\t\t];\n\n\t\tfor ( var i = 0, j = 1, l = 32; i < l; i ++, j ++ ) {\n\n\t\t\tvar p1 = ( i / l ) * Math.PI * 2;\n\t\t\tvar p2 = ( j / l ) * Math.PI * 2;\n\n\t\t\tpositions.push(\n\t\t\t\tMath.cos( p1 ), Math.sin( p1 ), 1,\n\t\t\t\tMath.cos( p2 ), Math.sin( p2 ), 1\n\t\t\t);\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.cone = new LineSegments( geometry, material );\n\t\tthis.add( this.cone );\n\n\t\tthis.update();\n\n\t}\n\n\tSpotLightHelper.prototype = Object.create( Object3D.prototype );\n\tSpotLightHelper.prototype.constructor = SpotLightHelper;\n\n\tSpotLightHelper.prototype.dispose = function () {\n\n\t\tthis.cone.geometry.dispose();\n\t\tthis.cone.material.dispose();\n\n\t};\n\n\tSpotLightHelper.prototype.update = function () {\n\n\t\tthis.light.updateMatrixWorld();\n\n\t\tvar coneLength = this.light.distance ? this.light.distance : 1000;\n\t\tvar coneWidth = coneLength * Math.tan( this.light.angle );\n\n\t\tthis.cone.scale.set( coneWidth, coneWidth, coneLength );\n\n\t\t_vector$7.setFromMatrixPosition( this.light.target.matrixWorld );\n\n\t\tthis.cone.lookAt( _vector$7 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.cone.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.cone.material.color.copy( this.light.color );\n\n\t\t}\n\n\t};\n\n\t/**\n\t * @author Sean Griffin / http://twitter.com/sgrif\n\t * @author Michael Guerrero / http://realitymeltdown.com\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author ikerr / http://verold.com\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$8 = new Vector3();\n\tvar _boneMatrix = new Matrix4();\n\tvar _matrixWorldInv = new Matrix4();\n\n\tfunction getBoneList( object ) {\n\n\t\tvar boneList = [];\n\n\t\tif ( object && object.isBone ) {\n\n\t\t\tboneList.push( object );\n\n\t\t}\n\n\t\tfor ( var i = 0; i < object.children.length; i ++ ) {\n\n\t\t\tboneList.push.apply( boneList, getBoneList( object.children[ i ] ) );\n\n\t\t}\n\n\t\treturn boneList;\n\n\t}\n\n\tfunction SkeletonHelper( object ) {\n\n\t\tvar bones = getBoneList( object );\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar color1 = new Color( 0, 0, 1 );\n\t\tvar color2 = new Color( 0, 1, 0 );\n\n\t\tfor ( var i = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tvertices.push( 0, 0, 0 );\n\t\t\t\tcolors.push( color1.r, color1.g, color1.b );\n\t\t\t\tcolors.push( color2.r, color2.g, color2.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors, depthTest: false, depthWrite: false, transparent: true } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.root = object;\n\t\tthis.bones = bones;\n\n\t\tthis.matrix = object.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t}\n\n\tSkeletonHelper.prototype = Object.create( LineSegments.prototype );\n\tSkeletonHelper.prototype.constructor = SkeletonHelper;\n\n\tSkeletonHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar bones = this.bones;\n\n\t\tvar geometry = this.geometry;\n\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t_matrixWorldInv.getInverse( this.root.matrixWorld );\n\n\t\tfor ( var i = 0, j = 0; i < bones.length; i ++ ) {\n\n\t\t\tvar bone = bones[ i ];\n\n\t\t\tif ( bone.parent && bone.parent.isBone ) {\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.matrixWorld );\n\t\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t\t_boneMatrix.multiplyMatrices( _matrixWorldInv, bone.parent.matrixWorld );\n\t\t\t\t_vector$8.setFromMatrixPosition( _boneMatrix );\n\t\t\t\tposition.setXYZ( j + 1, _vector$8.x, _vector$8.y, _vector$8.z );\n\n\t\t\t\tj += 2;\n\n\t\t\t}\n\n\t\t}\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction PointLightHelper( light, sphereSize, color ) {\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new SphereBufferGeometry( sphereSize, 4, 2 );\n\t\tvar material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.matrix = this.light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\n\t\t/*\n\t\tvar distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\tvar distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\n\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\n\t\tvar d = light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\n\t\tthis.add( this.lightDistance );\n\t\t*/\n\n\t}\n\n\tPointLightHelper.prototype = Object.create( Mesh.prototype );\n\tPointLightHelper.prototype.constructor = PointLightHelper;\n\n\tPointLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tPointLightHelper.prototype.update = function () {\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\t/*\n\t\tvar d = this.light.distance;\n\n\t\tif ( d === 0.0 ) {\n\n\t\t\tthis.lightDistance.visible = false;\n\n\t\t} else {\n\n\t\t\tthis.lightDistance.visible = true;\n\t\t\tthis.lightDistance.scale.set( d, d, d );\n\n\t\t}\n\t\t*/\n\n\t};\n\n\t/**\n\t * @author abelnation / http://github.com/abelnation\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author WestLangley / http://github.com/WestLangley\n\t *\n\t *  This helper must be added as a child of the light\n\t */\n\n\tfunction RectAreaLightHelper( light, color ) {\n\n\t\tthis.type = 'RectAreaLightHelper';\n\n\t\tthis.light = light;\n\n\t\tthis.color = color; // optional hardwired color for the helper\n\n\t\tvar positions = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, - 1, 0, 1, 1, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tLine.call( this, geometry, material );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 0, - 1, 1, 0, - 1, - 1, 0, 1, 1, 0, - 1, - 1, 0, 1, - 1, 0 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { side: BackSide, fog: false } ) ) );\n\n\t\tthis.update();\n\n\t}\n\n\tRectAreaLightHelper.prototype = Object.create( Line.prototype );\n\tRectAreaLightHelper.prototype.constructor = RectAreaLightHelper;\n\n\tRectAreaLightHelper.prototype.update = function () {\n\n\t\tthis.scale.set( 0.5 * this.light.width, 0.5 * this.light.height, 1 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\t\t\tthis.children[ 0 ].material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.material.color.copy( this.light.color ).multiplyScalar( this.light.intensity );\n\n\t\t\t// prevent hue shift\n\t\t\tvar c = this.material.color;\n\t\t\tvar max = Math.max( c.r, c.g, c.b );\n\t\t\tif ( max > 1 ) { c.multiplyScalar( 1 / max ); }\n\n\t\t\tthis.children[ 0 ].material.color.copy( this.material.color );\n\n\t\t}\n\n\t};\n\n\tRectAreaLightHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t */\n\n\tvar _vector$9 = new Vector3();\n\tvar _color1 = new Color();\n\tvar _color2 = new Color();\n\n\tfunction HemisphereLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tvar geometry = new OctahedronBufferGeometry( size );\n\t\tgeometry.rotateY( Math.PI * 0.5 );\n\n\t\tthis.material = new MeshBasicMaterial( { wireframe: true, fog: false } );\n\t\tif ( this.color === undefined ) { this.material.vertexColors = VertexColors; }\n\n\t\tvar position = geometry.getAttribute( 'position' );\n\t\tvar colors = new Float32Array( position.count * 3 );\n\n\t\tgeometry.setAttribute( 'color', new BufferAttribute( colors, 3 ) );\n\n\t\tthis.add( new Mesh( geometry, this.material ) );\n\n\t\tthis.update();\n\n\t}\n\n\tHemisphereLightHelper.prototype = Object.create( Object3D.prototype );\n\tHemisphereLightHelper.prototype.constructor = HemisphereLightHelper;\n\n\tHemisphereLightHelper.prototype.dispose = function () {\n\n\t\tthis.children[ 0 ].geometry.dispose();\n\t\tthis.children[ 0 ].material.dispose();\n\n\t};\n\n\tHemisphereLightHelper.prototype.update = function () {\n\n\t\tvar mesh = this.children[ 0 ];\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tvar colors = mesh.geometry.getAttribute( 'color' );\n\n\t\t\t_color1.copy( this.light.color );\n\t\t\t_color2.copy( this.light.groundColor );\n\n\t\t\tfor ( var i = 0, l = colors.count; i < l; i ++ ) {\n\n\t\t\t\tvar color = ( i < ( l / 2 ) ) ? _color1 : _color2;\n\n\t\t\t\tcolors.setXYZ( i, color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t\tcolors.needsUpdate = true;\n\n\t\t}\n\n\t\tmesh.lookAt( _vector$9.setFromMatrixPosition( this.light.matrixWorld ).negate() );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction LightProbeHelper( lightProbe, size ) {\n\n\t\tthis.lightProbe = lightProbe;\n\n\t\tthis.size = size;\n\n\t\tvar defines = {};\n\t\tdefines[ 'GAMMA_OUTPUT' ] = \"\";\n\n\t\t// material\n\t\tvar material = new ShaderMaterial( {\n\n\t\t\tdefines: defines,\n\n\t\t\tuniforms: {\n\n\t\t\t\tsh: { value: this.lightProbe.sh.coefficients }, // by reference\n\n\t\t\t\tintensity: { value: this.lightProbe.intensity }\n\n\t\t\t},\n\n\t\t\tvertexShader: [\n\n\t\t\t\t'varying vec3 vNormal;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvNormal = normalize( normalMatrix * normal );',\n\n\t\t\t\t'\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );',\n\n\t\t\t\t'}' ].join( '\\n' ),\n\n\t\t\tfragmentShader: [\n\n\t\t\t\t'#define RECIPROCAL_PI 0.318309886',\n\n\t\t\t\t'vec3 inverseTransformDirection( in vec3 normal, in mat4 matrix ) {',\n\n\t\t\t\t'\t// matrix is assumed to be orthogonal',\n\n\t\t\t\t'\treturn normalize( ( vec4( normal, 0.0 ) * matrix ).xyz );',\n\n\t\t\t\t'}',\n\n\t\t\t\t'vec3 linearToOutput( in vec3 a ) {',\n\n\t\t\t\t'\t#ifdef GAMMA_OUTPUT',\n\n\t\t\t\t'\t\treturn pow( a, vec3( 1.0 / float( GAMMA_FACTOR ) ) );',\n\n\t\t\t\t'\t#else',\n\n\t\t\t\t'\t\treturn a;',\n\n\t\t\t\t'\t#endif',\n\n\t\t\t\t'}',\n\n\t\t\t\t'// source: https://graphics.stanford.edu/papers/envmap/envmap.pdf',\n\t\t\t\t'vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {',\n\n\t\t\t\t'\t// normal is assumed to have unit length',\n\n\t\t\t\t'\tfloat x = normal.x, y = normal.y, z = normal.z;',\n\n\t\t\t\t'\t// band 0',\n\t\t\t\t'\tvec3 result = shCoefficients[ 0 ] * 0.886227;',\n\n\t\t\t\t'\t// band 1',\n\t\t\t\t'\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;',\n\t\t\t\t'\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;',\n\t\t\t\t'\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;',\n\n\t\t\t\t'\t// band 2',\n\t\t\t\t'\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;',\n\t\t\t\t'\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;',\n\t\t\t\t'\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );',\n\t\t\t\t'\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;',\n\t\t\t\t'\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );',\n\n\t\t\t\t'\treturn result;',\n\n\t\t\t\t'}',\n\n\t\t\t\t'uniform vec3 sh[ 9 ]; // sh coefficients',\n\n\t\t\t\t'uniform float intensity; // light probe intensity',\n\n\t\t\t\t'varying vec3 vNormal;',\n\n\t\t\t\t'void main() {',\n\n\t\t\t\t'\tvec3 normal = normalize( vNormal );',\n\n\t\t\t\t'\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );',\n\n\t\t\t\t'\tvec3 irradiance = shGetIrradianceAt( worldNormal, sh );',\n\n\t\t\t\t'\tvec3 outgoingLight = RECIPROCAL_PI * irradiance * intensity;',\n\n\t\t\t\t'\toutgoingLight = linearToOutput( outgoingLight );',\n\n\t\t\t\t'\tgl_FragColor = vec4( outgoingLight, 1.0 );',\n\n\t\t\t\t'}'\n\n\t\t\t].join( '\\n' )\n\n\t\t} );\n\n\t\tvar geometry = new SphereBufferGeometry( 1, 32, 16 );\n\n\t\tMesh.call( this, geometry, material );\n\n\t\tthis.onBeforeRender();\n\n\t}\n\n\tLightProbeHelper.prototype = Object.create( Mesh.prototype );\n\tLightProbeHelper.prototype.constructor = LightProbeHelper;\n\n\tLightProbeHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material.dispose();\n\n\t};\n\n\tLightProbeHelper.prototype.onBeforeRender = function () {\n\n\t\tthis.position.copy( this.lightProbe.position );\n\n\t\tthis.scale.set( 1, 1, 1 ).multiplyScalar( this.size );\n\n\t\tthis.material.uniforms.intensity.value = this.lightProbe.intensity;\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction GridHelper( size, divisions, color1, color2 ) {\n\n\t\tsize = size || 10;\n\t\tdivisions = divisions || 10;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar center = divisions / 2;\n\t\tvar step = size / divisions;\n\t\tvar halfSize = size / 2;\n\n\t\tvar vertices = [], colors = [];\n\n\t\tfor ( var i = 0, j = 0, k = - halfSize; i <= divisions; i ++, k += step ) {\n\n\t\t\tvertices.push( - halfSize, 0, k, halfSize, 0, k );\n\t\t\tvertices.push( k, 0, - halfSize, k, 0, halfSize );\n\n\t\t\tvar color = i === center ? color1 : color2;\n\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\t\t\tcolor.toArray( colors, j ); j += 3;\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tGridHelper.prototype = Object.assign( Object.create( LineSegments.prototype ), {\n\n\t\tconstructor: GridHelper,\n\n\t\tcopy: function ( source ) {\n\n\t\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\t\tthis.geometry.copy( source.geometry );\n\t\t\tthis.material.copy( source.material );\n\n\t\t\treturn this;\n\n\t\t},\n\n\t\tclone: function () {\n\n\t\t\treturn new this.constructor().copy( this );\n\n\t\t}\n\n\t} );\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t * @author Hectate / http://www.github.com/Hectate\n\t */\n\n\tfunction PolarGridHelper( radius, radials, circles, divisions, color1, color2 ) {\n\n\t\tradius = radius || 10;\n\t\tradials = radials || 16;\n\t\tcircles = circles || 8;\n\t\tdivisions = divisions || 64;\n\t\tcolor1 = new Color( color1 !== undefined ? color1 : 0x444444 );\n\t\tcolor2 = new Color( color2 !== undefined ? color2 : 0x888888 );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar x, z;\n\t\tvar v, i, j, r, color;\n\n\t\t// create the radials\n\n\t\tfor ( i = 0; i <= radials; i ++ ) {\n\n\t\t\tv = ( i / radials ) * ( Math.PI * 2 );\n\n\t\t\tx = Math.sin( v ) * radius;\n\t\t\tz = Math.cos( v ) * radius;\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tvertices.push( x, 0, z );\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tcolors.push( color.r, color.g, color.b );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t}\n\n\t\t// create the circles\n\n\t\tfor ( i = 0; i <= circles; i ++ ) {\n\n\t\t\tcolor = ( i & 1 ) ? color1 : color2;\n\n\t\t\tr = radius - ( radius / circles * i );\n\n\t\t\tfor ( j = 0; j < divisions; j ++ ) {\n\n\t\t\t\t// first vertex\n\n\t\t\t\tv = ( j / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t\t// second vertex\n\n\t\t\t\tv = ( ( j + 1 ) / divisions ) * ( Math.PI * 2 );\n\n\t\t\t\tx = Math.sin( v ) * r;\n\t\t\t\tz = Math.cos( v ) * r;\n\n\t\t\t\tvertices.push( x, 0, z );\n\t\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tPolarGridHelper.prototype = Object.create( LineSegments.prototype );\n\tPolarGridHelper.prototype.constructor = PolarGridHelper;\n\n\t/**\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tfunction PositionalAudioHelper( audio, range, divisionsInnerAngle, divisionsOuterAngle ) {\n\n\t\tthis.audio = audio;\n\t\tthis.range = range || 1;\n\t\tthis.divisionsInnerAngle = divisionsInnerAngle || 16;\n\t\tthis.divisionsOuterAngle = divisionsOuterAngle || 2;\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar divisions = this.divisionsInnerAngle + this.divisionsOuterAngle * 2;\n\t\tvar positions = new Float32Array( ( divisions * 3 + 3 ) * 3 );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tvar materialInnerAngle = new LineBasicMaterial( { color: 0x00ff00 } );\n\t\tvar materialOuterAngle = new LineBasicMaterial( { color: 0xffff00 } );\n\n\t\tLine.call( this, geometry, [ materialOuterAngle, materialInnerAngle ] );\n\n\t\tthis.update();\n\n\t}\n\n\tPositionalAudioHelper.prototype = Object.create( Line.prototype );\n\tPositionalAudioHelper.prototype.constructor = PositionalAudioHelper;\n\n\tPositionalAudioHelper.prototype.update = function () {\n\n\t\tvar audio = this.audio;\n\t\tvar range = this.range;\n\t\tvar divisionsInnerAngle = this.divisionsInnerAngle;\n\t\tvar divisionsOuterAngle = this.divisionsOuterAngle;\n\n\t\tvar coneInnerAngle = _Math.degToRad( audio.panner.coneInnerAngle );\n\t\tvar coneOuterAngle = _Math.degToRad( audio.panner.coneOuterAngle );\n\n\t\tvar halfConeInnerAngle = coneInnerAngle / 2;\n\t\tvar halfConeOuterAngle = coneOuterAngle / 2;\n\n\t\tvar start = 0;\n\t\tvar count = 0;\n\t\tvar i, stride;\n\n\t\tvar geometry = this.geometry;\n\t\tvar positionAttribute = geometry.attributes.position;\n\n\t\tgeometry.clearGroups();\n\n\t\t//\n\n\t\tfunction generateSegment( from, to, divisions, materialIndex ) {\n\n\t\t\tvar step = ( to - from ) / divisions;\n\n\t\t\tpositionAttribute.setXYZ( start, 0, 0, 0 );\n\t\t\tcount ++;\n\n\t\t\tfor ( i = from; i < to; i += step ) {\n\n\t\t\t\tstride = start + count;\n\n\t\t\t\tpositionAttribute.setXYZ( stride, Math.sin( i ) * range, 0, Math.cos( i ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 1, Math.sin( Math.min( i + step, to ) ) * range, 0, Math.cos( Math.min( i + step, to ) ) * range );\n\t\t\t\tpositionAttribute.setXYZ( stride + 2, 0, 0, 0 );\n\n\t\t\t\tcount += 3;\n\n\t\t\t}\n\n\t\t\tgeometry.addGroup( start, count, materialIndex );\n\n\t\t\tstart += count;\n\t\t\tcount = 0;\n\n\t\t}\n\n\t\t//\n\n\t\tgenerateSegment( - halfConeOuterAngle, - halfConeInnerAngle, divisionsOuterAngle, 0 );\n\t\tgenerateSegment( - halfConeInnerAngle, halfConeInnerAngle, divisionsInnerAngle, 1 );\n\t\tgenerateSegment( halfConeInnerAngle, halfConeOuterAngle, divisionsOuterAngle, 0 );\n\n\t\t//\n\n\t\tpositionAttribute.needsUpdate = true;\n\n\t\tif ( coneInnerAngle === coneOuterAngle ) { this.material[ 0 ].visible = false; }\n\n\t};\n\n\tPositionalAudioHelper.prototype.dispose = function () {\n\n\t\tthis.geometry.dispose();\n\t\tthis.material[ 0 ].dispose();\n\t\tthis.material[ 1 ].dispose();\n\n\t};\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$6 = new Vector3();\n\tvar _v2$4 = new Vector3();\n\tvar _normalMatrix$2 = new Matrix3();\n\n\tfunction FaceNormalsHelper( object, size, hex, linewidth ) {\n\n\t\t// FaceNormalsHelper only supports THREE.Geometry\n\n\t\tthis.object = object;\n\n\t\tthis.size = ( size !== undefined ) ? size : 1;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar width = ( linewidth !== undefined ) ? linewidth : 1;\n\n\t\t//\n\n\t\tvar nNormals = 0;\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tif ( objGeometry && objGeometry.isGeometry ) {\n\n\t\t\tnNormals = objGeometry.faces.length;\n\n\t\t} else {\n\n\t\t\tconsole.warn( 'THREE.FaceNormalsHelper: only THREE.Geometry is supported. Use THREE.VertexNormalsHelper, instead.' );\n\n\t\t}\n\n\t\t//\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tvar positions = new Float32BufferAttribute( nNormals * 2 * 3, 3 );\n\n\t\tgeometry.setAttribute( 'position', positions );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color, linewidth: width } ) );\n\n\t\t//\n\n\t\tthis.matrixAutoUpdate = false;\n\t\tthis.update();\n\n\t}\n\n\tFaceNormalsHelper.prototype = Object.create( LineSegments.prototype );\n\tFaceNormalsHelper.prototype.constructor = FaceNormalsHelper;\n\n\tFaceNormalsHelper.prototype.update = function () {\n\n\t\tthis.object.updateMatrixWorld( true );\n\n\t\t_normalMatrix$2.getNormalMatrix( this.object.matrixWorld );\n\n\t\tvar matrixWorld = this.object.matrixWorld;\n\n\t\tvar position = this.geometry.attributes.position;\n\n\t\t//\n\n\t\tvar objGeometry = this.object.geometry;\n\n\t\tvar vertices = objGeometry.vertices;\n\n\t\tvar faces = objGeometry.faces;\n\n\t\tvar idx = 0;\n\n\t\tfor ( var i = 0, l = faces.length; i < l; i ++ ) {\n\n\t\t\tvar face = faces[ i ];\n\n\t\t\tvar normal = face.normal;\n\n\t\t\t_v1$6.copy( vertices[ face.a ] )\n\t\t\t\t.add( vertices[ face.b ] )\n\t\t\t\t.add( vertices[ face.c ] )\n\t\t\t\t.divideScalar( 3 )\n\t\t\t\t.applyMatrix4( matrixWorld );\n\n\t\t\t_v2$4.copy( normal ).applyMatrix3( _normalMatrix$2 ).normalize().multiplyScalar( this.size ).add( _v1$6 );\n\n\t\t\tposition.setXYZ( idx, _v1$6.x, _v1$6.y, _v1$6.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t\tposition.setXYZ( idx, _v2$4.x, _v2$4.y, _v2$4.z );\n\n\t\t\tidx = idx + 1;\n\n\t\t}\n\n\t\tposition.needsUpdate = true;\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tvar _v1$7 = new Vector3();\n\tvar _v2$5 = new Vector3();\n\tvar _v3$1 = new Vector3();\n\n\tfunction DirectionalLightHelper( light, size, color ) {\n\n\t\tObject3D.call( this );\n\n\t\tthis.light = light;\n\t\tthis.light.updateMatrixWorld();\n\n\t\tthis.matrix = light.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.color = color;\n\n\t\tif ( size === undefined ) { size = 1; }\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [\n\t\t\t- size, size, 0,\n\t\t\tsize, size, 0,\n\t\t\tsize, - size, 0,\n\t\t\t- size, - size, 0,\n\t\t\t- size, size, 0\n\t\t], 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { fog: false } );\n\n\t\tthis.lightPlane = new Line( geometry, material );\n\t\tthis.add( this.lightPlane );\n\n\t\tgeometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 0, 1 ], 3 ) );\n\n\t\tthis.targetLine = new Line( geometry, material );\n\t\tthis.add( this.targetLine );\n\n\t\tthis.update();\n\n\t}\n\n\tDirectionalLightHelper.prototype = Object.create( Object3D.prototype );\n\tDirectionalLightHelper.prototype.constructor = DirectionalLightHelper;\n\n\tDirectionalLightHelper.prototype.dispose = function () {\n\n\t\tthis.lightPlane.geometry.dispose();\n\t\tthis.lightPlane.material.dispose();\n\t\tthis.targetLine.geometry.dispose();\n\t\tthis.targetLine.material.dispose();\n\n\t};\n\n\tDirectionalLightHelper.prototype.update = function () {\n\n\t\t_v1$7.setFromMatrixPosition( this.light.matrixWorld );\n\t\t_v2$5.setFromMatrixPosition( this.light.target.matrixWorld );\n\t\t_v3$1.subVectors( _v2$5, _v1$7 );\n\n\t\tthis.lightPlane.lookAt( _v2$5 );\n\n\t\tif ( this.color !== undefined ) {\n\n\t\t\tthis.lightPlane.material.color.set( this.color );\n\t\t\tthis.targetLine.material.color.set( this.color );\n\n\t\t} else {\n\n\t\t\tthis.lightPlane.material.color.copy( this.light.color );\n\t\t\tthis.targetLine.material.color.copy( this.light.color );\n\n\t\t}\n\n\t\tthis.targetLine.lookAt( _v2$5 );\n\t\tthis.targetLine.scale.z = _v3$1.length();\n\n\t};\n\n\t/**\n\t * @author alteredq / http://alteredqualia.com/\n\t * @author Mugen87 / https://github.com/Mugen87\n\t *\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\tvar _vector$a = new Vector3();\n\tvar _camera = new Camera();\n\n\tfunction CameraHelper( camera ) {\n\n\t\tvar geometry = new BufferGeometry();\n\t\tvar material = new LineBasicMaterial( { color: 0xffffff, vertexColors: FaceColors } );\n\n\t\tvar vertices = [];\n\t\tvar colors = [];\n\n\t\tvar pointMap = {};\n\n\t\t// colors\n\n\t\tvar colorFrustum = new Color( 0xffaa00 );\n\t\tvar colorCone = new Color( 0xff0000 );\n\t\tvar colorUp = new Color( 0x00aaff );\n\t\tvar colorTarget = new Color( 0xffffff );\n\t\tvar colorCross = new Color( 0x333333 );\n\n\t\t// near\n\n\t\taddLine( 'n1', 'n2', colorFrustum );\n\t\taddLine( 'n2', 'n4', colorFrustum );\n\t\taddLine( 'n4', 'n3', colorFrustum );\n\t\taddLine( 'n3', 'n1', colorFrustum );\n\n\t\t// far\n\n\t\taddLine( 'f1', 'f2', colorFrustum );\n\t\taddLine( 'f2', 'f4', colorFrustum );\n\t\taddLine( 'f4', 'f3', colorFrustum );\n\t\taddLine( 'f3', 'f1', colorFrustum );\n\n\t\t// sides\n\n\t\taddLine( 'n1', 'f1', colorFrustum );\n\t\taddLine( 'n2', 'f2', colorFrustum );\n\t\taddLine( 'n3', 'f3', colorFrustum );\n\t\taddLine( 'n4', 'f4', colorFrustum );\n\n\t\t// cone\n\n\t\taddLine( 'p', 'n1', colorCone );\n\t\taddLine( 'p', 'n2', colorCone );\n\t\taddLine( 'p', 'n3', colorCone );\n\t\taddLine( 'p', 'n4', colorCone );\n\n\t\t// up\n\n\t\taddLine( 'u1', 'u2', colorUp );\n\t\taddLine( 'u2', 'u3', colorUp );\n\t\taddLine( 'u3', 'u1', colorUp );\n\n\t\t// target\n\n\t\taddLine( 'c', 't', colorTarget );\n\t\taddLine( 'p', 'c', colorCross );\n\n\t\t// cross\n\n\t\taddLine( 'cn1', 'cn2', colorCross );\n\t\taddLine( 'cn3', 'cn4', colorCross );\n\n\t\taddLine( 'cf1', 'cf2', colorCross );\n\t\taddLine( 'cf3', 'cf4', colorCross );\n\n\t\tfunction addLine( a, b, color ) {\n\n\t\t\taddPoint( a, color );\n\t\t\taddPoint( b, color );\n\n\t\t}\n\n\t\tfunction addPoint( id, color ) {\n\n\t\t\tvertices.push( 0, 0, 0 );\n\t\t\tcolors.push( color.r, color.g, color.b );\n\n\t\t\tif ( pointMap[ id ] === undefined ) {\n\n\t\t\t\tpointMap[ id ] = [];\n\n\t\t\t}\n\n\t\t\tpointMap[ id ].push( ( vertices.length / 3 ) - 1 );\n\n\t\t}\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t\tthis.camera = camera;\n\t\tif ( this.camera.updateProjectionMatrix ) { this.camera.updateProjectionMatrix(); }\n\n\t\tthis.matrix = camera.matrixWorld;\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.pointMap = pointMap;\n\n\t\tthis.update();\n\n\t}\n\n\tCameraHelper.prototype = Object.create( LineSegments.prototype );\n\tCameraHelper.prototype.constructor = CameraHelper;\n\n\tCameraHelper.prototype.update = function () {\n\n\t\tvar geometry = this.geometry;\n\t\tvar pointMap = this.pointMap;\n\n\t\tvar w = 1, h = 1;\n\n\t\t// we need just camera projection matrix inverse\n\t\t// world matrix must be identity\n\n\t\t_camera.projectionMatrixInverse.copy( this.camera.projectionMatrixInverse );\n\n\t\t// center / target\n\n\t\tsetPoint( 'c', pointMap, geometry, _camera, 0, 0, - 1 );\n\t\tsetPoint( 't', pointMap, geometry, _camera, 0, 0, 1 );\n\n\t\t// near\n\n\t\tsetPoint( 'n1', pointMap, geometry, _camera, - w, - h, - 1 );\n\t\tsetPoint( 'n2', pointMap, geometry, _camera, w, - h, - 1 );\n\t\tsetPoint( 'n3', pointMap, geometry, _camera, - w, h, - 1 );\n\t\tsetPoint( 'n4', pointMap, geometry, _camera, w, h, - 1 );\n\n\t\t// far\n\n\t\tsetPoint( 'f1', pointMap, geometry, _camera, - w, - h, 1 );\n\t\tsetPoint( 'f2', pointMap, geometry, _camera, w, - h, 1 );\n\t\tsetPoint( 'f3', pointMap, geometry, _camera, - w, h, 1 );\n\t\tsetPoint( 'f4', pointMap, geometry, _camera, w, h, 1 );\n\n\t\t// up\n\n\t\tsetPoint( 'u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u2', pointMap, geometry, _camera, - w * 0.7, h * 1.1, - 1 );\n\t\tsetPoint( 'u3', pointMap, geometry, _camera, 0, h * 2, - 1 );\n\n\t\t// cross\n\n\t\tsetPoint( 'cf1', pointMap, geometry, _camera, - w, 0, 1 );\n\t\tsetPoint( 'cf2', pointMap, geometry, _camera, w, 0, 1 );\n\t\tsetPoint( 'cf3', pointMap, geometry, _camera, 0, - h, 1 );\n\t\tsetPoint( 'cf4', pointMap, geometry, _camera, 0, h, 1 );\n\n\t\tsetPoint( 'cn1', pointMap, geometry, _camera, - w, 0, - 1 );\n\t\tsetPoint( 'cn2', pointMap, geometry, _camera, w, 0, - 1 );\n\t\tsetPoint( 'cn3', pointMap, geometry, _camera, 0, - h, - 1 );\n\t\tsetPoint( 'cn4', pointMap, geometry, _camera, 0, h, - 1 );\n\n\t\tgeometry.getAttribute( 'position' ).needsUpdate = true;\n\n\t};\n\n\tfunction setPoint( point, pointMap, geometry, camera, x, y, z ) {\n\n\t\t_vector$a.set( x, y, z ).unproject( camera );\n\n\t\tvar points = pointMap[ point ];\n\n\t\tif ( points !== undefined ) {\n\n\t\t\tvar position = geometry.getAttribute( 'position' );\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tposition.setXYZ( points[ i ], _vector$a.x, _vector$a.y, _vector$a.z );\n\n\t\t\t}\n\n\t\t}\n\n\t}\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t * @author Mugen87 / http://github.com/Mugen87\n\t */\n\n\tvar _box$3 = new Box3();\n\n\tfunction BoxHelper( object, color ) {\n\n\t\tthis.object = object;\n\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\t\tvar positions = new Float32Array( 8 * 3 );\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\t\tgeometry.setAttribute( 'position', new BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.matrixAutoUpdate = false;\n\n\t\tthis.update();\n\n\t}\n\n\tBoxHelper.prototype = Object.create( LineSegments.prototype );\n\tBoxHelper.prototype.constructor = BoxHelper;\n\n\tBoxHelper.prototype.update = function ( object ) {\n\n\t\tif ( object !== undefined ) {\n\n\t\t\tconsole.warn( 'THREE.BoxHelper: .update() has no longer arguments.' );\n\n\t\t}\n\n\t\tif ( this.object !== undefined ) {\n\n\t\t\t_box$3.setFromObject( this.object );\n\n\t\t}\n\n\t\tif ( _box$3.isEmpty() ) { return; }\n\n\t\tvar min = _box$3.min;\n\t\tvar max = _box$3.max;\n\n\t\t/*\n\t\t  5____4\n\t\t1/___0/|\n\t\t| 6__|_7\n\t\t2/___3/\n\n\t\t0: max.x, max.y, max.z\n\t\t1: min.x, max.y, max.z\n\t\t2: min.x, min.y, max.z\n\t\t3: max.x, min.y, max.z\n\t\t4: max.x, max.y, min.z\n\t\t5: min.x, max.y, min.z\n\t\t6: min.x, min.y, min.z\n\t\t7: max.x, min.y, min.z\n\t\t*/\n\n\t\tvar position = this.geometry.attributes.position;\n\t\tvar array = position.array;\n\n\t\tarray[ 0 ] = max.x; array[ 1 ] = max.y; array[ 2 ] = max.z;\n\t\tarray[ 3 ] = min.x; array[ 4 ] = max.y; array[ 5 ] = max.z;\n\t\tarray[ 6 ] = min.x; array[ 7 ] = min.y; array[ 8 ] = max.z;\n\t\tarray[ 9 ] = max.x; array[ 10 ] = min.y; array[ 11 ] = max.z;\n\t\tarray[ 12 ] = max.x; array[ 13 ] = max.y; array[ 14 ] = min.z;\n\t\tarray[ 15 ] = min.x; array[ 16 ] = max.y; array[ 17 ] = min.z;\n\t\tarray[ 18 ] = min.x; array[ 19 ] = min.y; array[ 20 ] = min.z;\n\t\tarray[ 21 ] = max.x; array[ 22 ] = min.y; array[ 23 ] = min.z;\n\n\t\tposition.needsUpdate = true;\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\n\t};\n\n\tBoxHelper.prototype.setFromObject = function ( object ) {\n\n\t\tthis.object = object;\n\t\tthis.update();\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.copy = function ( source ) {\n\n\t\tLineSegments.prototype.copy.call( this, source );\n\n\t\tthis.object = source.object;\n\n\t\treturn this;\n\n\t};\n\n\tBoxHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction Box3Helper( box, color ) {\n\n\t\tthis.type = 'Box3Helper';\n\n\t\tthis.box = box;\n\n\t\tcolor = color || 0xffff00;\n\n\t\tvar indices = new Uint16Array( [ 0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7 ] );\n\n\t\tvar positions = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, - 1, - 1, 1, - 1, - 1, - 1, - 1, 1, - 1, - 1 ];\n\n\t\tvar geometry = new BufferGeometry();\n\n\t\tgeometry.setIndex( new BufferAttribute( indices, 1 ) );\n\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\n\t\tLineSegments.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\tthis.geometry.computeBoundingSphere();\n\n\t}\n\n\tBox3Helper.prototype = Object.create( LineSegments.prototype );\n\tBox3Helper.prototype.constructor = Box3Helper;\n\n\tBox3Helper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar box = this.box;\n\n\t\tif ( box.isEmpty() ) { return; }\n\n\t\tbox.getCenter( this.position );\n\n\t\tbox.getSize( this.scale );\n\n\t\tthis.scale.multiplyScalar( 0.5 );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t */\n\n\tfunction PlaneHelper( plane, size, hex ) {\n\n\t\tthis.type = 'PlaneHelper';\n\n\t\tthis.plane = plane;\n\n\t\tthis.size = ( size === undefined ) ? 1 : size;\n\n\t\tvar color = ( hex !== undefined ) ? hex : 0xffff00;\n\n\t\tvar positions = [ 1, - 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, - 1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0 ];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( positions, 3 ) );\n\t\tgeometry.computeBoundingSphere();\n\n\t\tLine.call( this, geometry, new LineBasicMaterial( { color: color } ) );\n\n\t\t//\n\n\t\tvar positions2 = [ 1, 1, 1, - 1, 1, 1, - 1, - 1, 1, 1, 1, 1, - 1, - 1, 1, 1, - 1, 1 ];\n\n\t\tvar geometry2 = new BufferGeometry();\n\t\tgeometry2.setAttribute( 'position', new Float32BufferAttribute( positions2, 3 ) );\n\t\tgeometry2.computeBoundingSphere();\n\n\t\tthis.add( new Mesh( geometry2, new MeshBasicMaterial( { color: color, opacity: 0.2, transparent: true, depthWrite: false } ) ) );\n\n\t}\n\n\tPlaneHelper.prototype = Object.create( Line.prototype );\n\tPlaneHelper.prototype.constructor = PlaneHelper;\n\n\tPlaneHelper.prototype.updateMatrixWorld = function ( force ) {\n\n\t\tvar scale = - this.plane.constant;\n\n\t\tif ( Math.abs( scale ) < 1e-8 ) { scale = 1e-8; } // sign does not matter\n\n\t\tthis.scale.set( 0.5 * this.size, 0.5 * this.size, scale );\n\n\t\tthis.children[ 0 ].material.side = ( scale < 0 ) ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\tthis.lookAt( this.plane.normal );\n\n\t\tObject3D.prototype.updateMatrixWorld.call( this, force );\n\n\t};\n\n\t/**\n\t * @author WestLangley / http://github.com/WestLangley\n\t * @author zz85 / http://github.com/zz85\n\t * @author bhouston / http://clara.io\n\t *\n\t * Creates an arrow for visualizing directions\n\t *\n\t * Parameters:\n\t *  dir - Vector3\n\t *  origin - Vector3\n\t *  length - Number\n\t *  color - color in hex value\n\t *  headLength - Number\n\t *  headWidth - Number\n\t */\n\n\tvar _axis = new Vector3();\n\tvar _lineGeometry, _coneGeometry;\n\n\tfunction ArrowHelper( dir, origin, length, color, headLength, headWidth ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tObject3D.call( this );\n\n\t\tif ( dir === undefined ) { dir = new Vector3( 0, 0, 1 ); }\n\t\tif ( origin === undefined ) { origin = new Vector3( 0, 0, 0 ); }\n\t\tif ( length === undefined ) { length = 1; }\n\t\tif ( color === undefined ) { color = 0xffff00; }\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tif ( _lineGeometry === undefined ) {\n\n\t\t\t_lineGeometry = new BufferGeometry();\n\t\t\t_lineGeometry.setAttribute( 'position', new Float32BufferAttribute( [ 0, 0, 0, 0, 1, 0 ], 3 ) );\n\n\t\t\t_coneGeometry = new CylinderBufferGeometry( 0, 0.5, 1, 5, 1 );\n\t\t\t_coneGeometry.translate( 0, - 0.5, 0 );\n\n\t\t}\n\n\t\tthis.position.copy( origin );\n\n\t\tthis.line = new Line( _lineGeometry, new LineBasicMaterial( { color: color } ) );\n\t\tthis.line.matrixAutoUpdate = false;\n\t\tthis.add( this.line );\n\n\t\tthis.cone = new Mesh( _coneGeometry, new MeshBasicMaterial( { color: color } ) );\n\t\tthis.cone.matrixAutoUpdate = false;\n\t\tthis.add( this.cone );\n\n\t\tthis.setDirection( dir );\n\t\tthis.setLength( length, headLength, headWidth );\n\n\t}\n\n\tArrowHelper.prototype = Object.create( Object3D.prototype );\n\tArrowHelper.prototype.constructor = ArrowHelper;\n\n\tArrowHelper.prototype.setDirection = function ( dir ) {\n\n\t\t// dir is assumed to be normalized\n\n\t\tif ( dir.y > 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 0, 0, 0, 1 );\n\n\t\t} else if ( dir.y < - 0.99999 ) {\n\n\t\t\tthis.quaternion.set( 1, 0, 0, 0 );\n\n\t\t} else {\n\n\t\t\t_axis.set( dir.z, 0, - dir.x ).normalize();\n\n\t\t\tvar radians = Math.acos( dir.y );\n\n\t\t\tthis.quaternion.setFromAxisAngle( _axis, radians );\n\n\t\t}\n\n\t};\n\n\tArrowHelper.prototype.setLength = function ( length, headLength, headWidth ) {\n\n\t\tif ( headLength === undefined ) { headLength = 0.2 * length; }\n\t\tif ( headWidth === undefined ) { headWidth = 0.2 * headLength; }\n\n\t\tthis.line.scale.set( 1, Math.max( 0.0001, length - headLength ), 1 ); // see #17458\n\t\tthis.line.updateMatrix();\n\n\t\tthis.cone.scale.set( headWidth, headLength, headWidth );\n\t\tthis.cone.position.y = length;\n\t\tthis.cone.updateMatrix();\n\n\t};\n\n\tArrowHelper.prototype.setColor = function ( color ) {\n\n\t\tthis.line.material.color.set( color );\n\t\tthis.cone.material.color.set( color );\n\n\t};\n\n\tArrowHelper.prototype.copy = function ( source ) {\n\n\t\tObject3D.prototype.copy.call( this, source, false );\n\n\t\tthis.line.copy( source.line );\n\t\tthis.cone.copy( source.cone );\n\n\t\treturn this;\n\n\t};\n\n\tArrowHelper.prototype.clone = function () {\n\n\t\treturn new this.constructor().copy( this );\n\n\t};\n\n\t/**\n\t * @author sroucheray / http://sroucheray.org/\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction AxesHelper( size ) {\n\n\t\tsize = size || 1;\n\n\t\tvar vertices = [\n\t\t\t0, 0, 0,\tsize, 0, 0,\n\t\t\t0, 0, 0,\t0, size, 0,\n\t\t\t0, 0, 0,\t0, 0, size\n\t\t];\n\n\t\tvar colors = [\n\t\t\t1, 0, 0,\t1, 0.6, 0,\n\t\t\t0, 1, 0,\t0.6, 1, 0,\n\t\t\t0, 0, 1,\t0, 0.6, 1\n\t\t];\n\n\t\tvar geometry = new BufferGeometry();\n\t\tgeometry.setAttribute( 'position', new Float32BufferAttribute( vertices, 3 ) );\n\t\tgeometry.setAttribute( 'color', new Float32BufferAttribute( colors, 3 ) );\n\n\t\tvar material = new LineBasicMaterial( { vertexColors: VertexColors } );\n\n\t\tLineSegments.call( this, geometry, material );\n\n\t}\n\n\tAxesHelper.prototype = Object.create( LineSegments.prototype );\n\tAxesHelper.prototype.constructor = AxesHelper;\n\n\t/**\n\t * @author mrdoob / http://mrdoob.com/\n\t */\n\n\tfunction Face4( a, b, c, d, normal, color, materialIndex ) {\n\n\t\tconsole.warn( 'THREE.Face4 has been removed. A THREE.Face3 will be created instead.' );\n\t\treturn new Face3( a, b, c, normal, color, materialIndex );\n\n\t}\n\n\tvar LineStrip = 0;\n\n\tvar LinePieces = 1;\n\n\tfunction MeshFaceMaterial( materials ) {\n\n\t\tconsole.warn( 'THREE.MeshFaceMaterial has been removed. Use an Array instead.' );\n\t\treturn materials;\n\n\t}\n\n\tfunction MultiMaterial( materials ) {\n\n\t\tif ( materials === undefined ) { materials = []; }\n\n\t\tconsole.warn( 'THREE.MultiMaterial has been removed. Use an Array instead.' );\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\t\tmaterials.clone = function () {\n\n\t\t\treturn materials.slice();\n\n\t\t};\n\t\treturn materials;\n\n\t}\n\n\tfunction PointCloud( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.PointCloud has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction Particle( material ) {\n\n\t\tconsole.warn( 'THREE.Particle has been renamed to THREE.Sprite.' );\n\t\treturn new Sprite( material );\n\n\t}\n\n\tfunction ParticleSystem( geometry, material ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystem has been renamed to THREE.Points.' );\n\t\treturn new Points( geometry, material );\n\n\t}\n\n\tfunction PointCloudMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleBasicMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction ParticleSystemMaterial( parameters ) {\n\n\t\tconsole.warn( 'THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.' );\n\t\treturn new PointsMaterial( parameters );\n\n\t}\n\n\tfunction Vertex( x, y, z ) {\n\n\t\tconsole.warn( 'THREE.Vertex has been removed. Use THREE.Vector3 instead.' );\n\t\treturn new Vector3( x, y, z );\n\n\t}\n\n\t//\n\n\tfunction DynamicBufferAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setDynamic( true ) instead.' );\n\t\treturn new BufferAttribute( array, itemSize ).setDynamic( true );\n\n\t}\n\n\tfunction Int8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.' );\n\t\treturn new Int8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.' );\n\t\treturn new Uint8BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint8ClampedAttribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.' );\n\t\treturn new Uint8ClampedBufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.' );\n\t\treturn new Int16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint16Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.' );\n\t\treturn new Uint16BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Int32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.' );\n\t\treturn new Int32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Uint32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.' );\n\t\treturn new Uint32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float32Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.' );\n\t\treturn new Float32BufferAttribute( array, itemSize );\n\n\t}\n\n\tfunction Float64Attribute( array, itemSize ) {\n\n\t\tconsole.warn( 'THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.' );\n\t\treturn new Float64BufferAttribute( array, itemSize );\n\n\t}\n\n\t//\n\n\tCurve.create = function ( construct, getPoint ) {\n\n\t\tconsole.log( 'THREE.Curve.create() has been deprecated' );\n\n\t\tconstruct.prototype = Object.create( Curve.prototype );\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\n\t\treturn construct;\n\n\t};\n\n\t//\n\n\tObject.assign( CurvePath.prototype, {\n\n\t\tcreatePointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from path points (for Line or Points objects)\n\n\t\t\tvar pts = this.getPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateSpacedPointsGeometry: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createSpacedPointsGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\t// generate geometry from equidistant sampling along the path\n\n\t\t\tvar pts = this.getSpacedPoints( divisions );\n\t\t\treturn this.createGeometry( pts );\n\n\t\t},\n\n\t\tcreateGeometry: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.CurvePath: .createGeometry() has been removed. Use new THREE.Geometry().setFromPoints( points ) instead.' );\n\n\t\t\tvar geometry = new Geometry();\n\n\t\t\tfor ( var i = 0, l = points.length; i < l; i ++ ) {\n\n\t\t\t\tvar point = points[ i ];\n\t\t\t\tgeometry.vertices.push( new Vector3( point.x, point.y, point.z || 0 ) );\n\n\t\t\t}\n\n\t\t\treturn geometry;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Path.prototype, {\n\n\t\tfromPoints: function ( points ) {\n\n\t\t\tconsole.warn( 'THREE.Path: .fromPoints() has been renamed to .setFromPoints().' );\n\t\t\treturn this.setFromPoints( points );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction ClosedSplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.ClosedSplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\t\tthis.closed = true;\n\n\t}\n\n\tClosedSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction SplineCurve3( points ) {\n\n\t\tconsole.warn( 'THREE.SplineCurve3 has been deprecated. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSplineCurve3.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\t//\n\n\tfunction Spline( points ) {\n\n\t\tconsole.warn( 'THREE.Spline has been removed. Use THREE.CatmullRomCurve3 instead.' );\n\n\t\tCatmullRomCurve3.call( this, points );\n\t\tthis.type = 'catmullrom';\n\n\t}\n\n\tSpline.prototype = Object.create( CatmullRomCurve3.prototype );\n\n\tObject.assign( Spline.prototype, {\n\n\t\tinitFromArray: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .initFromArray() has been removed.' );\n\n\t\t},\n\t\tgetControlPointsArray: function ( /* optionalTarget */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .getControlPointsArray() has been removed.' );\n\n\t\t},\n\t\treparametrizeByArcLength: function ( /* samplingCoef */ ) {\n\n\t\t\tconsole.error( 'THREE.Spline: .reparametrizeByArcLength() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tfunction AxisHelper( size ) {\n\n\t\tconsole.warn( 'THREE.AxisHelper has been renamed to THREE.AxesHelper.' );\n\t\treturn new AxesHelper( size );\n\n\t}\n\n\tfunction BoundingBoxHelper( object, color ) {\n\n\t\tconsole.warn( 'THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.' );\n\t\treturn new BoxHelper( object, color );\n\n\t}\n\n\tfunction EdgesHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.' );\n\t\treturn new LineSegments( new EdgesGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\n\t\tconsole.error( 'THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.' );\n\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\n\t\tconsole.error( 'THREE.SkeletonHelper: update() no longer needs to be called.' );\n\n\t};\n\n\tfunction WireframeHelper( object, hex ) {\n\n\t\tconsole.warn( 'THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.' );\n\t\treturn new LineSegments( new WireframeGeometry( object.geometry ), new LineBasicMaterial( { color: hex !== undefined ? hex : 0xffffff } ) );\n\n\t}\n\n\t//\n\n\tObject.assign( Loader.prototype, {\n\n\t\textractUrlBase: function ( url ) {\n\n\t\t\tconsole.warn( 'THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.' );\n\t\t\treturn LoaderUtils.extractUrlBase( url );\n\n\t\t}\n\n\t} );\n\n\tLoader.Handlers = {\n\n\t\tadd: function ( /* regex, loader */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.' );\n\n\t\t},\n\n\t\tget: function ( /* file */ ) {\n\n\t\t\tconsole.error( 'THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.' );\n\n\t\t}\n\n\t};\n\n\tfunction XHRLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.XHRLoader has been renamed to THREE.FileLoader.' );\n\t\treturn new FileLoader( manager );\n\n\t}\n\n\tfunction BinaryTextureLoader( manager ) {\n\n\t\tconsole.warn( 'THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.' );\n\t\treturn new DataTextureLoader( manager );\n\n\t}\n\n\tObject.assign( ObjectLoader.prototype, {\n\n\t\tsetTexturePath: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().' );\n\t\t\treturn this.setResourcePath( value );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Box2.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box2: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box2: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tObject.assign( Box3.prototype, {\n\n\t\tcenter: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .center() has been renamed to .getCenter().' );\n\t\t\treturn this.getCenter( optionalTarget );\n\n\t\t},\n\t\tempty: function () {\n\n\t\t\tconsole.warn( 'THREE.Box3: .empty() has been renamed to .isEmpty().' );\n\t\t\treturn this.isEmpty();\n\n\t\t},\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t},\n\t\tsize: function ( optionalTarget ) {\n\n\t\t\tconsole.warn( 'THREE.Box3: .size() has been renamed to .getSize().' );\n\t\t\treturn this.getSize( optionalTarget );\n\n\t\t}\n\t} );\n\n\tLine3.prototype.center = function ( optionalTarget ) {\n\n\t\tconsole.warn( 'THREE.Line3: .center() has been renamed to .getCenter().' );\n\t\treturn this.getCenter( optionalTarget );\n\n\t};\n\n\tObject.assign( _Math, {\n\n\t\trandom16: function () {\n\n\t\t\tconsole.warn( 'THREE.Math: .random16() has been deprecated. Use Math.random() instead.' );\n\t\t\treturn Math.random();\n\n\t\t},\n\n\t\tnearestPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nearestPowerOfTwo() has been renamed to .floorPowerOfTwo().' );\n\t\t\treturn _Math.floorPowerOfTwo( value );\n\n\t\t},\n\n\t\tnextPowerOfTwo: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Math: .nextPowerOfTwo() has been renamed to .ceilPowerOfTwo().' );\n\t\t\treturn _Math.ceilPowerOfTwo( value );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix3.prototype, {\n\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix3( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix3: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix3: .applyToVector3Array() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Matrix4.prototype, {\n\n\t\textractPosition: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().' );\n\t\t\treturn this.copyPosition( m );\n\n\t\t},\n\t\tflattenToArrayOffset: function ( array, offset ) {\n\n\t\t\tconsole.warn( \"THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.\" );\n\t\t\treturn this.toArray( array, offset );\n\n\t\t},\n\t\tgetPosition: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.' );\n\t\t\treturn new Vector3().setFromMatrixColumn( this, 3 );\n\n\t\t},\n\t\tsetRotationFromQuaternion: function ( q ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().' );\n\t\t\treturn this.makeRotationFromQuaternion( q );\n\n\t\t},\n\t\tmultiplyToArray: function () {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyToArray() has been removed.' );\n\n\t\t},\n\t\tmultiplyVector3: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector4: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\tmultiplyVector3Array: function ( /* a */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .multiplyVector3Array() has been removed.' );\n\n\t\t},\n\t\trotateAxis: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.' );\n\t\t\tv.transformDirection( this );\n\n\t\t},\n\t\tcrossVector: function ( vector ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.' );\n\t\t\treturn vector.applyMatrix4( this );\n\n\t\t},\n\t\ttranslate: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .translate() has been removed.' );\n\n\t\t},\n\t\trotateX: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateX() has been removed.' );\n\n\t\t},\n\t\trotateY: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateY() has been removed.' );\n\n\t\t},\n\t\trotateZ: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateZ() has been removed.' );\n\n\t\t},\n\t\trotateByAxis: function () {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .rotateByAxis() has been removed.' );\n\n\t\t},\n\t\tapplyToBuffer: function ( buffer /*, offset, length */ ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .applyToBuffer() has been removed. Use matrix.applyToBufferAttribute( attribute ) instead.' );\n\t\t\treturn this.applyToBufferAttribute( buffer );\n\n\t\t},\n\t\tapplyToVector3Array: function ( /* array, offset, length */ ) {\n\n\t\t\tconsole.error( 'THREE.Matrix4: .applyToVector3Array() has been removed.' );\n\n\t\t},\n\t\tmakeFrustum: function ( left, right, bottom, top, near, far ) {\n\n\t\t\tconsole.warn( 'THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.' );\n\t\t\treturn this.makePerspective( left, right, top, bottom, near, far );\n\n\t\t}\n\n\t} );\n\n\tPlane.prototype.isIntersectionLine = function ( line ) {\n\n\t\tconsole.warn( 'THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().' );\n\t\treturn this.intersectsLine( line );\n\n\t};\n\n\tQuaternion.prototype.multiplyVector3 = function ( vector ) {\n\n\t\tconsole.warn( 'THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.' );\n\t\treturn vector.applyQuaternion( this );\n\n\t};\n\n\tObject.assign( Ray.prototype, {\n\n\t\tisIntersectionBox: function ( box ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().' );\n\t\t\treturn this.intersectsBox( box );\n\n\t\t},\n\t\tisIntersectionPlane: function ( plane ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().' );\n\t\t\treturn this.intersectsPlane( plane );\n\n\t\t},\n\t\tisIntersectionSphere: function ( sphere ) {\n\n\t\t\tconsole.warn( 'THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().' );\n\t\t\treturn this.intersectsSphere( sphere );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle.prototype, {\n\n\t\tarea: function () {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .area() has been renamed to .getArea().' );\n\t\t\treturn this.getArea();\n\n\t\t},\n\t\tbarycoordFromPoint: function ( point, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn this.getBarycoord( point, target );\n\n\t\t},\n\t\tmidpoint: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .midpoint() has been renamed to .getMidpoint().' );\n\t\t\treturn this.getMidpoint( target );\n\n\t\t},\n\t\tnormal: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn this.getNormal( target );\n\n\t\t},\n\t\tplane: function ( target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .plane() has been renamed to .getPlane().' );\n\t\t\treturn this.getPlane( target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Triangle, {\n\n\t\tbarycoordFromPoint: function ( point, a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().' );\n\t\t\treturn Triangle.getBarycoord( point, a, b, c, target );\n\n\t\t},\n\t\tnormal: function ( a, b, c, target ) {\n\n\t\t\tconsole.warn( 'THREE.Triangle: .normal() has been renamed to .getNormal().' );\n\t\t\treturn Triangle.getNormal( a, b, c, target );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Shape.prototype, {\n\n\t\textractAllPoints: function ( divisions ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.' );\n\t\t\treturn this.extractPoints( divisions );\n\n\t\t},\n\t\textrude: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.' );\n\t\t\treturn new ExtrudeGeometry( this, options );\n\n\t\t},\n\t\tmakeGeometry: function ( options ) {\n\n\t\t\tconsole.warn( 'THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.' );\n\t\t\treturn new ShapeGeometry( this, options );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector2.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector3.prototype, {\n\n\t\tsetEulerFromRotationMatrix: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.' );\n\n\t\t},\n\t\tsetEulerFromQuaternion: function () {\n\n\t\t\tconsole.error( 'THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.' );\n\n\t\t},\n\t\tgetPositionFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().' );\n\t\t\treturn this.setFromMatrixPosition( m );\n\n\t\t},\n\t\tgetScaleFromMatrix: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().' );\n\t\t\treturn this.setFromMatrixScale( m );\n\n\t\t},\n\t\tgetColumnFromMatrix: function ( index, matrix ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().' );\n\t\t\treturn this.setFromMatrixColumn( matrix, index );\n\n\t\t},\n\t\tapplyProjection: function ( m ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.' );\n\t\t\treturn this.applyMatrix4( m );\n\n\t\t},\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tdistanceToManhattan: function ( v ) {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().' );\n\t\t\treturn this.manhattanDistanceTo( v );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Vector4.prototype, {\n\n\t\tfromAttribute: function ( attribute, index, offset ) {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().' );\n\t\t\treturn this.fromBufferAttribute( attribute, index, offset );\n\n\t\t},\n\t\tlengthManhattan: function () {\n\n\t\t\tconsole.warn( 'THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().' );\n\t\t\treturn this.manhattanLength();\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( Geometry.prototype, {\n\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeLineDistances: function () {\n\n\t\t\tconsole.error( 'THREE.Geometry: .computeLineDistances() has been removed. Use THREE.Line.computeLineDistances() instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.assign( Object3D.prototype, {\n\n\t\tgetChildByName: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().' );\n\t\t\treturn this.getObjectByName( name );\n\n\t\t},\n\t\trenderDepth: function () {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.' );\n\n\t\t},\n\t\ttranslate: function ( distance, axis ) {\n\n\t\t\tconsole.warn( 'THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.' );\n\t\t\treturn this.translateOnAxis( axis, distance );\n\n\t\t},\n\t\tgetWorldRotation: function () {\n\n\t\t\tconsole.error( 'THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.' );\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( Object3D.prototype, {\n\n\t\teulerOrder: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\treturn this.rotation.order;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .eulerOrder is now .rotation.order.' );\n\t\t\t\tthis.rotation.order = value;\n\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( LOD.prototype, {\n\n\t\tobjects: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.LOD: .objects has been renamed to .levels.' );\n\t\t\t\treturn this.levels;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperty( Skeleton.prototype, 'useVertexTexture', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t},\n\t\tset: function () {\n\n\t\t\tconsole.warn( 'THREE.Skeleton: useVertexTexture has been removed.' );\n\n\t\t}\n\n\t} );\n\n\tSkinnedMesh.prototype.initBones = function () {\n\n\t\tconsole.error( 'THREE.SkinnedMesh: initBones() has been removed.' );\n\n\t};\n\n\tObject.defineProperty( Curve.prototype, '__arcLengthDivisions', {\n\n\t\tget: function () {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\treturn this.arcLengthDivisions;\n\n\t\t},\n\t\tset: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.Curve: .__arcLengthDivisions is now .arcLengthDivisions.' );\n\t\t\tthis.arcLengthDivisions = value;\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tPerspectiveCamera.prototype.setLens = function ( focalLength, filmGauge ) {\n\n\t\tconsole.warn( \"THREE.PerspectiveCamera.setLens is deprecated. \" +\n\t\t\t\t\"Use .setFocalLength and .filmGauge for a photographic setup.\" );\n\n\t\tif ( filmGauge !== undefined ) { this.filmGauge = filmGauge; }\n\t\tthis.setFocalLength( focalLength );\n\n\t};\n\n\t//\n\n\tObject.defineProperties( Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .onlyShadow has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFov is now .shadow.camera.fov.' );\n\t\t\t\tthis.shadow.camera.fov = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraLeft is now .shadow.camera.left.' );\n\t\t\t\tthis.shadow.camera.left = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraRight is now .shadow.camera.right.' );\n\t\t\t\tthis.shadow.camera.right = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraTop is now .shadow.camera.top.' );\n\t\t\t\tthis.shadow.camera.top = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.' );\n\t\t\t\tthis.shadow.camera.bottom = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraNear is now .shadow.camera.near.' );\n\t\t\t\tthis.shadow.camera.near = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraFar is now .shadow.camera.far.' );\n\t\t\t\tthis.shadow.camera.far = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowBias is now .shadow.bias.' );\n\t\t\t\tthis.shadow.bias = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowDarkness has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.' );\n\t\t\t\tthis.shadow.mapSize.width = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.' );\n\t\t\t\tthis.shadow.mapSize.height = value;\n\n\t\t\t}\n\t\t}\n\t} );\n\n\t//\n\n\tObject.defineProperties( BufferAttribute.prototype, {\n\n\t\tlength: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .length has been deprecated. Use .count instead.' );\n\t\t\t\treturn this.array.length;\n\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( DynamicDrawUsage );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( BufferAttribute.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tcopyIndicesArray: function ( /* indices */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .copyIndicesArray() has been removed.' );\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\tObject.assign( BufferGeometry.prototype, {\n\n\t\taddIndex: function ( index ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().' );\n\t\t\tthis.setIndex( index );\n\n\t\t},\n\t\taddAttribute: function ( name, attribute ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().' );\n\n\t\t\tif ( ! ( attribute && attribute.isBufferAttribute ) && ! ( attribute && attribute.isInterleavedBufferAttribute ) ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).' );\n\n\t\t\t\treturn this.setAttribute( name, new BufferAttribute( arguments[ 1 ], arguments[ 2 ] ) );\n\n\t\t\t}\n\n\t\t\tif ( name === 'index' ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.' );\n\t\t\t\tthis.setIndex( attribute );\n\n\t\t\t\treturn this;\n\n\t\t\t}\n\n\t\t\treturn this.setAttribute( name, attribute );\n\n\t\t},\n\t\taddDrawCall: function ( start, count, indexOffset ) {\n\n\t\t\tif ( indexOffset !== undefined ) {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.' );\n\n\t\t\t}\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .addDrawCall() is now .addGroup().' );\n\t\t\tthis.addGroup( start, count );\n\n\t\t},\n\t\tclearDrawCalls: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().' );\n\t\t\tthis.clearGroups();\n\n\t\t},\n\t\tcomputeTangents: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeTangents() has been removed.' );\n\n\t\t},\n\t\tcomputeOffsets: function () {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .computeOffsets() has been removed.' );\n\n\t\t},\n\t\tremoveAttribute: function ( name ) {\n\n\t\t\tconsole.warn( 'THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().' );\n\n\t\t\treturn this.deleteAttribute( name );\n\n\t\t}\n\t} );\n\n\tObject.defineProperties( BufferGeometry.prototype, {\n\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.BufferGeometry: .drawcalls has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.BufferGeometry: .offsets has been renamed to .groups.' );\n\t\t\t\treturn this.groups;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( InterleavedBuffer.prototype, {\n\n\t\tdynamic: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .length has been deprecated. Use .usage instead.' );\n\t\t\t\tthis.setUsage( value );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.assign( InterleavedBuffer.prototype, {\n\t\tsetDynamic: function ( value ) {\n\n\t\t\tconsole.warn( 'THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.' );\n\t\t\tthis.setUsage( value === true ? DynamicDrawUsage : StaticDrawUsage );\n\t\t\treturn this;\n\n\t\t},\n\t\tsetArray: function ( /* array */ ) {\n\n\t\t\tconsole.error( 'THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers' );\n\n\t\t}\n\t} );\n\n\t//\n\n\tObject.assign( ExtrudeBufferGeometry.prototype, {\n\n\t\tgetArrays: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .getArrays() has been removed.' );\n\n\t\t},\n\n\t\taddShapeList: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShapeList() has been removed.' );\n\n\t\t},\n\n\t\taddShape: function () {\n\n\t\t\tconsole.error( 'THREE.ExtrudeBufferGeometry: .addShape() has been removed.' );\n\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Uniform.prototype, {\n\n\t\tdynamic: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .dynamic has been removed. Use object.onBeforeRender() instead.' );\n\n\t\t\t}\n\t\t},\n\t\tonUpdate: {\n\t\t\tvalue: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.' );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Material.prototype, {\n\n\t\twrapAround: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapAround has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\toverdraw: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .overdraw has been removed.' );\n\n\t\t\t}\n\t\t},\n\n\t\twrapRGB: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Material: .wrapRGB has been removed.' );\n\t\t\t\treturn new Color();\n\n\t\t\t}\n\t\t},\n\n\t\tshading: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.error( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.' );\n\t\t\t\tthis.flatShading = ( value === FlatShading );\n\n\t\t\t}\n\t\t},\n\n\t\tstencilMask: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\treturn this.stencilFuncMask;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.' );\n\t\t\t\tthis.stencilFuncMask = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( MeshPhongMaterial.prototype, {\n\n\t\tmetal: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead.' );\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.MeshPhongMaterial: .metal has been removed. Use THREE.MeshStandardMaterial instead' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( ShaderMaterial.prototype, {\n\n\t\tderivatives: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\treturn this.extensions.derivatives;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.' );\n\t\t\t\tthis.extensions.derivatives = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.assign( WebGLRenderer.prototype, {\n\n\t\tclearTarget: function ( renderTarget, color, depth, stencil ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.' );\n\t\t\tthis.setRenderTarget( renderTarget );\n\t\t\tthis.clear( color, depth, stencil );\n\n\t\t},\n\t\tanimate: function ( callback ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .animate() is now .setAnimationLoop().' );\n\t\t\tthis.setAnimationLoop( callback );\n\n\t\t},\n\t\tgetCurrentRenderTarget: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().' );\n\t\t\treturn this.getRenderTarget();\n\n\t\t},\n\t\tgetMaxAnisotropy: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().' );\n\t\t\treturn this.capabilities.getMaxAnisotropy();\n\n\t\t},\n\t\tgetPrecision: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.' );\n\t\t\treturn this.capabilities.precision;\n\n\t\t},\n\t\tresetGLState: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .resetGLState() is now .state.reset().' );\n\t\t\treturn this.state.reset();\n\n\t\t},\n\t\tsupportsFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_float' );\n\n\t\t},\n\t\tsupportsHalfFloatTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_texture_half_float' );\n\n\t\t},\n\t\tsupportsStandardDerivatives: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).' );\n\t\t\treturn this.extensions.get( 'OES_standard_derivatives' );\n\n\t\t},\n\t\tsupportsCompressedTextureS3TC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_s3tc' );\n\n\t\t},\n\t\tsupportsCompressedTexturePVRTC: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).' );\n\t\t\treturn this.extensions.get( 'WEBGL_compressed_texture_pvrtc' );\n\n\t\t},\n\t\tsupportsBlendMinMax: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).' );\n\t\t\treturn this.extensions.get( 'EXT_blend_minmax' );\n\n\t\t},\n\t\tsupportsVertexTextures: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.' );\n\t\t\treturn this.capabilities.vertexTextures;\n\n\t\t},\n\t\tsupportsInstancedArrays: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).' );\n\t\t\treturn this.extensions.get( 'ANGLE_instanced_arrays' );\n\n\t\t},\n\t\tenableScissorTest: function ( boolean ) {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().' );\n\t\t\tthis.setScissorTest( boolean );\n\n\t\t},\n\t\tinitMaterial: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .initMaterial() has been removed.' );\n\n\t\t},\n\t\taddPrePlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPrePlugin() has been removed.' );\n\n\t\t},\n\t\taddPostPlugin: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .addPostPlugin() has been removed.' );\n\n\t\t},\n\t\tupdateShadowMap: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .updateShadowMap() has been removed.' );\n\n\t\t},\n\t\tsetFaceCulling: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setFaceCulling() has been removed.' );\n\n\t\t},\n\t\tallocTextureUnit: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .allocTextureUnit() has been removed.' );\n\n\t\t},\n\t\tsetTexture: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture() has been removed.' );\n\n\t\t},\n\t\tsetTexture2D: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTexture2D() has been removed.' );\n\n\t\t},\n\t\tsetTextureCube: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .setTextureCube() has been removed.' );\n\n\t\t},\n\t\tgetActiveMipMapLevel: function () {\n\n\t\t\tconsole.warn( 'THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().' );\n\t\t\treturn this.getActiveMipmapLevel();\n\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLRenderer.prototype, {\n\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.enabled;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.' );\n\t\t\t\tthis.shadowMap.enabled = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\n\t\t\t\treturn this.shadowMap.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.' );\n\t\t\t\tthis.shadowMap.type = value;\n\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.' );\n\t\t\t\treturn this.getContext();\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tObject.defineProperties( WebGLShadowMap.prototype, {\n\n\t\tcullFace: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function ( /* cullFace */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\t\t\t\treturn undefined;\n\n\t\t\t},\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTargetCube.prototype, {\n\n\t\tactiveCubeFace: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeCubeFace has been removed. It is now the second parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t\t}\n\t\t},\n\t\tactiveMipMapLevel: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTargetCube: .activeMipMapLevel has been removed. It is now the third parameter of WebGLRenderer.setRenderTarget().' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebGLRenderTarget.prototype, {\n\n\t\twrapS: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\treturn this.texture.wrapS;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.' );\n\t\t\t\tthis.texture.wrapS = value;\n\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\treturn this.texture.wrapT;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.' );\n\t\t\t\tthis.texture.wrapT = value;\n\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\treturn this.texture.magFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.' );\n\t\t\t\tthis.texture.magFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\treturn this.texture.minFilter;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.' );\n\t\t\t\tthis.texture.minFilter = value;\n\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\treturn this.texture.anisotropy;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.' );\n\t\t\t\tthis.texture.anisotropy = value;\n\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\treturn this.texture.offset;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .offset is now .texture.offset.' );\n\t\t\t\tthis.texture.offset = value;\n\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\treturn this.texture.repeat;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .repeat is now .texture.repeat.' );\n\t\t\t\tthis.texture.repeat = value;\n\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\treturn this.texture.format;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .format is now .texture.format.' );\n\t\t\t\tthis.texture.format = value;\n\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\treturn this.texture.type;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .type is now .texture.type.' );\n\t\t\t\tthis.texture.type = value;\n\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\treturn this.texture.generateMipmaps;\n\n\t\t\t},\n\t\t\tset: function ( value ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.' );\n\t\t\t\tthis.texture.generateMipmaps = value;\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( WebVRManager.prototype, {\n\n\t\tstanding: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .standing has been removed.' );\n\n\t\t\t}\n\t\t},\n\t\tuserHeight: {\n\t\t\tset: function ( /* value */ ) {\n\n\t\t\t\tconsole.warn( 'THREE.WebVRManager: .userHeight has been removed.' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\t//\n\n\tObject.defineProperties( Audio.prototype, {\n\n\t\tload: {\n\t\t\tvalue: function ( file ) {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.' );\n\t\t\t\tvar scope = this;\n\t\t\t\tvar audioLoader = new AudioLoader();\n\t\t\t\taudioLoader.load( file, function ( buffer ) {\n\n\t\t\t\t\tscope.setBuffer( buffer );\n\n\t\t\t\t} );\n\t\t\t\treturn this;\n\n\t\t\t}\n\t\t},\n\t\tstartTime: {\n\t\t\tset: function () {\n\n\t\t\t\tconsole.warn( 'THREE.Audio: .startTime is now .play( delay ).' );\n\n\t\t\t}\n\t\t}\n\n\t} );\n\n\tAudioAnalyser.prototype.getData = function () {\n\n\t\tconsole.warn( 'THREE.AudioAnalyser: .getData() is now .getFrequencyData().' );\n\t\treturn this.getFrequencyData();\n\n\t};\n\n\t//\n\n\tCubeCamera.prototype.updateCubeMap = function ( renderer, scene ) {\n\n\t\tconsole.warn( 'THREE.CubeCamera: .updateCubeMap() is now .update().' );\n\t\treturn this.update( renderer, scene );\n\n\t};\n\n\t//\n\n\tvar GeometryUtils = {\n\n\t\tmerge: function ( geometry1, geometry2, materialIndexOffset ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .merge() has been moved to Geometry. Use geometry.merge( geometry2, matrix, materialIndexOffset ) instead.' );\n\t\t\tvar matrix;\n\n\t\t\tif ( geometry2.isMesh ) {\n\n\t\t\t\tgeometry2.matrixAutoUpdate && geometry2.updateMatrix();\n\n\t\t\t\tmatrix = geometry2.matrix;\n\t\t\t\tgeometry2 = geometry2.geometry;\n\n\t\t\t}\n\n\t\t\tgeometry1.merge( geometry2, matrix, materialIndexOffset );\n\n\t\t},\n\n\t\tcenter: function ( geometry ) {\n\n\t\t\tconsole.warn( 'THREE.GeometryUtils: .center() has been moved to Geometry. Use geometry.center() instead.' );\n\t\t\treturn geometry.center();\n\n\t\t}\n\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function ( url, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.' );\n\n\t\tvar loader = new TextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( url, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadTextureCube = function ( urls, mapping, onLoad, onError ) {\n\n\t\tconsole.warn( 'THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.' );\n\n\t\tvar loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin( this.crossOrigin );\n\n\t\tvar texture = loader.load( urls, onLoad, undefined, onError );\n\n\t\tif ( mapping ) { texture.mapping = mapping; }\n\n\t\treturn texture;\n\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\n\t\tconsole.error( 'THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.' );\n\n\t};\n\n\t//\n\n\tfunction CanvasRenderer() {\n\n\t\tconsole.error( 'THREE.CanvasRenderer has been removed' );\n\n\t}\n\n\t//\n\n\tfunction JSONLoader() {\n\n\t\tconsole.error( 'THREE.JSONLoader has been removed.' );\n\n\t}\n\n\t//\n\n\tvar SceneUtils = {\n\n\t\tcreateMultiMaterialObject: function ( /* geometry, materials */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tdetach: function ( /* child, parent, scene */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t},\n\n\t\tattach: function ( /* child, scene, parent */ ) {\n\n\t\t\tconsole.error( 'THREE.SceneUtils has been moved to /examples/js/utils/SceneUtils.js' );\n\n\t\t}\n\n\t};\n\n\t//\n\n\tfunction LensFlare() {\n\n\t\tconsole.error( 'THREE.LensFlare has been moved to /examples/js/objects/Lensflare.js' );\n\n\t}\n\n\tif ( typeof __THREE_DEVTOOLS__ !== 'undefined' ) {\n\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent( new CustomEvent( 'register', { detail: {\n\t\t\trevision: REVISION,\n\t\t} } ) );\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxBufferGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleBufferGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.ClosedSplineCurve3 = ClosedSplineCurve3;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeBufferGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeGeometry = BoxGeometry;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CylinderBufferGeometry = CylinderBufferGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DirectionalLightShadow = DirectionalLightShadow;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronBufferGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeBufferGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.Face3 = Face3;\n\texports.Face4 = Face4;\n\texports.FaceColors = FaceColors;\n\texports.FaceNormalsHelper = FaceNormalsHelper;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontFaceDirectionCCW = FrontFaceDirectionCCW;\n\texports.FrontFaceDirectionCW = FrontFaceDirectionCW;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GammaEncoding = GammaEncoding;\n\texports.Geometry = Geometry;\n\texports.GeometryUtils = GeometryUtils;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronBufferGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheBufferGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.LightProbeHelper = LightProbeHelper;\n\texports.LightShadow = LightShadow;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = _Math;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronBufferGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.ParametricBufferGeometry = ParametricBufferGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneBufferGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronBufferGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PositionalAudioHelper = PositionalAudioHelper;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RectAreaLightHelper = RectAreaLightHelper;\n\texports.RedFormat = RedFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingBufferGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeBufferGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereBufferGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SphericalReflectionMapping = SphericalReflectionMapping;\n\texports.Spline = Spline;\n\texports.SplineCurve = SplineCurve;\n\texports.SplineCurve3 = SplineCurve3;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.SpotLightShadow = SpotLightShadow;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronBufferGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextBufferGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusBufferGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotBufferGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeBufferGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uncharted2ToneMapping = Uncharted2ToneMapping;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VertexNormalsHelper = VertexNormalsHelper;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n}));\n"]},"metadata":{},"sourceType":"module"}