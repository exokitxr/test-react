{"ast":null,"code":"import _slicedToArray from \"/Users/chris/Documents/Github/test-react/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport './webxr-polyfill.module.js';\nimport './HelioWebXRPolyfill.js';\nimport avatarModels from 'https://avatar-models.exokit.org/avatar-models.js';\nimport ModelLoader from 'https://model-loader.exokit.org/model-loader.js';\nimport Avatar from './avatars.js';\nimport { XRChannelConnection } from 'https://multiplayer.exokit.org/multiplayer.js';\nconst peerPoseUpdateRate = 50;\nconst walkSpeed = 0.0015;\nconst floorPlane = new THREE.Plane().setFromNormalAndCoplanarPoint(new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 0));\nconst localVector = new THREE.Vector3();\nconst localVector2 = new THREE.Vector3();\nconst localVector3 = new THREE.Vector3();\nconst localVector4 = new THREE.Vector3();\nconst localVector5 = new THREE.Vector3();\nconst localQuaternion = new THREE.Quaternion();\nconst localQuaternion2 = new THREE.Quaternion();\nconst localMatrix = new THREE.Matrix4();\nconst localEuler = new THREE.Euler();\nconst localRay = new THREE.Ray();\nconst z180Quaternion = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\n{\n  const avatarModelsEl = document.getElementById('avatar-models');\n  const noneAAvatar = document.createElement('a');\n  noneAAvatar.classList.add('a-avatar');\n  noneAAvatar.innerText = 'none';\n  avatarModelsEl.appendChild(noneAAvatar);\n\n  for (let i = 0; i < avatarModels.length; i++) {\n    const avatarmodel = avatarModels[i];\n    const aAvatar = document.createElement('a');\n    aAvatar.classList.add('a-avatar');\n    aAvatar.setAttribute('href', \"https://avatar-models.exokit.org/\".concat(avatarmodel.url));\n    aAvatar.innerText = avatarmodel.label;\n    avatarModelsEl.appendChild(aAvatar);\n  }\n}\nconst scene = new THREE.Scene();\nconst container = new THREE.Object3D();\nscene.add(container);\nconst camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.y = 1.5;\ncamera.position.z = 2; // camera.rotation.y = Math.PI;\n\nconst ambientLight = new THREE.AmbientLight(0x808080);\nscene.add(ambientLight);\nconst directionalLight = new THREE.DirectionalLight(0xFFFFFF, 1);\ndirectionalLight.position.set(0.5, 1, 0.5);\nscene.add(directionalLight);\n/* const directionalLight2 = new THREE.DirectionalLight(0xFFFFFF, 1);\ndirectionalLight2.position.set(0, -0.25, -0.25);\nscene.add(directionalLight2); */\n\nconst gridHelper = new THREE.GridHelper(10, 10);\ncontainer.add(gridHelper);\n\nconst _makeTextMesh = (s = '', color = 0x000000, size = 1) => {\n  // create a geometry of packed bitmap glyphs,\n  // word wrapped to 300px and right-aligned\n  var geometry = createTextGeometry({\n    width: Infinity,\n    font: fontJson\n  }); // change text and other options as desired\n  // the options sepcified in constructor will\n  // be used as defaults\n\n  geometry.update(s); // the resulting layout has metrics and bounds\n  // console.log(geometry.layout.height)\n  // console.log(geometry.layout.descender)\n\n  var material = new THREE.RawShaderMaterial(createSDFShader({\n    map: fontTexture,\n    transparent: true,\n    color,\n    // color: palette[Math.floor(Math.random() * palette.length)]\n    // negate: false,\n    side: THREE.DoubleSide\n  }));\n  const scaleFactor = 0.002 * size;\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.position.set(0, -geometry.layout.lineHeight * 0.001, 0);\n  mesh.scale.set(scaleFactor, -scaleFactor, -scaleFactor);\n\n  mesh.getText = () => s;\n\n  mesh.setText = newS => {\n    if (newS !== s) {\n      s = newS;\n      geometry.update(s);\n    }\n  };\n\n  return mesh;\n};\n\nconst teleportGeometry = new THREE.TorusBufferGeometry(0.5, 0.15, 3, 5).applyMatrix(new THREE.Matrix4().makeRotationX(-(Math.PI / 2))).applyMatrix(new THREE.Matrix4().makeRotationY(1 / 20 * (Math.PI * 2)));\nconst teleportMaterial = new THREE.MeshBasicMaterial({\n  color: 0x44c2ff\n});\n\nconst _makeTeleportMesh = () => {\n  const geometry = teleportGeometry;\n  const material = teleportMaterial;\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.visible = false;\n  mesh.frustumCulled = false;\n  return mesh;\n};\n\nconst teleportMeshes = [_makeTeleportMesh(), _makeTeleportMesh()];\ncontainer.add(teleportMeshes[0]);\ncontainer.add(teleportMeshes[1]);\n\nconst _patchModel = object => {\n  object.scene.traverse(o => {\n    if (o.isMesh) {\n      o.frustumCulled = false;\n\n      if (o.material.opacity === 0) {\n        o.material.opacity = 1;\n      }\n    }\n  });\n};\n\nconst _loadModelUrl = async (url, filename) => {\n  const model = await ModelLoader.loadModelUrl(url, filename);\n\n  _patchModel(model);\n\n  return model;\n};\n\nconst _bindUploadFileButton = inputFileEl => {\n  inputFileEl.addEventListener('change', async e => {\n    const files = e.target.files;\n\n    if (files.length === 1) {\n      const _files = _slicedToArray(files, 1),\n            file = _files[0];\n\n      const dataUrl = URL.createObjectURL(file);\n      const model = await _loadModelUrl(dataUrl, file.name);\n\n      _setLocalModel(model); // modelUrl = dataUrl;\n\n    }\n\n    const parentNode = inputFileEl.parentNode;\n    parentNode.removeChild(inputFileEl);\n    const newInputFileEl = document.createElement('input');\n    newInputFileEl.type = 'file';\n    newInputFileEl.id = 'upload-file-button';\n    newInputFileEl.style.display = 'none';\n    parentNode.appendChild(newInputFileEl);\n\n    _bindUploadFileButton(newInputFileEl);\n  });\n};\n\n_bindUploadFileButton(document.getElementById('upload-file-button'));\n\nwindow.document.addEventListener('dragover', e => {\n  e.preventDefault();\n});\nwindow.document.addEventListener('drop', async e => {\n  e.preventDefault();\n\n  if (e.dataTransfer.items.length !== 1) {\n    return;\n  }\n\n  for (var i = 0; i < e.dataTransfer.items.length; i++) {\n    if (e.dataTransfer.items[i].kind === 'file') {\n      const file = e.dataTransfer.items[i].getAsFile(); // console.log('got file', e.dataTransfer.items[i], file);\n\n      const dataUrl = URL.createObjectURL(file);\n      const model = await _loadModelUrl(dataUrl, file.name);\n\n      _setLocalModel(model); // modelUrl = dataUrl;\n\n    }\n  }\n});\nconst renderer = new THREE.WebGLRenderer({\n  // canvas: document.getElementById('canvas'),\n  // alpha: true,\n  antialias: true\n}); // console.log('set size', window.innerWidth, window.innerHeight);\n\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.sortObjects = false;\ndocument.getElementById('iframe-wrapper').appendChild(renderer.domElement);\nconst orbitControls = new THREE.OrbitControls(camera, renderer.domElement);\norbitControls.screenSpacePanning = true;\norbitControls.enableMiddleZoom = false;\norbitControls.update();\nconst aAvatars = Array.from(document.querySelectorAll('.a-avatar'));\n\nfor (let i = 0; i < aAvatars.length; i++) {\n  const aAvatar = aAvatars[i];\n  aAvatar.addEventListener('click', async e => {\n    e.preventDefault();\n    const href = aAvatar.href;\n\n    if (href) {\n      _setLocalModel((await _loadModelUrl(href)));\n    } else {\n      _setLocalModel(null);\n    }\n\n    modelUrl = href;\n\n    _sendAllPeerConnections(JSON.stringify({\n      method: 'model',\n      url: modelUrl\n    }));\n  });\n}\n\nlet fontJson, fontTexture;\nconst fontPromise = Promise.all([fetch('DejaVu-sdf.json').then(res => res.json()), new Promise((accept, reject) => {\n  new THREE.TextureLoader().load('DejaVu-sdf.png', accept);\n})]).then(results => {\n  fontJson = results[0];\n  fontTexture = results[1];\n});\nconst buttonSize = new THREE.Vector3(1, 0.1 * 0.9, 0.1);\nconst buttonGeometry = new THREE.BoxBufferGeometry(buttonSize.x, buttonSize.y, buttonSize.z);\nconst colors = {\n  normal: 0x5c6bc0,\n  highlight: 0x303f9f\n};\n\nconst mirrorMesh = (() => {\n  const mirrorWidth = 3;\n  const mirrorHeight = 2;\n  const geometry = new THREE.PlaneBufferGeometry(mirrorWidth, mirrorHeight).applyMatrix(new THREE.Matrix4().makeTranslation(0, 1, 0));\n  const mesh = new THREE.Reflector(geometry, {\n    clipBias: 0.003,\n    textureWidth: 1024 * window.devicePixelRatio,\n    textureHeight: 2048 * window.devicePixelRatio,\n    color: 0x889999,\n    addColor: 0x300000,\n    recursion: 1,\n    transparent: true\n  });\n  mesh.position.set(0, 0, -1);\n  const borderMesh = new THREE.Mesh(new THREE.BoxBufferGeometry(mirrorWidth + 0.1, mirrorHeight + 0.1, 0.1).applyMatrix(new THREE.Matrix4().makeTranslation(0, 1, -0.1 / 2 - 0.01)), new THREE.MeshPhongMaterial({\n    color: 0x5c6bc0\n  }));\n  mesh.add(borderMesh);\n  const buttonMeshes = aAvatars.map((aAvatar, i) => {\n    const geometry = buttonGeometry;\n    const material = new THREE.MeshPhongMaterial({\n      color: colors.normal\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(-2, 2 - 0.1 / 2 - i * 0.1, 0);\n    mesh.frustumCulled = false;\n    fontPromise.then(() => {\n      const textMesh = _makeTextMesh(aAvatar.innerText, 0xFFFFFF);\n\n      textMesh.position.x = -0.45;\n      textMesh.position.y = -0.02;\n      textMesh.position.z = 0.06;\n      mesh.add(textMesh);\n    });\n    mesh.box = new THREE.Box3();\n    return mesh;\n  });\n\n  for (let i = 0; i < buttonMeshes.length; i++) {\n    mesh.add(buttonMeshes[i]);\n  }\n\n  mesh.buttonMeshes = buttonMeshes;\n\n  mesh.update = () => {\n    for (let i = 0; i < buttonMeshes.length; i++) {\n      const buttonMesh = buttonMeshes[i];\n      buttonMesh.box.setFromCenterAndSize(buttonMesh.getWorldPosition(new THREE.Vector3()), buttonSize.clone().multiply(buttonMesh.getWorldScale(new THREE.Vector3())));\n    }\n  };\n\n  mesh.getButtonIntersectionIndex = position => {\n    for (let i = 0; i < buttonMeshes.length; i++) {\n      if (buttonMeshes[i].box.containsPoint(position)) {\n        return i;\n      }\n    }\n\n    return -1;\n  };\n\n  mesh.onBeforeRender2 = () => {\n    if (rig) {\n      rig.undecapitate();\n    }\n  };\n\n  mesh.onAfterRender2 = () => {\n    if (rig && session) {\n      rig.decapitate();\n    }\n  };\n\n  return mesh;\n})();\n\ncontainer.add(mirrorMesh);\nconst userHeight = 1.7;\n\nconst _getHeightFactor = rigHeight => rigHeight / userHeight;\n\nlet rig = null;\nlet modelUrl = '';\nlet heightFactor = 0;\n\nconst _setLocalModel = newModel => {\n  if (rig) {\n    container.remove(rig.model);\n    rig.destroy();\n    rig = null;\n  }\n\n  rig = new Avatar(newModel, {\n    fingers: true,\n    hair: true,\n    visemes: true,\n    // decapitate: true,\n    microphoneMediaStream,\n    debug: !newModel\n  });\n  container.add(rig.model);\n  window.model = newModel;\n  heightFactor = _getHeightFactor(rig.height);\n  container.scale.set(1, 1, 1).divideScalar(heightFactor);\n};\n\nconst lastPresseds = [false, false];\nconst lastBs = [false, false];\nconst lastPads = [false, false];\nconst lastPositions = [new THREE.Vector3(), new THREE.Vector3()];\nconst startGripPositions = [new THREE.Vector3(), new THREE.Vector3()];\nconst startSceneMatrix = new THREE.Matrix4();\nlet startModelScale = 1;\nconst dateOffset = Math.floor(Math.random() * 60 * 1000);\n\nconst realDateNow = (now => () => dateOffset + now())(Date.now);\n\nlet lastTimestamp = Date.now();\n\nfunction animate(timestamp, frame, referenceSpace) {\n  const now = Date.now();\n  const timeDiff = now - lastTimestamp;\n\n  if (rig) {\n    if (renderer.vr.enabled) {\n      const vrCameras = renderer.vr.getCamera(camera).cameras;\n      const vrCamera = vrCameras[0];\n      const vrCamera2 = vrCameras[1];\n      vrCamera.matrixWorld.decompose(vrCamera.position, vrCamera.quaternion, vrCamera.scale);\n      vrCamera2.matrixWorld.decompose(vrCamera2.position, vrCamera2.quaternion, vrCamera2.scale);\n      vrCamera.position.add(vrCamera2.position).divideScalar(2);\n      const _session = session,\n            inputSources = _session.inputSources;\n      const gamepads = navigator.getGamepads();\n      rig.inputs.hmd.position.copy(vrCamera.position).sub(container.position).multiplyScalar(heightFactor);\n      rig.inputs.hmd.quaternion.copy(vrCamera.quaternion);\n\n      const _getGamepad = i => {\n        const handedness = i === 0 ? 'left' : 'right';\n        const inputSource = inputSources.find(inputSource => inputSource.handedness === handedness);\n        let pose, gamepad;\n\n        if (inputSource && (pose = frame.getPose(inputSource.gripSpace, referenceSpace)) && (gamepad = inputSource.gamepad || gamepads[i])) {\n          const _pose = pose,\n                transform = _pose.transform;\n          const position = transform.position,\n                orientation = transform.orientation,\n                matrix = transform.matrix;\n\n          if (position) {\n            // new WebXR api\n            const rawP = localVector.copy(position);\n            const p = localVector2.copy(rawP).sub(container.position).multiplyScalar(heightFactor);\n            const q = localQuaternion.copy(orientation);\n            const pressed = gamepad.buttons[0].pressed;\n            const lastPressed = lastPresseds[i];\n            const pointer = gamepad.buttons[0].value;\n            const grip = gamepad.buttons[1].value;\n            const pad = gamepad.axes[1] <= -0.5 || gamepad.axes[3] <= -0.5;\n            const padX = gamepad.axes[0] !== 0 ? gamepad.axes[0] : gamepad.axes[2];\n            const padY = gamepad.axes[1] !== 0 ? gamepad.axes[1] : gamepad.axes[3];\n            const stick = !!gamepad.buttons[3] && gamepad.buttons[3].pressed;\n            const a = !!gamepad.buttons[4] && gamepad.buttons[4].pressed;\n            const b = !!gamepad.buttons[5] && gamepad.buttons[5].pressed;\n            const lastB = lastBs[i];\n            return {\n              rawPosition: rawP,\n              position: p,\n              quaternion: q,\n              pressed,\n              lastPressed,\n              pointer,\n              grip,\n              pad,\n              padX,\n              padY,\n              stick,\n              a,\n              b,\n              lastB\n            };\n          } else if (matrix) {\n            // old WebXR api\n            const rawP = localVector;\n            const p = localVector2;\n            const q = localQuaternion;\n            const s = localVector3;\n            localMatrix.fromArray(transform.matrix).decompose(rawP, q, s);\n            p.copy(rawP).sub(container.position).multiplyScalar(heightFactor);\n            const pressed = gamepad.buttons[0].pressed;\n            const lastPressed = lastPresseds[i];\n            const pointer = gamepad.buttons[0].value;\n            const grip = gamepad.buttons[1].value;\n            const pad = gamepad.axes[1] <= -0.5 || gamepad.axes[3] <= -0.5;\n            const padX = gamepad.axes[0] !== 0 ? gamepad.axes[0] : gamepad.axes[2];\n            const padY = gamepad.axes[1] !== 0 ? gamepad.axes[1] : gamepad.axes[3];\n            const stick = !!gamepad.buttons[3] && gamepad.buttons[3].pressed;\n            const a = !!gamepad.buttons[4] && gamepad.buttons[4].pressed;\n            const b = !!gamepad.buttons[5] && gamepad.buttons[5].pressed;\n            const lastB = lastBs[i];\n            return {\n              rawPosition: rawP,\n              position: p,\n              quaternion: q,\n              pressed,\n              lastPressed,\n              pointer,\n              grip,\n              pad,\n              padX,\n              padY,\n              stick,\n              a,\n              b,\n              lastB\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      };\n\n      const _updateTeleportMesh = (i, pad, lastPad, position, quaternion, padX, padY, stick) => {\n        const teleportMesh = teleportMeshes[i];\n        teleportMesh.visible = false;\n\n        if (pad) {\n          localVector.copy(vrCamera.position).applyMatrix4(localMatrix.getInverse(container.matrix));\n          localEuler.setFromQuaternion(quaternion, 'YXZ');\n\n          for (let i = 0; i < 20; i++, localVector.add(localVector2), localEuler.x = Math.max(localEuler.x - Math.PI * 0.07, -Math.PI / 2)) {\n            localRay.set(localVector, localVector2.set(0, 0, -1).applyQuaternion(localQuaternion.setFromEuler(localEuler)));\n            const intersection = localRay.intersectPlane(floorPlane, localVector3);\n\n            if (intersection && intersection.distanceTo(localRay.origin) <= 1) {\n              teleportMesh.position.copy(intersection);\n              localEuler.setFromQuaternion(localQuaternion, 'YXZ');\n              localEuler.x = 0;\n              localEuler.z = 0;\n              teleportMesh.quaternion.setFromEuler(localEuler);\n              teleportMesh.visible = true;\n              break;\n            }\n          }\n        } else if (lastPad) {\n          localVector.copy(teleportMesh.position).applyMatrix4(container.matrix).sub(vrCamera.position);\n          localVector.y = 0;\n          container.position.sub(localVector);\n        }\n\n        if (padX !== 0 || padY !== 0) {\n          localVector.set(padX, 0, padY);\n          const moveLength = localVector.length();\n\n          if (moveLength > 1) {\n            localVector.divideScalar(moveLength);\n          }\n\n          const hmdEuler = localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n          localEuler.x = 0;\n          localEuler.z = 0;\n          container.position.sub(localVector.multiplyScalar(walkSpeed * timeDiff * (stick ? 3 : 1) * rig.height).applyEuler(hmdEuler));\n        }\n      };\n\n      const wasLastBd = lastBs[0] && lastBs[1];\n\n      const lg = _getGamepad(1);\n\n      let li = -1;\n\n      if (lg) {\n        const rawPosition = lg.rawPosition,\n              position = lg.position,\n              quaternion = lg.quaternion,\n              pressed = lg.pressed,\n              lastPressed = lg.lastPressed,\n              pointer = lg.pointer,\n              grip = lg.grip,\n              pad = lg.pad,\n              b = lg.b;\n        rig.inputs.leftGamepad.quaternion.copy(quaternion);\n        rig.inputs.leftGamepad.position.copy(position);\n        rig.inputs.leftGamepad.pointer = pointer;\n        rig.inputs.leftGamepad.grip = grip;\n        li = mirrorMesh.getButtonIntersectionIndex(position);\n\n        if (pressed && !lastPressed) {\n          if (li !== -1) {\n            aAvatars[li].click();\n          }\n        }\n\n        _updateTeleportMesh(0, pad, lastPads[0], position, quaternion, 0, 0, false);\n\n        lastPresseds[0] = pressed;\n        lastPads[0] = pad;\n        lastBs[0] = b;\n        lastPositions[0].copy(rawPosition);\n      }\n\n      const rg = _getGamepad(0);\n\n      let ri = -1;\n\n      if (rg) {\n        const rawPosition = rg.rawPosition,\n              position = rg.position,\n              quaternion = rg.quaternion,\n              pressed = rg.pressed,\n              lastPressed = rg.lastPressed,\n              pointer = rg.pointer,\n              grip = rg.grip,\n              pad = rg.pad,\n              padX = rg.padX,\n              padY = rg.padY,\n              stick = rg.stick,\n              b = rg.b;\n        rig.inputs.rightGamepad.quaternion.copy(quaternion);\n        rig.inputs.rightGamepad.position.copy(position);\n        rig.inputs.rightGamepad.pointer = pointer;\n        rig.inputs.rightGamepad.grip = grip;\n        ri = mirrorMesh.getButtonIntersectionIndex(position);\n\n        if (pressed && !lastPressed) {\n          if (ri !== -1) {\n            aAvatars[ri].click();\n          }\n        }\n\n        _updateTeleportMesh(1, false, false, position, quaternion, padX, padY, stick);\n\n        lastPresseds[1] = pressed;\n        lastPads[1] = pad;\n        lastBs[1] = b;\n        lastPositions[1].copy(rawPosition);\n      }\n\n      const _startScale = () => {\n        for (let i = 0; i < startGripPositions.length; i++) {\n          startGripPositions[i].copy(lastPositions[i]);\n        }\n\n        startSceneMatrix.copy(container.matrix);\n        startModelScale = rig ? rig.inputs.hmd.scaleFactor : 1;\n      };\n\n      const _processScale = () => {\n        const startDistance = startGripPositions[0].distanceTo(startGripPositions[1]);\n        const currentDistance = lastPositions[0].distanceTo(lastPositions[1]);\n        const scaleFactor = currentDistance / startDistance;\n        let startGripPosition = localVector3.copy(startGripPositions[0]).add(startGripPositions[1]).divideScalar(2);\n        let currentGripPosition = localVector4.copy(lastPositions[0]).add(lastPositions[1]).divideScalar(2);\n        startGripPosition.applyMatrix4(localMatrix.getInverse(startSceneMatrix));\n        currentGripPosition.applyMatrix4(localMatrix\n        /*.getInverse(startSceneMatrix)*/\n        );\n        const positionDiff = localVector5.copy(currentGripPosition).sub(startGripPosition);\n        container.matrix.copy(startSceneMatrix).multiply(localMatrix.makeTranslation(currentGripPosition.x, currentGripPosition.y, currentGripPosition.z)).multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor)).multiply(localMatrix.makeTranslation(-currentGripPosition.x, -currentGripPosition.y, -currentGripPosition.z)).multiply(localMatrix.makeTranslation(positionDiff.x, positionDiff.y, positionDiff.z)).decompose(container.position, container.quaternion, container.scale);\n\n        if (rig) {\n          rig.inputs.hmd.scaleFactor = startModelScale / scaleFactor;\n        } // _startScale();\n\n      };\n\n      const isLastBd = lastBs[0] && lastBs[1];\n\n      if (!wasLastBd && isLastBd) {\n        _startScale();\n      } else if (isLastBd) {\n        _processScale();\n      }\n\n      for (let i = 0; i < mirrorMesh.buttonMeshes.length; i++) {\n        mirrorMesh.buttonMeshes[i].material.color.setHex(i === li || i === ri ? colors.highlight : colors.normal);\n      }\n\n      rig.update();\n    } else if (controlsBound) {// defer\n    } else {\n      const positionOffset = Math.sin(realDateNow() % 10000 / 10000 * Math.PI * 2) * 2;\n      const positionOffset2 = -Math.sin(realDateNow() % 5000 / 5000 * Math.PI * 2) * 1;\n      const standFactor = rig.height - 0.1 * rig.height + Math.sin(realDateNow() % 2000 / 2000 * Math.PI * 2) * 0.2 * rig.height;\n      const rotationAngle = realDateNow() % 5000 / 5000 * Math.PI * 2; // rig.inputs.hmd.position.set(positionOffset, 0.6 + standFactor, 0);\n\n      rig.inputs.hmd.position.set(positionOffset, standFactor, positionOffset2);\n      rig.inputs.hmd.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle).multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(1, 0, 0), Math.sin(realDateNow() % 2000 / 2000 * Math.PI * 2) * Math.PI * 0.2)).multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.sin(realDateNow() % 2000 / 2000 * Math.PI * 2) * Math.PI * 0.25));\n      rig.inputs.rightGamepad.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle); // .multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.sin((realDateNow()%5000)/5000*Math.PI*2)*Math.PI*0.6));\n\n      rig.inputs.rightGamepad.position.set(positionOffset, rig.height * 0.7 + Math.sin(realDateNow() % 2000 / 2000 * Math.PI * 2) * 0.1, positionOffset2).add(new THREE.Vector3(-rig.shoulderWidth / 2, 0, -0.2).applyQuaternion(rig.inputs.rightGamepad.quaternion));\n      /*.add(\n       new THREE.Vector3(-0.1, 0, -1).normalize().multiplyScalar(rig.rightArmLength*0.4).applyQuaternion(rig.inputs.rightGamepad.quaternion)\n      ); */\n\n      rig.inputs.leftGamepad.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle);\n      rig.inputs.leftGamepad.position.set(positionOffset, rig.height * 0.7, positionOffset2).add(new THREE.Vector3(rig.shoulderWidth / 2, 0, -0.2).applyQuaternion(rig.inputs.leftGamepad.quaternion));\n      /*.add(\n       new THREE.Vector3(0.1, 0, -1).normalize().multiplyScalar(rig.leftArmLength*0.4).applyQuaternion(rig.inputs.leftGamepad.quaternion)\n      );*/\n\n      rig.inputs.leftGamepad.pointer = (Math.sin(Date.now() % 10000 / 10000 * Math.PI * 2) + 1) / 2;\n      rig.inputs.leftGamepad.grip = (Math.sin(Date.now() % 10000 / 10000 * Math.PI * 2) + 1) / 2;\n      rig.inputs.rightGamepad.pointer = (Math.sin(Date.now() % 10000 / 10000 * Math.PI * 2) + 1) / 2;\n      rig.inputs.rightGamepad.grip = (Math.sin(Date.now() % 10000 / 10000 * Math.PI * 2) + 1) / 2;\n      rig.update();\n    }\n  }\n\n  renderer.render(scene, camera);\n\n  for (let i = 0; i < peerConnections.length; i++) {\n    const peerConnection = peerConnections[i];\n\n    if (peerConnection.rig) {\n      peerConnection.rig.update();\n    }\n  }\n\n  if (controlsBound) {\n    localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n    localEuler.x = Math.min(Math.max(localEuler.x - mouse.movementY * 0.01, -Math.PI / 2), Math.PI / 2);\n    localEuler.y -= mouse.movementX * 0.01;\n    localEuler.z = 0;\n    rig.inputs.hmd.quaternion.setFromEuler(localEuler);\n    mouse.movementX = 0;\n    mouse.movementY = 0;\n    localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n    localEuler.x = 0;\n    localEuler.z = 0;\n    const floorRotation = localQuaternion.setFromEuler(localEuler);\n    localVector.set(0, 0, 0);\n\n    if (keys.left) {\n      localVector.x += -1;\n    }\n\n    if (keys.right) {\n      localVector.x += 1;\n    }\n\n    if (keys.up) {\n      localVector.z += -1;\n    }\n\n    if (keys.down) {\n      localVector.z += 1;\n    }\n\n    rig.inputs.hmd.position.add(localVector.normalize().multiplyScalar(walkSpeed * timeDiff * (keys.shift ? 3 : 1) * rig.height).applyQuaternion(floorRotation));\n\n    if (keys.space) {\n      const lerpFactor = 0.3;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1 - lerpFactor) + rig.height * 1.1 * lerpFactor;\n    } else if (keys.z) {\n      const lerpFactor = 0.05;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1 - lerpFactor) + rig.height * 0.2 * lerpFactor;\n    } else if (keys.c) {\n      const lerpFactor = 0.2;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1 - lerpFactor) + rig.height * 0.7 * lerpFactor;\n    } else {\n      const lerpFactor = 0.3;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1 - lerpFactor) + rig.height * 0.9 * lerpFactor;\n    }\n\n    rig.inputs.leftGamepad.position.copy(rig.inputs.hmd.position).add(localVector.set(0.15, -0.15, -0.2).multiplyScalar(rig.height).applyQuaternion(rig.inputs.hmd.quaternion));\n    rig.inputs.leftGamepad.quaternion.copy(rig.inputs.hmd.quaternion).multiply(localQuaternion2.setFromAxisAngle(localVector.set(1, 0, 0), Math.PI * 0.5));\n    rig.inputs.rightGamepad.position.copy(rig.inputs.hmd.position).add(localVector.set(-0.15, -0.15, -0.2).multiplyScalar(rig.height).applyQuaternion(rig.inputs.hmd.quaternion));\n    rig.inputs.rightGamepad.quaternion.copy(rig.inputs.hmd.quaternion).multiply(localQuaternion2.setFromAxisAngle(localVector.set(1, 0, 0), Math.PI * 0.5));\n\n    if (controlsBound === 'firstperson') {\n      rig.decapitate();\n    } else if (controlsBound === 'thirdperson') {\n      rig.undecapitate();\n    }\n\n    rig.update();\n\n    if (controlsBound === 'firstperson') {\n      rig.outputs.eyes.matrixWorld.decompose(camera.position, camera.quaternion, localVector);\n      camera.position.divideScalar(heightFactor).add(container.position);\n      camera.quaternion.multiply(z180Quaternion);\n    } else if (controlsBound === 'thirdperson') {\n      rig.outputs.eyes.matrixWorld.decompose(camera.position, camera.quaternion, localVector);\n      camera.position.divideScalar(heightFactor).add(container.position);\n      camera.quaternion.multiply(z180Quaternion);\n      camera.position.add(localVector.set(0, 0.5, 2).applyQuaternion(camera.quaternion));\n    }\n  }\n\n  lastTimestamp = now;\n}\n\nrenderer.setAnimationLoop(animate);\nconst mouse = {\n  movementX: 0,\n  movementY: 0\n};\nconst keys = {\n  up: false,\n  down: false,\n  left: false,\n  right: false,\n  z: false,\n  c: false,\n  space: false,\n  shift: false\n};\nlet controlsBound = null;\nlet unbindControls = null;\nwindow.document.addEventListener('pointerlockchange', () => {\n  if (!window.document.pointerLockElement && unbindControls) {\n    unbindControls();\n    unbindControls = null;\n  }\n});\n\nconst _bindControls = type => {\n  const _keydown = e => {\n    switch (e.which) {\n      case 65:\n        {\n          keys.left = true;\n          break;\n        }\n\n      case 68:\n        {\n          keys.right = true;\n          break;\n        }\n\n      case 87:\n        {\n          keys.up = true;\n          break;\n        }\n\n      case 83:\n        {\n          keys.down = true;\n          break;\n        }\n\n      case 90:\n        {\n          keys.z = true;\n          break;\n        }\n\n      case 67:\n        {\n          keys.c = true;\n          break;\n        }\n\n      case 32:\n        {\n          keys.space = true;\n          break;\n        }\n\n      case 16:\n        {\n          keys.shift = true;\n          break;\n        }\n    }\n  };\n\n  window.addEventListener('keydown', _keydown);\n\n  const _keyup = e => {\n    switch (e.which) {\n      case 65:\n        {\n          keys.left = false;\n          break;\n        }\n\n      case 68:\n        {\n          keys.right = false;\n          break;\n        }\n\n      case 87:\n        {\n          keys.up = false;\n          break;\n        }\n\n      case 83:\n        {\n          keys.down = false;\n          break;\n        }\n\n      case 90:\n        {\n          keys.z = false;\n          break;\n        }\n\n      case 67:\n        {\n          keys.c = false;\n          break;\n        }\n\n      case 32:\n        {\n          keys.space = false;\n          break;\n        }\n\n      case 16:\n        {\n          keys.shift = false;\n          break;\n        }\n    }\n  };\n\n  window.addEventListener('keyup', _keyup);\n\n  const _mousemove = e => {\n    mouse.movementX += e.movementX;\n    mouse.movementY += e.movementY;\n  };\n\n  window.addEventListener('mousemove', _mousemove);\n  orbitControls.enabled = false;\n  controlsBound = type;\n\n  unbindControls = () => {\n    window.addEventListener('keydown', _keydown);\n    window.addEventListener('keyup', _keyup);\n    window.removeEventListener('mousemove', _mousemove);\n    orbitControls.target.copy(camera.position).add(new THREE.Vector3(0, 0, -3).applyQuaternion(camera.quaternion));\n    orbitControls.enabled = true;\n    controlsBound = null;\n  };\n};\n\nconst firstpersonButton = document.getElementById('firstperson-button');\nfirstpersonButton.addEventListener('click', async () => {\n  if (rig) {\n    await renderer.domElement.requestPointerLock();\n\n    _bindControls('firstperson');\n  }\n});\nconst thirdpersonButton = document.getElementById('thirdperson-button');\nthirdpersonButton.addEventListener('click', async () => {\n  if (rig) {\n    await renderer.domElement.requestPointerLock();\n\n    _bindControls('thirdperson');\n  }\n});\nlet session = null;\nconst enterXrButton = document.getElementById('enter-xr-button');\nconst noXrButton = document.getElementById('no-xr-button');\nenterXrButton.addEventListener('click', async () => {\n  session = await navigator.xr.requestSession('immersive-vr', {\n    requiredFeatures: ['local-floor']\n  });\n  let referenceSpace;\n  let referenceSpaceType = '';\n\n  const _loadReferenceSpace = async () => {\n    const lastReferenceSpaceType = referenceSpaceType;\n\n    try {\n      referenceSpace = await session.requestReferenceSpace('local-floor');\n      referenceSpaceType = 'local-floor';\n    } catch (err) {\n      referenceSpace = await session.requestReferenceSpace('local');\n      referenceSpaceType = 'local';\n    }\n\n    if (referenceSpaceType !== lastReferenceSpaceType) {\n      console.log(\"referenceSpace changed to \".concat(referenceSpaceType));\n    }\n  };\n\n  await _loadReferenceSpace();\n  const loadReferenceSpaceInterval = setInterval(_loadReferenceSpace, 1000);\n  renderer.vr.setSession(session);\n  session.requestAnimationFrame((timestamp, frame) => {\n    const pose = frame.getViewerPose(referenceSpace);\n    const viewport = session.renderState.baseLayer.getViewport(pose.views[0]); // const width = viewport.width;\n\n    const height = viewport.height;\n\n    const fullWidth = (() => {\n      let result = 0;\n\n      for (let i = 0; i < pose.views.length; i++) {\n        result += session.renderState.baseLayer.getViewport(pose.views[i]).width;\n      }\n\n      return result;\n    })();\n\n    renderer.setSize(fullWidth, height);\n    renderer.setPixelRatio(1);\n    renderer.setAnimationLoop(null);\n    renderer.vr.enabled = true;\n    renderer.vr.setSession(session);\n    renderer.vr.setAnimationLoop(animate);\n    console.log('loaded root in XR');\n  });\n});\nlet microphoneMediaStream = null;\nconst enableMicButton = document.getElementById('enable-mic-button');\nconst disableMicButton = document.getElementById('disable-mic-button');\nenableMicButton.addEventListener('click', async () => {\n  try {\n    microphoneMediaStream = await navigator.mediaDevices.getUserMedia({\n      audio: true\n    });\n    rig.setMicrophoneMediaStream(microphoneMediaStream);\n\n    if (channelConnection) {\n      channelConnection.setMicrophoneMediaStream(microphoneMediaStream);\n    }\n\n    disableMicButton.style.display = null;\n    enableMicButton.style.display = 'none';\n  } catch (err) {\n    console.warn(err);\n  }\n});\ndisableMicButton.addEventListener('click', async () => {\n  rig.setMicrophoneMediaStream(null);\n\n  if (channelConnection) {\n    channelConnection.setMicrophoneMediaStream(null);\n  }\n\n  microphoneMediaStream.getAudioTracks().forEach(track => {\n    track.stop();\n  });\n  microphoneMediaStream = null;\n  enableMicButton.style.display = null;\n  disableMicButton.style.display = 'none';\n  /* try {\n    await navigator.permissions.revoke({\n      name: 'microphone',\n    });\n  } catch(err) {\n    console.warn(err);\n  } */\n});\nlet channelConnection = null;\nconst peerConnections = [];\n\nconst _sendAllPeerConnections = s => {\n  for (let i = 0; i < peerConnections.length; i++) {\n    peerConnections[i].send(s);\n  }\n};\n\nconst channelInput = document.getElementById('channel-input');\nconst connectButton = document.getElementById('connect-button');\nconnectButton.addEventListener('click', () => {\n  const channelInputValue = channelInput.value;\n  const match = channelInputValue.match(/^(.+?)\\/(.+?)$/);\n\n  if (match) {\n    const userName = match[1];\n    const channelName = match[2];\n    console.log(\"connecting to \".concat(userName, \"/\").concat(channelName));\n    channelConnection = new XRChannelConnection(\"wss://presence.exokit.org/?u=\".concat(encodeURIComponent(userName), \"&c=\").concat(encodeURIComponent(channelName)), {\n      microphoneMediaStream\n    });\n    channelConnection.addEventListener('open', () => {\n      console.log('xr channel open');\n    });\n    channelConnection.addEventListener('error', err => {\n      console.warn('xr channel error', err);\n    });\n    channelConnection.addEventListener('peerconnection', e => {\n      const peerConnection = e.detail;\n      peerConnection.rig = null;\n      peerConnection.mediaStream = null;\n      let updateInterval = 0;\n      peerConnection.addEventListener('open', () => {\n        console.log('add peer connection', peerConnection);\n        peerConnections.push(peerConnection);\n        peerConnection.send(JSON.stringify({\n          method: 'model',\n          url: modelUrl\n        }));\n        updateInterval = setInterval(() => {\n          if (rig) {\n            const hmd = {\n              position: localVector.copy(rig.inputs.hmd.position).divideScalar(heightFactor).toArray(),\n              quaternion: rig.inputs.hmd.quaternion.toArray(),\n              scaleFactor: rig.inputs.hmd.scaleFactor\n            };\n            const gamepads = [{\n              position: localVector.copy(rig.inputs.leftGamepad.position).divideScalar(heightFactor).toArray(),\n              quaternion: rig.inputs.leftGamepad.quaternion.toArray(),\n              pointer: rig.inputs.leftGamepad.pointer,\n              grip: rig.inputs.leftGamepad.grip,\n              visible: true\n            }, {\n              position: localVector.copy(rig.inputs.rightGamepad.position).divideScalar(heightFactor).toArray(),\n              quaternion: rig.inputs.rightGamepad.quaternion.toArray(),\n              pointer: rig.inputs.rightGamepad.pointer,\n              grip: rig.inputs.rightGamepad.grip,\n              visible: true\n            }];\n            peerConnection.update(hmd, gamepads);\n          }\n        }, peerPoseUpdateRate);\n      });\n      peerConnection.addEventListener('close', () => {\n        console.log('remove peer connection', peerConnection);\n        const index = peerConnections.indexOf(peerConnection);\n\n        if (index !== -1) {\n          peerConnections.splice(index, 1);\n        }\n\n        clearInterval(updateInterval);\n\n        if (peerConnection.rig) {\n          container.remove(peerConnection.rig.model);\n          peerConnection.rig.destroy();\n        }\n      });\n      peerConnection.addEventListener('pose', e => {\n        const rig = peerConnection.rig;\n\n        if (rig) {\n          const data = e.detail;\n          const hmd = data.hmd,\n                gamepads = data.gamepads;\n          rig.starts.hmd.position.copy(peerConnection.rig.inputs.hmd.position);\n          rig.starts.hmd.rotation.copy(peerConnection.rig.inputs.hmd.quaternion);\n          rig.starts.hmd.scaleFactor = peerConnection.rig.inputs.hmd.scaleFactor;\n          rig.starts.gamepads[0].position.copy(peerConnection.rig.inputs.leftGamepad.position);\n          rig.starts.gamepads[0].rotation.copy(peerConnection.rig.inputs.leftGamepad.quaternion);\n          rig.starts.gamepads[0].pointer = peerConnection.rig.inputs.leftGamepad.pointer;\n          rig.starts.gamepads[0].grip = peerConnection.rig.inputs.leftGamepad.grip;\n          rig.starts.gamepads[1].position.copy(peerConnection.rig.inputs.rightGamepad.position);\n          rig.starts.gamepads[1].rotation.copy(peerConnection.rig.inputs.rightGamepad.quaternion);\n          rig.starts.gamepads[1].pointer = peerConnection.rig.inputs.rightGamepad.pointer;\n          rig.starts.gamepads[1].grip = peerConnection.rig.inputs.rightGamepad.grip;\n          rig.targets.hmd.position.fromArray(hmd.position);\n          rig.targets.hmd.rotation.fromArray(hmd.quaternion);\n          rig.targets.hmd.scaleFactor = hmd.scaleFactor;\n          rig.targets.gamepads[0].position.fromArray(gamepads[0].position);\n          rig.targets.gamepads[0].rotation.fromArray(gamepads[0].quaternion);\n          rig.targets.gamepads[0].pointer = gamepads[0].pointer;\n          rig.targets.gamepads[0].grip = gamepads[0].grip;\n          rig.targets.gamepads[1].position.fromArray(gamepads[1].position);\n          rig.targets.gamepads[1].rotation.fromArray(gamepads[1].quaternion);\n          rig.targets.gamepads[1].pointer = gamepads[1].pointer;\n          rig.targets.gamepads[1].grip = gamepads[1].grip;\n          rig.targets.timestamp = Date.now();\n        }\n      });\n      peerConnection.addEventListener('mediastream', e => {\n        console.log('got media stream', e.detail, e.detail.getAudioTracks());\n        peerConnection.mediaStream = e.detail;\n\n        if (peerConnection.rig) {\n          peerConnection.rig.setMicrophoneMediaStream(peerConnection.mediaStream, {\n            muted: false\n          });\n        }\n      });\n      peerConnection.addEventListener('message', async e => {\n        console.log('got message', e);\n        const data = JSON.parse(e.data);\n        const method = data.method;\n\n        if (method === 'model') {\n          const url = data.url;\n          console.log('got peer model', {\n            url\n          });\n\n          if (peerConnection.rig) {\n            container.remove(peerConnection.rig.model);\n            peerConnection.rig.destroy();\n          }\n\n          const model = url ? await _loadModelUrl(url) : null;\n          peerConnection.rig = new Avatar(model, {\n            fingers: true,\n            hair: true,\n            visemes: true,\n            microphoneMediaStream: peerConnection.mediaStream,\n            muted: false,\n            debug: !model\n          });\n          container.add(peerConnection.rig.model);\n          peerConnection.rig.starts = {\n            hmd: {\n              position: peerConnection.rig.inputs.hmd.position.clone(),\n              rotation: peerConnection.rig.inputs.hmd.quaternion.clone(),\n              scaleFactor: peerConnection.rig.inputs.hmd.scaleFactor\n            },\n            gamepads: [{\n              position: peerConnection.rig.inputs.leftGamepad.position.clone(),\n              rotation: peerConnection.rig.inputs.leftGamepad.quaternion.clone(),\n              pointer: peerConnection.rig.inputs.leftGamepad.pointer,\n              grip: peerConnection.rig.inputs.leftGamepad.grip\n            }, {\n              position: peerConnection.rig.inputs.rightGamepad.position.clone(),\n              rotation: peerConnection.rig.inputs.rightGamepad.quaternion.clone(),\n              pointer: peerConnection.rig.inputs.rightGamepad.pointer,\n              grip: peerConnection.rig.inputs.rightGamepad.grip\n            }]\n          };\n          peerConnection.rig.targets = {\n            hmd: {\n              position: new THREE.Vector3(),\n              rotation: new THREE.Quaternion(),\n              scaleFactor: 1\n            },\n            gamepads: [{\n              position: new THREE.Vector3(),\n              rotation: new THREE.Quaternion(),\n              pointer: 0,\n              grip: 0\n            }, {\n              position: new THREE.Vector3(),\n              rotation: new THREE.Quaternion(),\n              pointer: 0,\n              grip: 0\n            }],\n            timestamp: Date.now()\n          };\n\n          const heightFactor = _getHeightFactor(peerConnection.rig.height);\n\n          peerConnection.rig.update = (_update => function update() {\n            const now = Date.now();\n            const timestamp = peerConnection.rig.targets.timestamp;\n            const lerpFactor = Math.min(Math.max((now - timestamp) / (peerPoseUpdateRate * 2), 0), 1);\n            peerConnection.rig.inputs.hmd.quaternion.copy(peerConnection.rig.starts.hmd.rotation).slerp(peerConnection.rig.targets.hmd.rotation, lerpFactor);\n            peerConnection.rig.inputs.hmd.position.copy(peerConnection.rig.starts.hmd.position).lerp(localVector.copy(peerConnection.rig.targets.hmd.position).multiplyScalar(heightFactor), lerpFactor);\n            peerConnection.rig.inputs.hmd.scaleFactor = peerConnection.rig.starts.hmd.scaleFactor * (1 - lerpFactor) + peerConnection.rig.targets.hmd.scaleFactor * lerpFactor;\n            peerConnection.rig.inputs.leftGamepad.position.copy(peerConnection.rig.starts.gamepads[0].position).lerp(localVector.copy(peerConnection.rig.targets.gamepads[0].position).multiplyScalar(heightFactor), lerpFactor);\n            peerConnection.rig.inputs.leftGamepad.quaternion.copy(peerConnection.rig.starts.gamepads[0].rotation).slerp(peerConnection.rig.targets.gamepads[0].rotation, lerpFactor);\n            peerConnection.rig.inputs.leftGamepad.pointer = peerConnection.rig.starts.gamepads[0].pointer * (1 - lerpFactor) + peerConnection.rig.targets.gamepads[0].pointer * lerpFactor;\n            peerConnection.rig.inputs.leftGamepad.grip = peerConnection.rig.starts.gamepads[0].grip * (1 - lerpFactor) + peerConnection.rig.targets.gamepads[0].grip * lerpFactor;\n            peerConnection.rig.inputs.rightGamepad.position.copy(peerConnection.rig.starts.gamepads[1].position).lerp(localVector.copy(peerConnection.rig.targets.gamepads[1].position).multiplyScalar(heightFactor), lerpFactor);\n            peerConnection.rig.inputs.rightGamepad.quaternion.copy(peerConnection.rig.starts.gamepads[1].rotation).slerp(peerConnection.rig.targets.gamepads[1].rotation, lerpFactor);\n            peerConnection.rig.inputs.rightGamepad.pointer = peerConnection.rig.starts.gamepads[1].pointer * (1 - lerpFactor) + peerConnection.rig.targets.gamepads[1].pointer * lerpFactor;\n            peerConnection.rig.inputs.rightGamepad.grip = peerConnection.rig.starts.gamepads[1].grip * (1 - lerpFactor) + peerConnection.rig.targets.gamepads[1].grip * lerpFactor;\n\n            _update.apply(this, arguments);\n          })(peerConnection.rig.update);\n        } else {\n          console.warn('invalid method', {\n            method\n          });\n        }\n      });\n    });\n    connectButton.style.display = 'none';\n  } else {\n    console.warn(\"invalid user/channel: \".concat(channelInputValue));\n  }\n});\n\n(async () => {\n  let result;\n\n  if (navigator.xr) {\n    try {\n      await navigator.xr.supportsSession('immersive-vr');\n      result = true;\n    } catch (err) {\n      console.warn(err);\n      result = false;\n    }\n  } else {\n    result = false;\n  }\n\n  if (result) {\n    console.log('xr available');\n    enterXrButton.style.display = null;\n  } else {\n    console.log('no xr');\n    noXrButton.style.display = null;\n  }\n  /* const microphonePermission = await navigator.permissions.query({\n    name: 'microphone',\n  });\n  if (microphonePermission.state === 'granted') {\n    microphoneMediaStream  = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    disableMicButton.style.display = null;\n  } else {\n    enableMicButton.style.display = null;\n  } */\n\n\n  enableMicButton.style.display = null;\n  const href = aAvatars[1].href;\n  const model = await _loadModelUrl(href);\n\n  _setLocalModel(model);\n\n  modelUrl = href;\n\n  _sendAllPeerConnections(JSON.stringify({\n    method: 'model',\n    url: modelUrl\n  }));\n})();\n\nlet loginToken = null;\nconst loginUrl = 'https://login.exokit.org/';\n\nasync function doLogin(email, code) {\n  const res = await fetch(\"\".concat(loginUrl, \"?email=\").concat(encodeURIComponent(email), \"&code=\").concat(encodeURIComponent(code)), {\n    method: 'POST'\n  });\n\n  if (res.status >= 200 && res.status < 300) {\n    const newLoginToken = await res.json();\n    await storage.set('loginToken', newLoginToken);\n    loginToken = newLoginToken; // loginNameStatic.innerText = loginToken.name;\n    // loginEmailStatic.innerText = loginToken.email;\n\n    document.body.classList.add('logged-in');\n    loginForm.classList.remove('phase-1');\n    loginForm.classList.remove('phase-2');\n    loginForm.classList.add('phase-3');\n    return true;\n  } else {\n    return false;\n  }\n}\n\nconst storage = {\n  async get(k) {\n    const s = localStorage.getItem(k);\n\n    if (typeof s === 'string') {\n      return JSON.parse(s);\n    } else {\n      return undefined;\n    }\n  },\n\n  async set(k, v) {\n    localStorage.setItem(k, JSON.stringify(v));\n  },\n\n  async remove(k) {\n    localStorage.removeItem(k);\n  }\n\n}; // const loginButton = document.getElementById('login-button');\n// const loginButton2 = document.getElementById('login-button-2');\n// const loginPopdown = document.getElementById('login-popdown');\n\nconst loginForm = document.getElementById('login-form');\nconst loginEmail = document.getElementById('login-email');\nconst loginNameStatic = document.getElementById('login-name-static');\nconst loginEmailStatic = document.getElementById('login-email-static');\nconst statusNotConnected = document.getElementById('status-not-connected');\nconst statusConnected = document.getElementById('status-connected');\nconst loginVerificationCode = document.getElementById('login-verification-code');\nconst loginNotice = document.getElementById('login-notice');\nconst loginError = document.getElementById('login-error');\nconst logoutButton = document.getElementById('logout-button');\n\nloginForm.onsubmit = async e => {\n  e.preventDefault();\n\n  if (loginForm.classList.contains('phase-1') && loginEmail.value) {\n    loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    loginForm.classList.remove('phase-1');\n    const res = await fetch(\"\".concat(loginUrl, \"?email=\").concat(encodeURIComponent(loginEmail.value)), {\n      method: 'POST'\n    });\n\n    if (res.status >= 200 && res.status < 300) {\n      loginNotice.innerText = \"Code sent to \".concat(loginEmail.value, \"!\");\n      loginForm.classList.add('phase-2');\n      return res.blob();\n    } else if (res.status === 403) {\n      loginError.innerText = \"\".concat(loginEmail.value, \" is not in the beta yet :(\");\n      loginForm.classList.add('phase-1');\n    } else {\n      throw new Error(\"invalid status code: \".concat(res.status));\n    }\n  } else if (loginForm.classList.contains('phase-2') && loginEmail.value && loginVerificationCode.value) {\n    loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    loginForm.classList.remove('phase-2');\n    await doLogin(loginEmail.value, loginVerificationCode.value);\n  } else if (loginForm.classList.contains('phase-3')) {\n    await storage.remove('loginToken');\n    window.location.reload();\n    /* loginToken = null;\n    xrEngine.postMessage({\n      method: 'login',\n      loginToken,\n    });\n     loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    document.body.classList.remove('logged-in');\n    loginForm.classList.remove('phase-3');\n    loginForm.classList.add('phase-1'); */\n  }\n};\n\nconst exportModelButton = document.getElementById('export-model-button');\nexportModelButton.addEventListener('click', async () => {\n  const ab = await model.export();\n  const b = new Blob([ab], {\n    type: 'model/gltf-binary'\n  });\n  const u = URL.createObjectURL(b);\n  const a = document.createElement('a');\n  a.download = 'model.glb';\n  a.href = u;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n  a.click();\n  document.body.removeChild(a);\n  URL.revokeObjectURL(u);\n});\nconst scaleDownButton = document.getElementById('scale-down-button');\nscaleDownButton.addEventListener('click', () => {\n  const scaleFactor = 1.25;\n  const orbitControlsTarget = localVector.copy(orbitControls.target);\n  container.matrix.multiply(localMatrix.makeTranslation(orbitControlsTarget.x, orbitControlsTarget.y, orbitControlsTarget.z)).multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor)).multiply(localMatrix.makeTranslation(-orbitControlsTarget.x, -orbitControlsTarget.y, -orbitControlsTarget.z)).decompose(container.position, container.quaternion, container.scale);\n\n  if (rig) {\n    rig.inputs.hmd.scaleFactor /= scaleFactor;\n  }\n});\nconst scaleUpButton = document.getElementById('scale-up-button');\nscaleUpButton.addEventListener('click', () => {\n  const scaleFactor = 1 / 1.25;\n  const orbitControlsTarget = localVector.copy(orbitControls.target);\n  container.matrix.multiply(localMatrix.makeTranslation(orbitControlsTarget.x, orbitControlsTarget.y, orbitControlsTarget.z)).multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor)).multiply(localMatrix.makeTranslation(-orbitControlsTarget.x, -orbitControlsTarget.y, -orbitControlsTarget.z)).decompose(container.position, container.quaternion, container.scale);\n\n  if (rig) {\n    rig.inputs.hmd.scaleFactor /= scaleFactor;\n  }\n});\n\n(async () => {\n  const localLoginToken = await storage.get('loginToken');\n\n  if (localLoginToken) {\n    const res = await fetch(\"\".concat(loginUrl, \"?email=\").concat(encodeURIComponent(localLoginToken.email), \"&token=\").concat(encodeURIComponent(localLoginToken.token)), {\n      method: 'POST'\n    });\n\n    if (res.status >= 200 && res.status < 300) {\n      loginToken = await res.json();\n      await storage.set('loginToken', loginToken); // loginNameStatic.innerText = loginToken.name;\n      // loginEmailStatic.innerText = loginToken.email;\n\n      document.body.classList.add('logged-in');\n      loginForm.classList.remove('phase-1');\n      loginForm.classList.remove('phase-2');\n      loginForm.classList.add('phase-3');\n    } else {\n      await storage.remove('loginToken');\n      console.warn(\"invalid status code: \".concat(res.status));\n    }\n  }\n})();\n\nwindow.addEventListener('resize', e => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n});","map":{"version":3,"sources":["/Users/chris/Documents/Github/test-react/src/WebXRApps/Avatars.js"],"names":["avatarModels","ModelLoader","Avatar","XRChannelConnection","peerPoseUpdateRate","walkSpeed","floorPlane","THREE","Plane","setFromNormalAndCoplanarPoint","Vector3","localVector","localVector2","localVector3","localVector4","localVector5","localQuaternion","Quaternion","localQuaternion2","localMatrix","Matrix4","localEuler","Euler","localRay","Ray","z180Quaternion","setFromAxisAngle","Math","PI","avatarModelsEl","document","getElementById","noneAAvatar","createElement","classList","add","innerText","appendChild","i","length","avatarmodel","aAvatar","setAttribute","url","label","scene","Scene","container","Object3D","camera","PerspectiveCamera","window","innerWidth","innerHeight","position","y","z","ambientLight","AmbientLight","directionalLight","DirectionalLight","set","gridHelper","GridHelper","_makeTextMesh","s","color","size","geometry","createTextGeometry","width","Infinity","font","fontJson","update","material","RawShaderMaterial","createSDFShader","map","fontTexture","transparent","side","DoubleSide","scaleFactor","mesh","Mesh","layout","lineHeight","scale","getText","setText","newS","teleportGeometry","TorusBufferGeometry","applyMatrix","makeRotationX","makeRotationY","teleportMaterial","MeshBasicMaterial","_makeTeleportMesh","visible","frustumCulled","teleportMeshes","_patchModel","object","traverse","o","isMesh","opacity","_loadModelUrl","filename","model","loadModelUrl","_bindUploadFileButton","inputFileEl","addEventListener","e","files","target","file","dataUrl","URL","createObjectURL","name","_setLocalModel","parentNode","removeChild","newInputFileEl","type","id","style","display","preventDefault","dataTransfer","items","kind","getAsFile","renderer","WebGLRenderer","antialias","setSize","setPixelRatio","devicePixelRatio","sortObjects","domElement","orbitControls","OrbitControls","screenSpacePanning","enableMiddleZoom","aAvatars","Array","from","querySelectorAll","href","modelUrl","_sendAllPeerConnections","JSON","stringify","method","fontPromise","Promise","all","fetch","then","res","json","accept","reject","TextureLoader","load","results","buttonSize","buttonGeometry","BoxBufferGeometry","x","colors","normal","highlight","mirrorMesh","mirrorWidth","mirrorHeight","PlaneBufferGeometry","makeTranslation","Reflector","clipBias","textureWidth","textureHeight","addColor","recursion","borderMesh","MeshPhongMaterial","buttonMeshes","textMesh","box","Box3","buttonMesh","setFromCenterAndSize","getWorldPosition","clone","multiply","getWorldScale","getButtonIntersectionIndex","containsPoint","onBeforeRender2","rig","undecapitate","onAfterRender2","session","decapitate","userHeight","_getHeightFactor","rigHeight","heightFactor","newModel","remove","destroy","fingers","hair","visemes","microphoneMediaStream","debug","height","divideScalar","lastPresseds","lastBs","lastPads","lastPositions","startGripPositions","startSceneMatrix","startModelScale","dateOffset","floor","random","realDateNow","now","Date","lastTimestamp","animate","timestamp","frame","referenceSpace","timeDiff","vr","enabled","vrCameras","getCamera","cameras","vrCamera","vrCamera2","matrixWorld","decompose","quaternion","inputSources","gamepads","navigator","getGamepads","inputs","hmd","copy","sub","multiplyScalar","_getGamepad","handedness","inputSource","find","pose","gamepad","getPose","gripSpace","transform","orientation","matrix","rawP","p","q","pressed","buttons","lastPressed","pointer","value","grip","pad","axes","padX","padY","stick","a","b","lastB","rawPosition","fromArray","_updateTeleportMesh","lastPad","teleportMesh","applyMatrix4","getInverse","setFromQuaternion","max","applyQuaternion","setFromEuler","intersection","intersectPlane","distanceTo","origin","moveLength","hmdEuler","applyEuler","wasLastBd","lg","li","leftGamepad","click","rg","ri","rightGamepad","_startScale","_processScale","startDistance","currentDistance","startGripPosition","currentGripPosition","positionDiff","makeScale","isLastBd","setHex","controlsBound","positionOffset","sin","positionOffset2","standFactor","rotationAngle","shoulderWidth","render","peerConnections","peerConnection","min","mouse","movementY","movementX","floorRotation","keys","left","right","up","down","normalize","shift","space","lerpFactor","c","outputs","eyes","setAnimationLoop","unbindControls","pointerLockElement","_bindControls","_keydown","which","_keyup","_mousemove","removeEventListener","firstpersonButton","requestPointerLock","thirdpersonButton","enterXrButton","noXrButton","xr","requestSession","requiredFeatures","referenceSpaceType","_loadReferenceSpace","lastReferenceSpaceType","requestReferenceSpace","err","console","log","loadReferenceSpaceInterval","setInterval","setSession","requestAnimationFrame","getViewerPose","viewport","renderState","baseLayer","getViewport","views","fullWidth","result","enableMicButton","disableMicButton","mediaDevices","getUserMedia","audio","setMicrophoneMediaStream","channelConnection","warn","getAudioTracks","forEach","track","stop","send","channelInput","connectButton","channelInputValue","match","userName","channelName","encodeURIComponent","detail","mediaStream","updateInterval","push","toArray","index","indexOf","splice","clearInterval","data","starts","rotation","targets","muted","parse","_update","slerp","lerp","apply","arguments","supportsSession","loginToken","loginUrl","doLogin","email","code","status","newLoginToken","storage","body","loginForm","get","k","localStorage","getItem","undefined","v","setItem","removeItem","loginEmail","loginNameStatic","loginEmailStatic","statusNotConnected","statusConnected","loginVerificationCode","loginNotice","loginError","logoutButton","onsubmit","contains","innerHTML","blob","Error","location","reload","exportModelButton","ab","export","Blob","u","download","revokeObjectURL","scaleDownButton","orbitControlsTarget","scaleUpButton","localLoginToken","token","aspect","updateProjectionMatrix"],"mappings":"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","sourcesContent":["import './webxr-polyfill.module.js';\nimport './HelioWebXRPolyfill.js';\nimport avatarModels from 'https://avatar-models.exokit.org/avatar-models.js'\nimport ModelLoader from 'https://model-loader.exokit.org/model-loader.js';\nimport Avatar from './avatars.js';\nimport {XRChannelConnection} from 'https://multiplayer.exokit.org/multiplayer.js';\n\nconst peerPoseUpdateRate = 50;\nconst walkSpeed = 0.0015;\nconst floorPlane = new THREE.Plane().setFromNormalAndCoplanarPoint(new THREE.Vector3(0, 1, 0), new THREE.Vector3(0, 0, 0));\n\nconst localVector = new THREE.Vector3();\nconst localVector2 = new THREE.Vector3();\nconst localVector3 = new THREE.Vector3();\nconst localVector4 = new THREE.Vector3();\nconst localVector5 = new THREE.Vector3();\nconst localQuaternion = new THREE.Quaternion();\nconst localQuaternion2 = new THREE.Quaternion();\nconst localMatrix = new THREE.Matrix4();\nconst localEuler = new THREE.Euler();\nconst localRay = new THREE.Ray();\n\nconst z180Quaternion = new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.PI);\n\n{\n  const avatarModelsEl = document.getElementById('avatar-models');\n\n  const noneAAvatar = document.createElement('a');\n  noneAAvatar.classList.add('a-avatar');\n  noneAAvatar.innerText = 'none';\n  avatarModelsEl.appendChild(noneAAvatar);\n\n  for (let i = 0; i < avatarModels.length; i++) {\n    const avatarmodel = avatarModels[i];\n\n    const aAvatar = document.createElement('a');\n    aAvatar.classList.add('a-avatar');\n    aAvatar.setAttribute('href', `https://avatar-models.exokit.org/${avatarmodel.url}`);\n    aAvatar.innerText = avatarmodel.label;\n\n    avatarModelsEl.appendChild(aAvatar);\n  }\n}\n\nconst scene = new THREE.Scene();\n\nconst container = new THREE.Object3D();\nscene.add(container);\n\nconst camera = new THREE.PerspectiveCamera(90, window.innerWidth / window.innerHeight, 0.1, 1000);\ncamera.position.y = 1.5;\ncamera.position.z = 2;\n// camera.rotation.y = Math.PI;\n\nconst ambientLight = new THREE.AmbientLight(0x808080);\nscene.add(ambientLight);\n\nconst directionalLight = new THREE.DirectionalLight(0xFFFFFF, 1);\ndirectionalLight.position.set(0.5, 1, 0.5);\nscene.add(directionalLight);\n\n/* const directionalLight2 = new THREE.DirectionalLight(0xFFFFFF, 1);\ndirectionalLight2.position.set(0, -0.25, -0.25);\nscene.add(directionalLight2); */\n\nconst gridHelper = new THREE.GridHelper(10, 10);\ncontainer.add(gridHelper);\n\nconst _makeTextMesh = (s = '', color = 0x000000, size = 1) => {\n  // create a geometry of packed bitmap glyphs,\n  // word wrapped to 300px and right-aligned\n  var geometry = createTextGeometry({\n    width: Infinity,\n    font: fontJson,\n  });\n\n  // change text and other options as desired\n  // the options sepcified in constructor will\n  // be used as defaults\n  geometry.update(s);\n\n  // the resulting layout has metrics and bounds\n  // console.log(geometry.layout.height)\n  // console.log(geometry.layout.descender)\n\n  var material = new THREE.RawShaderMaterial(createSDFShader({\n    map: fontTexture,\n    transparent: true,\n    color,\n    // color: palette[Math.floor(Math.random() * palette.length)]\n    // negate: false,\n    side: THREE.DoubleSide,\n  }));\n\n  const scaleFactor = 0.002 * size;\n\n  const mesh = new THREE.Mesh(geometry, material)\n  mesh.position.set(0, -geometry.layout.lineHeight * 0.001, 0);\n  mesh.scale.set(scaleFactor, -scaleFactor, -scaleFactor);\n  mesh.getText = () => s;\n  mesh.setText = newS => {\n    if (newS !== s) {\n      s = newS;\n      geometry.update(s);\n    }\n  };\n  return mesh;\n};\n\nconst teleportGeometry = new THREE.TorusBufferGeometry(0.5, 0.15, 3, 5)\n  .applyMatrix(new THREE.Matrix4().makeRotationX(-(Math.PI / 2)))\n  .applyMatrix(new THREE.Matrix4().makeRotationY((1 / 20) * (Math.PI * 2)));\nconst teleportMaterial = new THREE.MeshBasicMaterial({\n  color: 0x44c2ff,\n});\nconst _makeTeleportMesh = () => {\n  const geometry = teleportGeometry;\n  const material = teleportMaterial;\n\n  const mesh = new THREE.Mesh(geometry, material);\n  mesh.visible = false;\n  mesh.frustumCulled = false;\n  return mesh;\n};\nconst teleportMeshes = [\n  _makeTeleportMesh(),\n  _makeTeleportMesh(),\n];\ncontainer.add(teleportMeshes[0]);\ncontainer.add(teleportMeshes[1]);\n\nconst _patchModel = object => {\n  object.scene.traverse(o => {\n    if (o.isMesh) {\n      o.frustumCulled = false;\n\n      if (o.material.opacity === 0) {\n        o.material.opacity = 1;\n      }\n    }\n  });\n};\nconst _loadModelUrl = async (url, filename) => {\n  const model = await ModelLoader.loadModelUrl(url, filename);\n  _patchModel(model);\n  return model;\n};\n\nconst _bindUploadFileButton = inputFileEl => {\n  inputFileEl.addEventListener('change', async e => {\n    const {files} = e.target;\n    if (files.length === 1) {\n      const [file] = files;\n      const dataUrl = URL.createObjectURL(file);\n      const model = await _loadModelUrl(dataUrl, file.name);\n      _setLocalModel(model);\n      // modelUrl = dataUrl;\n    }\n\n    const {parentNode} = inputFileEl;\n    parentNode.removeChild(inputFileEl);\n    const newInputFileEl = document.createElement('input');\n    newInputFileEl.type = 'file';\n    newInputFileEl.id = 'upload-file-button';\n    newInputFileEl.style.display = 'none';\n    parentNode.appendChild(newInputFileEl);\n    _bindUploadFileButton(newInputFileEl);\n  });\n};\n_bindUploadFileButton(document.getElementById('upload-file-button'));\nwindow.document.addEventListener('dragover', e => {\n  e.preventDefault();\n});\nwindow.document.addEventListener('drop', async e => {\n  e.preventDefault();\n\n  if (e.dataTransfer.items.length !== 1) {\n    return;\n  }\n\n  for (var i = 0; i < e.dataTransfer.items.length; i++) {\n    if (e.dataTransfer.items[i].kind === 'file') {\n      const file = e.dataTransfer.items[i].getAsFile();\n      // console.log('got file', e.dataTransfer.items[i], file);\n      const dataUrl = URL.createObjectURL(file);\n      const model = await _loadModelUrl(dataUrl, file.name);\n      _setLocalModel(model);\n      // modelUrl = dataUrl;\n    }\n  }\n});\n\nconst renderer = new THREE.WebGLRenderer({\n  // canvas: document.getElementById('canvas'),\n  // alpha: true,\n  antialias: true,\n});\n// console.log('set size', window.innerWidth, window.innerHeight);\nrenderer.setSize(window.innerWidth, window.innerHeight);\nrenderer.setPixelRatio(window.devicePixelRatio);\nrenderer.sortObjects = false;\ndocument.getElementById('iframe-wrapper').appendChild(renderer.domElement);\n\nconst orbitControls = new THREE.OrbitControls(camera, renderer.domElement);\norbitControls.screenSpacePanning = true;\norbitControls.enableMiddleZoom = false;\norbitControls.update();\n\nconst aAvatars = Array.from(document.querySelectorAll('.a-avatar'));\nfor (let i = 0; i < aAvatars.length; i++) {\n  const aAvatar = aAvatars[i];\n  aAvatar.addEventListener('click', async e => {\n    e.preventDefault();\n\n    const {href} = aAvatar;\n    if (href) {\n      _setLocalModel(await _loadModelUrl(href));\n    } else {\n      _setLocalModel(null);\n    }\n    modelUrl = href;\n    _sendAllPeerConnections(JSON.stringify({\n      method: 'model',\n      url: modelUrl,\n    }));\n  });\n}\n\nlet fontJson, fontTexture;\nconst fontPromise = Promise.all([\n  fetch('DejaVu-sdf.json').then(res => res.json()),\n  new Promise((accept, reject) => {\n    new THREE.TextureLoader().load('DejaVu-sdf.png', accept);\n  }),\n]).then(results => {\n  fontJson = results[0];\n  fontTexture = results[1];\n});\nconst buttonSize = new THREE.Vector3(1, 0.1*0.9, 0.1);\nconst buttonGeometry = new THREE.BoxBufferGeometry(buttonSize.x, buttonSize.y, buttonSize.z);\nconst colors = {\n  normal: 0x5c6bc0,\n  highlight: 0x303f9f,\n};\nconst mirrorMesh = (() => {\n  const mirrorWidth = 3;\n  const mirrorHeight = 2;\n  const geometry = new THREE.PlaneBufferGeometry(mirrorWidth, mirrorHeight)\n    .applyMatrix(new THREE.Matrix4().makeTranslation(0, 1, 0));\n  const mesh = new THREE.Reflector(geometry, {\n    clipBias: 0.003,\n    textureWidth: 1024 * window.devicePixelRatio,\n    textureHeight: 2048 * window.devicePixelRatio,\n    color: 0x889999,\n    addColor: 0x300000,\n    recursion: 1,\n    transparent: true,\n  });\n  mesh.position.set(0, 0, -1);\n\n  const borderMesh = new THREE.Mesh(\n    new THREE.BoxBufferGeometry(mirrorWidth + 0.1, mirrorHeight + 0.1, 0.1)\n      .applyMatrix(new THREE.Matrix4().makeTranslation(0, 1, -0.1/2 - 0.01)),\n    new THREE.MeshPhongMaterial({\n      color: 0x5c6bc0,\n    })\n  );\n  mesh.add(borderMesh);\n\n  const buttonMeshes = aAvatars.map((aAvatar, i) => {\n    const geometry = buttonGeometry;\n    const material = new THREE.MeshPhongMaterial({\n      color: colors.normal,\n    });\n    const mesh = new THREE.Mesh(geometry, material);\n    mesh.position.set(-2, 2 - 0.1/2 - i*0.1, 0);\n    mesh.frustumCulled = false;\n\n    fontPromise.then(() => {\n      const textMesh = _makeTextMesh(aAvatar.innerText, 0xFFFFFF);\n      textMesh.position.x = -0.45;\n      textMesh.position.y = -0.02;\n      textMesh.position.z = 0.06;\n      mesh.add(textMesh);\n    });\n\n    mesh.box = new THREE.Box3();\n\n    return mesh;\n  });\n  for (let i = 0; i < buttonMeshes.length; i++) {\n    mesh.add(buttonMeshes[i]);\n  }\n  mesh.buttonMeshes = buttonMeshes;\n  mesh.update = () => {\n    for (let i = 0; i < buttonMeshes.length; i++) {\n      const buttonMesh = buttonMeshes[i];\n      buttonMesh.box.setFromCenterAndSize(buttonMesh.getWorldPosition(new THREE.Vector3()), buttonSize.clone().multiply(buttonMesh.getWorldScale(new THREE.Vector3())));\n    }\n  };\n  mesh.getButtonIntersectionIndex = position => {\n    for (let i = 0; i < buttonMeshes.length; i++) {\n      if (buttonMeshes[i].box.containsPoint(position)) {\n        return i;\n      }\n    }\n    return -1;\n  };\n\n  mesh.onBeforeRender2 = () => {\n    if (rig) {\n      rig.undecapitate();\n    }\n  };\n  mesh.onAfterRender2 = () => {\n    if (rig && session) {\n      rig.decapitate();\n    }\n  };\n\n  return mesh;\n})();\ncontainer.add(mirrorMesh);\n\nconst userHeight = 1.7;\nconst _getHeightFactor = rigHeight => rigHeight / userHeight;\n\nlet rig = null;\nlet modelUrl = '';\nlet heightFactor = 0;\nconst _setLocalModel = newModel => {\n  if (rig) {\n    container.remove(rig.model);\n    rig.destroy();\n    rig = null;\n  }\n\n  rig = new Avatar(newModel, {\n    fingers: true,\n    hair: true,\n    visemes: true,\n    // decapitate: true,\n    microphoneMediaStream,\n    debug: !newModel,\n  });\n  container.add(rig.model);\n  window.model = newModel;\n\n  heightFactor = _getHeightFactor(rig.height);\n\n  container.scale.set(1, 1, 1).divideScalar(heightFactor);\n};\n\nconst lastPresseds = [false, false];\nconst lastBs = [false, false];\nconst lastPads = [false, false];\nconst lastPositions = [new THREE.Vector3(), new THREE.Vector3()];\nconst startGripPositions = [new THREE.Vector3(), new THREE.Vector3()];\nconst startSceneMatrix = new THREE.Matrix4();\nlet startModelScale = 1;\nconst dateOffset = Math.floor(Math.random() * 60 * 1000);\nconst realDateNow = (now => () => dateOffset + now())(Date.now);\nlet lastTimestamp = Date.now();\nfunction animate(timestamp, frame, referenceSpace) {\n  const now = Date.now();\n  const timeDiff = now - lastTimestamp;\n\n  if (rig) {\n    if (renderer.vr.enabled) {\n      const vrCameras = renderer.vr.getCamera(camera).cameras;\n      const vrCamera = vrCameras[0];\n      const vrCamera2 = vrCameras[1];\n      vrCamera.matrixWorld.decompose(vrCamera.position, vrCamera.quaternion, vrCamera.scale);\n      vrCamera2.matrixWorld.decompose(vrCamera2.position, vrCamera2.quaternion, vrCamera2.scale);\n      vrCamera.position.add(vrCamera2.position).divideScalar(2);\n      const {inputSources} = session;\n      const gamepads = navigator.getGamepads();\n\n      rig.inputs.hmd.position.copy(vrCamera.position).sub(container.position).multiplyScalar(heightFactor);\n      rig.inputs.hmd.quaternion.copy(vrCamera.quaternion);\n\n      const _getGamepad = i => {\n        const handedness = i === 0 ? 'left' : 'right';\n        const inputSource = inputSources.find(inputSource => inputSource.handedness === handedness);\n        let pose, gamepad;\n        if (inputSource && (pose = frame.getPose(inputSource.gripSpace, referenceSpace)) && (gamepad = inputSource.gamepad || gamepads[i])) {\n          const {transform} = pose;\n          const {position, orientation, matrix} = transform;\n          if (position) { // new WebXR api\n            const rawP = localVector.copy(position);\n            const p = localVector2.copy(rawP).sub(container.position).multiplyScalar(heightFactor);\n            const q = localQuaternion.copy(orientation);\n            const pressed = gamepad.buttons[0].pressed;\n            const lastPressed = lastPresseds[i];\n            const pointer = gamepad.buttons[0].value;\n            const grip = gamepad.buttons[1].value;\n            const pad = gamepad.axes[1] <= -0.5 || gamepad.axes[3] <= -0.5;\n            const padX = gamepad.axes[0] !== 0 ? gamepad.axes[0] : gamepad.axes[2];\n            const padY = gamepad.axes[1] !== 0 ? gamepad.axes[1] : gamepad.axes[3];\n            const stick = !!gamepad.buttons[3] && gamepad.buttons[3].pressed;\n            const a = !!gamepad.buttons[4] && gamepad.buttons[4].pressed;\n            const b = !!gamepad.buttons[5] && gamepad.buttons[5].pressed;\n            const lastB = lastBs[i];\n            return {\n              rawPosition: rawP,\n              position: p,\n              quaternion: q,\n              pressed,\n              lastPressed,\n              pointer,\n              grip,\n              pad,\n              padX,\n              padY,\n              stick,\n              a,\n              b,\n              lastB,\n            };\n          } else if (matrix) { // old WebXR api\n            const rawP = localVector;\n            const p = localVector2;\n            const q = localQuaternion;\n            const s = localVector3;\n            localMatrix\n              .fromArray(transform.matrix)\n              .decompose(rawP, q, s);\n            p.copy(rawP).sub(container.position).multiplyScalar(heightFactor);\n            const pressed = gamepad.buttons[0].pressed;\n            const lastPressed = lastPresseds[i];\n            const pointer = gamepad.buttons[0].value;\n            const grip = gamepad.buttons[1].value;\n            const pad = gamepad.axes[1] <= -0.5 || gamepad.axes[3] <= -0.5;\n            const padX = gamepad.axes[0] !== 0 ? gamepad.axes[0] : gamepad.axes[2];\n            const padY = gamepad.axes[1] !== 0 ? gamepad.axes[1] : gamepad.axes[3];\n            const stick = !!gamepad.buttons[3] && gamepad.buttons[3].pressed;\n            const a = !!gamepad.buttons[4] && gamepad.buttons[4].pressed;\n            const b = !!gamepad.buttons[5] && gamepad.buttons[5].pressed;\n            const lastB = lastBs[i];\n            return {\n              rawPosition: rawP,\n              position: p,\n              quaternion: q,\n              pressed,\n              lastPressed,\n              pointer,\n              grip,\n              pad,\n              padX,\n              padY,\n              stick,\n              a,\n              b,\n              lastB,\n            };\n          } else {\n            return null;\n          }\n        } else {\n          return null;\n        }\n      };\n      const _updateTeleportMesh = (i, pad, lastPad, position, quaternion, padX, padY, stick) => {\n        const teleportMesh = teleportMeshes[i];\n        teleportMesh.visible = false;\n\n        if (pad) {\n          localVector.copy(vrCamera.position).applyMatrix4(localMatrix.getInverse(container.matrix));\n          localEuler.setFromQuaternion(quaternion, 'YXZ');\n\n          for (let i = 0; i < 20; i++, localVector.add(localVector2), localEuler.x = Math.max(localEuler.x - Math.PI*0.07, -Math.PI/2)) {\n            localRay.set(localVector, localVector2.set(0, 0, -1).applyQuaternion(localQuaternion.setFromEuler(localEuler)));\n            const intersection = localRay.intersectPlane(floorPlane, localVector3);\n            if (intersection && intersection.distanceTo(localRay.origin) <= 1) {\n              teleportMesh.position.copy(intersection);\n              localEuler.setFromQuaternion(localQuaternion, 'YXZ');\n              localEuler.x = 0;\n              localEuler.z = 0;\n              teleportMesh.quaternion.setFromEuler(localEuler);\n              teleportMesh.visible = true;\n              break;\n            }\n          }\n        } else if (lastPad) {\n          localVector.copy(teleportMesh.position).applyMatrix4(container.matrix).sub(vrCamera.position);\n          localVector.y = 0;\n          container.position.sub(localVector);\n        }\n\n        if (padX !== 0 || padY !== 0) {\n          localVector.set(padX, 0, padY);\n          const moveLength = localVector.length();\n          if (moveLength > 1) {\n            localVector.divideScalar(moveLength);\n          }\n          const hmdEuler = localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n          localEuler.x = 0;\n          localEuler.z = 0;\n          container.position.sub(localVector.multiplyScalar(walkSpeed * timeDiff * (stick ? 3 : 1) * rig.height).applyEuler(hmdEuler));\n        }\n      };\n\n      const wasLastBd = lastBs[0] && lastBs[1];\n\n      const lg = _getGamepad(1);\n      let li = -1;\n      if (lg) {\n        const {rawPosition, position, quaternion, pressed, lastPressed, pointer, grip, pad, b} = lg;\n        rig.inputs.leftGamepad.quaternion.copy(quaternion);\n        rig.inputs.leftGamepad.position.copy(position);\n        rig.inputs.leftGamepad.pointer = pointer;\n        rig.inputs.leftGamepad.grip = grip;\n\n        li = mirrorMesh.getButtonIntersectionIndex(position);\n        if (pressed && !lastPressed) {\n          if (li !== -1) {\n            aAvatars[li].click();\n          }\n        }\n\n        _updateTeleportMesh(0, pad, lastPads[0], position, quaternion, 0, 0, false);\n\n        lastPresseds[0] = pressed;\n        lastPads[0] = pad;\n        lastBs[0] = b;\n        lastPositions[0].copy(rawPosition);\n      }\n      const rg = _getGamepad(0);\n      let ri = -1;\n      if (rg) {\n        const {rawPosition, position, quaternion, pressed, lastPressed, pointer, grip, pad, padX, padY, stick, b} = rg;\n        rig.inputs.rightGamepad.quaternion.copy(quaternion);\n        rig.inputs.rightGamepad.position.copy(position);\n        rig.inputs.rightGamepad.pointer = pointer;\n        rig.inputs.rightGamepad.grip = grip;\n\n        ri = mirrorMesh.getButtonIntersectionIndex(position);\n        if (pressed && !lastPressed) {\n          if (ri !== -1) {\n            aAvatars[ri].click();\n          }\n        }\n\n        _updateTeleportMesh(1, false, false, position, quaternion, padX, padY, stick);\n\n        lastPresseds[1] = pressed;\n        lastPads[1] = pad;\n        lastBs[1] = b;\n        lastPositions[1].copy(rawPosition);\n      }\n\n      const _startScale = () => {\n        for (let i = 0; i < startGripPositions.length; i++) {\n          startGripPositions[i].copy(lastPositions[i]);\n        }\n        startSceneMatrix.copy(container.matrix);\n        startModelScale = rig ? rig.inputs.hmd.scaleFactor : 1;\n      };\n      const _processScale = () => {\n        const startDistance = startGripPositions[0].distanceTo(startGripPositions[1]);\n        const currentDistance = lastPositions[0].distanceTo(lastPositions[1]);\n        const scaleFactor = currentDistance / startDistance;\n\n        let startGripPosition = localVector3.copy(startGripPositions[0]).add(startGripPositions[1]).divideScalar(2)\n        let currentGripPosition = localVector4.copy(lastPositions[0]).add(lastPositions[1]).divideScalar(2)\n        startGripPosition.applyMatrix4(localMatrix.getInverse(startSceneMatrix));\n        currentGripPosition.applyMatrix4(localMatrix/*.getInverse(startSceneMatrix)*/);\n\n        const positionDiff = localVector5.copy(currentGripPosition).sub(startGripPosition);\n\n        container.matrix.copy(startSceneMatrix)\n          .multiply(localMatrix.makeTranslation(currentGripPosition.x, currentGripPosition.y, currentGripPosition.z))\n          .multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor))\n          .multiply(localMatrix.makeTranslation(-currentGripPosition.x, -currentGripPosition.y, -currentGripPosition.z))\n          .multiply(localMatrix.makeTranslation(positionDiff.x, positionDiff.y, positionDiff.z))\n          .decompose(container.position, container.quaternion, container.scale);\n\n        if (rig) {\n          rig.inputs.hmd.scaleFactor = startModelScale / scaleFactor;\n        }\n\n        // _startScale();\n      };\n      const isLastBd = lastBs[0] && lastBs[1];\n      if (!wasLastBd && isLastBd) {\n        _startScale();\n      } else if (isLastBd) {\n        _processScale();\n      }\n\n      for (let i = 0; i < mirrorMesh.buttonMeshes.length; i++) {\n        mirrorMesh.buttonMeshes[i].material.color.setHex((i === li || i === ri) ? colors.highlight : colors.normal);\n      }\n\n      rig.update();\n    } else if (controlsBound) {\n      // defer\n    } else {\n      const positionOffset = Math.sin((realDateNow()%10000)/10000*Math.PI*2)*2;\n      const positionOffset2 = -Math.sin((realDateNow()%5000)/5000*Math.PI*2)*1;\n      const standFactor = rig.height - 0.1*rig.height + Math.sin((realDateNow()%2000)/2000*Math.PI*2)*0.2*rig.height;\n      const rotationAngle = (realDateNow()%5000)/5000*Math.PI*2;\n\n      // rig.inputs.hmd.position.set(positionOffset, 0.6 + standFactor, 0);\n      rig.inputs.hmd.position.set(positionOffset, standFactor, positionOffset2);\n      rig.inputs.hmd.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle)\n        .multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(1, 0, 0), Math.sin((realDateNow()%2000)/2000*Math.PI*2)*Math.PI*0.2))\n        .multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 0, 1), Math.sin((realDateNow()%2000)/2000*Math.PI*2)*Math.PI*0.25));\n\n      rig.inputs.rightGamepad.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle)\n        // .multiply(new THREE.Quaternion().setFromAxisAngle(new THREE.Vector3(0, 1, 0), Math.sin((realDateNow()%5000)/5000*Math.PI*2)*Math.PI*0.6));\n      rig.inputs.rightGamepad.position.set(positionOffset, rig.height*0.7 + Math.sin((realDateNow()%2000)/2000*Math.PI*2)*0.1, positionOffset2).add(\n        new THREE.Vector3(-rig.shoulderWidth/2, 0, -0.2).applyQuaternion(rig.inputs.rightGamepad.quaternion)\n      )/*.add(\n        new THREE.Vector3(-0.1, 0, -1).normalize().multiplyScalar(rig.rightArmLength*0.4).applyQuaternion(rig.inputs.rightGamepad.quaternion)\n      ); */\n      rig.inputs.leftGamepad.quaternion.setFromAxisAngle(new THREE.Vector3(0, 1, 0), rotationAngle);\n      rig.inputs.leftGamepad.position.set(positionOffset, rig.height*0.7, positionOffset2).add(\n        new THREE.Vector3(rig.shoulderWidth/2, 0, -0.2).applyQuaternion(rig.inputs.leftGamepad.quaternion)\n      )/*.add(\n        new THREE.Vector3(0.1, 0, -1).normalize().multiplyScalar(rig.leftArmLength*0.4).applyQuaternion(rig.inputs.leftGamepad.quaternion)\n      );*/\n\n      rig.inputs.leftGamepad.pointer = (Math.sin((Date.now()%10000)/10000*Math.PI*2) + 1) / 2;\n      rig.inputs.leftGamepad.grip = (Math.sin((Date.now()%10000)/10000*Math.PI*2) + 1) / 2;\n\n      rig.inputs.rightGamepad.pointer = (Math.sin((Date.now()%10000)/10000*Math.PI*2) + 1) / 2;\n      rig.inputs.rightGamepad.grip = (Math.sin((Date.now()%10000)/10000*Math.PI*2) + 1) / 2;\n\n      rig.update();\n    }\n  }\n\n  renderer.render(scene, camera);\n\n  for (let i = 0; i < peerConnections.length; i++) {\n    const peerConnection = peerConnections[i];\n    if (peerConnection.rig) {\n      peerConnection.rig.update();\n    }\n  }\n\n  if (controlsBound) {\n    localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n    localEuler.x = Math.min(Math.max(localEuler.x - mouse.movementY * 0.01, -Math.PI/2), Math.PI/2);\n    localEuler.y -= mouse.movementX * 0.01\n    localEuler.z = 0;\n    rig.inputs.hmd.quaternion.setFromEuler(localEuler);\n    mouse.movementX = 0;\n    mouse.movementY = 0;\n\n    localEuler.setFromQuaternion(rig.inputs.hmd.quaternion, 'YXZ');\n    localEuler.x = 0;\n    localEuler.z = 0;\n    const floorRotation = localQuaternion.setFromEuler(localEuler);\n\n    localVector.set(0, 0, 0);\n    if (keys.left) {\n      localVector.x += -1;\n    }\n    if (keys.right) {\n      localVector.x += 1;\n    }\n    if (keys.up) {\n      localVector.z += -1;\n    }\n    if (keys.down) {\n      localVector.z += 1;\n    }\n    rig.inputs.hmd.position.add(localVector.normalize().multiplyScalar(walkSpeed * timeDiff * (keys.shift ? 3 : 1) * rig.height).applyQuaternion(floorRotation));\n    if (keys.space) {\n      const lerpFactor = 0.3;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1-lerpFactor) + rig.height*1.1 * lerpFactor;\n    } else if (keys.z) {\n      const lerpFactor = 0.05;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1-lerpFactor) + rig.height*0.2 * lerpFactor;\n    } else if (keys.c) {\n      const lerpFactor = 0.2;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1-lerpFactor) + rig.height*0.7 * lerpFactor;\n    } else {\n      const lerpFactor = 0.3;\n      rig.inputs.hmd.position.y = rig.inputs.hmd.position.y * (1-lerpFactor) + rig.height*0.9 * lerpFactor;\n    }\n\n    rig.inputs.leftGamepad.position.copy(rig.inputs.hmd.position)\n      .add(localVector.set(0.15, -0.15, -0.2).multiplyScalar(rig.height).applyQuaternion(rig.inputs.hmd.quaternion));\n    rig.inputs.leftGamepad.quaternion.copy(rig.inputs.hmd.quaternion)\n      .multiply(localQuaternion2.setFromAxisAngle(localVector.set(1, 0, 0), Math.PI*0.5));\n    rig.inputs.rightGamepad.position.copy(rig.inputs.hmd.position)\n      .add(localVector.set(-0.15, -0.15, -0.2).multiplyScalar(rig.height).applyQuaternion(rig.inputs.hmd.quaternion));\n    rig.inputs.rightGamepad.quaternion.copy(rig.inputs.hmd.quaternion)\n      .multiply(localQuaternion2.setFromAxisAngle(localVector.set(1, 0, 0), Math.PI*0.5))\n\n    if (controlsBound === 'firstperson') {\n      rig.decapitate();\n    } else if (controlsBound === 'thirdperson') {\n      rig.undecapitate();\n    }\n\n    rig.update();\n\n    if (controlsBound === 'firstperson') {\n      rig.outputs.eyes.matrixWorld.decompose(camera.position, camera.quaternion, localVector);\n      camera.position.divideScalar(heightFactor).add(container.position);\n      camera.quaternion.multiply(z180Quaternion);\n    } else if (controlsBound === 'thirdperson') {\n      rig.outputs.eyes.matrixWorld.decompose(camera.position, camera.quaternion, localVector);\n      camera.position.divideScalar(heightFactor).add(container.position);\n      camera.quaternion.multiply(z180Quaternion);\n      camera.position.add(localVector.set(0, 0.5, 2).applyQuaternion(camera.quaternion));\n    }\n  }\n\n  lastTimestamp = now;\n}\nrenderer.setAnimationLoop(animate);\n\nconst mouse = {\n  movementX: 0,\n  movementY: 0,\n};\nconst keys = {\n  up: false,\n  down: false,\n  left: false,\n  right: false,\n  z: false,\n  c: false,\n  space: false,\n  shift: false,\n};\nlet controlsBound = null;\nlet unbindControls = null;\nwindow.document.addEventListener('pointerlockchange', () => {\n  if (!window.document.pointerLockElement && unbindControls) {\n    unbindControls();\n    unbindControls = null;\n  }\n});\n\nconst _bindControls = type => {\n  const _keydown = e => {\n    switch (e.which) {\n      case 65: {\n        keys.left = true;\n        break;\n      }\n      case 68: {\n        keys.right = true;\n        break;\n      }\n      case 87: {\n        keys.up = true;\n        break;\n      }\n      case 83: {\n        keys.down = true;\n        break;\n      }\n      case 90: {\n        keys.z = true;\n        break;\n      }\n      case 67: {\n        keys.c = true;\n        break;\n      }\n      case 32: {\n        keys.space = true;\n        break;\n      }\n      case 16: {\n        keys.shift = true;\n        break;\n      }\n    }\n  };\n  window.addEventListener('keydown', _keydown);\n  const _keyup = e => {\n    switch (e.which) {\n      case 65: {\n        keys.left = false;\n        break;\n      }\n      case 68: {\n        keys.right = false;\n        break;\n      }\n      case 87: {\n        keys.up = false;\n        break;\n      }\n      case 83: {\n        keys.down = false;\n        break;\n      }\n      case 90: {\n        keys.z = false;\n        break;\n      }\n      case 67: {\n        keys.c = false;\n        break;\n      }\n      case 32: {\n        keys.space = false;\n        break;\n      }\n      case 16: {\n        keys.shift = false;\n        break;\n      }\n    }\n  };\n  window.addEventListener('keyup', _keyup);\n  const _mousemove = e => {\n    mouse.movementX += e.movementX;\n    mouse.movementY += e.movementY;\n  };\n  window.addEventListener('mousemove', _mousemove);\n  orbitControls.enabled = false;\n  controlsBound = type;\n\n  unbindControls = () => {\n    window.addEventListener('keydown', _keydown);\n    window.addEventListener('keyup', _keyup);\n    window.removeEventListener('mousemove', _mousemove);\n    orbitControls.target.copy(camera.position).add(new THREE.Vector3(0, 0, -3).applyQuaternion(camera.quaternion));\n    orbitControls.enabled = true;\n    controlsBound = null;\n  };\n};\nconst firstpersonButton = document.getElementById('firstperson-button');\nfirstpersonButton.addEventListener('click', async () => {\n  if (rig) {\n    await renderer.domElement.requestPointerLock();\n    _bindControls('firstperson');\n  }\n});\nconst thirdpersonButton = document.getElementById('thirdperson-button');\nthirdpersonButton.addEventListener('click', async () => {\n  if (rig) {\n    await renderer.domElement.requestPointerLock();\n    _bindControls('thirdperson');\n  }\n});\n\nlet session = null;\nconst enterXrButton = document.getElementById('enter-xr-button');\nconst noXrButton = document.getElementById('no-xr-button');\nenterXrButton.addEventListener('click', async () => {\n  session = await navigator.xr.requestSession('immersive-vr', {\n    requiredFeatures: ['local-floor'],\n  });\n  let referenceSpace;\n  let referenceSpaceType = '';\n  const _loadReferenceSpace = async () => {\n    const lastReferenceSpaceType = referenceSpaceType;\n    try {\n      referenceSpace = await session.requestReferenceSpace('local-floor');\n      referenceSpaceType = 'local-floor';\n    } catch (err) {\n      referenceSpace = await session.requestReferenceSpace('local');\n      referenceSpaceType = 'local';\n    }\n\n    if (referenceSpaceType !== lastReferenceSpaceType) {\n      console.log(`referenceSpace changed to ${referenceSpaceType}`);\n    }\n  };\n  await _loadReferenceSpace();\n  const loadReferenceSpaceInterval = setInterval(_loadReferenceSpace, 1000);\n\n  renderer.vr.setSession(session);\n\n  session.requestAnimationFrame((timestamp, frame) => {\n    const pose = frame.getViewerPose(referenceSpace);\n    const viewport = session.renderState.baseLayer.getViewport(pose.views[0]);\n    // const width = viewport.width;\n    const height = viewport.height;\n    const fullWidth = (() => {\n      let result = 0;\n      for (let i = 0; i < pose.views.length; i++) {\n        result += session.renderState.baseLayer.getViewport(pose.views[i]).width;\n      }\n      return result;\n    })();\n    renderer.setSize(fullWidth, height);\n    renderer.setPixelRatio(1);\n\n    renderer.setAnimationLoop(null);\n\n    renderer.vr.enabled = true;\n    renderer.vr.setSession(session);\n    renderer.vr.setAnimationLoop(animate);\n\n    console.log('loaded root in XR');\n  });\n});\n\nlet microphoneMediaStream = null;\nconst enableMicButton = document.getElementById('enable-mic-button');\nconst disableMicButton = document.getElementById('disable-mic-button');\nenableMicButton.addEventListener('click', async () => {\n  try {\n    microphoneMediaStream  = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n\n    rig.setMicrophoneMediaStream(microphoneMediaStream);\n    if (channelConnection) {\n      channelConnection.setMicrophoneMediaStream(microphoneMediaStream);\n    }\n\n    disableMicButton.style.display = null;\n    enableMicButton.style.display = 'none';\n  } catch (err) {\n    console.warn(err);\n  }\n});\ndisableMicButton.addEventListener('click', async () => {\n  rig.setMicrophoneMediaStream(null);\n  if (channelConnection) {\n    channelConnection.setMicrophoneMediaStream(null);\n  }\n  microphoneMediaStream.getAudioTracks().forEach(track => {\n    track.stop();\n  });\n\n  microphoneMediaStream = null;\n  enableMicButton.style.display = null;\n  disableMicButton.style.display = 'none';\n\n  /* try {\n    await navigator.permissions.revoke({\n      name: 'microphone',\n    });\n  } catch(err) {\n    console.warn(err);\n  } */\n});\n\nlet channelConnection = null;\nconst peerConnections = [];\nconst _sendAllPeerConnections = s => {\n  for (let i = 0; i < peerConnections.length; i++) {\n    peerConnections[i].send(s);\n  }\n};\nconst channelInput = document.getElementById('channel-input');\nconst connectButton = document.getElementById('connect-button');\nconnectButton.addEventListener('click', () => {\n  const channelInputValue = channelInput.value;\n  const match = channelInputValue.match(/^(.+?)\\/(.+?)$/);\n  if (match) {\n    const userName = match[1];\n    const channelName = match[2];\n\n    console.log(`connecting to ${userName}/${channelName}`);\n\n    channelConnection = new XRChannelConnection(`wss://presence.exokit.org/?u=${encodeURIComponent(userName)}&c=${encodeURIComponent(channelName)}`, {\n      microphoneMediaStream,\n    });\n    channelConnection.addEventListener('open', () => {\n      console.log('xr channel open');\n    });\n    channelConnection.addEventListener('error', err => {\n      console.warn('xr channel error', err);\n    });\n    channelConnection.addEventListener('peerconnection', e => {\n      const peerConnection = e.detail;\n\n      peerConnection.rig = null;\n      peerConnection.mediaStream = null;\n      let updateInterval = 0;\n      peerConnection.addEventListener('open', () => {\n        console.log('add peer connection', peerConnection);\n\n        peerConnections.push(peerConnection);\n\n        peerConnection.send(JSON.stringify({\n          method: 'model',\n          url: modelUrl,\n        }));\n\n        updateInterval = setInterval(() => {\n          if (rig) {\n            const hmd = {\n              position: localVector.copy(rig.inputs.hmd.position).divideScalar(heightFactor).toArray(),\n              quaternion: rig.inputs.hmd.quaternion.toArray(),\n              scaleFactor: rig.inputs.hmd.scaleFactor,\n            };\n            const gamepads = [\n              {\n                position: localVector.copy(rig.inputs.leftGamepad.position).divideScalar(heightFactor).toArray(),\n                quaternion: rig.inputs.leftGamepad.quaternion.toArray(),\n                pointer: rig.inputs.leftGamepad.pointer,\n                grip: rig.inputs.leftGamepad.grip,\n                visible: true,\n              },\n              {\n                position: localVector.copy(rig.inputs.rightGamepad.position).divideScalar(heightFactor).toArray(),\n                quaternion: rig.inputs.rightGamepad.quaternion.toArray(),\n                pointer: rig.inputs.rightGamepad.pointer,\n                grip: rig.inputs.rightGamepad.grip,\n                visible: true,\n              },\n            ];\n            peerConnection.update(hmd, gamepads);\n          }\n        }, peerPoseUpdateRate);\n      });\n      peerConnection.addEventListener('close', () => {\n        console.log('remove peer connection', peerConnection);\n\n        const index = peerConnections.indexOf(peerConnection);\n        if (index !== -1) {\n          peerConnections.splice(index, 1);\n        }\n\n        clearInterval(updateInterval);\n\n        if (peerConnection.rig) {\n          container.remove(peerConnection.rig.model);\n          peerConnection.rig.destroy();\n        }\n      });\n      peerConnection.addEventListener('pose', e => {\n        const {rig} = peerConnection;\n        if (rig) {\n          const {detail: data} = e;\n          const {hmd, gamepads} = data;\n\n          rig.starts.hmd.position.copy(peerConnection.rig.inputs.hmd.position);\n          rig.starts.hmd.rotation.copy(peerConnection.rig.inputs.hmd.quaternion);\n          rig.starts.hmd.scaleFactor = peerConnection.rig.inputs.hmd.scaleFactor;\n          rig.starts.gamepads[0].position.copy(peerConnection.rig.inputs.leftGamepad.position);\n          rig.starts.gamepads[0].rotation.copy(peerConnection.rig.inputs.leftGamepad.quaternion);\n          rig.starts.gamepads[0].pointer = peerConnection.rig.inputs.leftGamepad.pointer;\n          rig.starts.gamepads[0].grip = peerConnection.rig.inputs.leftGamepad.grip;\n          rig.starts.gamepads[1].position.copy(peerConnection.rig.inputs.rightGamepad.position);\n          rig.starts.gamepads[1].rotation.copy(peerConnection.rig.inputs.rightGamepad.quaternion);\n          rig.starts.gamepads[1].pointer = peerConnection.rig.inputs.rightGamepad.pointer;\n          rig.starts.gamepads[1].grip = peerConnection.rig.inputs.rightGamepad.grip;\n\n          rig.targets.hmd.position.fromArray(hmd.position);\n          rig.targets.hmd.rotation.fromArray(hmd.quaternion);\n          rig.targets.hmd.scaleFactor = hmd.scaleFactor;\n          rig.targets.gamepads[0].position.fromArray(gamepads[0].position);\n          rig.targets.gamepads[0].rotation.fromArray(gamepads[0].quaternion);\n          rig.targets.gamepads[0].pointer = gamepads[0].pointer;\n          rig.targets.gamepads[0].grip = gamepads[0].grip;\n          rig.targets.gamepads[1].position.fromArray(gamepads[1].position);\n          rig.targets.gamepads[1].rotation.fromArray(gamepads[1].quaternion);\n          rig.targets.gamepads[1].pointer = gamepads[1].pointer;\n          rig.targets.gamepads[1].grip = gamepads[1].grip;\n          rig.targets.timestamp = Date.now();\n        }\n      });\n      peerConnection.addEventListener('mediastream', e => {\n        console.log('got media stream', e.detail, e.detail.getAudioTracks());\n        peerConnection.mediaStream = e.detail;\n        if (peerConnection.rig) {\n          peerConnection.rig.setMicrophoneMediaStream(peerConnection.mediaStream, {\n            muted: false,\n          });\n        }\n      });\n      peerConnection.addEventListener('message', async e => {\n        console.log('got message', e);\n        const data = JSON.parse(e.data);\n        const {method} = data;\n        if (method === 'model') {\n          const {url} = data;\n          console.log('got peer model', {url});\n\n          if (peerConnection.rig) {\n            container.remove(peerConnection.rig.model);\n            peerConnection.rig.destroy();\n          }\n\n          const model = url ? await _loadModelUrl(url) : null;\n          peerConnection.rig = new Avatar(model, {\n            fingers: true,\n            hair: true,\n            visemes: true,\n            microphoneMediaStream: peerConnection.mediaStream,\n            muted: false,\n            debug: !model,\n          });\n          container.add(peerConnection.rig.model);\n\n          peerConnection.rig.starts = {\n            hmd: {\n              position: peerConnection.rig.inputs.hmd.position.clone(),\n              rotation: peerConnection.rig.inputs.hmd.quaternion.clone(),\n              scaleFactor: peerConnection.rig.inputs.hmd.scaleFactor,\n            },\n            gamepads: [\n              {\n                position: peerConnection.rig.inputs.leftGamepad.position.clone(),\n                rotation:  peerConnection.rig.inputs.leftGamepad.quaternion.clone(),\n                pointer: peerConnection.rig.inputs.leftGamepad.pointer,\n                grip: peerConnection.rig.inputs.leftGamepad.grip,\n              },\n              {\n                position: peerConnection.rig.inputs.rightGamepad.position.clone(),\n                rotation: peerConnection.rig.inputs.rightGamepad.quaternion.clone(),\n                pointer: peerConnection.rig.inputs.rightGamepad.pointer,\n                grip: peerConnection.rig.inputs.rightGamepad.grip,\n              },\n            ],\n          };\n          peerConnection.rig.targets = {\n            hmd: {\n              position: new THREE.Vector3(),\n              rotation: new THREE.Quaternion(),\n              scaleFactor: 1,\n            },\n            gamepads: [\n              {\n                position: new THREE.Vector3(),\n                rotation: new THREE.Quaternion(),\n                pointer: 0,\n                grip: 0,\n              },\n              {\n                position: new THREE.Vector3(),\n                rotation: new THREE.Quaternion(),\n                pointer: 0,\n                grip: 0,\n              },\n            ],\n            timestamp: Date.now(),\n          };\n          const heightFactor = _getHeightFactor(peerConnection.rig.height);\n          peerConnection.rig.update = (_update => function update() {\n            const now = Date.now();\n            const {timestamp} = peerConnection.rig.targets;\n            const lerpFactor = Math.min(Math.max((now - timestamp) / (peerPoseUpdateRate*2), 0), 1);\n\n            peerConnection.rig.inputs.hmd.quaternion.copy(peerConnection.rig.starts.hmd.rotation).slerp(peerConnection.rig.targets.hmd.rotation, lerpFactor);\n            peerConnection.rig.inputs.hmd.position.copy(peerConnection.rig.starts.hmd.position).lerp(\n              localVector.copy(peerConnection.rig.targets.hmd.position).multiplyScalar(heightFactor),\n              lerpFactor\n            );\n            peerConnection.rig.inputs.hmd.scaleFactor = peerConnection.rig.starts.hmd.scaleFactor * (1-lerpFactor) + peerConnection.rig.targets.hmd.scaleFactor * lerpFactor;\n\n            peerConnection.rig.inputs.leftGamepad.position.copy(peerConnection.rig.starts.gamepads[0].position).lerp(\n              localVector.copy(peerConnection.rig.targets.gamepads[0].position).multiplyScalar(heightFactor),\n              lerpFactor\n            );\n            peerConnection.rig.inputs.leftGamepad.quaternion.copy(peerConnection.rig.starts.gamepads[0].rotation).slerp(peerConnection.rig.targets.gamepads[0].rotation, lerpFactor);\n            peerConnection.rig.inputs.leftGamepad.pointer = peerConnection.rig.starts.gamepads[0].pointer * (1-lerpFactor) + peerConnection.rig.targets.gamepads[0].pointer * lerpFactor;\n            peerConnection.rig.inputs.leftGamepad.grip = peerConnection.rig.starts.gamepads[0].grip * (1-lerpFactor) + peerConnection.rig.targets.gamepads[0].grip * lerpFactor;\n\n            peerConnection.rig.inputs.rightGamepad.position.copy(peerConnection.rig.starts.gamepads[1].position).lerp(\n              localVector.copy(peerConnection.rig.targets.gamepads[1].position).multiplyScalar(heightFactor),\n              lerpFactor\n            );\n            peerConnection.rig.inputs.rightGamepad.quaternion.copy(peerConnection.rig.starts.gamepads[1].rotation).slerp(peerConnection.rig.targets.gamepads[1].rotation, lerpFactor);\n            peerConnection.rig.inputs.rightGamepad.pointer = peerConnection.rig.starts.gamepads[1].pointer * (1-lerpFactor) + peerConnection.rig.targets.gamepads[1].pointer * lerpFactor;\n            peerConnection.rig.inputs.rightGamepad.grip = peerConnection.rig.starts.gamepads[1].grip * (1-lerpFactor) + peerConnection.rig.targets.gamepads[1].grip * lerpFactor;\n\n            _update.apply(this, arguments);\n          })(peerConnection.rig.update);\n        } else {\n          console.warn('invalid method', {method});\n        }\n      });\n    });\n\n    connectButton.style.display = 'none';\n  } else {\n    console.warn(`invalid user/channel: ${channelInputValue}`);\n  }\n});\n\n(async () => {\n  let result;\n  if (navigator.xr) {\n    try {\n      await navigator.xr.supportsSession('immersive-vr');\n      result = true;\n    } catch (err) {\n      console.warn(err);\n      result = false;\n    }\n  } else {\n    result = false;\n  }\n  if (result) {\n    console.log('xr available');\n    enterXrButton.style.display = null;\n  } else {\n    console.log('no xr');\n    noXrButton.style.display = null;\n  }\n\n  /* const microphonePermission = await navigator.permissions.query({\n    name: 'microphone',\n  });\n  if (microphonePermission.state === 'granted') {\n    microphoneMediaStream  = await navigator.mediaDevices.getUserMedia({\n      audio: true,\n    });\n    disableMicButton.style.display = null;\n  } else {\n    enableMicButton.style.display = null;\n  } */\n  enableMicButton.style.display = null;\n\n  const {href} = aAvatars[1];\n  const model = await _loadModelUrl(href);\n  _setLocalModel(model);\n  modelUrl = href;\n  _sendAllPeerConnections(JSON.stringify({\n    method: 'model',\n    url: modelUrl,\n  }));\n})();\n\nlet loginToken = null;\nconst loginUrl = 'https://login.exokit.org/';\nasync function doLogin(email, code) {\n  const res = await fetch(`${loginUrl}?email=${encodeURIComponent(email)}&code=${encodeURIComponent(code)}`, {\n    method: 'POST',\n  });\n  if (res.status >= 200 && res.status < 300) {\n    const newLoginToken = await res.json();\n\n    await storage.set('loginToken', newLoginToken);\n\n    loginToken = newLoginToken;\n\n    // loginNameStatic.innerText = loginToken.name;\n    // loginEmailStatic.innerText = loginToken.email;\n\n    document.body.classList.add('logged-in');\n    loginForm.classList.remove('phase-1');\n    loginForm.classList.remove('phase-2');\n    loginForm.classList.add('phase-3');\n\n    return true;\n  } else {\n    return false;\n  }\n}\nconst storage = {\n  async get(k) {\n    const s = localStorage.getItem(k);\n    if (typeof s === 'string') {\n      return JSON.parse(s);\n    } else {\n      return undefined;\n    }\n  },\n  async set(k, v) {\n    localStorage.setItem(k, JSON.stringify(v));\n  },\n  async remove(k) {\n    localStorage.removeItem(k);\n  },\n};\n\n// const loginButton = document.getElementById('login-button');\n// const loginButton2 = document.getElementById('login-button-2');\n// const loginPopdown = document.getElementById('login-popdown');\nconst loginForm = document.getElementById('login-form');\nconst loginEmail = document.getElementById('login-email');\nconst loginNameStatic = document.getElementById('login-name-static');\nconst loginEmailStatic = document.getElementById('login-email-static');\nconst statusNotConnected = document.getElementById('status-not-connected');\nconst statusConnected = document.getElementById('status-connected');\nconst loginVerificationCode = document.getElementById('login-verification-code');\nconst loginNotice = document.getElementById('login-notice');\nconst loginError = document.getElementById('login-error');\nconst logoutButton = document.getElementById('logout-button');\nloginForm.onsubmit = async e => {\n  e.preventDefault();\n\n  if (loginForm.classList.contains('phase-1') && loginEmail.value) {\n    loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    loginForm.classList.remove('phase-1');\n\n    const res = await fetch(`${loginUrl}?email=${encodeURIComponent(loginEmail.value)}`, {\n      method: 'POST',\n    })\n    if (res.status >= 200 && res.status < 300) {\n      loginNotice.innerText = `Code sent to ${loginEmail.value}!`;\n      loginForm.classList.add('phase-2');\n\n      return res.blob();\n    } else if (res.status === 403) {\n      loginError.innerText = `${loginEmail.value} is not in the beta yet :(`;\n\n      loginForm.classList.add('phase-1');\n    } else {\n      throw new Error(`invalid status code: ${res.status}`);\n    }\n  } else if (loginForm.classList.contains('phase-2') && loginEmail.value && loginVerificationCode.value) {\n    loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    loginForm.classList.remove('phase-2');\n\n    await doLogin(loginEmail.value, loginVerificationCode.value);\n  } else if (loginForm.classList.contains('phase-3')) {\n    await storage.remove('loginToken');\n\n    window.location.reload();\n\n    /* loginToken = null;\n    xrEngine.postMessage({\n      method: 'login',\n      loginToken,\n    });\n\n    loginNotice.innerHTML = '';\n    loginError.innerHTML = '';\n    document.body.classList.remove('logged-in');\n    loginForm.classList.remove('phase-3');\n    loginForm.classList.add('phase-1'); */\n  }\n};\n\nconst exportModelButton = document.getElementById('export-model-button');\nexportModelButton.addEventListener('click', async () => {\n  const ab = await model.export();\n  const b = new Blob([ab], {type: 'model/gltf-binary'});\n  const u = URL.createObjectURL(b);\n\n  const a = document.createElement('a');\n  a.download = 'model.glb';\n  a.href = u;\n  a.style.display = 'none';\n  document.body.appendChild(a);\n  a.click();\n\n  document.body.removeChild(a);\n  URL.revokeObjectURL(u);\n});\n\nconst scaleDownButton = document.getElementById('scale-down-button');\nscaleDownButton.addEventListener('click', () => {\n  const scaleFactor = 1.25;\n\n  const orbitControlsTarget = localVector.copy(orbitControls.target);\n  container.matrix\n    .multiply(localMatrix.makeTranslation(orbitControlsTarget.x, orbitControlsTarget.y, orbitControlsTarget.z))\n    .multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor))\n    .multiply(localMatrix.makeTranslation(-orbitControlsTarget.x, -orbitControlsTarget.y, -orbitControlsTarget.z))\n    .decompose(container.position, container.quaternion, container.scale);\n\n  if (rig) {\n    rig.inputs.hmd.scaleFactor /= scaleFactor;\n  }\n});\nconst scaleUpButton = document.getElementById('scale-up-button');\nscaleUpButton.addEventListener('click', () => {\n  const scaleFactor = 1/1.25;\n\n  const orbitControlsTarget = localVector.copy(orbitControls.target);\n  container.matrix\n    .multiply(localMatrix.makeTranslation(orbitControlsTarget.x, orbitControlsTarget.y, orbitControlsTarget.z))\n    .multiply(localMatrix.makeScale(scaleFactor, scaleFactor, scaleFactor))\n    .multiply(localMatrix.makeTranslation(-orbitControlsTarget.x, -orbitControlsTarget.y, -orbitControlsTarget.z))\n    .decompose(container.position, container.quaternion, container.scale);\n\n  if (rig) {\n    rig.inputs.hmd.scaleFactor /= scaleFactor;\n  }\n});\n\n(async () => {\n  const localLoginToken = await storage.get('loginToken');\n  if (localLoginToken) {\n    const res = await fetch(`${loginUrl}?email=${encodeURIComponent(localLoginToken.email)}&token=${encodeURIComponent(localLoginToken.token)}`, {\n      method: 'POST',\n    })\n    if (res.status >= 200 && res.status < 300) {\n      loginToken = await res.json();\n\n      await storage.set('loginToken', loginToken);\n\n      // loginNameStatic.innerText = loginToken.name;\n      // loginEmailStatic.innerText = loginToken.email;\n\n      document.body.classList.add('logged-in');\n      loginForm.classList.remove('phase-1');\n      loginForm.classList.remove('phase-2');\n      loginForm.classList.add('phase-3');\n    } else {\n      await storage.remove('loginToken');\n\n      console.warn(`invalid status code: ${res.status}`);\n    }\n  }\n})();\n\nwindow.addEventListener('resize', e => {\n  camera.aspect = window.innerWidth / window.innerHeight;\n  camera.updateProjectionMatrix();\n});"]},"metadata":{},"sourceType":"module"}