{"version":3,"sources":["WebXRApps/avatars-master/index.html","WebXRApps/exokit-browser-master/index.html","Navbar.js","WebXRApp.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","props","src","className","alt","href","id","type","placeholder","value","WebXRApp","useEffect","parse","app","childNodes","querySelectorAll","forEach","s","console","log","rawAttrs","script","document","createElement","attributes","appFolder","slice","async","body","appendChild","dangerouslySetInnerHTML","__html","App","path","component","AvatarsApp","BrowserApp","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gGAAAA,EAAOC,QAAU,wkT,iBCAjBD,EAAOC,QAAU,69jC,0JC4CFC,G,YAzCA,SAAAC,GACb,OACE,gCACE,yBAAKC,IAAI,WAAWC,UAAU,OAAOC,IAAI,SACzC,yBAAKD,UAAU,YAAW,0CAC1B,uBAAGE,KAAK,4BAA2B,6BAAK,0BAAMF,UAAU,eAAhB,mBACxC,uBAAGE,KAAK,8BAA6B,6BAAK,0BAAMF,UAAU,eAAhB,aAE1C,uBAAGE,KAAK,8BAA6B,6BAAK,0BAAMF,UAAU,eAAhB,UACtC,uBAAGA,UAAU,mBAAb,mBAGJ,0BAAMA,UAAU,qBAAqBG,GAAG,cACtC,yBAAKH,UAAU,iBACb,yBAAKA,UAAU,eAAeG,GAAG,iBACjC,yBAAKH,UAAU,cAAcG,GAAG,iBAElC,yBAAKH,UAAU,iCACb,2BAAOI,KAAK,QAAQC,YAAY,iBAAiBF,GAAG,gBACpD,2BAAOC,KAAK,SAASE,MAAM,SAASN,UAAU,sBAEhD,yBAAKA,UAAU,iCACb,2BAAOI,KAAK,OAAOC,YAAY,oBAAoBF,GAAG,4BACtD,2BAAOC,KAAK,SAASE,MAAM,SAASN,UAAU,sBAEhD,yBAAKA,UAAU,iCACb,4BAAQA,UAAU,8BAChB,yBAAKD,IAAI,aAAaE,IAAI,WAC1B,0BAAMD,UAAU,OAAOG,GAAG,sBAA1B,iBAEF,2BAAOC,KAAK,SAASE,MAAM,cAAcN,UAAU,mBAAmBG,GAAG,gBACzE,2BAAOC,KAAK,SAASE,MAAM,cAAcN,UAAU,mBAAmBG,GAAG,gBACzE,2BAAOC,KAAK,SAASE,MAAM,UAAUN,UAAU,sBAEjD,yBAAKA,UAAU,mCACb,gD,QCXKO,EAxBE,SAAAT,GAsBd,OApBAU,qBAAU,WACYC,gBAAMX,EAAMY,KACJC,WAAW,GAAGC,iBAAiB,UAElDC,SAAQ,SAAAC,GACbC,QAAQC,IAAI,WAAYF,EAAEG,UAC1B,IAAMC,EAASC,SAASC,cAAc,UACtC,GAAIN,EAAEO,YAAcP,EAAEO,WAAWtB,IAAK,CACnC,IAAIA,EAAG,qBAAiBD,EAAMwB,UAAvB,YAAoCR,EAAEO,YAAcP,EAAEO,WAAWtB,IAAMe,EAAEO,WAAWtB,IAAM,IACjGmB,EAAOd,KAAO,SACsB,SAAjCU,EAAEO,WAAWtB,IAAIwB,MAAM,EAAG,KAC1BxB,EAAMe,EAAEO,YAAcP,EAAEO,WAAWtB,IAAMe,EAAEO,WAAWtB,IAAM,GAC5DmB,EAAOd,KAAO,SAEjBc,EAAOnB,IAAMA,EACbmB,EAAOM,OAAQ,EACfL,SAASM,KAAKC,YAAYR,UAI5B,yBAAKS,wBAAyB,CAAEC,OAAQ9B,EAAMY,Q,iDCNzCmB,EAZH,SAAA/B,GACV,OACE,kBAAC,IAAD,KACE,yBAAKE,UAAU,OACb,kBAAC,IAAD,CAAO8B,KAAK,IAAIC,UAAW,SAAAjC,GAAK,OAAI,kBAAC,EAAD,SACpC,kBAAC,IAAD,CAAOgC,KAAK,WAAWC,UAAW,SAAAjC,GAAK,OAAI,kBAAC,EAAD,CAAUY,IAAKsB,IAAYV,UAAU,sBAChF,kBAAC,IAAD,CAAOQ,KAAK,WAAWC,UAAW,SAAAjC,GAAK,OAAI,kBAAC,EAAD,CAAUY,IAAKuB,IAAYX,UAAU,gCCDpEY,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASrB,SAASsB,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.1b8fc94c.chunk.js","sourcesContent":["module.exports = \"<!doctype html>\\n<html>\\n  <head>\\n    <meta http-equiv=\\\"origin-trial\\\" content=\\\"AspvaSU7F1Gbpa8q9JRNRNXFF+0+77C1xkxf1hkzJCrBI7Mmt/eG25QXLBn7lfzPsgrN5next8ZtIiCeGs6R4w8AAABleyJvcmlnaW4iOiJodHRwczovL2V4b2tpdC5vcmc6NDQzIiwiZmVhdHVyZSI6IldlYlhSRGV2aWNlTTc2IiwiZXhwaXJ5IjoxNTcxMTEyNjU0LCJpc1N1YmRvbWFpbiI6dHJ1ZX0=\\\">\\n    <style>\\n* {\\n  box-sizing: border-box;\\n}\\nbody {\\n  margin: 0;\\n  background-color: #000;\\n  /* color: #F5F5F5; */\\n  font-family: -apple-system,BlinkMacSystemFont,\\\"Segoe UI\\\",\\\"Roboto\\\",\\\"Oxygen\\\",\\\"Ubuntu\\\",\\\"Cantarell\\\",\\\"Fira Sans\\\",\\\"Droid Sans\\\",\\\"Helvetica Neue\\\",sans-serif;\\n  font-size: 15px;\\n}\\n.body {\\n  display: flex;\\n  width: 100vw;\\n  height: 100vh;\\n  overflow: hidden;\\n}\\nheader {\\n  position: absolute;\\n  display: flex;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 50px;\\n  background-color: #FFF;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\n  align-items: center;\\n  user-select: none;\\n  z-index: 1;\\n}\\nheader .icon {\\n  width: 50px;\\n  height: 50px;\\n  margin: 0 20px;\\n}\\nheader nav {\\n  display: flex;\\n  height: 100%;\\n  padding: 0 10px;\\n  letter-spacing: 0.9px;\\n  align-items: center;\\n  text-transform: uppercase;\\n}\\nheader nav span {\\n  display: flex;\\n  height: 30px;\\n  padding: 10px;\\n  border-radius: 4px;\\n  align-items: center;\\n}\\nheader nav.selected span {\\n  background-color: #5c6bc0;\\n  color: #FFF;\\n  cursor: default;\\n}\\nheader nav:not(.selected):hover {\\n  cursor: pointer;\\n}\\nheader nav:not(.selected):hover span {\\n  background-color: #EEE;\\n}\\n.examples {\\n  width: 200px;\\n  padding-top: 50px;\\n  background-color: #FFF;\\n  overflow-y: auto;\\n}\\n.avatar-models {\\n  display: flex;\\n  flex-direction: column;\\n}\\n.a-avatar {\\n  cursor: pointer;\\n}\\nh1, h2, h3, h4, h5, h6, p, .examples > .multibutton {\\n  margin: 15px 0;\\n  padding: 0 20px;\\n  font-weight: inherit;\\n}\\nli {\\n  /* padding-left: 20px;\\n  padding-right: 20px; */\\n}\\n.iframe-wrapper {\\n  position: relative;\\n  display: flex;\\n  margin-top: 50px;\\n  flex: 1;\\n  background-color: #FFF;\\n}\\n.tabs {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  right: 0;\\n}\\n.tabs .tab {\\n  display: inline-flex;\\n  margin: 5px 5px;\\n  padding: 5px 10px;\\n  background-color: #D8D8D8;\\n  border-radius: 4px;\\n  color: #000;\\n  align-items: center;\\n}\\n.tabs .tab .text {\\n  margin-right: 10px;\\n  align-items: center;\\n}\\n.tabs .tab .close-x {\\n  display: flex;\\n  width: 20px;\\n  height: 20px;\\n  background-color: #ef5350;\\n  color: #FFF;\\n  justify-content: center;\\n  align-items: center;\\n}\\ncanvas {\\n  width: 100% !important;\\n  height: 100% !important;\\n  background-color: #f8f8f8;\\n  outline: none;\\n}\\na {\\n  color: #AAA;\\n  text-decoration: none;\\n}\\na:hover {\\n  color: #42a5f5;\\n}\\na:active {\\n  color: #1976d2;\\n}\\n.body > .multibutton {\\n  position: absolute;\\n  right: 30px;\\n  bottom: 30px;\\n}\\n.multibutton {\\n  display: flex;\\n}\\n.multibutton .button:not(.first) {\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n.multibutton .button:not(.last) {\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.button {\\n  display: inline-flex;\\n  margin-right: 5px;\\n  padding: 7px 14px;\\n  border: 2px solid;\\n  border-radius: 100px;\\n  color: #5c6bc0;\\n  font-size: 13px;\\n  cursor: pointer;\\n  outline: none\\n}\\n/* .button:not(:last-child) {\\n  margin-right: 20px;\\n} */\\n.button:not([disabled]):hover {\\n  background-color: #5c6bc0;\\n  border-color: #5c6bc0;\\n  color: #FFF;\\n}\\n.button[disabled] {\\n  color: #b71c1c;\\n  cursor: auto;\\n}\\n#code-header:not(.open),\\n#code-button:not(.open) .opened-text,\\n#code-button.open .closed-text\\n{\\n  display: none;\\n}\\n.coming-soon {\\n  color: #ccc;\\n}\\n.coming-soon-sub {\\n  font-size: 10px;\\n  display: block;\\n}\\n.header-link {\\n  color: #666;\\n}\\n.code-header {\\n  position: absolute;\\n  top: 50px;\\n  right: 0;\\n  display: flex;\\n  align-items: center;\\n  width: 600px;\\n  height: 32px;\\n  padding: 5px;\\n  font-size: 13px;\\n  color: #4caf50;\\n  background-color: #f2f3f5;\\n}\\n.code {\\n  position: absolute;\\n  top: 82px;\\n  bottom: 0;\\n  right: 0;\\n  width: 600px;\\n  border: 0;\\n  border-left: 5px solid #f2f3f5;\\n  outline: none;\\n}\\n.code:not(.open) {\\n  display: none;\\n}\\ninput[type=text] {\\n  width: 160px;\\n  margin: 0 20px;\\n  padding: 7px 14px;\\n  background-color: #f2f3f5;\\n  border: 0;\\n  border-radius: 8px;\\n  font-family: inherit;\\n  font-size: inherit;\\n  outline: none;\\n}\\n\\n/* account.css */\\n\\ninput[type=email],\\ninput[type=text]\\n{\\n  margin-right: 10px;\\n  padding: 7px 14px;\\n  background-color: #f2f3f5;\\n  border: 0;\\n  border-radius: 8px;\\n  font-family: inherit;\\n  font-size: inherit;\\n  outline: none;\\n}\\n\\nheader > .login-form {\\n  display: flex;\\n  margin-left: auto;\\n}\\n\\nbody.logging-in .login-form,\\nheader > .login-form:not(.phase-1) > .phase-1-content,\\nheader > .login-form:not(.phase-2) > .phase-2-content,\\nheader > .login-form:not(.phase-3) > .phase-3-content,\\nheader > .login-form.phase-1 > .phaseless-content,\\nheader > .login-form.phase-2 > .phaseless-content,\\nheader > .login-form.phase-3 > .phaseless-content\\n{\\n  display: none;\\n}\\n\\n.login-form .phase-content {\\n  display: flex;\\n  align-items: center;\\n}\\n.login-form .phase-content .login-error\\n{\\n  margin-right: 15px;\\n  font-weight: 600;\\n}\\n.login-form .phase-content .user-button {\\n  display: flex;\\n  height: 30px;\\n  margin-right: 10px;\\n  padding: 3px 10px;\\n  background-color: #f2f3f5;\\n  border: 0;\\n  border-radius: 8px;\\n  align-items: center;\\n  cursor: pointer;\\n}\\n.login-form .phase-content .user-button:hover,\\n.login-form .phase-content .user-button.open {\\n  background-color: #CCC;\\n}\\n.login-form .phase-content .user-button > img {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 5px;\\n}\\n.login-form .phase-content .user-button > .name {\\n  display: flex;\\n  height: 100%;\\n  font-weight: 600;\\n  align-items: center;\\n}\\n.login-form .phase-content .login-notice {\\n  color: #4caf50;\\n}\\n.login-form .phase-content .login-error {\\n  color: #e53935;\\n}\\n.login-form .phaseless-content {\\n  padding: 0 30px;\\n}\\n    </style>\\n    <script src=\\\"three.js\\\"></script>\\n    <script src=\\\"OrbitControls.js\\\"></script>\\n    <script src=\\\"Reflector.js\\\"></script>\\n    <script src=\\\"bmfont.js\\\"></script>\\n    <script src=\\\"main.js\\\"></script>\\n  </head>\\n  <body>\\n    <div class=body>\\n      <header>\\n        <img src=\\\"logo.svg\\\" class=\\\"icon\\\">\\n        <nav class=selected><span>Avatars</span></nav>\\n        <!-- <a href=\\\"https://docs.exokit.org/\\\"><nav><span class=\\\"header-link\\\">Documentation</span></nav></a>\\n        <a href=\\\"https://browser.exokit.org\\\"><nav><span class=\\\"header-link\\\">Browser\\n        </span></nav></a>\\n        <a href=\\\"https://discord.gg/UgZDFZW\\\"><nav><span class=\\\"coming-soon\\\">Exoland\\n          <p class=\\\"coming-soon-sub\\\">Coming soon!</p>\\n        </span></nav></a> -->\\n\\n        <form class=\\\"login-form phase-1\\\" id=login-form>\\n          <div class=phase-content>\\n            <div class=login-notice id=login-notice></div>\\n            <div class=login-error id=login-error></div>\\n          </div>\\n          <div class=\\\"phase-content phase-1-content\\\">\\n            <input type=email placeholder=\\\"your@email.com\\\" id=login-email>\\n            <input type=submit value=\\\"Log in\\\" class=\\\"button highlight\\\">\\n          </div>\\n          <div class=\\\"phase-content phase-2-content\\\">\\n            <input type=text placeholder=\\\"Verification code\\\" id=login-verification-code>\\n            <input type=submit value=\\\"Verify\\\" class=\\\"button highlight\\\">\\n          </div>\\n          <div class=\\\"phase-content phase-3-content\\\">\\n            <button class=user-button id=user-button>\\n              <img src=\\\"exobot.png\\\">\\n              <span class=name id=login-email-static>a@modules.io</span>\\n            </button>\\n            <input type=button value=\\\"Load avatar\\\" class=\\\"button highlight\\\" id=load-avater>\\n            <input type=button value=\\\"Save avatar\\\" class=\\\"button highlight\\\" id=save-avater>\\n            <input type=submit value=\\\"Log out\\\" class=\\\"button highlight\\\">\\n          </div>\\n          <div class=\\\"phase-content phaseless-content\\\">\\n            <div>Working...</div>\\n          </div>\\n        </form>\\n      </header>\\n\\n      <div class=examples>\\n        <h3>Examples</h3>\\n        <p class=avatar-models id=avatar-models></p>\\n        <div class=multibutton>\\n          <label for=\\\"upload-file-button\\\">\\n            <a class=\\\"button first last\\\">Upload file...</a>\\n            <input type=\\\"file\\\" id=\\\"upload-file-button\\\" style=\\\"display: none\\\">\\n          </label>\\n        </div>\\n        <div class=multibutton>\\n          <nav class=\\\"button first last\\\" id=export-model-button>Export model</nav>\\n        </div>\\n        <div class=multibutton>\\n          <nav class=\\\"button first\\\" id=scale-down-button>Scale -</nav>\\n          <nav class=\\\"button last\\\" id=scale-up-button>Scale +</nav>\\n        </div>\\n        <h3>Multiplayer</h3>\\n        <input type=text value=\\\"avaer/yatis\\\" placeholder=\\\"user/channel\\\" id=channel-input>\\n        <div class=multibutton>\\n          <nav class=\\\"button first last\\\" id=connect-button>Connect</nav>\\n        </div>\\n      </div>\\n\\n      <div class=iframe-wrapper id=iframe-wrapper></div>\\n\\n      <div class=multibutton>\\n        <a class=\\\"button first\\\" id=\\\"enable-mic-button\\\" style=\\\"display: none;\\\">Enable Mic</a>\\n        <a class=\\\"button first\\\" id=\\\"disable-mic-button\\\" disabled style=\\\"display: none;\\\">Disable Mic</a>\\n        <a class=\\\"button\\\" id=\\\"firstperson-button\\\">Firstperson</a>\\n        <a class=\\\"button\\\" id=\\\"thirdperson-button\\\">Thirdperson</a>\\n        <a class=\\\"button last\\\" id=\\\"enter-xr-button\\\" style=\\\"display: none;\\\">Enter XR</a>\\n        <a class=\\\"button last\\\" id=\\\"no-xr-button\\\" disabled style=\\\"display: none;\\\">No XR</a>\\n      </div>\\n    </div>\\n  </body>\\n</html>\\n\";","module.exports = \"<!doctype html>\\n<html>\\n  <head>\\n    <link rel=\\\"dns-prefetch\\\" href=\\\"https://render.exokit.xyz\\\">\\n    <link rel=icon type=\\\"image/png\\\" href=\\\"favicon.png\\\">\\n    <meta name=\\\"twitter:image:src\\\" content=\\\"https://browser.exokit.org/logo.svg\\\">\\n    <meta name=\\\"twitter:site\\\" content=\\\"@exokitxr\\\">\\n    <meta name=\\\"twitter:card\\\" content=\\\"summary\\\">\\n    <meta name=\\\"twitter:title\\\" content=\\\"Exokit Browser\\\">\\n    <meta name=\\\"twitter:description\\\" content=\\\"WebXR VR/AR meta-browser. Construct your reality out of 3D web sites.\\\">\\n    <meta property=\\\"og:title\\\" content=\\\"Exokit Browser\\\">\\n    <meta property=\\\"og:type\\\" content=\\\"referenceSpace\\\">\\n    <meta property=\\\"og:url\\\" content=\\\"https://browser.exokit.org/\\\">\\n    <meta property=\\\"og:image\\\" content=\\\"https://browser.exokit.org/logo.svg\\\">\\n    <meta http-equiv=\\\"origin-trial\\\" content=\\\"AspvaSU7F1Gbpa8q9JRNRNXFF+0+77C1xkxf1hkzJCrBI7Mmt/eG25QXLBn7lfzPsgrN5next8ZtIiCeGs6R4w8AAABleyJvcmlnaW4iOiJodHRwczovL2V4b2tpdC5vcmc6NDQzIiwiZmVhdHVyZSI6IldlYlhSRGV2aWNlTTc2IiwiZXhwaXJ5IjoxNTcxMTEyNjU0LCJpc1N1YmRvbWFpbiI6dHJ1ZX0=\\\">\\n    <link href=\\\"https://fonts.googleapis.com/css?family=Open+Sans:300,400,600,700&display=swap\\\" rel=\\\"stylesheet\\\">\\n    <!-- Google Analytics -->\\n    <script>\\n    (function(i,s,o,g,r,a,m){i['GoogleAnalyticsObject']=r;i[r]=i[r]||function(){\\n    (i[r].q=i[r].q||[]).push(arguments)},i[r].l=1*new Date();a=s.createElement(o),\\n    m=s.getElementsByTagName(o)[0];a.async=1;a.src=g;m.parentNode.insertBefore(a,m)\\n    })(window,document,'script','https://www.google-analytics.com/analytics.js','ga');\\n\\n    ga('create', 'UA-147624282-2', 'auto');\\n    ga('send', 'pageview');\\n    </script>\\n    <!-- End Google Analytics -->\\n    <style>\\n* {\\n  box-sizing: border-box;\\n}\\nbody {\\n  width: 100vw;\\n  height: 100vh;\\n  margin: 0;\\n  font-family: 'Open Sans';\\n  font-size: 12px;\\n  overflow: hidden;\\n}\\na {\\n  cursor: pointer;\\n}\\nul {\\n  margin: 0;\\n  padding: 0;\\n  list-style-type: none;\\n}\\nheader {\\n  position: absolute;\\n  display: flex;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 50px;\\n  background-color: #FFF;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\n  align-items: center;\\n  user-select: none;\\n  z-index: 1;\\n}\\nheader .icon {\\n  height: 25px;\\n  margin: 0 10px;\\n}\\nheader .nav {\\n  display: flex;\\n  height: 100%;\\n  padding: 0 10px;\\n  justify-content: center;\\n  align-items: center;\\n  border-top: 3px solid transparent;\\n  border-bottom: 3px solid transparent;\\n  color: inherit;\\n  font-size: 14px;\\n  text-decoration: none;\\n  text-transform: uppercase;\\n}\\nheader .nav:hover, header .nav.open {\\n  border-bottom-color: #ef5350;\\n}\\nheader .nav i {\\n  display: inline-block;\\n  padding: 0 7px;\\n  padding-top: 2px;\\n}\\ninput[type=email],\\ninput[type=text]\\n{\\n  margin-right: 10px;\\n  padding: 7px 15px;\\n  background-color: #f2f3f5;\\n  border: 0;\\n  border-radius: 8px;\\n  font-family: inherit;\\n  font-size: inherit;\\n  outline: none;\\n}\\nheader > .login-form {\\n  display: flex;\\n  margin-left: auto;\\n}\\nbody.logging-in .login-form,\\nheader > .login-form:not(.phase-1) > .phase-1-content,\\nheader > .login-form:not(.phase-2) > .phase-2-content,\\nheader > .login-form:not(.phase-3) > .phase-3-content,\\nheader > .login-form.phase-1 > .phaseless-content,\\nheader > .login-form.phase-2 > .phaseless-content,\\nheader > .login-form.phase-3 > .phaseless-content\\n{\\n  display: none;\\n}\\n.button {\\n  display: inline-block;\\n  margin-right: 15px;\\n  padding: 7px 15px;\\n  border: 0;\\n  border-radius: 8px;\\n  color: #FFF;\\n  text-decoration: none;\\n  cursor: pointer;\\n  outline: none;\\n}\\n.button.highlight {\\n  background-color: #ef5350;\\n}\\n.button.highlight:hover {\\n  background-color: #d32f2f;\\n}\\n.login-form .phase-content {\\n  display: flex;\\n  align-items: center;\\n}\\n.login-form .phase-content .login-error\\n{\\n  margin-right: 15px;\\n  font-weight: 600;\\n}\\n.login-form .phase-content .user-button {\\n  display: flex;\\n  height: 30px;\\n  margin-right: 10px;\\n  padding: 3px 10px;\\n  background-color: #f2f3f5;\\n  border-radius: 8px;\\n  align-items: center;\\n  cursor: pointer;\\n}\\n.login-form .phase-content .user-button:hover,\\n.login-form .phase-content .user-button.open {\\n  background-color: #CCC;\\n}\\n.login-form .phase-content .user-button > img {\\n  width: 20px;\\n  height: 20px;\\n  margin-right: 5px;\\n}\\n.login-form .phase-content .user-button > .name {\\n  display: flex;\\n  height: 100%;\\n  font-weight: 600;\\n  align-items: center;\\n}\\n.login-form .phase-content .login-notice {\\n  color: #4caf50;\\n}\\n.login-form .phase-content .login-error {\\n  color: #e53935;\\n}\\n.login-form .phaseless-content {\\n  padding: 0 30px;\\n}\\n.user-account {\\n  position: absolute;\\n  top: 50px;\\n  display: flex;\\n  width: 100%;\\n  height: 300px;\\n  padding: 0 72px;\\n  background-color: #FFF;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\n  flex-direction: column;\\n  z-index: 1;\\n}\\n.user-account:not(.open) {\\n  display: none;\\n}\\n.user-account .wrap {\\n  width: 400px;\\n}\\n.user-account h1 {\\n  margin: 0;\\n  margin-bottom: 10px;\\n}\\n.user-account .row {\\n  display: flex;\\n  margin: 5px 0;\\n  align-items: center;\\n}\\n.user-account .text {\\n  margin-right: 5px;\\n}\\n.user-account .status {\\n  display: flex;\\n  padding: 3px 6px;\\n  border-radius: 8px;\\n  color: #FFF;\\n  align-items: center;\\n}\\n.user-account .status:not(.open) {\\n  display: none;\\n}\\n.user-account .status.not-connected {\\n  background-color: #5c6bc0;\\n}\\n.user-account .status.connected {\\n  background-color: #66bb6a;\\n}\\n.user-account .status nav {\\n  display: flex;\\n  width: 16px;\\n  height: 16px;\\n  margin-left: 5px;\\n  /* background-color: #ef534e; */\\n  justify-content: center;\\n  align-items: center;\\n  cursor: pointer;\\n}\\n.user-account .status i {}\\n.user-account .connect-stripe-button:not(.visible) {\\n  display: none;\\n}\\n.user-account input[type=text] {\\n  width: 300px;\\n  padding: 10px;\\n  background-color: #f2f3f5;\\n  border: 0;\\n  border-radius: 8px;\\n}\\n.user-account input[type=button] {\\n  display: flex;\\n  margin-left: auto;\\n  padding: 10px;\\n  background-color: #ef5350;\\n  border: 0;\\n  border-radius: 8px;\\n  color: #FFF;\\n  cursor: pointer;\\n  outline: none;\\n}\\n.user-account input[type=button]:hover {\\n  background-color: #d32f2f;\\n}\\n.multibutton {\\n  position: absolute;\\n  right: 30px;\\n  bottom: 30px;\\n  display: flex;\\n}\\n.multibutton > .button {\\n  margin-right: 5px;\\n}\\n.multibutton > .button {\\n  display: inline-flex;\\n  padding: 8px 20px;\\n  border: 2px solid;\\n  border-radius: 100px;\\n  color: #5c6bc0;\\n  cursor: pointer;\\n}\\n.multibutton > .button:not(.first) {\\n  border-top-left-radius: 0;\\n  border-bottom-left-radius: 0;\\n}\\n.multibutton > .button:not(.last) {\\n  border-top-right-radius: 0;\\n  border-bottom-right-radius: 0;\\n}\\n.multibutton  .button:not([disabled]):hover {\\n  background-color: #5c6bc0;\\n  border-color: #5c6bc0;\\n  color: #FFF;\\n}\\n.multibutton .button[disabled] {\\n  color: #b71c1c;\\n  cursor: auto;\\n}\\nheader .popup {\\n  position: absolute;\\n  display: flex;\\n  flex-direction: column;\\n  top: 60px;\\n  right: 20px;\\n  width: 500px;\\n  padding: 20px;\\n  background-color: #444;\\n  border: 2px solid rgba(0,0,0,0.5);\\n  color: #FFF;\\n\\n  display: none;\\n}\\nheader .popup::before {\\n  position: absolute;\\n  top: -20px;\\n  right: 150px;\\n  border-width: 0 0 20px 20px;\\n  border-style: solid;\\n  border-color: transparent;\\n  border-bottom-color: #444;\\n  content: ''\\n}\\nheader .close {\\n  position: absolute;\\n  top: 20px;\\n  right: 20px;\\n  font-size: 20px;\\n  color: #FFF;\\n  text-decoration: none;\\n}\\nheader .popup h1 {\\n  display: flex;\\n  flex-direction: column;\\n  margin: 0;\\n  font-size: 50px;\\n  line-height: 55px;\\n  font-weight: 600;\\n  color: rgba(255,255,255,1);\\n}\\nheader .popup strong {\\n  font-size: 14px;\\n  line-height: 1.1;\\n  color: #ef5350;\\n  text-transform: uppercase;\\n}\\nheader .popup p {\\n  margin-top: 20px;\\n  margin-bottom: 40px;\\n  font-size: 20px;\\n  line-height: 30px;\\n  color: rgba(255,255,255,0.5);\\n}\\nheader .popdown {\\n  flex-direction: column;\\n  padding: 10px;\\n  /* border: 2px solid rgba(0,0,0,0.5); */\\n  color: #FFF;\\n}\\nbody:not(.logged-in) #enter-buttons\\n{\\n  display: none;\\n}\\n#login-blocker {\\n  display: none;\\n}\\nbody:not(.logging-in):not(.logged-in) #login-blocker {\\n  display: flex;\\n}\\n.blocker {\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0;\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  background-color: rgba(0, 0, 0, 0.5);\\n  user-select: none;\\n}\\n.blocker .wrap {\\n  width: 300px;\\n  padding: 50px;\\n  background-color: #FFF;\\n  border-radius: 8px;\\n  text-align: center;\\n}\\n/* .blocker .wrap i {\\n  position: absolute;\\n  top: 0;\\n  right: 0;\\n} */\\n.blocker .wrap img {\\n  width: 100px;\\n  height: 100px;\\n}\\n.blocker .wrap h1, .blocker .wrap h2, .blocker .wrap h3 {\\n  margin: 0;\\n  /* font-weight: 300; */\\n}\\n.blocker .wrap .button {\\n  margin: 10px 0;\\n}\\n.blocker a {\\n  color: #42a5f5;\\n  text-decoration: none;\\n}\\n.blocker a:hover {\\n  color: #1e88e5;\\n}\\n#controls-popdown {\\n  position: absolute;\\n  top: 50px;\\n  left: 0;\\n  width: 35vw;\\n  padding: 15px;\\n  background-color: #FFF;\\n  box-shadow: 0 2px 4px 0 rgba(0, 0, 0, 0.08);\\n  color: black;\\n  font-size: 12px;\\n  border-top: 2px solid #000;\\n}\\n#subscribe-popdown {\\n  position: absolute;\\n  top: 50px;\\n  left: 0;\\n  width: 100vw;\\n  padding: 30px;\\n  background-color: rgba(33,33,33,1);\\n  border-top: 2px solid #141414;\\n}\\n#subscribe-popdown .plans {\\n  display: flex;\\n  margin-bottom: 20px;\\n}\\n#subscribe-popdown .plans .plan {\\n  display: flex;\\n  width: 180px;\\n  padding: 30px;\\n  margin: 10px;\\n  flex-direction: column;\\n  border: 2px solid;\\n  border-radius: 10px;\\n  color: #444;\\n  cursor: pointer;\\n  align-items: center;\\n}\\n#subscribe-popdown .plans .plan:hover {\\n  color: #666;\\n}\\n#subscribe-popdown .plans .plan.selected {\\n  color: #5c6bc0;\\n}\\n#subscribe-popdown .plans .plan i {\\n  margin-bottom: 10px;\\n  font-size: 70px;\\n}\\n#subscribe-popdown .plans .plan .wrap {\\n  display: flex;\\n  flex-direction: column;\\n}\\n/* #subscribe-popdown .plans h3 {\\n  margin: 0;\\n  font-size: 30px;\\n}\\n#subscribe-popdown .plans strong {\\n  margin-bottom: 10px;\\n  text-transform: uppercase;\\n}\\n#subscribe-popdown .plans p {\\n  margin: 0;\\n  line-height: 1.4;\\n} */\\n#developers-popdown {\\n  position: absolute;\\n  display: flex;\\n  top: 50px;\\n  left: 380px;\\n  width: 300px;\\n  background-color: #444;\\n}\\nheader .popdown:not(.open) {\\n  display: none !important;\\n}\\nheader .popdown ul {\\n  font-size: 14px;\\n  line-height: 2;\\n}\\nheader .popdown li {\\n  margin: 10px 0;\\n}\\ncanvas {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100vw;\\n  height: 100vh;\\n  background-color: #000;\\n}\\ntable {\\n  width: 100%;\\n}\\ntable colgroup col:nth-child(1) {\\n  width: 20%;\\n}\\ntable colgroup col:nth-child(3) {\\n  width: 60%;\\n}\\ntable tr {\\n  background-color: #f2f3f5;\\n}\\n    </style>\\n  </head>\\n  <body class=logging-in>\\n    <header id=header>\\n      <a href=\\\"https://browser.exokit.org\\\">\\n        <img class=icon src=\\\"logo.svg\\\"/>\\n      </a>\\n      <a href=\\\"/\\\" class=\\\"nav\\\" id=\\\"explore-dropdown\\\">Exobrowser</a>\\n      <a class=\\\"nav\\\" id=\\\"controls-dropdown\\\">Controls</a>\\n      <div class=\\\"popdown\\\" id=\\\"controls-popdown\\\">\\n        <table>\\n          <colgroup>\\n            <col>\\n            <col>\\n            <col>\\n          </colgroup>  \\n          <tbody>\\n          <tr>\\n            <td>KEY/BUTTON</td>\\n            <td>ACTION</td>\\n            <td>DESCRIPTION</td>\\n          </tr>\\n          <tr>\\n            <td><b>Enter XR</b></td>\\n            <td>XR Mode</td>\\n            <td>If you are using a headset or have one plugged in, you can view through your headset.</td>\\n          </tr>\\n          <tr>\\n            <td><b>Enter 2D</b></td>\\n            <td>2D Mode</td>\\n            <td>Emulate an XR device with keyboard/mouse. Alternatively, double click to enter 2D.</td>\\n          </tr>\\n          <tr>\\n            <td><b>LMB</b></td>\\n            <td>Gamepad trigger</td>\\n            <td>Click the right gamepad's trigger.</td>\\n          </tr>\\n          <tr>\\n            <td><b>MMB</b></td>\\n            <td>Gamepad touch</td>\\n            <td>Press the right gamepad's touchpad/thumb stick.</td>\\n          </tr>\\n          <tr>\\n            <td><b>Tab</b></td>\\n            <td>Toggle edit</td>\\n            <td>Toggle edit mode which lets you add, move, and delete apps from your scene.</td>\\n          </tr>\\n          <tr>\\n            <td><b>DEL</b></td>\\n            <td>Delete app</td>\\n            <td>Delete the currently selected opened app.</td>\\n          </tr>\\n          <tr>\\n            <td><b>ESC</b></td>\\n            <td>Exit 2D</td>\\n            <td>This is useful if you want to type with your keyboard.</td>\\n          </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n      <!-- <a class=\\\"nav\\\" id=\\\"explore-dropdown\\\">Explore</a>\\n      <a class=\\\"nav\\\">Download</a>\\n      <a class=\\\"nav\\\" id=\\\"developers-dropdown\\\">Developers<i class=\\\"fal fa-chevron-down\\\"></i></a> -->\\n      <form class=\\\"login-form phase-1\\\" id=login-form>\\n        <div class=phase-content>\\n          <div class=login-notice id=login-notice></div>\\n          <div class=login-error id=login-error></div>\\n        </div>\\n        <div class=\\\"phase-content phase-1-content\\\">\\n          <input type=email placeholder=\\\"your@email.com\\\" id=login-email>\\n          <input type=submit value=\\\"Log in\\\" class=\\\"button highlight\\\">\\n        </div>\\n        <div class=\\\"phase-content phase-2-content\\\">\\n          <input type=text placeholder=\\\"Verification code\\\" id=login-verification-code>\\n          <input type=submit value=\\\"Verify\\\" class=\\\"button highlight\\\">\\n        </div>\\n        <div class=\\\"phase-content phase-3-content\\\">\\n          <nav class=user-button id=user-button>\\n            <img src=\\\"exobot.png\\\">\\n            <span class=name id=login-email-static>a@modules.io</span>\\n          </nav>\\n          <input type=submit value=\\\"Log out\\\" class=\\\"button highlight\\\">\\n        </div>\\n        <div class=\\\"phase-content phaseless-content\\\">\\n          <div>Working...</div>\\n        </div>\\n      </form>\\n      <div class=user-account id=user-account>\\n        <div class=wrap>\\n          <h1 id=login-name-static></h1>\\n          <div class=row>\\n            <input type=text placeholder=\\\"Enter WebXR URL\\\" id=site-url-bar>\\n            <input type=button value=\\\"Submit Site\\\" id=submit-site>\\n          </div>\\n          <div class=row>\\n            <div class=text>Stripe Connect status:</div>\\n            <div class=\\\"status not-connected\\\" id=status-not-connected>Not connected</div>\\n            <div class=\\\"status connected\\\" id=status-connected>Connected <nav id=disconnect-stripe-button><i class=\\\"fal fa-times\\\"></i></nav></div>\\n            <input type=button value=\\\"Connect Stripe\\\" class=connect-stripe-button id=connect-stripe-button>\\n          </div>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"popdown\\\" id=\\\"developers-popdown\\\">\\n        <ul>\\n          <li>CLI</li>\\n          <li>SDK</li>\\n        </ul>\\n      </div> -->\\n    </header>\\n\\n    <div class=blocker id=login-blocker>\\n      <div class=wrap>\\n        <img class=icon src=\\\"logo.svg\\\"/>\\n        <h1>Yo!</h1>\\n        <h3>This beta requires login.<br>Get an invite in <a href=\\\"https://discordapp.com/invite/Apk6cZN\\\">Discord</a></h3>\\n      </div>\\n    </div>\\n\\n    <div class=multibutton id=enter-buttons>\\n      <nav class=\\\"button first\\\" id=\\\"enter-2d-button\\\">Enter 2D</nav>\\n      <a class=\\\"button last\\\" id=\\\"enter-xr-button\\\" style=\\\"display: none;\\\">Enter XR</a>\\n      <a class=\\\"button last\\\" id=\\\"no-xr-button\\\" disabled style=\\\"display: none;\\\">No XR</a>\\n    </div>\\n\\n    <script src=\\\"https://kit.fontawesome.com/0735724151.js\\\"></script>\\n    <script type=module>\\nconst LAMBDA_URLS = {\\n  login: `https://login.exokit.org/`,\\n  token: `https://token.exokit.org/token`,\\n  tokens: `https://token.exokit.org/tokens`,\\n  coords: `https://token.exokit.org/coords`,\\n  presence: `wss://presence.exokit.org/`,\\n};\\nfunction parseQuery(s) {\\n  var query = {};\\n  var pairs = (s[0] === '?' ? s.substr(1) : s).split('&');\\n  for (var i = 0; i < pairs.length; i++) {\\n    var pair = pairs[i].split('=');\\n    query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');\\n  }\\n  return query;\\n}\\nasync function doLogin(email, code) {\\n  const res = await fetch(LAMBDA_URLS.login + `?email=${encodeURIComponent(email)}&code=${encodeURIComponent(code)}`, {\\n    method: 'POST',\\n  });\\n  if (res.status >= 200 && res.status < 300) {\\n    const newLoginToken = await res.json();\\n\\n    await storage.set('loginToken', newLoginToken);\\n\\n    loginToken = newLoginToken;\\n\\n    loginNameStatic.innerText = loginToken.name;\\n    loginEmailStatic.innerText = loginToken.email;\\n    if (loginToken.stripeConnectState) {\\n      statusConnected.classList.add('open');\\n      statusNotConnected.classList.remove('open');\\n      connectStripeButton.classList.remove('visible');\\n    } else {\\n      statusNotConnected.classList.add('open');\\n      statusConnected.classList.remove('open');\\n      connectStripeButton.classList.add('visible');\\n    }\\n\\n    document.body.classList.add('logged-in');\\n    loginForm.classList.remove('phase-1');\\n    loginForm.classList.remove('phase-2');\\n    loginForm.classList.add('phase-3');\\n\\n    return true;\\n  } else {\\n    return false;\\n  }\\n}\\nconst storage = {\\n  async get(k) {\\n    const res = await fetch(`/.s/${k}`);\\n    if (res.status >= 200 && res.status < 300) {\\n      const s = await res.text();\\n      return JSON.parse(s);\\n    } else {\\n      return undefined;\\n    }\\n  },\\n  async set(k, v) {\\n    const res = await fetch(`/.s/${k}`, {\\n      method: 'PUT',\\n      body: JSON.stringify(v),\\n    });\\n    if (res.status >= 200 && res.status < 300) {\\n      // nothing\\n    } else {\\n      throw new Error(`invalid status code: ${res.status}`);\\n    }\\n  },\\n  async remove(k) {\\n    const res = await fetch(`/.s/${k}`, {\\n      method: 'DELETE',\\n    });\\n    if (res.status >= 200 && res.status < 300) {\\n      // nothing\\n    } else {\\n      throw new Error(`invalid status code: ${res.status}`);\\n    }\\n  },\\n};\\n\\nlet xrEngine;\\nlet loginToken = null;\\nconst q = parseQuery(window.location.search);\\nconst {key} = q;\\nimport(`https://web.exokit.org/ew.js${key ? `?key=${encodeURIComponent(key)}` : ''}`)\\n// import(`./exokit-web/ew.js${key ? `?key=${encodeURIComponent(key)}` : ''}`)\\n  .then(async () => {\\n    if (navigator.serviceWorker.controller) { // avoid FOUC during reload\\n      // xrEngine = document.createElement('xr-engine');\\n      xrEngine = new XREngine();\\n      xrEngine.src = 'app.html';\\n      xrEngine.addEventListener('message', async e => {\\n        const {data} = e;\\n        const {method} = data;\\n        if (method === 'loadScene') {\\n          const res = await fetch('/.s/scene');\\n          if (res.status >= 200 && res.status < 300) {\\n            const html = await res.text();\\n            xrEngine.postMessage({\\n              method: 'loadScene',\\n              html,\\n            });\\n          } else if (res.status === 404) {\\n            xrEngine.postMessage({\\n              method: 'loadScene',\\n              html: null,\\n            });\\n          } else {\\n            console.warn(`invalid status code: ${res.status}`);\\n          }\\n        } else if (method === 'saveScene') {\\n          const {html} = data;\\n          const res = await fetch('/.s/scene', {\\n            method: 'PUT',\\n            headers: {\\n              'Content-Type': 'text/html',\\n            },\\n            body: html,\\n          });\\n          if (res.status >= 200 && res.status < 300) {\\n            // nothing\\n          } else {\\n            console.warn(`invalid status code: ${res.status}`);\\n          }\\n        }\\n      });\\n      document.body.appendChild(xrEngine);\\n\\n      const {email, code} = q;\\n      if (email && code && await doLogin(email, code)) {\\n        delete q.email;\\n        delete q.code;\\n        window.location.search = '?' + Object.keys(q).map(k => encodeURIComponent(k) + '=' + encodeURIComponent(q[k])).join('&');\\n        return;\\n      }\\n\\n      const localLoginToken = await storage.get('loginToken');\\n      if (localLoginToken) {\\n        const res = await fetch(LAMBDA_URLS.login + `?email=${encodeURIComponent(localLoginToken.email)}&token=${encodeURIComponent(localLoginToken.token)}`, {\\n          method: 'POST',\\n        })\\n        if (res.status >= 200 && res.status < 300) {\\n          loginToken = await res.json();\\n\\n          await storage.set('loginToken', loginToken);\\n\\n          loginNameStatic.innerText = loginToken.name;\\n          loginEmailStatic.innerText = loginToken.email;\\n          if (loginToken.stripeConnectState) {\\n            statusConnected.classList.add('open');\\n            statusNotConnected.classList.remove('open');\\n            connectStripeButton.classList.remove('visible');\\n          } else {\\n            statusNotConnected.classList.add('open');\\n            statusConnected.classList.remove('open');\\n            connectStripeButton.classList.add('visible');\\n          }\\n\\n          ga('create', 'UA-147624282-1', {\\n            'clientId': loginToken.email,\\n          });\\n          ga('send', 'event', 'Login', 'finished', 'Exokit Browser');\\n\\n          document.body.classList.add('logged-in');\\n          loginForm.classList.remove('phase-1');\\n          loginForm.classList.remove('phase-2');\\n          loginForm.classList.add('phase-3');\\n        } else {\\n          await storage.remove('loginToken');\\n\\n          console.warn(`invalid status code: ${res.status}`);\\n        }\\n      }\\n\\n      xrEngine.postMessage({\\n        method: 'login',\\n        loginToken,\\n      });\\n\\n      const {u, j} = q;\\n      if (u) {\\n        xrEngine.postMessage({\\n          method: 'loadScene',\\n          html: `<xr-site><xr-iframe src=\\\"${u}\\\"></xr-iframe></xr-site>`,\\n        });\\n      }\\n      if (j) {\\n        const channelName = j;\\n        xrEngine.postMessage({\\n          method: 'joinChannel',\\n          channelName,\\n        });\\n      }\\n\\n      let result;\\n      if (navigator.xr) {\\n        try {\\n          await navigator.xr.supportsSession('immersive-vr');\\n          result = true;\\n        } catch (err) {\\n          result = false;\\n        }\\n      } else {\\n        result = false;\\n      }\\n      if (result) {\\n        console.log('xr available');\\n        document.getElementById('enter-xr-button').style.display = null;\\n      } else {\\n        console.log('no xr');\\n        document.getElementById('no-xr-button').style.display = null;\\n      }\\n\\n      document.body.classList.remove('logging-in');\\n    }\\n  })\\n  .catch(err => {\\n    console.warn(err);\\n  });\\n\\n// const loginButton = document.getElementById('login-button');\\n// const loginButton2 = document.getElementById('login-button-2');\\n// const loginPopdown = document.getElementById('login-popdown');\\nconst loginForm = document.getElementById('login-form');\\nconst loginEmail = document.getElementById('login-email');\\nconst loginNameStatic = document.getElementById('login-name-static');\\nconst loginEmailStatic = document.getElementById('login-email-static');\\nconst statusNotConnected = document.getElementById('status-not-connected');\\nconst statusConnected = document.getElementById('status-connected');\\nconst loginVerificationCode = document.getElementById('login-verification-code');\\nconst loginNotice = document.getElementById('login-notice');\\nconst loginError = document.getElementById('login-error');\\nconst logoutButton = document.getElementById('logout-button');\\nconst controlsDropdown = document.getElementById('controls-dropdown');\\nconst controlsPopdown = document.getElementById('controls-popdown');\\ncontrolsDropdown.onclick = () => {\\n  controlsDropdown.classList.toggle('open');\\n  controlsPopdown.classList.toggle('open');\\n};\\n/* [loginButton, loginButton2].forEach(b => {\\n  b.onclick = () => {\\n    loginPopdown.classList.toggle('open');\\n  };\\n});\\nlogoutButton.onclick = async () => {\\n  await storage.remove('loginToken');\\n\\n  loginToken = null;\\n  xrEngine.postMessage({\\n    method: 'login',\\n    loginToken,\\n  });\\n  document.body.classList.remove('logged-in');\\n}; */\\nloginForm.onsubmit = async e => {\\n  e.preventDefault();\\n\\n  if (loginForm.classList.contains('phase-1') && loginEmail.value) {\\n    loginNotice.innerHTML = '';\\n    loginError.innerHTML = '';\\n    loginForm.classList.remove('phase-1');\\n\\n    const res = await fetch(LAMBDA_URLS.login + `?email=${encodeURIComponent(loginEmail.value)}`, {\\n      method: 'POST',\\n    })\\n    if (res.status >= 200 && res.status < 300) {\\n      loginNotice.innerText = `Code sent to ${loginEmail.value}!`;\\n      loginForm.classList.add('phase-2');\\n\\n      return res.blob();\\n    } else if (res.status === 403) {\\n      loginError.innerText = `${loginEmail.value} is not in the beta yet :(`;\\n\\n      loginForm.classList.add('phase-1');\\n    } else {\\n      throw new Error(`invalid status code: ${res.status}`);\\n    }\\n  } else if (loginForm.classList.contains('phase-2') && loginEmail.value && loginVerificationCode.value) {\\n    loginNotice.innerHTML = '';\\n    loginError.innerHTML = '';\\n    loginForm.classList.remove('phase-2');\\n\\n    if (await doLogin(loginEmail.value, loginVerificationCode.value)) {\\n      xrEngine.postMessage({\\n        method: 'login',\\n        loginToken,\\n      });\\n    }\\n  } else if (loginForm.classList.contains('phase-3')) {\\n    await storage.remove('loginToken');\\n\\n    window.location.reload();\\n\\n    /* loginToken = null;\\n    xrEngine.postMessage({\\n      method: 'login',\\n      loginToken,\\n    });\\n\\n    loginNotice.innerHTML = '';\\n    loginError.innerHTML = '';\\n    document.body.classList.remove('logged-in');\\n    loginForm.classList.remove('phase-3');\\n    loginForm.classList.add('phase-1'); */\\n  }\\n};\\n\\nconst enter2dButton = document.getElementById('enter-2d-button');\\nenter2dButton.addEventListener('click', () => {\\n  xrEngine.postMessage({\\n    method: 'enter2d',\\n  });\\n});\\nconst enterXrButton = document.getElementById('enter-xr-button');\\nenterXrButton.addEventListener('click', () => {\\n  xrEngine.enterXr();\\n});\\n\\n// const exploreLabel = document.getElementById('explore-label');\\n// const exploreContent = document.getElementById('explore-content');\\nconst _getCoordsFromBindingUrl = bindingUrl => {\\n  const match = bindingUrl.match(/^\\\\/\\\\?c=(-?[0-9\\\\.]+),(-?[0-9\\\\.]+)$/);\\n  if (match) {\\n    const x = parseFloat(match[1]);\\n    const z = parseFloat(match[2]);\\n    if (isFinite(x) && isFinite(z)) {\\n      return [x, z];\\n    } else {\\n      return null;\\n    }\\n  } else {\\n    return null;\\n  }\\n};\\nconst _makeElement = html => {\\n  const div = document.createElement('div');\\n  div.innerHTML = html;\\n  return div.children[0];\\n};\\nconst _getAppType = mimeType => {\\n  if (/^img\\\\//.test(mimeType)) {\\n    return 'image';\\n  } else if (/^audio\\\\//.test(mimeType)) {\\n    return 'audio';\\n  } else if (/^video\\\\//.test(mimeType)) {\\n    return 'video';\\n  } else if (/^model\\\\//.test(mimeType)) {\\n    return 'model';\\n  } else if (/^text\\\\/html\\\\+webgl$/.test(mimeType)) {\\n    return 'webgl';\\n  } else if (/^text\\\\/html$/.test(mimeType)) {\\n    return 'html';\\n  } else {\\n    return null;\\n  }\\n};\\nconst _renderItems = items => {\\n  const el = _makeElement(`<ul>\\n    ${items.map((item, index) => {\\n      const {type} = item;\\n      const coords = _getCoordsFromBindingUrl(item.bindingUrl);\\n      return `<li>\\n\\n        <a id=img-${index+1}><img src=\\\"skin.png\\\"></a>\\n        <div class=tag>\\n        ${(() => {\\n            switch (_getAppType(item.type)) {\\n              case 'image': return `<i class=\\\"fal fa-image\\\"></i>`;\\n              case 'audio': return `<i class=\\\"fal fa-volume-up\\\"></i>`;\\n              case 'video': return `<i class=\\\"fal fa-film\\\"></i>`;\\n              case 'model': return `<i class=\\\"fal fa-dice-d4\\\"></i>`;\\n              case 'webgl': return `<i class=\\\"fal fa-gamepad\\\"></i>`;\\n              case 'html':\\n              default: return `<i class=\\\"fal fa-link\\\"></i>`;\\n            }\\n          })()}\\n        </div>\\n        <div class=wrap>\\n          <h3>\\n            <a class=\\\"a-content\\\" href=\\\"${item.url}\\\" id=name-${index+1}>${item.name}</a>\\n            <div class=controls>\\n              <a id=control-edit-${index+1}><i class=\\\"fal fa-pencil\\\"></i></a>\\n              <a id=control-move-${index+1}><i class=\\\"fal fa-crosshairs\\\"></i></a>\\n              <a id=control-delete-${index+1}><i class=\\\"fal fa-trash-alt\\\"></i></a>\\n            </div>\\n          </h3>\\n          <p><a id=owner-${index+1}><i class=\\\"fas fa-user\\\"></i> ${item.addr.slice(0, 12)}</a> ${coords ? `<a class=\\\"a-binding\\\" href=\\\"/?c=${coords.join(',')}\\\" id=binding-${index+1}>at ${coords.join(',')}</a>` : `<a class=\\\"a-binding\\\" id=binding-${index+1}><i class=\\\"fas fa-map-marker\\\"></i> not bound</a>`}</p>\\n        </div>\\n      </li>`;\\n    }).join('')}\\n  </ul>`);\\n  const aBindings = el.querySelectorAll('.a-binding');\\n  for (let i = 0; i < aBindings.length; i++) {\\n    const a = aBindings[i];\\n    a.onclick = e => {\\n      e.preventDefault();\\n\\n      history.pushState({}, a.href, a.href);\\n      _updateCoord();\\n    };\\n  }\\n  return el;\\n};\\nconst _renderGamers = gamers => {\\n  const el = _makeElement(`<ul>\\n    ${gamers.map(gamer => {\\n      const {coords} = gamer;\\n      return `<li>\\n        <a id=img><img src=\\\"skin.png\\\"></a>\\n        <div class=wrap>\\n          <h3>\\n            <a class=\\\"a-content\\\" href=\\\"${gamer.name}\\\" id=name>${gamer.name}</a>\\n          </h3>\\n          <p><a class=\\\"a-binding\\\" href=\\\"/?c=${coords.join(',')}\\\" id=coord><i class=\\\"fas fa-map-marker\\\"></i> at ${coords.join(',')}</a></p>\\n        </div>\\n      </li>`;\\n    }).join('')}\\n  </ul>`);\\n  const aBindings = el.querySelectorAll('.a-binding');\\n  for (let i = 0; i < aBindings.length; i++) {\\n    const a = aBindings[i];\\n    a.onclick = e => {\\n      e.preventDefault();\\n\\n      history.pushState({}, a.href, a.href);\\n      _updateCoord();\\n    };\\n  }\\n  return el;\\n};\\n/* const _updateTabs = async () => {\\n  if (currentExploreTab === 1) {\\n    const c = renderer.vr.enabled ? renderer.vr.getCamera(camera) : camera;\\n    const coords = [Math.floor((c.position.x + PARCEL_SIZE/2)/PARCEL_SIZE), Math.floor((c.position.z + PARCEL_SIZE/2)/PARCEL_SIZE)];\\n    const u = `${LAMBDA_URLS.coords}/${coords[0]}/${coords[1]}`;\\n\\n    explorePopdown.classList.add('loading');\\n\\n    const items = await fetch(u)\\n      .then(res => res.json())\\n      .catch(err => {\\n        console.warn(err.stack);\\n      });\\n\\n    exploreLabel.innerText = 'Nearby';\\n    exploreContent.innerHTML = '';\\n    exploreContent.appendChild(_renderItems(items));\\n    explorePopdown.classList.remove('loading');\\n  } else if (currentExploreTab === 2) {\\n    const u = `${LAMBDA_URLS.tokens}/${encodeURIComponent(loginToken.addr)}`;\\n\\n    explorePopdown.classList.add('loading');\\n\\n    const items = await fetch(u)\\n      .then(res => res.json())\\n      .catch(err => {\\n        console.warn(err.stack);\\n      });\\n\\n    exploreLabel.innerText = 'Inventory';\\n    exploreContent.innerHTML = '';\\n    exploreContent.appendChild(_renderItems(items));\\n    explorePopdown.classList.remove('loading');\\n  } else if (currentExploreTab === 3) {\\n    exploreLabel.innerText = 'Gamers';\\n    exploreContent.innerHTML = '';\\n    exploreContent.appendChild(_renderGamers([{\\n      name: 'Avaer',\\n      coords: [1.234, 2.567],\\n    }]));\\n    explorePopdown.classList.remove('loading');\\n  } else if (currentExploreTab === 4) {\\n    exploreLabel.innerText = '';\\n    exploreContent.innerHTML = '';\\n    exploreContent.appendChild(_makeElement(`<div class=url>\\n      <input type=\\\"text\\\" placeholder=\\\"https://\\\" id=url-input>\\n      <a id=go><i class=\\\"fal fa-plus-square\\\"></i></a>\\n    </div>`));\\n    explorePopdown.classList.remove('loading');\\n  } else {\\n    // nothing\\n  }\\n}; */\\n\\n/* const developersDropdown = document.getElementById('developers-dropdown');\\nconst developersPopdown = document.getElementById('developers-popdown');\\ndevelopersDropdown.onclick = () => {\\n  developersDropdown.classList.toggle('open');\\n  developersPopdown.classList.toggle('open');\\n}; */\\n\\nconst _stopPropagation = e => {\\n  e.stopPropagation();\\n};\\nconst header = document.getElementById('header');\\nheader.addEventListener('mousedown', _stopPropagation);\\nheader.addEventListener('dblclick', _stopPropagation);\\n\\nconst submitSiteUrlBar = document.getElementById('site-url-bar');\\nconst submitSiteButton = document.getElementById('submit-site');\\nsubmitSiteButton.addEventListener('click', () => {\\n  if (/^https:\\\\/\\\\//.test(submitSiteUrlBar.value)) {\\n    const url = submitSiteUrlBar.value;\\n    window.location.href = `https://github.com/exokitxr/exoland/issues/new?title=${encodeURIComponent(`[ADD-WORLD] ${url}`)}&assignee=modulesio&labels=add-world&body=${encodeURIComponent('URL to add:\\\\n\\\\n```' + url + '```')}`;\\n  } else {\\n    console.warn('only https sites are supported: ' + submitSiteUrlBar.value);\\n  }\\n});\\nconst connectStripeButton = document.getElementById('connect-stripe-button');\\nconnectStripeButton.addEventListener('click', () => {\\n  window.location.href = `https://payments.exokit.org/authorize?email=${encodeURIComponent(loginToken.email)}&token=${encodeURIComponent(loginToken.token)}&redirectUrl=${window.location.href}`;\\n});\\nconst disconnectStripeButton = document.getElementById('disconnect-stripe-button');\\ndisconnectStripeButton.addEventListener('click', () => {\\n  const {email, token} = loginToken;\\n  fetch(`https://payments.exokit.org/untoken?email=${encodeURIComponent(email)}&token=${encodeURIComponent(token)}`)\\n    .then(async res => {\\n      if (res.status >= 200 && res.status < 300) {\\n        loginToken.stripeConnectState = false;\\n        statusNotConnected.classList.add('open');\\n        statusConnected.classList.remove('open');\\n        connectStripeButton.classList.add('visible');\\n\\n        await storage.set('loginToken', loginToken);\\n      } else {\\n        console.warn('invalid status code', res.status);\\n      }\\n    });\\n});\\n\\nconst userButton = document.getElementById('user-button');\\nconst userAccount = document.getElementById('user-account');\\nuserButton.addEventListener('click', () => {\\n  userButton.classList.toggle('open');\\n  userAccount.classList.toggle('open');\\n});\\n    </script>\\n  </body>\\n</html>\\n\";","import React from 'react';\nimport './App.css';\n\nconst Navbar = props => {\n  return (\n    <header>\n      <img src=\"logo.svg\" className=\"icon\" alt=\"logo\" />\n      <nav className=\"selected\"><span>Avatars</span></nav>\n      <a href=\"https://docs.exokit.org/\"><nav><span className=\"header-link\">Documentation</span></nav></a>\n      <a href=\"https://browser.exokit.org\"><nav><span className=\"header-link\">Browser\n        </span></nav></a>\n      <a href=\"https://discord.gg/UgZDFZW\"><nav><span className=\"coming-soon\">Exoland\n          <p className=\"coming-soon-sub\">Coming soon!</p>\n      </span></nav></a>\n\n      <form className=\"login-form phase-1\" id=\"login-form\">\n        <div className=\"phase-content\">\n          <div className=\"login-notice\" id=\"login-notice\"></div>\n          <div className=\"login-error\" id=\"login-error\"></div>\n        </div>\n        <div className=\"phase-content phase-1-content\">\n          <input type=\"email\" placeholder=\"your@email.com\" id=\"login-email\" />\n          <input type=\"submit\" value=\"Log in\" className=\"button highlight\" />\n        </div>\n        <div className=\"phase-content phase-2-content\">\n          <input type=\"text\" placeholder=\"Verification code\" id=\"login-verification-code\" />\n          <input type=\"submit\" value=\"Verify\" className=\"button highlight\" />\n        </div>\n        <div className=\"phase-content phase-3-content\">\n          <button className=\"user-button id=user-button\">\n            <img src=\"exobot.png\" alt=\"Exobot\" />\n            <span className=\"name\" id=\"login-email-static\">a@modules.io</span>\n          </button>\n          <input type=\"button\" value=\"Load avatar\" className=\"button highlight\" id=\"load-avater\" />\n          <input type=\"button\" value=\"Save avatar\" className=\"button highlight\" id=\"save-avater\" />\n          <input type=\"submit\" value=\"Log out\" className=\"button highlight\" />\n        </div>\n        <div className=\"phase-content phaseless-content\">\n          <div>Working...</div>\n        </div>\n      </form>\n    </header>\n  );\n}\nexport default Navbar;","import React, { useEffect } from 'react';\nimport { parse } from 'node-html-parser';\n\nconst WebXRApp = props => {\n\n   useEffect(() => {\n      const parsedHTML = parse(props.app);\n      const scripts = parsedHTML.childNodes[0].querySelectorAll('script');\n\n      scripts.forEach(s => {\n         console.log(\"loading:\", s.rawAttrs)\n         const script = document.createElement(\"script\");\n         if (s.attributes && s.attributes.src) {\n            let src = `/WebXRApps/${props.appFolder}/${s.attributes && s.attributes.src ? s.attributes.src : \"\"}`\n            script.type = \"module\"\n            if(s.attributes.src.slice(0, 4) === \"http\"){\n               src = s.attributes && s.attributes.src ? s.attributes.src : \"\"\n               script.type = \"async\"\n            }\n            script.src = src;\n            script.async = false;\n            document.body.appendChild(script);\n         }\n      })\n   })\n   return <div dangerouslySetInnerHTML={{ __html: props.app }} />\n}\nexport default WebXRApp;","import React from 'react';\nimport Navbar from './Navbar';\nimport WebXRApp from './WebXRApp';\nimport AvatarsApp from './WebXRApps/avatars-master/index.html';\nimport BrowserApp from './WebXRApps/exokit-browser-master/index.html';\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nconst App = props => {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Route path=\"/\" component={props => <Navbar />} />\n        <Route path=\"/avatars\" component={props => <WebXRApp app={AvatarsApp} appFolder=\"avatars-master\" />} />\n        <Route path=\"/browser\" component={props => <WebXRApp app={BrowserApp} appFolder=\"exokit-browser-master\" />} />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}